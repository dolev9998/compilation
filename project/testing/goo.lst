     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  	; L_constants + 3525:
  1005 00000DC5 03                      	db T_string	; "with"
  1006 00000DC6 0400000000000000        	dq 4
  1007 00000DCE 77697468                	db 0x77, 0x69, 0x74, 0x68
  1008                                  	; L_constants + 3538:
  1009 00000DD2 03                      	db T_string	; "moshe"
  1010 00000DD3 0500000000000000        	dq 5
  1011 00000DDB 6D6F736865              	db 0x6D, 0x6F, 0x73, 0x68, 0x65
  1012                                  	; L_constants + 3552:
  1013 00000DE0 41                      	db T_interned_symbol	; moshe
  1014 00000DE1 [D20D000000000000]      	dq L_constants + 3538
  1015                                  	; L_constants + 3561:
  1016 00000DE9 03                      	db T_string	; "yosi"
  1017 00000DEA 0400000000000000        	dq 4
  1018 00000DF2 796F7369                	db 0x79, 0x6F, 0x73, 0x69
  1019                                  	; L_constants + 3574:
  1020 00000DF6 41                      	db T_interned_symbol	; yosi
  1021 00000DF7 [E90D000000000000]      	dq L_constants + 3561
  1022                                  	; L_constants + 3583:
  1023 00000DFF 03                      	db T_string	; "dana"
  1024 00000E00 0400000000000000        	dq 4
  1025 00000E08 64616E61                	db 0x64, 0x61, 0x6E, 0x61
  1026                                  	; L_constants + 3596:
  1027 00000E0C 41                      	db T_interned_symbol	; dana
  1028 00000E0D [FF0D000000000000]      	dq L_constants + 3583
  1029                                  	; L_constants + 3605:
  1030 00000E15 03                      	db T_string	; "michal"
  1031 00000E16 0600000000000000        	dq 6
  1032 00000E1E 6D696368616C            	db 0x6D, 0x69, 0x63, 0x68, 0x61, 0x6C
  1033                                  	; L_constants + 3620:
  1034 00000E24 41                      	db T_interned_symbol	; michal
  1035 00000E25 [150E000000000000]      	dq L_constants + 3605
  1036                                  	; L_constants + 3629:
  1037 00000E2D 03                      	db T_string	; "olga"
  1038 00000E2E 0400000000000000        	dq 4
  1039 00000E36 6F6C6761                	db 0x6F, 0x6C, 0x67, 0x61
  1040                                  	; L_constants + 3642:
  1041 00000E3A 41                      	db T_interned_symbol	; olga
  1042 00000E3B [2D0E000000000000]      	dq L_constants + 3629
  1043                                  	; L_constants + 3651:
  1044 00000E43 03                      	db T_string	; "sonia"
  1045 00000E44 0500000000000000        	dq 5
  1046 00000E4C 736F6E6961              	db 0x73, 0x6F, 0x6E, 0x69, 0x61
  1047                                  	; L_constants + 3665:
  1048 00000E51 41                      	db T_interned_symbol	; sonia
  1049 00000E52 [430E000000000000]      	dq L_constants + 3651
  1050                                  free_var_0:	; location of *
  1051 00000E5A [620E000000000000]      	dq .undefined_object
  1052                                  .undefined_object:
  1053 00000E62 05                      	db T_undefined
  1054 00000E63 [D408000000000000]      	dq L_constants + 2260
  1055                                  
  1056                                  free_var_1:	; location of +
  1057 00000E6B [730E000000000000]      	dq .undefined_object
  1058                                  .undefined_object:
  1059 00000E73 05                      	db T_undefined
  1060 00000E74 [4D08000000000000]      	dq L_constants + 2125
  1061                                  
  1062                                  free_var_2:	; location of -
  1063 00000E7C [840E000000000000]      	dq .undefined_object
  1064                                  .undefined_object:
  1065 00000E84 05                      	db T_undefined
  1066 00000E85 [B408000000000000]      	dq L_constants + 2228
  1067                                  
  1068                                  free_var_3:	; location of /
  1069 00000E8D [950E000000000000]      	dq .undefined_object
  1070                                  .undefined_object:
  1071 00000E95 05                      	db T_undefined
  1072 00000E96 [F008000000000000]      	dq L_constants + 2288
  1073                                  
  1074                                  free_var_4:	; location of <
  1075 00000E9E [A60E000000000000]      	dq .undefined_object
  1076                                  .undefined_object:
  1077 00000EA6 05                      	db T_undefined
  1078 00000EA7 [1009000000000000]      	dq L_constants + 2320
  1079                                  
  1080                                  free_var_5:	; location of <=
  1081 00000EAF [B70E000000000000]      	dq .undefined_object
  1082                                  .undefined_object:
  1083 00000EB7 05                      	db T_undefined
  1084 00000EB8 [1A09000000000000]      	dq L_constants + 2330
  1085                                  
  1086                                  free_var_6:	; location of =
  1087 00000EC0 [C80E000000000000]      	dq .undefined_object
  1088                                  .undefined_object:
  1089 00000EC8 05                      	db T_undefined
  1090 00000EC9 [3A09000000000000]      	dq L_constants + 2362
  1091                                  
  1092                                  free_var_7:	; location of >
  1093 00000ED1 [D90E000000000000]      	dq .undefined_object
  1094                                  .undefined_object:
  1095 00000ED9 05                      	db T_undefined
  1096 00000EDA [2509000000000000]      	dq L_constants + 2341
  1097                                  
  1098                                  free_var_8:	; location of >=
  1099 00000EE2 [EA0E000000000000]      	dq .undefined_object
  1100                                  .undefined_object:
  1101 00000EEA 05                      	db T_undefined
  1102 00000EEB [2F09000000000000]      	dq L_constants + 2351
  1103                                  
  1104                                  free_var_9:	; location of __bin-add-qq
  1105 00000EF3 [FB0E000000000000]      	dq .undefined_object
  1106                                  .undefined_object:
  1107 00000EFB 05                      	db T_undefined
  1108 00000EFC [6902000000000000]      	dq L_constants + 617
  1109                                  
  1110                                  free_var_10:	; location of __bin-add-rr
  1111 00000F04 [0C0F000000000000]      	dq .undefined_object
  1112                                  .undefined_object:
  1113 00000F0C 05                      	db T_undefined
  1114 00000F0D [1502000000000000]      	dq L_constants + 533
  1115                                  
  1116                                  free_var_11:	; location of __bin-add-zz
  1117 00000F15 [1D0F000000000000]      	dq .undefined_object
  1118                                  .undefined_object:
  1119 00000F1D 05                      	db T_undefined
  1120 00000F1E [BD02000000000000]      	dq L_constants + 701
  1121                                  
  1122                                  free_var_12:	; location of __bin-apply
  1123 00000F26 [2E0F000000000000]      	dq .undefined_object
  1124                                  .undefined_object:
  1125 00000F2E 05                      	db T_undefined
  1126 00000F2F [0102000000000000]      	dq L_constants + 513
  1127                                  
  1128                                  free_var_13:	; location of __bin-div-qq
  1129 00000F37 [3F0F000000000000]      	dq .undefined_object
  1130                                  .undefined_object:
  1131 00000F3F 05                      	db T_undefined
  1132 00000F40 [A802000000000000]      	dq L_constants + 680
  1133                                  
  1134                                  free_var_14:	; location of __bin-div-rr
  1135 00000F48 [500F000000000000]      	dq .undefined_object
  1136                                  .undefined_object:
  1137 00000F50 05                      	db T_undefined
  1138 00000F51 [5402000000000000]      	dq L_constants + 596
  1139                                  
  1140                                  free_var_15:	; location of __bin-div-zz
  1141 00000F59 [610F000000000000]      	dq .undefined_object
  1142                                  .undefined_object:
  1143 00000F61 05                      	db T_undefined
  1144 00000F62 [FC02000000000000]      	dq L_constants + 764
  1145                                  
  1146                                  free_var_16:	; location of __bin-equal-qq
  1147 00000F6A [720F000000000000]      	dq .undefined_object
  1148                                  .undefined_object:
  1149 00000F72 05                      	db T_undefined
  1150 00000F73 [8703000000000000]      	dq L_constants + 903
  1151                                  
  1152                                  free_var_17:	; location of __bin-equal-rr
  1153 00000F7B [830F000000000000]      	dq .undefined_object
  1154                                  .undefined_object:
  1155 00000F83 05                      	db T_undefined
  1156 00000F84 [7003000000000000]      	dq L_constants + 880
  1157                                  
  1158                                  free_var_18:	; location of __bin-equal-zz
  1159 00000F8C [940F000000000000]      	dq .undefined_object
  1160                                  .undefined_object:
  1161 00000F94 05                      	db T_undefined
  1162 00000F95 [9E03000000000000]      	dq L_constants + 926
  1163                                  
  1164                                  free_var_19:	; location of __bin-less-than-qq
  1165 00000F9D [A50F000000000000]      	dq .undefined_object
  1166                                  .undefined_object:
  1167 00000FA5 05                      	db T_undefined
  1168 00000FA6 [3A03000000000000]      	dq L_constants + 826
  1169                                  
  1170                                  free_var_20:	; location of __bin-less-than-rr
  1171 00000FAE [B60F000000000000]      	dq .undefined_object
  1172                                  .undefined_object:
  1173 00000FB6 05                      	db T_undefined
  1174 00000FB7 [1F03000000000000]      	dq L_constants + 799
  1175                                  
  1176                                  free_var_21:	; location of __bin-less-than-zz
  1177 00000FBF [C70F000000000000]      	dq .undefined_object
  1178                                  .undefined_object:
  1179 00000FC7 05                      	db T_undefined
  1180 00000FC8 [5503000000000000]      	dq L_constants + 853
  1181                                  
  1182                                  free_var_22:	; location of __bin-mul-qq
  1183 00000FD0 [D80F000000000000]      	dq .undefined_object
  1184                                  .undefined_object:
  1185 00000FD8 05                      	db T_undefined
  1186 00000FD9 [9302000000000000]      	dq L_constants + 659
  1187                                  
  1188                                  free_var_23:	; location of __bin-mul-rr
  1189 00000FE1 [E90F000000000000]      	dq .undefined_object
  1190                                  .undefined_object:
  1191 00000FE9 05                      	db T_undefined
  1192 00000FEA [3F02000000000000]      	dq L_constants + 575
  1193                                  
  1194                                  free_var_24:	; location of __bin-mul-zz
  1195 00000FF2 [FA0F000000000000]      	dq .undefined_object
  1196                                  .undefined_object:
  1197 00000FFA 05                      	db T_undefined
  1198 00000FFB [E702000000000000]      	dq L_constants + 743
  1199                                  
  1200                                  free_var_25:	; location of __bin-sub-qq
  1201 00001003 [0B10000000000000]      	dq .undefined_object
  1202                                  .undefined_object:
  1203 0000100B 05                      	db T_undefined
  1204 0000100C [7E02000000000000]      	dq L_constants + 638
  1205                                  
  1206                                  free_var_26:	; location of __bin-sub-rr
  1207 00001014 [1C10000000000000]      	dq .undefined_object
  1208                                  .undefined_object:
  1209 0000101C 05                      	db T_undefined
  1210 0000101D [2A02000000000000]      	dq L_constants + 554
  1211                                  
  1212                                  free_var_27:	; location of __bin-sub-zz
  1213 00001025 [2D10000000000000]      	dq .undefined_object
  1214                                  .undefined_object:
  1215 0000102D 05                      	db T_undefined
  1216 0000102E [D202000000000000]      	dq L_constants + 722
  1217                                  
  1218                                  free_var_28:	; location of __bin_integer_to_fraction
  1219 00001036 [3E10000000000000]      	dq .undefined_object
  1220                                  .undefined_object:
  1221 0000103E 05                      	db T_undefined
  1222 0000103F [6008000000000000]      	dq L_constants + 2144
  1223                                  
  1224                                  free_var_29:	; location of __integer-to-fraction
  1225 00001047 [4F10000000000000]      	dq .undefined_object
  1226                                  .undefined_object:
  1227 0000104F 05                      	db T_undefined
  1228 00001050 [A204000000000000]      	dq L_constants + 1186
  1229                                  
  1230                                  free_var_30:	; location of abs
  1231 00001058 [6010000000000000]      	dq .undefined_object
  1232                                  .undefined_object:
  1233 00001060 05                      	db T_undefined
  1234 00001061 [8C0C000000000000]      	dq L_constants + 3212
  1235                                  
  1236                                  free_var_31:	; location of andmap
  1237 00001069 [7110000000000000]      	dq .undefined_object
  1238                                  .undefined_object:
  1239 00001071 05                      	db T_undefined
  1240 00001072 [FA07000000000000]      	dq L_constants + 2042
  1241                                  
  1242                                  free_var_32:	; location of append
  1243 0000107A [8210000000000000]      	dq .undefined_object
  1244                                  .undefined_object:
  1245 00001082 05                      	db T_undefined
  1246 00001083 [2B08000000000000]      	dq L_constants + 2091
  1247                                  
  1248                                  free_var_33:	; location of apply
  1249 0000108B [9310000000000000]      	dq .undefined_object
  1250                                  .undefined_object:
  1251 00001093 05                      	db T_undefined
  1252 00001094 [D207000000000000]      	dq L_constants + 2002
  1253                                  
  1254                                  free_var_34:	; location of assoc
  1255 0000109C [A410000000000000]      	dq .undefined_object
  1256                                  .undefined_object:
  1257 000010A4 05                      	db T_undefined
  1258 000010A5 [A70C000000000000]      	dq L_constants + 3239
  1259                                  
  1260                                  free_var_35:	; location of caaaar
  1261 000010AD [B510000000000000]      	dq .undefined_object
  1262                                  .undefined_object:
  1263 000010B5 05                      	db T_undefined
  1264 000010B6 [8106000000000000]      	dq L_constants + 1665
  1265                                  
  1266                                  free_var_36:	; location of caaadr
  1267 000010BE [C610000000000000]      	dq .undefined_object
  1268                                  .undefined_object:
  1269 000010C6 05                      	db T_undefined
  1270 000010C7 [9006000000000000]      	dq L_constants + 1680
  1271                                  
  1272                                  free_var_37:	; location of caaar
  1273 000010CF [D710000000000000]      	dq .undefined_object
  1274                                  .undefined_object:
  1275 000010D7 05                      	db T_undefined
  1276 000010D8 [1106000000000000]      	dq L_constants + 1553
  1277                                  
  1278                                  free_var_38:	; location of caadar
  1279 000010E0 [E810000000000000]      	dq .undefined_object
  1280                                  .undefined_object:
  1281 000010E8 05                      	db T_undefined
  1282 000010E9 [9F06000000000000]      	dq L_constants + 1695
  1283                                  
  1284                                  free_var_39:	; location of caaddr
  1285 000010F1 [F910000000000000]      	dq .undefined_object
  1286                                  .undefined_object:
  1287 000010F9 05                      	db T_undefined
  1288 000010FA [AE06000000000000]      	dq L_constants + 1710
  1289                                  
  1290                                  free_var_40:	; location of caadr
  1291 00001102 [0A11000000000000]      	dq .undefined_object
  1292                                  .undefined_object:
  1293 0000110A 05                      	db T_undefined
  1294 0000110B [1F06000000000000]      	dq L_constants + 1567
  1295                                  
  1296                                  free_var_41:	; location of caar
  1297 00001113 [1B11000000000000]      	dq .undefined_object
  1298                                  .undefined_object:
  1299 0000111B 05                      	db T_undefined
  1300 0000111C [DD05000000000000]      	dq L_constants + 1501
  1301                                  
  1302                                  free_var_42:	; location of cadaar
  1303 00001124 [2C11000000000000]      	dq .undefined_object
  1304                                  .undefined_object:
  1305 0000112C 05                      	db T_undefined
  1306 0000112D [BD06000000000000]      	dq L_constants + 1725
  1307                                  
  1308                                  free_var_43:	; location of cadadr
  1309 00001135 [3D11000000000000]      	dq .undefined_object
  1310                                  .undefined_object:
  1311 0000113D 05                      	db T_undefined
  1312 0000113E [CC06000000000000]      	dq L_constants + 1740
  1313                                  
  1314                                  free_var_44:	; location of cadar
  1315 00001146 [4E11000000000000]      	dq .undefined_object
  1316                                  .undefined_object:
  1317 0000114E 05                      	db T_undefined
  1318 0000114F [2D06000000000000]      	dq L_constants + 1581
  1319                                  
  1320                                  free_var_45:	; location of caddar
  1321 00001157 [5F11000000000000]      	dq .undefined_object
  1322                                  .undefined_object:
  1323 0000115F 05                      	db T_undefined
  1324 00001160 [DB06000000000000]      	dq L_constants + 1755
  1325                                  
  1326                                  free_var_46:	; location of cadddr
  1327 00001168 [7011000000000000]      	dq .undefined_object
  1328                                  .undefined_object:
  1329 00001170 05                      	db T_undefined
  1330 00001171 [EA06000000000000]      	dq L_constants + 1770
  1331                                  
  1332                                  free_var_47:	; location of caddr
  1333 00001179 [8111000000000000]      	dq .undefined_object
  1334                                  .undefined_object:
  1335 00001181 05                      	db T_undefined
  1336 00001182 [3B06000000000000]      	dq L_constants + 1595
  1337                                  
  1338                                  free_var_48:	; location of cadr
  1339 0000118A [9211000000000000]      	dq .undefined_object
  1340                                  .undefined_object:
  1341 00001192 05                      	db T_undefined
  1342 00001193 [EA05000000000000]      	dq L_constants + 1514
  1343                                  
  1344                                  free_var_49:	; location of car
  1345 0000119B [A311000000000000]      	dq .undefined_object
  1346                                  .undefined_object:
  1347 000011A3 05                      	db T_undefined
  1348 000011A4 [1501000000000000]      	dq L_constants + 277
  1349                                  
  1350                                  free_var_50:	; location of cdaaar
  1351 000011AC [B411000000000000]      	dq .undefined_object
  1352                                  .undefined_object:
  1353 000011B4 05                      	db T_undefined
  1354 000011B5 [F906000000000000]      	dq L_constants + 1785
  1355                                  
  1356                                  free_var_51:	; location of cdaadr
  1357 000011BD [C511000000000000]      	dq .undefined_object
  1358                                  .undefined_object:
  1359 000011C5 05                      	db T_undefined
  1360 000011C6 [0807000000000000]      	dq L_constants + 1800
  1361                                  
  1362                                  free_var_52:	; location of cdaar
  1363 000011CE [D611000000000000]      	dq .undefined_object
  1364                                  .undefined_object:
  1365 000011D6 05                      	db T_undefined
  1366 000011D7 [4906000000000000]      	dq L_constants + 1609
  1367                                  
  1368                                  free_var_53:	; location of cdadar
  1369 000011DF [E711000000000000]      	dq .undefined_object
  1370                                  .undefined_object:
  1371 000011E7 05                      	db T_undefined
  1372 000011E8 [1707000000000000]      	dq L_constants + 1815
  1373                                  
  1374                                  free_var_54:	; location of cdaddr
  1375 000011F0 [F811000000000000]      	dq .undefined_object
  1376                                  .undefined_object:
  1377 000011F8 05                      	db T_undefined
  1378 000011F9 [2607000000000000]      	dq L_constants + 1830
  1379                                  
  1380                                  free_var_55:	; location of cdadr
  1381 00001201 [0912000000000000]      	dq .undefined_object
  1382                                  .undefined_object:
  1383 00001209 05                      	db T_undefined
  1384 0000120A [5706000000000000]      	dq L_constants + 1623
  1385                                  
  1386                                  free_var_56:	; location of cdar
  1387 00001212 [1A12000000000000]      	dq .undefined_object
  1388                                  .undefined_object:
  1389 0000121A 05                      	db T_undefined
  1390 0000121B [F705000000000000]      	dq L_constants + 1527
  1391                                  
  1392                                  free_var_57:	; location of cddaar
  1393 00001223 [2B12000000000000]      	dq .undefined_object
  1394                                  .undefined_object:
  1395 0000122B 05                      	db T_undefined
  1396 0000122C [3507000000000000]      	dq L_constants + 1845
  1397                                  
  1398                                  free_var_58:	; location of cddadr
  1399 00001234 [3C12000000000000]      	dq .undefined_object
  1400                                  .undefined_object:
  1401 0000123C 05                      	db T_undefined
  1402 0000123D [4407000000000000]      	dq L_constants + 1860
  1403                                  
  1404                                  free_var_59:	; location of cddar
  1405 00001245 [4D12000000000000]      	dq .undefined_object
  1406                                  .undefined_object:
  1407 0000124D 05                      	db T_undefined
  1408 0000124E [6506000000000000]      	dq L_constants + 1637
  1409                                  
  1410                                  free_var_60:	; location of cdddar
  1411 00001256 [5E12000000000000]      	dq .undefined_object
  1412                                  .undefined_object:
  1413 0000125E 05                      	db T_undefined
  1414 0000125F [5307000000000000]      	dq L_constants + 1875
  1415                                  
  1416                                  free_var_61:	; location of cddddr
  1417 00001267 [6F12000000000000]      	dq .undefined_object
  1418                                  .undefined_object:
  1419 0000126F 05                      	db T_undefined
  1420 00001270 [6207000000000000]      	dq L_constants + 1890
  1421                                  
  1422                                  free_var_62:	; location of cdddr
  1423 00001278 [8012000000000000]      	dq .undefined_object
  1424                                  .undefined_object:
  1425 00001280 05                      	db T_undefined
  1426 00001281 [7306000000000000]      	dq L_constants + 1651
  1427                                  
  1428                                  free_var_63:	; location of cddr
  1429 00001289 [9112000000000000]      	dq .undefined_object
  1430                                  .undefined_object:
  1431 00001291 05                      	db T_undefined
  1432 00001292 [0406000000000000]      	dq L_constants + 1540
  1433                                  
  1434                                  free_var_64:	; location of cdr
  1435 0000129A [A212000000000000]      	dq .undefined_object
  1436                                  .undefined_object:
  1437 000012A2 05                      	db T_undefined
  1438 000012A3 [2101000000000000]      	dq L_constants + 289
  1439                                  
  1440                                  free_var_65:	; location of char->integer
  1441 000012AB [B312000000000000]      	dq .undefined_object
  1442                                  .undefined_object:
  1443 000012B3 05                      	db T_undefined
  1444 000012B4 [A901000000000000]      	dq L_constants + 425
  1445                                  
  1446                                  free_var_66:	; location of char-ci<=?
  1447 000012BC [C412000000000000]      	dq .undefined_object
  1448                                  .undefined_object:
  1449 000012C4 05                      	db T_undefined
  1450 000012C5 [230A000000000000]      	dq L_constants + 2595
  1451                                  
  1452                                  free_var_67:	; location of char-ci<?
  1453 000012CD [D512000000000000]      	dq .undefined_object
  1454                                  .undefined_object:
  1455 000012D5 05                      	db T_undefined
  1456 000012D6 [110A000000000000]      	dq L_constants + 2577
  1457                                  
  1458                                  free_var_68:	; location of char-ci=?
  1459 000012DE [E612000000000000]      	dq .undefined_object
  1460                                  .undefined_object:
  1461 000012E6 05                      	db T_undefined
  1462 000012E7 [360A000000000000]      	dq L_constants + 2614
  1463                                  
  1464                                  free_var_69:	; location of char-ci>=?
  1465 000012EF [F712000000000000]      	dq .undefined_object
  1466                                  .undefined_object:
  1467 000012F7 05                      	db T_undefined
  1468 000012F8 [5A0A000000000000]      	dq L_constants + 2650
  1469                                  
  1470                                  free_var_70:	; location of char-ci>?
  1471 00001300 [0813000000000000]      	dq .undefined_object
  1472                                  .undefined_object:
  1473 00001308 05                      	db T_undefined
  1474 00001309 [480A000000000000]      	dq L_constants + 2632
  1475                                  
  1476                                  free_var_71:	; location of char-downcase
  1477 00001311 [1913000000000000]      	dq .undefined_object
  1478                                  .undefined_object:
  1479 00001319 05                      	db T_undefined
  1480 0000131A [DF09000000000000]      	dq L_constants + 2527
  1481                                  
  1482                                  free_var_72:	; location of char-upcase
  1483 00001322 [2A13000000000000]      	dq .undefined_object
  1484                                  .undefined_object:
  1485 0000132A 05                      	db T_undefined
  1486 0000132B [F509000000000000]      	dq L_constants + 2549
  1487                                  
  1488                                  free_var_73:	; location of char<=?
  1489 00001333 [3B13000000000000]      	dq .undefined_object
  1490                                  .undefined_object:
  1491 0000133B 05                      	db T_undefined
  1492 0000133C [A109000000000000]      	dq L_constants + 2465
  1493                                  
  1494                                  free_var_74:	; location of char<?
  1495 00001344 [4C13000000000000]      	dq .undefined_object
  1496                                  .undefined_object:
  1497 0000134C 05                      	db T_undefined
  1498 0000134D [9209000000000000]      	dq L_constants + 2450
  1499                                  
  1500                                  free_var_75:	; location of char=?
  1501 00001355 [5D13000000000000]      	dq .undefined_object
  1502                                  .undefined_object:
  1503 0000135D 05                      	db T_undefined
  1504 0000135E [B109000000000000]      	dq L_constants + 2481
  1505                                  
  1506                                  free_var_76:	; location of char>=?
  1507 00001366 [6E13000000000000]      	dq .undefined_object
  1508                                  .undefined_object:
  1509 0000136E 05                      	db T_undefined
  1510 0000136F [CF09000000000000]      	dq L_constants + 2511
  1511                                  
  1512                                  free_var_77:	; location of char>?
  1513 00001377 [7F13000000000000]      	dq .undefined_object
  1514                                  .undefined_object:
  1515 0000137F 05                      	db T_undefined
  1516 00001380 [C009000000000000]      	dq L_constants + 2496
  1517                                  
  1518                                  free_var_78:	; location of char?
  1519 00001388 [9013000000000000]      	dq .undefined_object
  1520                                  .undefined_object:
  1521 00001390 05                      	db T_undefined
  1522 00001391 [3000000000000000]      	dq L_constants + 48
  1523                                  
  1524                                  free_var_79:	; location of cons
  1525 00001399 [A113000000000000]      	dq .undefined_object
  1526                                  .undefined_object:
  1527 000013A1 05                      	db T_undefined
  1528 000013A2 [DF00000000000000]      	dq L_constants + 223
  1529                                  
  1530                                  free_var_80:	; location of eq?
  1531 000013AA [B213000000000000]      	dq .undefined_object
  1532                                  .undefined_object:
  1533 000013B2 05                      	db T_undefined
  1534 000013B3 [9604000000000000]      	dq L_constants + 1174
  1535                                  
  1536                                  free_var_81:	; location of equal?
  1537 000013BB [C313000000000000]      	dq .undefined_object
  1538                                  .undefined_object:
  1539 000013C3 05                      	db T_undefined
  1540 000013C4 [980C000000000000]      	dq L_constants + 3224
  1541                                  
  1542                                  free_var_82:	; location of error
  1543 000013CC [D413000000000000]      	dq .undefined_object
  1544                                  .undefined_object:
  1545 000013D4 05                      	db T_undefined
  1546 000013D5 [1103000000000000]      	dq L_constants + 785
  1547                                  
  1548                                  free_var_83:	; location of even?
  1549 000013DD [E513000000000000]      	dq .undefined_object
  1550                                  .undefined_object:
  1551 000013E5 05                      	db T_undefined
  1552 000013E6 [680C000000000000]      	dq L_constants + 3176
  1553                                  
  1554                                  free_var_84:	; location of fact
  1555 000013EE [F613000000000000]      	dq .undefined_object
  1556                                  .undefined_object:
  1557 000013F6 05                      	db T_undefined
  1558 000013F7 [0309000000000000]      	dq L_constants + 2307
  1559                                  
  1560                                  free_var_85:	; location of fold-left
  1561 000013FF [0714000000000000]      	dq .undefined_object
  1562                                  .undefined_object:
  1563 00001407 05                      	db T_undefined
  1564 00001408 [1908000000000000]      	dq L_constants + 2073
  1565                                  
  1566                                  free_var_86:	; location of fold-right
  1567 00001410 [1814000000000000]      	dq .undefined_object
  1568                                  .undefined_object:
  1569 00001418 05                      	db T_undefined
  1570 00001419 [3A08000000000000]      	dq L_constants + 2106
  1571                                  
  1572                                  free_var_87:	; location of fraction->real
  1573 00001421 [2914000000000000]      	dq .undefined_object
  1574                                  .undefined_object:
  1575 00001429 05                      	db T_undefined
  1576 0000142A [9201000000000000]      	dq L_constants + 402
  1577                                  
  1578                                  free_var_88:	; location of fraction?
  1579 00001432 [3A14000000000000]      	dq .undefined_object
  1580                                  .undefined_object:
  1581 0000143A 05                      	db T_undefined
  1582 0000143B [9800000000000000]      	dq L_constants + 152
  1583                                  
  1584                                  free_var_89:	; location of integer->char
  1585 00001443 [4B14000000000000]      	dq .undefined_object
  1586                                  .undefined_object:
  1587 0000144B 05                      	db T_undefined
  1588 0000144C [BF01000000000000]      	dq L_constants + 447
  1589                                  
  1590                                  free_var_90:	; location of integer->real
  1591 00001454 [5C14000000000000]      	dq .undefined_object
  1592                                  .undefined_object:
  1593 0000145C 05                      	db T_undefined
  1594 0000145D [7C01000000000000]      	dq L_constants + 380
  1595                                  
  1596                                  free_var_91:	; location of integer?
  1597 00001465 [6D14000000000000]      	dq .undefined_object
  1598                                  .undefined_object:
  1599 0000146D 05                      	db T_undefined
  1600 0000146E [F001000000000000]      	dq L_constants + 496
  1601                                  
  1602                                  free_var_92:	; location of list
  1603 00001476 [7E14000000000000]      	dq .undefined_object
  1604                                  .undefined_object:
  1605 0000147E 05                      	db T_undefined
  1606 0000147F [7F07000000000000]      	dq L_constants + 1919
  1607                                  
  1608                                  free_var_93:	; location of list*
  1609 00001487 [8F14000000000000]      	dq .undefined_object
  1610                                  .undefined_object:
  1611 0000148F 05                      	db T_undefined
  1612 00001490 [AA07000000000000]      	dq L_constants + 1962
  1613                                  
  1614                                  free_var_94:	; location of list->string
  1615 00001498 [A014000000000000]      	dq .undefined_object
  1616                                  .undefined_object:
  1617 000014A0 05                      	db T_undefined
  1618 000014A1 [9B0A000000000000]      	dq L_constants + 2715
  1619                                  
  1620                                  free_var_95:	; location of list->vector
  1621 000014A9 [B114000000000000]      	dq .undefined_object
  1622                                  .undefined_object:
  1623 000014B1 05                      	db T_undefined
  1624 000014B2 [FC0B000000000000]      	dq L_constants + 3068
  1625                                  
  1626                                  free_var_96:	; location of list?
  1627 000014BA [C214000000000000]      	dq .undefined_object
  1628                                  .undefined_object:
  1629 000014C2 05                      	db T_undefined
  1630 000014C3 [7107000000000000]      	dq L_constants + 1905
  1631                                  
  1632                                  free_var_97:	; location of logarithm
  1633 000014CB [D314000000000000]      	dq .undefined_object
  1634                                  .undefined_object:
  1635 000014D3 05                      	db T_undefined
  1636 000014D4 [8B0D000000000000]      	dq L_constants + 3467
  1637                                  
  1638                                  free_var_98:	; location of make-list-thunk
  1639 000014DC [E414000000000000]      	dq .undefined_object
  1640                                  .undefined_object:
  1641 000014E4 05                      	db T_undefined
  1642 000014E5 [3F0D000000000000]      	dq L_constants + 3391
  1643                                  
  1644                                  free_var_99:	; location of make-string
  1645 000014ED [F514000000000000]      	dq .undefined_object
  1646                                  .undefined_object:
  1647 000014F5 05                      	db T_undefined
  1648 000014F6 [5C04000000000000]      	dq L_constants + 1116
  1649                                  
  1650                                  free_var_100:	; location of make-string-thunk
  1651 000014FE [0615000000000000]      	dq .undefined_object
  1652                                  .undefined_object:
  1653 00001506 05                      	db T_undefined
  1654 00001507 [570D000000000000]      	dq L_constants + 3415
  1655                                  
  1656                                  free_var_101:	; location of make-vector
  1657 0000150F [1715000000000000]      	dq .undefined_object
  1658                                  .undefined_object:
  1659 00001517 05                      	db T_undefined
  1660 00001518 [4804000000000000]      	dq L_constants + 1096
  1661                                  
  1662                                  free_var_102:	; location of make-vector-thunk
  1663 00001520 [2815000000000000]      	dq .undefined_object
  1664                                  .undefined_object:
  1665 00001528 05                      	db T_undefined
  1666 00001529 [710D000000000000]      	dq L_constants + 3441
  1667                                  
  1668                                  free_var_103:	; location of map
  1669 00001531 [3915000000000000]      	dq .undefined_object
  1670                                  .undefined_object:
  1671 00001539 05                      	db T_undefined
  1672 0000153A [EE07000000000000]      	dq L_constants + 2030
  1673                                  
  1674                                  free_var_104:	; location of negative?
  1675 00001542 [4A15000000000000]      	dq .undefined_object
  1676                                  .undefined_object:
  1677 0000154A 05                      	db T_undefined
  1678 0000154B [560C000000000000]      	dq L_constants + 3158
  1679                                  
  1680                                  free_var_105:	; location of newline
  1681 00001553 [5B15000000000000]      	dq .undefined_object
  1682                                  .undefined_object:
  1683 0000155B 05                      	db T_undefined
  1684 0000155C [A60D000000000000]      	dq L_constants + 3494
  1685                                  
  1686                                  free_var_106:	; location of not
  1687 00001564 [6C15000000000000]      	dq .undefined_object
  1688                                  .undefined_object:
  1689 0000156C 05                      	db T_undefined
  1690 0000156D [8C07000000000000]      	dq L_constants + 1932
  1691                                  
  1692                                  free_var_107:	; location of null?
  1693 00001575 [7D15000000000000]      	dq .undefined_object
  1694                                  .undefined_object:
  1695 0000157D 05                      	db T_undefined
  1696 0000157E [0600000000000000]      	dq L_constants + 6
  1697                                  
  1698                                  free_var_108:	; location of number?
  1699 00001586 [8E15000000000000]      	dq .undefined_object
  1700                                  .undefined_object:
  1701 0000158E 05                      	db T_undefined
  1702 0000158F [BB00000000000000]      	dq L_constants + 187
  1703                                  
  1704                                  free_var_109:	; location of odd?
  1705 00001597 [9F15000000000000]      	dq .undefined_object
  1706                                  .undefined_object:
  1707 0000159F 05                      	db T_undefined
  1708 000015A0 [7F0C000000000000]      	dq L_constants + 3199
  1709                                  
  1710                                  free_var_110:	; location of ormap
  1711 000015A8 [B015000000000000]      	dq .undefined_object
  1712                                  .undefined_object:
  1713 000015B0 05                      	db T_undefined
  1714 000015B1 [E007000000000000]      	dq L_constants + 2016
  1715                                  
  1716                                  free_var_111:	; location of pair?
  1717 000015B9 [C115000000000000]      	dq .undefined_object
  1718                                  .undefined_object:
  1719 000015C1 05                      	db T_undefined
  1720 000015C2 [1400000000000000]      	dq L_constants + 20
  1721                                  
  1722                                  free_var_112:	; location of positive?
  1723 000015CA [D215000000000000]      	dq .undefined_object
  1724                                  .undefined_object:
  1725 000015D2 05                      	db T_undefined
  1726 000015D3 [440C000000000000]      	dq L_constants + 3140
  1727                                  
  1728                                  free_var_113:	; location of random
  1729 000015DB [E315000000000000]      	dq .undefined_object
  1730                                  .undefined_object:
  1731 000015E3 05                      	db T_undefined
  1732 000015E4 [350C000000000000]      	dq L_constants + 3125
  1733                                  
  1734                                  free_var_114:	; location of rational?
  1735 000015EC [F415000000000000]      	dq .undefined_object
  1736                                  .undefined_object:
  1737 000015F4 05                      	db T_undefined
  1738 000015F5 [9807000000000000]      	dq L_constants + 1944
  1739                                  
  1740                                  free_var_115:	; location of real
  1741 000015FD [0516000000000000]      	dq .undefined_object
  1742                                  .undefined_object:
  1743 00001605 05                      	db T_undefined
  1744 00001606 [BE08000000000000]      	dq L_constants + 2238
  1745                                  
  1746                                  free_var_116:	; location of real?
  1747 0000160E [1616000000000000]      	dq .undefined_object
  1748                                  .undefined_object:
  1749 00001616 05                      	db T_undefined
  1750 00001617 [8A00000000000000]      	dq L_constants + 138
  1751                                  
  1752                                  free_var_117:	; location of remainder
  1753 0000161F [2716000000000000]      	dq .undefined_object
  1754                                  .undefined_object:
  1755 00001627 05                      	db T_undefined
  1756 00001628 [C603000000000000]      	dq L_constants + 966
  1757                                  
  1758                                  free_var_118:	; location of reverse
  1759 00001630 [3816000000000000]      	dq .undefined_object
  1760                                  .undefined_object:
  1761 00001638 05                      	db T_undefined
  1762 00001639 [0908000000000000]      	dq L_constants + 2057
  1763                                  
  1764                                  free_var_119:	; location of string->list
  1765 00001641 [4916000000000000]      	dq .undefined_object
  1766                                  .undefined_object:
  1767 00001649 05                      	db T_undefined
  1768 0000164A [B00A000000000000]      	dq L_constants + 2736
  1769                                  
  1770                                  free_var_120:	; location of string-append
  1771 00001652 [5A16000000000000]      	dq .undefined_object
  1772                                  .undefined_object:
  1773 0000165A 05                      	db T_undefined
  1774 0000165B [B50C000000000000]      	dq L_constants + 3253
  1775                                  
  1776                                  free_var_121:	; location of string-ci<=?
  1777 00001663 [6B16000000000000]      	dq .undefined_object
  1778                                  .undefined_object:
  1779 0000166B 05                      	db T_undefined
  1780 0000166C [300B000000000000]      	dq L_constants + 2864
  1781                                  
  1782                                  free_var_122:	; location of string-ci<?
  1783 00001674 [7C16000000000000]      	dq .undefined_object
  1784                                  .undefined_object:
  1785 0000167C 05                      	db T_undefined
  1786 0000167D [1C0B000000000000]      	dq L_constants + 2844
  1787                                  
  1788                                  free_var_123:	; location of string-ci=?
  1789 00001685 [8D16000000000000]      	dq .undefined_object
  1790                                  .undefined_object:
  1791 0000168D 05                      	db T_undefined
  1792 0000168E [450B000000000000]      	dq L_constants + 2885
  1793                                  
  1794                                  free_var_124:	; location of string-ci>=?
  1795 00001696 [9E16000000000000]      	dq .undefined_object
  1796                                  .undefined_object:
  1797 0000169E 05                      	db T_undefined
  1798 0000169F [590B000000000000]      	dq L_constants + 2905
  1799                                  
  1800                                  free_var_125:	; location of string-ci>?
  1801 000016A7 [AF16000000000000]      	dq .undefined_object
  1802                                  .undefined_object:
  1803 000016AF 05                      	db T_undefined
  1804 000016B0 [6E0B000000000000]      	dq L_constants + 2926
  1805                                  
  1806                                  free_var_126:	; location of string-downcase
  1807 000016B8 [C016000000000000]      	dq .undefined_object
  1808                                  .undefined_object:
  1809 000016C0 05                      	db T_undefined
  1810 000016C1 [6D0A000000000000]      	dq L_constants + 2669
  1811                                  
  1812                                  free_var_127:	; location of string-length
  1813 000016C9 [D116000000000000]      	dq .undefined_object
  1814                                  .undefined_object:
  1815 000016D1 05                      	db T_undefined
  1816 000016D2 [2D01000000000000]      	dq L_constants + 301
  1817                                  
  1818                                  free_var_128:	; location of string-ref
  1819 000016DA [E216000000000000]      	dq .undefined_object
  1820                                  .undefined_object:
  1821 000016E2 05                      	db T_undefined
  1822 000016E3 [FA03000000000000]      	dq L_constants + 1018
  1823                                  
  1824                                  free_var_129:	; location of string-reverse
  1825 000016EB [F316000000000000]      	dq .undefined_object
  1826                                  .undefined_object:
  1827 000016F3 05                      	db T_undefined
  1828 000016F4 [E10C000000000000]      	dq L_constants + 3297
  1829                                  
  1830                                  free_var_130:	; location of string-reverse!
  1831 000016FC [0417000000000000]      	dq .undefined_object
  1832                                  .undefined_object:
  1833 00001704 05                      	db T_undefined
  1834 00001705 [0F0D000000000000]      	dq L_constants + 3343
  1835                                  
  1836                                  free_var_131:	; location of string-set!
  1837 0000170D [1517000000000000]      	dq .undefined_object
  1838                                  .undefined_object:
  1839 00001715 05                      	db T_undefined
  1840 00001716 [3404000000000000]      	dq L_constants + 1076
  1841                                  
  1842                                  free_var_132:	; location of string-upcase
  1843 0000171E [2617000000000000]      	dq .undefined_object
  1844                                  .undefined_object:
  1845 00001726 05                      	db T_undefined
  1846 00001727 [850A000000000000]      	dq L_constants + 2693
  1847                                  
  1848                                  free_var_133:	; location of string<=?
  1849 0000172F [3717000000000000]      	dq .undefined_object
  1850                                  .undefined_object:
  1851 00001737 05                      	db T_undefined
  1852 00001738 [D60A000000000000]      	dq L_constants + 2774
  1853                                  
  1854                                  free_var_134:	; location of string<?
  1855 00001740 [4817000000000000]      	dq .undefined_object
  1856                                  .undefined_object:
  1857 00001748 05                      	db T_undefined
  1858 00001749 [C50A000000000000]      	dq L_constants + 2757
  1859                                  
  1860                                  free_var_135:	; location of string=?
  1861 00001751 [5917000000000000]      	dq .undefined_object
  1862                                  .undefined_object:
  1863 00001759 05                      	db T_undefined
  1864 0000175A [E80A000000000000]      	dq L_constants + 2792
  1865                                  
  1866                                  free_var_136:	; location of string>=?
  1867 00001762 [6A17000000000000]      	dq .undefined_object
  1868                                  .undefined_object:
  1869 0000176A 05                      	db T_undefined
  1870 0000176B [F90A000000000000]      	dq L_constants + 2809
  1871                                  
  1872                                  free_var_137:	; location of string>?
  1873 00001773 [7B17000000000000]      	dq .undefined_object
  1874                                  .undefined_object:
  1875 0000177B 05                      	db T_undefined
  1876 0000177C [0B0B000000000000]      	dq L_constants + 2827
  1877                                  
  1878                                  free_var_138:	; location of string?
  1879 00001784 [8C17000000000000]      	dq .undefined_object
  1880                                  .undefined_object:
  1881 0000178C 05                      	db T_undefined
  1882 0000178D [3E00000000000000]      	dq L_constants + 62
  1883                                  
  1884                                  free_var_139:	; location of trng
  1885 00001795 [9D17000000000000]      	dq .undefined_object
  1886                                  .undefined_object:
  1887 0000179D 05                      	db T_undefined
  1888 0000179E [D501000000000000]      	dq L_constants + 469
  1889                                  
  1890                                  free_var_140:	; location of vector
  1891 000017A6 [AE17000000000000]      	dq .undefined_object
  1892                                  .undefined_object:
  1893 000017AE 05                      	db T_undefined
  1894 000017AF [110C000000000000]      	dq L_constants + 3089
  1895                                  
  1896                                  free_var_141:	; location of vector->list
  1897 000017B7 [BF17000000000000]      	dq .undefined_object
  1898                                  .undefined_object:
  1899 000017BF 05                      	db T_undefined
  1900 000017C0 [200C000000000000]      	dq L_constants + 3104
  1901                                  
  1902                                  free_var_142:	; location of vector-append
  1903 000017C8 [D017000000000000]      	dq .undefined_object
  1904                                  .undefined_object:
  1905 000017D0 05                      	db T_undefined
  1906 000017D1 [CB0C000000000000]      	dq L_constants + 3275
  1907                                  
  1908                                  free_var_143:	; location of vector-length
  1909 000017D9 [E117000000000000]      	dq .undefined_object
  1910                                  .undefined_object:
  1911 000017E1 05                      	db T_undefined
  1912 000017E2 [4301000000000000]      	dq L_constants + 323
  1913                                  
  1914                                  free_var_144:	; location of vector-ref
  1915 000017EA [F217000000000000]      	dq .undefined_object
  1916                                  .undefined_object:
  1917 000017F2 05                      	db T_undefined
  1918 000017F3 [0D04000000000000]      	dq L_constants + 1037
  1919                                  
  1920                                  free_var_145:	; location of vector-reverse
  1921 000017FB [0318000000000000]      	dq .undefined_object
  1922                                  .undefined_object:
  1923 00001803 05                      	db T_undefined
  1924 00001804 [F80C000000000000]      	dq L_constants + 3320
  1925                                  
  1926                                  free_var_146:	; location of vector-reverse!
  1927 0000180C [1418000000000000]      	dq .undefined_object
  1928                                  .undefined_object:
  1929 00001814 05                      	db T_undefined
  1930 00001815 [270D000000000000]      	dq L_constants + 3367
  1931                                  
  1932                                  free_var_147:	; location of vector-set!
  1933 0000181D [2518000000000000]      	dq .undefined_object
  1934                                  .undefined_object:
  1935 00001825 05                      	db T_undefined
  1936 00001826 [2004000000000000]      	dq L_constants + 1056
  1937                                  
  1938                                  free_var_148:	; location of vector?
  1939 0000182E [3618000000000000]      	dq .undefined_object
  1940                                  .undefined_object:
  1941 00001836 05                      	db T_undefined
  1942 00001837 [6700000000000000]      	dq L_constants + 103
  1943                                  
  1944                                  free_var_149:	; location of void
  1945 0000183F [4718000000000000]      	dq .undefined_object
  1946                                  .undefined_object:
  1947 00001847 05                      	db T_undefined
  1948 00001848 [B80D000000000000]      	dq L_constants + 3512
  1949                                  
  1950                                  free_var_150:	; location of with
  1951 00001850 [5818000000000000]      	dq .undefined_object
  1952                                  .undefined_object:
  1953 00001858 05                      	db T_undefined
  1954 00001859 [C50D000000000000]      	dq L_constants + 3525
  1955                                  
  1956                                  free_var_151:	; location of write-char
  1957 00001861 [6918000000000000]      	dq .undefined_object
  1958                                  .undefined_object:
  1959 00001869 05                      	db T_undefined
  1960 0000186A [0201000000000000]      	dq L_constants + 258
  1961                                  
  1962                                  free_var_152:	; location of zero?
  1963 00001872 [7A18000000000000]      	dq .undefined_object
  1964                                  .undefined_object:
  1965 0000187A 05                      	db T_undefined
  1966 0000187B [E201000000000000]      	dq L_constants + 482
  1967                                  
  1968                                  
  1969                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1970                                  global main
  1971                                  section .text
  1972                                  main:
  1973 00000000 C8000000                        enter 0, 0
  1974 00000004 6A00                            push 0
  1975 00000006 6A00                            push 0
  1976 00000008 68[C5730100]                    push Lend
  1977 0000000D C8000000                        enter 0, 0
  1978                                  	; building closure for null?
  1979 00000011 48BF-                   	mov rdi, free_var_107
  1979 00000013 [7515000000000000] 
  1980 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1980 0000001D [627F010000000000] 
  1981 00000025 E8367D0100              	call bind_primitive
  1982                                  
  1983                                  	; building closure for pair?
  1984 0000002A 48BF-                   	mov rdi, free_var_111
  1984 0000002C [B915000000000000] 
  1985 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1985 00000036 [947F010000000000] 
  1986 0000003E E81D7D0100              	call bind_primitive
  1987                                  
  1988                                  	; building closure for char?
  1989 00000043 48BF-                   	mov rdi, free_var_78
  1989 00000045 [8813000000000000] 
  1990 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1990 0000004F [F87F010000000000] 
  1991 00000057 E8047D0100              	call bind_primitive
  1992                                  
  1993                                  	; building closure for string?
  1994 0000005C 48BF-                   	mov rdi, free_var_138
  1994 0000005E [8417000000000000] 
  1995 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1995 00000068 [2A80010000000000] 
  1996 00000070 E8EB7C0100              	call bind_primitive
  1997                                  
  1998                                  	; building closure for vector?
  1999 00000075 48BF-                   	mov rdi, free_var_148
  1999 00000077 [2E18000000000000] 
  2000 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  2000 00000081 [2881010000000000] 
  2001 00000089 E8D27C0100              	call bind_primitive
  2002                                  
  2003                                  	; building closure for real?
  2004 0000008E 48BF-                   	mov rdi, free_var_116
  2004 00000090 [0E16000000000000] 
  2005 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  2005 0000009A [8C81010000000000] 
  2006 000000A2 E8B97C0100              	call bind_primitive
  2007                                  
  2008                                  	; building closure for fraction?
  2009 000000A7 48BF-                   	mov rdi, free_var_88
  2009 000000A9 [3214000000000000] 
  2010 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  2010 000000B3 [BE81010000000000] 
  2011 000000BB E8A07C0100              	call bind_primitive
  2012                                  
  2013                                  	; building closure for number?
  2014 000000C0 48BF-                   	mov rdi, free_var_108
  2014 000000C2 [8615000000000000] 
  2015 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  2015 000000CC [8C82010000000000] 
  2016 000000D4 E8877C0100              	call bind_primitive
  2017                                  
  2018                                  	; building closure for cons
  2019 000000D9 48BF-                   	mov rdi, free_var_79
  2019 000000DB [9913000000000000] 
  2020 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  2020 000000E5 [F482010000000000] 
  2021 000000ED E86E7C0100              	call bind_primitive
  2022                                  
  2023                                  	; building closure for write-char
  2024 000000F2 48BF-                   	mov rdi, free_var_151
  2024 000000F4 [6118000000000000] 
  2025 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  2025 000000FE [4A83010000000000] 
  2026 00000106 E8557C0100              	call bind_primitive
  2027                                  
  2028                                  	; building closure for car
  2029 0000010B 48BF-                   	mov rdi, free_var_49
  2029 0000010D [9B11000000000000] 
  2030 00000115 48BE-                   	mov rsi, L_code_ptr_car
  2030 00000117 [9D83010000000000] 
  2031 0000011F E83C7C0100              	call bind_primitive
  2032                                  
  2033                                  	; building closure for cdr
  2034 00000124 48BF-                   	mov rdi, free_var_64
  2034 00000126 [9A12000000000000] 
  2035 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  2035 00000130 [C183010000000000] 
  2036 00000138 E8237C0100              	call bind_primitive
  2037                                  
  2038                                  	; building closure for string-length
  2039 0000013D 48BF-                   	mov rdi, free_var_127
  2039 0000013F [C916000000000000] 
  2040 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  2040 00000149 [E583010000000000] 
  2041 00000151 E80A7C0100              	call bind_primitive
  2042                                  
  2043                                  	; building closure for vector-length
  2044 00000156 48BF-                   	mov rdi, free_var_143
  2044 00000158 [D917000000000000] 
  2045 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  2045 00000162 [0E84010000000000] 
  2046 0000016A E8F17B0100              	call bind_primitive
  2047                                  
  2048                                  	; building closure for integer->real
  2049 0000016F 48BF-                   	mov rdi, free_var_90
  2049 00000171 [5414000000000000] 
  2050 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2050 0000017B [7F84010000000000] 
  2051 00000183 E8D87B0100              	call bind_primitive
  2052                                  
  2053                                  	; building closure for fraction->real
  2054 00000188 48BF-                   	mov rdi, free_var_87
  2054 0000018A [2114000000000000] 
  2055 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2055 00000194 [AD84010000000000] 
  2056 0000019C E8BF7B0100              	call bind_primitive
  2057                                  
  2058                                  	; building closure for char->integer
  2059 000001A1 48BF-                   	mov rdi, free_var_65
  2059 000001A3 [AB12000000000000] 
  2060 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2060 000001AD [E884010000000000] 
  2061 000001B5 E8A67B0100              	call bind_primitive
  2062                                  
  2063                                  	; building closure for integer->char
  2064 000001BA 48BF-                   	mov rdi, free_var_89
  2064 000001BC [4314000000000000] 
  2065 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2065 000001C6 [5785010000000000] 
  2066 000001CE E88D7B0100              	call bind_primitive
  2067                                  
  2068                                  	; building closure for trng
  2069 000001D3 48BF-                   	mov rdi, free_var_139
  2069 000001D5 [9517000000000000] 
  2070 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2070 000001DF [A285010000000000] 
  2071 000001E7 E8747B0100              	call bind_primitive
  2072                                  
  2073                                  	; building closure for zero?
  2074 000001EC 48BF-                   	mov rdi, free_var_152
  2074 000001EE [7218000000000000] 
  2075 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2075 000001F8 [C185010000000000] 
  2076 00000200 E85B7B0100              	call bind_primitive
  2077                                  
  2078                                  	; building closure for integer?
  2079 00000205 48BF-                   	mov rdi, free_var_91
  2079 00000207 [6514000000000000] 
  2080 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2080 00000211 [2686010000000000] 
  2081 00000219 E8427B0100              	call bind_primitive
  2082                                  
  2083                                  	; building closure for __bin-apply
  2084 0000021E 48BF-                   	mov rdi, free_var_12
  2084 00000220 [260F000000000000] 
  2085 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2085 0000022A [D07E010000000000] 
  2086 00000232 E8297B0100              	call bind_primitive
  2087                                  
  2088                                  	; building closure for __bin-add-rr
  2089 00000237 48BF-                   	mov rdi, free_var_10
  2089 00000239 [040F000000000000] 
  2090 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2090 00000243 [5886010000000000] 
  2091 0000024B E8107B0100              	call bind_primitive
  2092                                  
  2093                                  	; building closure for __bin-sub-rr
  2094 00000250 48BF-                   	mov rdi, free_var_26
  2094 00000252 [1410000000000000] 
  2095 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2095 0000025C [9886010000000000] 
  2096 00000264 E8F77A0100              	call bind_primitive
  2097                                  
  2098                                  	; building closure for __bin-mul-rr
  2099 00000269 48BF-                   	mov rdi, free_var_23
  2099 0000026B [E10F000000000000] 
  2100 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2100 00000275 [D886010000000000] 
  2101 0000027D E8DE7A0100              	call bind_primitive
  2102                                  
  2103                                  	; building closure for __bin-div-rr
  2104 00000282 48BF-                   	mov rdi, free_var_14
  2104 00000284 [480F000000000000] 
  2105 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2105 0000028E [1887010000000000] 
  2106 00000296 E8C57A0100              	call bind_primitive
  2107                                  
  2108                                  	; building closure for __bin-add-qq
  2109 0000029B 48BF-                   	mov rdi, free_var_9
  2109 0000029D [F30E000000000000] 
  2110 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2110 000002A7 [A287010000000000] 
  2111 000002AF E8AC7A0100              	call bind_primitive
  2112                                  
  2113                                  	; building closure for __bin-sub-qq
  2114 000002B4 48BF-                   	mov rdi, free_var_25
  2114 000002B6 [0310000000000000] 
  2115 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2115 000002C0 [4288010000000000] 
  2116 000002C8 E8937A0100              	call bind_primitive
  2117                                  
  2118                                  	; building closure for __bin-mul-qq
  2119 000002CD 48BF-                   	mov rdi, free_var_22
  2119 000002CF [D00F000000000000] 
  2120 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2120 000002D9 [E788010000000000] 
  2121 000002E1 E87A7A0100              	call bind_primitive
  2122                                  
  2123                                  	; building closure for __bin-div-qq
  2124 000002E6 48BF-                   	mov rdi, free_var_13
  2124 000002E8 [370F000000000000] 
  2125 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2125 000002F2 [8189010000000000] 
  2126 000002FA E8617A0100              	call bind_primitive
  2127                                  
  2128                                  	; building closure for __bin-add-zz
  2129 000002FF 48BF-                   	mov rdi, free_var_11
  2129 00000301 [150F000000000000] 
  2130 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2130 0000030B [6687010000000000] 
  2131 00000313 E8487A0100              	call bind_primitive
  2132                                  
  2133                                  	; building closure for __bin-sub-zz
  2134 00000318 48BF-                   	mov rdi, free_var_27
  2134 0000031A [2510000000000000] 
  2135 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2135 00000324 [0688010000000000] 
  2136 0000032C E82F7A0100              	call bind_primitive
  2137                                  
  2138                                  	; building closure for __bin-mul-zz
  2139 00000331 48BF-                   	mov rdi, free_var_24
  2139 00000333 [F20F000000000000] 
  2140 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2140 0000033D [A688010000000000] 
  2141 00000345 E8167A0100              	call bind_primitive
  2142                                  
  2143                                  	; building closure for __bin-div-zz
  2144 0000034A 48BF-                   	mov rdi, free_var_15
  2144 0000034C [590F000000000000] 
  2145 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2145 00000356 [3B89010000000000] 
  2146 0000035E E8FD790100              	call bind_primitive
  2147                                  
  2148                                  	; building closure for error
  2149 00000363 48BF-                   	mov rdi, free_var_82
  2149 00000365 [CC13000000000000] 
  2150 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2150 0000036F [6B8A010000000000] 
  2151 00000377 E8E4790100              	call bind_primitive
  2152                                  
  2153                                  	; building closure for __bin-less-than-rr
  2154 0000037C 48BF-                   	mov rdi, free_var_20
  2154 0000037E [AE0F000000000000] 
  2155 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2155 00000388 [278B010000000000] 
  2156 00000390 E8CB790100              	call bind_primitive
  2157                                  
  2158                                  	; building closure for __bin-less-than-qq
  2159 00000395 48BF-                   	mov rdi, free_var_19
  2159 00000397 [9D0F000000000000] 
  2160 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2160 000003A1 [C98B010000000000] 
  2161 000003A9 E8B2790100              	call bind_primitive
  2162                                  
  2163                                  	; building closure for __bin-less-than-zz
  2164 000003AE 48BF-                   	mov rdi, free_var_21
  2164 000003B0 [BF0F000000000000] 
  2165 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2165 000003BA [7A8B010000000000] 
  2166 000003C2 E899790100              	call bind_primitive
  2167                                  
  2168                                  	; building closure for __bin-equal-rr
  2169 000003C7 48BF-                   	mov rdi, free_var_17
  2169 000003C9 [7B0F000000000000] 
  2170 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2170 000003D3 [288C010000000000] 
  2171 000003DB E880790100              	call bind_primitive
  2172                                  
  2173                                  	; building closure for __bin-equal-qq
  2174 000003E0 48BF-                   	mov rdi, free_var_16
  2174 000003E2 [6A0F000000000000] 
  2175 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2175 000003EC [CA8C010000000000] 
  2176 000003F4 E867790100              	call bind_primitive
  2177                                  
  2178                                  	; building closure for __bin-equal-zz
  2179 000003F9 48BF-                   	mov rdi, free_var_18
  2179 000003FB [8C0F000000000000] 
  2180 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2180 00000405 [7B8C010000000000] 
  2181 0000040D E84E790100              	call bind_primitive
  2182                                  
  2183                                  	; building closure for remainder
  2184 00000412 48BF-                   	mov rdi, free_var_117
  2184 00000414 [1F16000000000000] 
  2185 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2185 0000041E [758D010000000000] 
  2186 00000426 E835790100              	call bind_primitive
  2187                                  
  2188                                  	; building closure for string-ref
  2189 0000042B 48BF-                   	mov rdi, free_var_128
  2189 0000042D [DA16000000000000] 
  2190 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2190 00000437 [258E010000000000] 
  2191 0000043F E81C790100              	call bind_primitive
  2192                                  
  2193                                  	; building closure for vector-ref
  2194 00000444 48BF-                   	mov rdi, free_var_144
  2194 00000446 [EA17000000000000] 
  2195 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2195 00000450 [818E010000000000] 
  2196 00000458 E803790100              	call bind_primitive
  2197                                  
  2198                                  	; building closure for vector-set!
  2199 0000045D 48BF-                   	mov rdi, free_var_147
  2199 0000045F [1D18000000000000] 
  2200 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2200 00000469 [CE8E010000000000] 
  2201 00000471 E8EA780100              	call bind_primitive
  2202                                  
  2203                                  	; building closure for string-set!
  2204 00000476 48BF-                   	mov rdi, free_var_131
  2204 00000478 [0D17000000000000] 
  2205 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2205 00000482 [298F010000000000] 
  2206 0000048A E8D1780100              	call bind_primitive
  2207                                  
  2208                                  	; building closure for make-vector
  2209 0000048F 48BF-                   	mov rdi, free_var_101
  2209 00000491 [0F15000000000000] 
  2210 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2210 0000049B [8F8F010000000000] 
  2211 000004A3 E8B8780100              	call bind_primitive
  2212                                  
  2213                                  	; building closure for make-string
  2214 000004A8 48BF-                   	mov rdi, free_var_99
  2214 000004AA [ED14000000000000] 
  2215 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2215 000004B4 [EA8F010000000000] 
  2216 000004BC E89F780100              	call bind_primitive
  2217                                  
  2218                                  	; building closure for eq?
  2219 000004C1 48BF-                   	mov rdi, free_var_80
  2219 000004C3 [AA13000000000000] 
  2220 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2220 000004CD [9F90010000000000] 
  2221 000004D5 E886780100              	call bind_primitive
  2222                                  
  2223                                  	; building closure for __integer-to-fraction
  2224 000004DA 48BF-                   	mov rdi, free_var_29
  2224 000004DC [4710000000000000] 
  2225 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2225 000004E6 [1985010000000000] 
  2226 000004EE E86D780100              	call bind_primitive
  2227                                  
  2228 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2229 000004F8 E833700100              	call malloc
  2230 000004FD 50                      	push rax
  2231 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2232 00000503 E828700100              	call malloc
  2233 00000508 50                      	push rax
  2234 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2235 0000050E E81D700100              	call malloc
  2236 00000513 488B7D10                	mov rdi, ENV
  2237 00000517 BE00000000              	mov rsi, 0
  2238 0000051C BA01000000              	mov rdx, 1
  2239                                  .L_lambda_simple_env_loop_06f4:	; ext_env[i + 1] <-- env[i]
  2240 00000521 4883FE00                	cmp rsi, 0
  2241 00000525 7410                    	je .L_lambda_simple_env_end_06f4
  2242 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2243 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2244 0000052F 48FFC6                  	inc rsi
  2245 00000532 48FFC2                  	inc rdx
  2246 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_06f4
  2247                                  .L_lambda_simple_env_end_06f4:
  2248 00000537 5B                      	pop rbx
  2249 00000538 BE00000000              	mov rsi, 0
  2250                                  .L_lambda_simple_params_loop_06f4:	; copy params
  2251 0000053D 4883FE00                	cmp rsi, 0
  2252 00000541 740E                    	je .L_lambda_simple_params_end_06f4
  2253 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2254 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2255 0000054C 48FFC6                  	inc rsi
  2256 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_06f4
  2257                                  .L_lambda_simple_params_end_06f4:
  2258 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2259 00000554 4889C3                  	mov rbx, rax
  2260 00000557 58                      	pop rax
  2261 00000558 C60004                  	mov byte [rax], T_closure
  2262 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2263 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f4
  2264 00000567 E9B6000000              	jmp .L_lambda_simple_end_06f4
  2265                                  .L_lambda_simple_code_06f4:	; lambda-simple body
  2266 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2267 00000572 740B                    	je .L_lambda_simple_arity_check_ok_07cf
  2268 00000574 FF742410                	push qword [rsp + 8 * 2]
  2269 00000578 6A01                    	push 1
  2270 0000057A E96A6F0100              	jmp L_error_incorrect_arity_simple
  2271                                  .L_lambda_simple_arity_check_ok_07cf:
  2272 0000057F C8000000                	enter 0, 0
  2273                                  	; preparing a tail-call
  2274                                  	; preparing a non-tail-call
  2275 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2276 00000587 50                      	push rax
  2277 00000588 6A01                    	push 1	; arg count
  2278 0000058A 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2279 00000592 803805                  	cmp byte [rax], T_undefined
  2280 00000595 0F84686E0100            	je L_error_fvar_undefined
  2281 0000059B 803804                  	cmp byte [rax], T_closure
  2282 0000059E 0F85E36E0100            	jne L_error_non_closure
  2283 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2284 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2285 000005AA 50                      	push rax
  2286 000005AB 6A01                    	push 1	; arg count
  2287 000005AD 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2288 000005B5 803805                  	cmp byte [rax], T_undefined
  2289 000005B8 0F84456E0100            	je L_error_fvar_undefined
  2290 000005BE 803804                  	cmp byte [rax], T_closure
  2291 000005C1 0F85C06E0100            	jne L_error_non_closure
  2292 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2293 000005CA FF7508                  	push qword [rbp + 8 *1]
  2294 000005CD 4989C0                  	mov r8, rax
  2295 000005D0 488B5D18                	mov rbx, COUNT
  2296 000005D4 4883C303                	add rbx,3
  2297 000005D8 48C1E303                	shl rbx,3
  2298 000005DC 4801EB                  	add rbx, rbp
  2299 000005DF 488B6D00                	mov rbp, [rbp]
  2300 000005E3 B900000000              	mov rcx,0
  2301 000005E8 BA04000000              	mov rdx, 4
  2302 000005ED 4889D0                  	mov rax, rdx
  2303 000005F0 48FFC8                  	dec rax
  2304 000005F3 48C1E003                	shl rax,3
  2305 000005F7 4801E0                  	add rax, rsp
  2306                                  	.L_tc_recycle_frame_loop_08c7:
  2307 000005FA 4839D1                  	cmp rcx, rdx
  2308 000005FD 7414                    	je .L_tc_recycle_frame_done_08c7
  2309 000005FF 4C8B08                  	mov r9, qword [rax]
  2310 00000602 4C890B                  	mov qword [rbx],r9
  2311 00000605 4883E808                	sub rax,8
  2312 00000609 4883EB08                	sub rbx,8
  2313 0000060D 4883C101                	add rcx,1
  2314 00000611 EBE7                    	jmp .L_tc_recycle_frame_loop_08c7
  2315                                  	.L_tc_recycle_frame_done_08c7:
  2316 00000613 4883C308                	add rbx,8
  2317 00000617 4889DC                  	mov rsp,rbx
  2318 0000061A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2319 0000061E C9                      	leave
  2320 0000061F C21800                  	ret AND_KILL_FRAME(1)
  2321                                  .L_lambda_simple_end_06f4:	; new closure is in rax
  2322 00000622 48890425[13110000]      	mov qword [free_var_41], rax
  2323 0000062A 48B8-                   	mov rax, sob_void
  2323 0000062C [0000000000000000] 
  2324                                  
  2325 00000634 4889C7                  	mov rdi, rax
  2326 00000637 E849710100              	call print_sexpr_if_not_void
  2327 0000063C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2328 00000641 E8EA6E0100              	call malloc
  2329 00000646 50                      	push rax
  2330 00000647 BF00000000              	mov rdi, 8 * 0	; new rib
  2331 0000064C E8DF6E0100              	call malloc
  2332 00000651 50                      	push rax
  2333 00000652 BF08000000              	mov rdi, 8 * 1	; extended env
  2334 00000657 E8D46E0100              	call malloc
  2335 0000065C 488B7D10                	mov rdi, ENV
  2336 00000660 BE00000000              	mov rsi, 0
  2337 00000665 BA01000000              	mov rdx, 1
  2338                                  .L_lambda_simple_env_loop_06f5:	; ext_env[i + 1] <-- env[i]
  2339 0000066A 4883FE00                	cmp rsi, 0
  2340 0000066E 7410                    	je .L_lambda_simple_env_end_06f5
  2341 00000670 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2342 00000674 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2343 00000678 48FFC6                  	inc rsi
  2344 0000067B 48FFC2                  	inc rdx
  2345 0000067E EBEA                    	jmp .L_lambda_simple_env_loop_06f5
  2346                                  .L_lambda_simple_env_end_06f5:
  2347 00000680 5B                      	pop rbx
  2348 00000681 BE00000000              	mov rsi, 0
  2349                                  .L_lambda_simple_params_loop_06f5:	; copy params
  2350 00000686 4883FE00                	cmp rsi, 0
  2351 0000068A 740E                    	je .L_lambda_simple_params_end_06f5
  2352 0000068C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2353 00000691 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2354 00000695 48FFC6                  	inc rsi
  2355 00000698 EBEC                    	jmp .L_lambda_simple_params_loop_06f5
  2356                                  .L_lambda_simple_params_end_06f5:
  2357 0000069A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2358 0000069D 4889C3                  	mov rbx, rax
  2359 000006A0 58                      	pop rax
  2360 000006A1 C60004                  	mov byte [rax], T_closure
  2361 000006A4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2362 000006A8 48C74009[B5060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f5
  2363 000006B0 E9B6000000              	jmp .L_lambda_simple_end_06f5
  2364                                  .L_lambda_simple_code_06f5:	; lambda-simple body
  2365 000006B5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2366 000006BB 740B                    	je .L_lambda_simple_arity_check_ok_07d0
  2367 000006BD FF742410                	push qword [rsp + 8 * 2]
  2368 000006C1 6A01                    	push 1
  2369 000006C3 E9216E0100              	jmp L_error_incorrect_arity_simple
  2370                                  .L_lambda_simple_arity_check_ok_07d0:
  2371 000006C8 C8000000                	enter 0, 0
  2372                                  	; preparing a tail-call
  2373                                  	; preparing a non-tail-call
  2374 000006CC 488B4520                	mov rax, PARAM(0)	; param x
  2375 000006D0 50                      	push rax
  2376 000006D1 6A01                    	push 1	; arg count
  2377 000006D3 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  2378 000006DB 803805                  	cmp byte [rax], T_undefined
  2379 000006DE 0F841F6D0100            	je L_error_fvar_undefined
  2380 000006E4 803804                  	cmp byte [rax], T_closure
  2381 000006E7 0F859A6D0100            	jne L_error_non_closure
  2382 000006ED FF7001                  	push SOB_CLOSURE_ENV(rax)
  2383 000006F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2384 000006F3 50                      	push rax
  2385 000006F4 6A01                    	push 1	; arg count
  2386 000006F6 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2387 000006FE 803805                  	cmp byte [rax], T_undefined
  2388 00000701 0F84FC6C0100            	je L_error_fvar_undefined
  2389 00000707 803804                  	cmp byte [rax], T_closure
  2390 0000070A 0F85776D0100            	jne L_error_non_closure
  2391 00000710 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2392 00000713 FF7508                  	push qword [rbp + 8 *1]
  2393 00000716 4989C0                  	mov r8, rax
  2394 00000719 488B5D18                	mov rbx, COUNT
  2395 0000071D 4883C303                	add rbx,3
  2396 00000721 48C1E303                	shl rbx,3
  2397 00000725 4801EB                  	add rbx, rbp
  2398 00000728 488B6D00                	mov rbp, [rbp]
  2399 0000072C B900000000              	mov rcx,0
  2400 00000731 BA04000000              	mov rdx, 4
  2401 00000736 4889D0                  	mov rax, rdx
  2402 00000739 48FFC8                  	dec rax
  2403 0000073C 48C1E003                	shl rax,3
  2404 00000740 4801E0                  	add rax, rsp
  2405                                  	.L_tc_recycle_frame_loop_08c8:
  2406 00000743 4839D1                  	cmp rcx, rdx
  2407 00000746 7414                    	je .L_tc_recycle_frame_done_08c8
  2408 00000748 4C8B08                  	mov r9, qword [rax]
  2409 0000074B 4C890B                  	mov qword [rbx],r9
  2410 0000074E 4883E808                	sub rax,8
  2411 00000752 4883EB08                	sub rbx,8
  2412 00000756 4883C101                	add rcx,1
  2413 0000075A EBE7                    	jmp .L_tc_recycle_frame_loop_08c8
  2414                                  	.L_tc_recycle_frame_done_08c8:
  2415 0000075C 4883C308                	add rbx,8
  2416 00000760 4889DC                  	mov rsp,rbx
  2417 00000763 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2418 00000767 C9                      	leave
  2419 00000768 C21800                  	ret AND_KILL_FRAME(1)
  2420                                  .L_lambda_simple_end_06f5:	; new closure is in rax
  2421 0000076B 48890425[8A110000]      	mov qword [free_var_48], rax
  2422 00000773 48B8-                   	mov rax, sob_void
  2422 00000775 [0000000000000000] 
  2423                                  
  2424 0000077D 4889C7                  	mov rdi, rax
  2425 00000780 E800700100              	call print_sexpr_if_not_void
  2426 00000785 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2427 0000078A E8A16D0100              	call malloc
  2428 0000078F 50                      	push rax
  2429 00000790 BF00000000              	mov rdi, 8 * 0	; new rib
  2430 00000795 E8966D0100              	call malloc
  2431 0000079A 50                      	push rax
  2432 0000079B BF08000000              	mov rdi, 8 * 1	; extended env
  2433 000007A0 E88B6D0100              	call malloc
  2434 000007A5 488B7D10                	mov rdi, ENV
  2435 000007A9 BE00000000              	mov rsi, 0
  2436 000007AE BA01000000              	mov rdx, 1
  2437                                  .L_lambda_simple_env_loop_06f6:	; ext_env[i + 1] <-- env[i]
  2438 000007B3 4883FE00                	cmp rsi, 0
  2439 000007B7 7410                    	je .L_lambda_simple_env_end_06f6
  2440 000007B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2441 000007BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2442 000007C1 48FFC6                  	inc rsi
  2443 000007C4 48FFC2                  	inc rdx
  2444 000007C7 EBEA                    	jmp .L_lambda_simple_env_loop_06f6
  2445                                  .L_lambda_simple_env_end_06f6:
  2446 000007C9 5B                      	pop rbx
  2447 000007CA BE00000000              	mov rsi, 0
  2448                                  .L_lambda_simple_params_loop_06f6:	; copy params
  2449 000007CF 4883FE00                	cmp rsi, 0
  2450 000007D3 740E                    	je .L_lambda_simple_params_end_06f6
  2451 000007D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2452 000007DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2453 000007DE 48FFC6                  	inc rsi
  2454 000007E1 EBEC                    	jmp .L_lambda_simple_params_loop_06f6
  2455                                  .L_lambda_simple_params_end_06f6:
  2456 000007E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2457 000007E6 4889C3                  	mov rbx, rax
  2458 000007E9 58                      	pop rax
  2459 000007EA C60004                  	mov byte [rax], T_closure
  2460 000007ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2461 000007F1 48C74009[FE070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f6
  2462 000007F9 E9B6000000              	jmp .L_lambda_simple_end_06f6
  2463                                  .L_lambda_simple_code_06f6:	; lambda-simple body
  2464 000007FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2465 00000804 740B                    	je .L_lambda_simple_arity_check_ok_07d1
  2466 00000806 FF742410                	push qword [rsp + 8 * 2]
  2467 0000080A 6A01                    	push 1
  2468 0000080C E9D86C0100              	jmp L_error_incorrect_arity_simple
  2469                                  .L_lambda_simple_arity_check_ok_07d1:
  2470 00000811 C8000000                	enter 0, 0
  2471                                  	; preparing a tail-call
  2472                                  	; preparing a non-tail-call
  2473 00000815 488B4520                	mov rax, PARAM(0)	; param x
  2474 00000819 50                      	push rax
  2475 0000081A 6A01                    	push 1	; arg count
  2476 0000081C 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2477 00000824 803805                  	cmp byte [rax], T_undefined
  2478 00000827 0F84D66B0100            	je L_error_fvar_undefined
  2479 0000082D 803804                  	cmp byte [rax], T_closure
  2480 00000830 0F85516C0100            	jne L_error_non_closure
  2481 00000836 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2482 00000839 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2483 0000083C 50                      	push rax
  2484 0000083D 6A01                    	push 1	; arg count
  2485 0000083F 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  2486 00000847 803805                  	cmp byte [rax], T_undefined
  2487 0000084A 0F84B36B0100            	je L_error_fvar_undefined
  2488 00000850 803804                  	cmp byte [rax], T_closure
  2489 00000853 0F852E6C0100            	jne L_error_non_closure
  2490 00000859 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2491 0000085C FF7508                  	push qword [rbp + 8 *1]
  2492 0000085F 4989C0                  	mov r8, rax
  2493 00000862 488B5D18                	mov rbx, COUNT
  2494 00000866 4883C303                	add rbx,3
  2495 0000086A 48C1E303                	shl rbx,3
  2496 0000086E 4801EB                  	add rbx, rbp
  2497 00000871 488B6D00                	mov rbp, [rbp]
  2498 00000875 B900000000              	mov rcx,0
  2499 0000087A BA04000000              	mov rdx, 4
  2500 0000087F 4889D0                  	mov rax, rdx
  2501 00000882 48FFC8                  	dec rax
  2502 00000885 48C1E003                	shl rax,3
  2503 00000889 4801E0                  	add rax, rsp
  2504                                  	.L_tc_recycle_frame_loop_08c9:
  2505 0000088C 4839D1                  	cmp rcx, rdx
  2506 0000088F 7414                    	je .L_tc_recycle_frame_done_08c9
  2507 00000891 4C8B08                  	mov r9, qword [rax]
  2508 00000894 4C890B                  	mov qword [rbx],r9
  2509 00000897 4883E808                	sub rax,8
  2510 0000089B 4883EB08                	sub rbx,8
  2511 0000089F 4883C101                	add rcx,1
  2512 000008A3 EBE7                    	jmp .L_tc_recycle_frame_loop_08c9
  2513                                  	.L_tc_recycle_frame_done_08c9:
  2514 000008A5 4883C308                	add rbx,8
  2515 000008A9 4889DC                  	mov rsp,rbx
  2516 000008AC 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2517 000008B0 C9                      	leave
  2518 000008B1 C21800                  	ret AND_KILL_FRAME(1)
  2519                                  .L_lambda_simple_end_06f6:	; new closure is in rax
  2520 000008B4 48890425[12120000]      	mov qword [free_var_56], rax
  2521 000008BC 48B8-                   	mov rax, sob_void
  2521 000008BE [0000000000000000] 
  2522                                  
  2523 000008C6 4889C7                  	mov rdi, rax
  2524 000008C9 E8B76E0100              	call print_sexpr_if_not_void
  2525 000008CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2526 000008D3 E8586C0100              	call malloc
  2527 000008D8 50                      	push rax
  2528 000008D9 BF00000000              	mov rdi, 8 * 0	; new rib
  2529 000008DE E84D6C0100              	call malloc
  2530 000008E3 50                      	push rax
  2531 000008E4 BF08000000              	mov rdi, 8 * 1	; extended env
  2532 000008E9 E8426C0100              	call malloc
  2533 000008EE 488B7D10                	mov rdi, ENV
  2534 000008F2 BE00000000              	mov rsi, 0
  2535 000008F7 BA01000000              	mov rdx, 1
  2536                                  .L_lambda_simple_env_loop_06f7:	; ext_env[i + 1] <-- env[i]
  2537 000008FC 4883FE00                	cmp rsi, 0
  2538 00000900 7410                    	je .L_lambda_simple_env_end_06f7
  2539 00000902 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2540 00000906 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2541 0000090A 48FFC6                  	inc rsi
  2542 0000090D 48FFC2                  	inc rdx
  2543 00000910 EBEA                    	jmp .L_lambda_simple_env_loop_06f7
  2544                                  .L_lambda_simple_env_end_06f7:
  2545 00000912 5B                      	pop rbx
  2546 00000913 BE00000000              	mov rsi, 0
  2547                                  .L_lambda_simple_params_loop_06f7:	; copy params
  2548 00000918 4883FE00                	cmp rsi, 0
  2549 0000091C 740E                    	je .L_lambda_simple_params_end_06f7
  2550 0000091E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2551 00000923 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2552 00000927 48FFC6                  	inc rsi
  2553 0000092A EBEC                    	jmp .L_lambda_simple_params_loop_06f7
  2554                                  .L_lambda_simple_params_end_06f7:
  2555 0000092C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2556 0000092F 4889C3                  	mov rbx, rax
  2557 00000932 58                      	pop rax
  2558 00000933 C60004                  	mov byte [rax], T_closure
  2559 00000936 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2560 0000093A 48C74009[47090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f7
  2561 00000942 E9B6000000              	jmp .L_lambda_simple_end_06f7
  2562                                  .L_lambda_simple_code_06f7:	; lambda-simple body
  2563 00000947 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2564 0000094D 740B                    	je .L_lambda_simple_arity_check_ok_07d2
  2565 0000094F FF742410                	push qword [rsp + 8 * 2]
  2566 00000953 6A01                    	push 1
  2567 00000955 E98F6B0100              	jmp L_error_incorrect_arity_simple
  2568                                  .L_lambda_simple_arity_check_ok_07d2:
  2569 0000095A C8000000                	enter 0, 0
  2570                                  	; preparing a tail-call
  2571                                  	; preparing a non-tail-call
  2572 0000095E 488B4520                	mov rax, PARAM(0)	; param x
  2573 00000962 50                      	push rax
  2574 00000963 6A01                    	push 1	; arg count
  2575 00000965 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  2576 0000096D 803805                  	cmp byte [rax], T_undefined
  2577 00000970 0F848D6A0100            	je L_error_fvar_undefined
  2578 00000976 803804                  	cmp byte [rax], T_closure
  2579 00000979 0F85086B0100            	jne L_error_non_closure
  2580 0000097F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2581 00000982 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2582 00000985 50                      	push rax
  2583 00000986 6A01                    	push 1	; arg count
  2584 00000988 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  2585 00000990 803805                  	cmp byte [rax], T_undefined
  2586 00000993 0F846A6A0100            	je L_error_fvar_undefined
  2587 00000999 803804                  	cmp byte [rax], T_closure
  2588 0000099C 0F85E56A0100            	jne L_error_non_closure
  2589 000009A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2590 000009A5 FF7508                  	push qword [rbp + 8 *1]
  2591 000009A8 4989C0                  	mov r8, rax
  2592 000009AB 488B5D18                	mov rbx, COUNT
  2593 000009AF 4883C303                	add rbx,3
  2594 000009B3 48C1E303                	shl rbx,3
  2595 000009B7 4801EB                  	add rbx, rbp
  2596 000009BA 488B6D00                	mov rbp, [rbp]
  2597 000009BE B900000000              	mov rcx,0
  2598 000009C3 BA04000000              	mov rdx, 4
  2599 000009C8 4889D0                  	mov rax, rdx
  2600 000009CB 48FFC8                  	dec rax
  2601 000009CE 48C1E003                	shl rax,3
  2602 000009D2 4801E0                  	add rax, rsp
  2603                                  	.L_tc_recycle_frame_loop_08ca:
  2604 000009D5 4839D1                  	cmp rcx, rdx
  2605 000009D8 7414                    	je .L_tc_recycle_frame_done_08ca
  2606 000009DA 4C8B08                  	mov r9, qword [rax]
  2607 000009DD 4C890B                  	mov qword [rbx],r9
  2608 000009E0 4883E808                	sub rax,8
  2609 000009E4 4883EB08                	sub rbx,8
  2610 000009E8 4883C101                	add rcx,1
  2611 000009EC EBE7                    	jmp .L_tc_recycle_frame_loop_08ca
  2612                                  	.L_tc_recycle_frame_done_08ca:
  2613 000009EE 4883C308                	add rbx,8
  2614 000009F2 4889DC                  	mov rsp,rbx
  2615 000009F5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2616 000009F9 C9                      	leave
  2617 000009FA C21800                  	ret AND_KILL_FRAME(1)
  2618                                  .L_lambda_simple_end_06f7:	; new closure is in rax
  2619 000009FD 48890425[89120000]      	mov qword [free_var_63], rax
  2620 00000A05 48B8-                   	mov rax, sob_void
  2620 00000A07 [0000000000000000] 
  2621                                  
  2622 00000A0F 4889C7                  	mov rdi, rax
  2623 00000A12 E86E6D0100              	call print_sexpr_if_not_void
  2624 00000A17 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2625 00000A1C E80F6B0100              	call malloc
  2626 00000A21 50                      	push rax
  2627 00000A22 BF00000000              	mov rdi, 8 * 0	; new rib
  2628 00000A27 E8046B0100              	call malloc
  2629 00000A2C 50                      	push rax
  2630 00000A2D BF08000000              	mov rdi, 8 * 1	; extended env
  2631 00000A32 E8F96A0100              	call malloc
  2632 00000A37 488B7D10                	mov rdi, ENV
  2633 00000A3B BE00000000              	mov rsi, 0
  2634 00000A40 BA01000000              	mov rdx, 1
  2635                                  .L_lambda_simple_env_loop_06f8:	; ext_env[i + 1] <-- env[i]
  2636 00000A45 4883FE00                	cmp rsi, 0
  2637 00000A49 7410                    	je .L_lambda_simple_env_end_06f8
  2638 00000A4B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2639 00000A4F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2640 00000A53 48FFC6                  	inc rsi
  2641 00000A56 48FFC2                  	inc rdx
  2642 00000A59 EBEA                    	jmp .L_lambda_simple_env_loop_06f8
  2643                                  .L_lambda_simple_env_end_06f8:
  2644 00000A5B 5B                      	pop rbx
  2645 00000A5C BE00000000              	mov rsi, 0
  2646                                  .L_lambda_simple_params_loop_06f8:	; copy params
  2647 00000A61 4883FE00                	cmp rsi, 0
  2648 00000A65 740E                    	je .L_lambda_simple_params_end_06f8
  2649 00000A67 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2650 00000A6C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2651 00000A70 48FFC6                  	inc rsi
  2652 00000A73 EBEC                    	jmp .L_lambda_simple_params_loop_06f8
  2653                                  .L_lambda_simple_params_end_06f8:
  2654 00000A75 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2655 00000A78 4889C3                  	mov rbx, rax
  2656 00000A7B 58                      	pop rax
  2657 00000A7C C60004                  	mov byte [rax], T_closure
  2658 00000A7F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2659 00000A83 48C74009[900A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f8
  2660 00000A8B E9B6000000              	jmp .L_lambda_simple_end_06f8
  2661                                  .L_lambda_simple_code_06f8:	; lambda-simple body
  2662 00000A90 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2663 00000A96 740B                    	je .L_lambda_simple_arity_check_ok_07d3
  2664 00000A98 FF742410                	push qword [rsp + 8 * 2]
  2665 00000A9C 6A01                    	push 1
  2666 00000A9E E9466A0100              	jmp L_error_incorrect_arity_simple
  2667                                  .L_lambda_simple_arity_check_ok_07d3:
  2668 00000AA3 C8000000                	enter 0, 0
  2669                                  	; preparing a tail-call
  2670                                  	; preparing a non-tail-call
  2671 00000AA7 488B4520                	mov rax, PARAM(0)	; param x
  2672 00000AAB 50                      	push rax
  2673 00000AAC 6A01                    	push 1	; arg count
  2674 00000AAE 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  2675 00000AB6 803805                  	cmp byte [rax], T_undefined
  2676 00000AB9 0F8444690100            	je L_error_fvar_undefined
  2677 00000ABF 803804                  	cmp byte [rax], T_closure
  2678 00000AC2 0F85BF690100            	jne L_error_non_closure
  2679 00000AC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2680 00000ACB FF5009                  	call SOB_CLOSURE_CODE(rax)
  2681 00000ACE 50                      	push rax
  2682 00000ACF 6A01                    	push 1	; arg count
  2683 00000AD1 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2684 00000AD9 803805                  	cmp byte [rax], T_undefined
  2685 00000ADC 0F8421690100            	je L_error_fvar_undefined
  2686 00000AE2 803804                  	cmp byte [rax], T_closure
  2687 00000AE5 0F859C690100            	jne L_error_non_closure
  2688 00000AEB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2689 00000AEE FF7508                  	push qword [rbp + 8 *1]
  2690 00000AF1 4989C0                  	mov r8, rax
  2691 00000AF4 488B5D18                	mov rbx, COUNT
  2692 00000AF8 4883C303                	add rbx,3
  2693 00000AFC 48C1E303                	shl rbx,3
  2694 00000B00 4801EB                  	add rbx, rbp
  2695 00000B03 488B6D00                	mov rbp, [rbp]
  2696 00000B07 B900000000              	mov rcx,0
  2697 00000B0C BA04000000              	mov rdx, 4
  2698 00000B11 4889D0                  	mov rax, rdx
  2699 00000B14 48FFC8                  	dec rax
  2700 00000B17 48C1E003                	shl rax,3
  2701 00000B1B 4801E0                  	add rax, rsp
  2702                                  	.L_tc_recycle_frame_loop_08cb:
  2703 00000B1E 4839D1                  	cmp rcx, rdx
  2704 00000B21 7414                    	je .L_tc_recycle_frame_done_08cb
  2705 00000B23 4C8B08                  	mov r9, qword [rax]
  2706 00000B26 4C890B                  	mov qword [rbx],r9
  2707 00000B29 4883E808                	sub rax,8
  2708 00000B2D 4883EB08                	sub rbx,8
  2709 00000B31 4883C101                	add rcx,1
  2710 00000B35 EBE7                    	jmp .L_tc_recycle_frame_loop_08cb
  2711                                  	.L_tc_recycle_frame_done_08cb:
  2712 00000B37 4883C308                	add rbx,8
  2713 00000B3B 4889DC                  	mov rsp,rbx
  2714 00000B3E 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2715 00000B42 C9                      	leave
  2716 00000B43 C21800                  	ret AND_KILL_FRAME(1)
  2717                                  .L_lambda_simple_end_06f8:	; new closure is in rax
  2718 00000B46 48890425[CF100000]      	mov qword [free_var_37], rax
  2719 00000B4E 48B8-                   	mov rax, sob_void
  2719 00000B50 [0000000000000000] 
  2720                                  
  2721 00000B58 4889C7                  	mov rdi, rax
  2722 00000B5B E8256C0100              	call print_sexpr_if_not_void
  2723 00000B60 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2724 00000B65 E8C6690100              	call malloc
  2725 00000B6A 50                      	push rax
  2726 00000B6B BF00000000              	mov rdi, 8 * 0	; new rib
  2727 00000B70 E8BB690100              	call malloc
  2728 00000B75 50                      	push rax
  2729 00000B76 BF08000000              	mov rdi, 8 * 1	; extended env
  2730 00000B7B E8B0690100              	call malloc
  2731 00000B80 488B7D10                	mov rdi, ENV
  2732 00000B84 BE00000000              	mov rsi, 0
  2733 00000B89 BA01000000              	mov rdx, 1
  2734                                  .L_lambda_simple_env_loop_06f9:	; ext_env[i + 1] <-- env[i]
  2735 00000B8E 4883FE00                	cmp rsi, 0
  2736 00000B92 7410                    	je .L_lambda_simple_env_end_06f9
  2737 00000B94 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2738 00000B98 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2739 00000B9C 48FFC6                  	inc rsi
  2740 00000B9F 48FFC2                  	inc rdx
  2741 00000BA2 EBEA                    	jmp .L_lambda_simple_env_loop_06f9
  2742                                  .L_lambda_simple_env_end_06f9:
  2743 00000BA4 5B                      	pop rbx
  2744 00000BA5 BE00000000              	mov rsi, 0
  2745                                  .L_lambda_simple_params_loop_06f9:	; copy params
  2746 00000BAA 4883FE00                	cmp rsi, 0
  2747 00000BAE 740E                    	je .L_lambda_simple_params_end_06f9
  2748 00000BB0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2749 00000BB5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2750 00000BB9 48FFC6                  	inc rsi
  2751 00000BBC EBEC                    	jmp .L_lambda_simple_params_loop_06f9
  2752                                  .L_lambda_simple_params_end_06f9:
  2753 00000BBE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2754 00000BC1 4889C3                  	mov rbx, rax
  2755 00000BC4 58                      	pop rax
  2756 00000BC5 C60004                  	mov byte [rax], T_closure
  2757 00000BC8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2758 00000BCC 48C74009[D90B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06f9
  2759 00000BD4 E9B6000000              	jmp .L_lambda_simple_end_06f9
  2760                                  .L_lambda_simple_code_06f9:	; lambda-simple body
  2761 00000BD9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2762 00000BDF 740B                    	je .L_lambda_simple_arity_check_ok_07d4
  2763 00000BE1 FF742410                	push qword [rsp + 8 * 2]
  2764 00000BE5 6A01                    	push 1
  2765 00000BE7 E9FD680100              	jmp L_error_incorrect_arity_simple
  2766                                  .L_lambda_simple_arity_check_ok_07d4:
  2767 00000BEC C8000000                	enter 0, 0
  2768                                  	; preparing a tail-call
  2769                                  	; preparing a non-tail-call
  2770 00000BF0 488B4520                	mov rax, PARAM(0)	; param x
  2771 00000BF4 50                      	push rax
  2772 00000BF5 6A01                    	push 1	; arg count
  2773 00000BF7 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  2774 00000BFF 803805                  	cmp byte [rax], T_undefined
  2775 00000C02 0F84FB670100            	je L_error_fvar_undefined
  2776 00000C08 803804                  	cmp byte [rax], T_closure
  2777 00000C0B 0F8576680100            	jne L_error_non_closure
  2778 00000C11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2779 00000C14 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2780 00000C17 50                      	push rax
  2781 00000C18 6A01                    	push 1	; arg count
  2782 00000C1A 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2783 00000C22 803805                  	cmp byte [rax], T_undefined
  2784 00000C25 0F84D8670100            	je L_error_fvar_undefined
  2785 00000C2B 803804                  	cmp byte [rax], T_closure
  2786 00000C2E 0F8553680100            	jne L_error_non_closure
  2787 00000C34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2788 00000C37 FF7508                  	push qword [rbp + 8 *1]
  2789 00000C3A 4989C0                  	mov r8, rax
  2790 00000C3D 488B5D18                	mov rbx, COUNT
  2791 00000C41 4883C303                	add rbx,3
  2792 00000C45 48C1E303                	shl rbx,3
  2793 00000C49 4801EB                  	add rbx, rbp
  2794 00000C4C 488B6D00                	mov rbp, [rbp]
  2795 00000C50 B900000000              	mov rcx,0
  2796 00000C55 BA04000000              	mov rdx, 4
  2797 00000C5A 4889D0                  	mov rax, rdx
  2798 00000C5D 48FFC8                  	dec rax
  2799 00000C60 48C1E003                	shl rax,3
  2800 00000C64 4801E0                  	add rax, rsp
  2801                                  	.L_tc_recycle_frame_loop_08cc:
  2802 00000C67 4839D1                  	cmp rcx, rdx
  2803 00000C6A 7414                    	je .L_tc_recycle_frame_done_08cc
  2804 00000C6C 4C8B08                  	mov r9, qword [rax]
  2805 00000C6F 4C890B                  	mov qword [rbx],r9
  2806 00000C72 4883E808                	sub rax,8
  2807 00000C76 4883EB08                	sub rbx,8
  2808 00000C7A 4883C101                	add rcx,1
  2809 00000C7E EBE7                    	jmp .L_tc_recycle_frame_loop_08cc
  2810                                  	.L_tc_recycle_frame_done_08cc:
  2811 00000C80 4883C308                	add rbx,8
  2812 00000C84 4889DC                  	mov rsp,rbx
  2813 00000C87 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2814 00000C8B C9                      	leave
  2815 00000C8C C21800                  	ret AND_KILL_FRAME(1)
  2816                                  .L_lambda_simple_end_06f9:	; new closure is in rax
  2817 00000C8F 48890425[02110000]      	mov qword [free_var_40], rax
  2818 00000C97 48B8-                   	mov rax, sob_void
  2818 00000C99 [0000000000000000] 
  2819                                  
  2820 00000CA1 4889C7                  	mov rdi, rax
  2821 00000CA4 E8DC6A0100              	call print_sexpr_if_not_void
  2822 00000CA9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2823 00000CAE E87D680100              	call malloc
  2824 00000CB3 50                      	push rax
  2825 00000CB4 BF00000000              	mov rdi, 8 * 0	; new rib
  2826 00000CB9 E872680100              	call malloc
  2827 00000CBE 50                      	push rax
  2828 00000CBF BF08000000              	mov rdi, 8 * 1	; extended env
  2829 00000CC4 E867680100              	call malloc
  2830 00000CC9 488B7D10                	mov rdi, ENV
  2831 00000CCD BE00000000              	mov rsi, 0
  2832 00000CD2 BA01000000              	mov rdx, 1
  2833                                  .L_lambda_simple_env_loop_06fa:	; ext_env[i + 1] <-- env[i]
  2834 00000CD7 4883FE00                	cmp rsi, 0
  2835 00000CDB 7410                    	je .L_lambda_simple_env_end_06fa
  2836 00000CDD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2837 00000CE1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2838 00000CE5 48FFC6                  	inc rsi
  2839 00000CE8 48FFC2                  	inc rdx
  2840 00000CEB EBEA                    	jmp .L_lambda_simple_env_loop_06fa
  2841                                  .L_lambda_simple_env_end_06fa:
  2842 00000CED 5B                      	pop rbx
  2843 00000CEE BE00000000              	mov rsi, 0
  2844                                  .L_lambda_simple_params_loop_06fa:	; copy params
  2845 00000CF3 4883FE00                	cmp rsi, 0
  2846 00000CF7 740E                    	je .L_lambda_simple_params_end_06fa
  2847 00000CF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2848 00000CFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2849 00000D02 48FFC6                  	inc rsi
  2850 00000D05 EBEC                    	jmp .L_lambda_simple_params_loop_06fa
  2851                                  .L_lambda_simple_params_end_06fa:
  2852 00000D07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2853 00000D0A 4889C3                  	mov rbx, rax
  2854 00000D0D 58                      	pop rax
  2855 00000D0E C60004                  	mov byte [rax], T_closure
  2856 00000D11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2857 00000D15 48C74009[220D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06fa
  2858 00000D1D E9B6000000              	jmp .L_lambda_simple_end_06fa
  2859                                  .L_lambda_simple_code_06fa:	; lambda-simple body
  2860 00000D22 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2861 00000D28 740B                    	je .L_lambda_simple_arity_check_ok_07d5
  2862 00000D2A FF742410                	push qword [rsp + 8 * 2]
  2863 00000D2E 6A01                    	push 1
  2864 00000D30 E9B4670100              	jmp L_error_incorrect_arity_simple
  2865                                  .L_lambda_simple_arity_check_ok_07d5:
  2866 00000D35 C8000000                	enter 0, 0
  2867                                  	; preparing a tail-call
  2868                                  	; preparing a non-tail-call
  2869 00000D39 488B4520                	mov rax, PARAM(0)	; param x
  2870 00000D3D 50                      	push rax
  2871 00000D3E 6A01                    	push 1	; arg count
  2872 00000D40 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  2873 00000D48 803805                  	cmp byte [rax], T_undefined
  2874 00000D4B 0F84B2660100            	je L_error_fvar_undefined
  2875 00000D51 803804                  	cmp byte [rax], T_closure
  2876 00000D54 0F852D670100            	jne L_error_non_closure
  2877 00000D5A FF7001                  	push SOB_CLOSURE_ENV(rax)
  2878 00000D5D FF5009                  	call SOB_CLOSURE_CODE(rax)
  2879 00000D60 50                      	push rax
  2880 00000D61 6A01                    	push 1	; arg count
  2881 00000D63 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2882 00000D6B 803805                  	cmp byte [rax], T_undefined
  2883 00000D6E 0F848F660100            	je L_error_fvar_undefined
  2884 00000D74 803804                  	cmp byte [rax], T_closure
  2885 00000D77 0F850A670100            	jne L_error_non_closure
  2886 00000D7D FF7001                  	push SOB_CLOSURE_ENV(rax)
  2887 00000D80 FF7508                  	push qword [rbp + 8 *1]
  2888 00000D83 4989C0                  	mov r8, rax
  2889 00000D86 488B5D18                	mov rbx, COUNT
  2890 00000D8A 4883C303                	add rbx,3
  2891 00000D8E 48C1E303                	shl rbx,3
  2892 00000D92 4801EB                  	add rbx, rbp
  2893 00000D95 488B6D00                	mov rbp, [rbp]
  2894 00000D99 B900000000              	mov rcx,0
  2895 00000D9E BA04000000              	mov rdx, 4
  2896 00000DA3 4889D0                  	mov rax, rdx
  2897 00000DA6 48FFC8                  	dec rax
  2898 00000DA9 48C1E003                	shl rax,3
  2899 00000DAD 4801E0                  	add rax, rsp
  2900                                  	.L_tc_recycle_frame_loop_08cd:
  2901 00000DB0 4839D1                  	cmp rcx, rdx
  2902 00000DB3 7414                    	je .L_tc_recycle_frame_done_08cd
  2903 00000DB5 4C8B08                  	mov r9, qword [rax]
  2904 00000DB8 4C890B                  	mov qword [rbx],r9
  2905 00000DBB 4883E808                	sub rax,8
  2906 00000DBF 4883EB08                	sub rbx,8
  2907 00000DC3 4883C101                	add rcx,1
  2908 00000DC7 EBE7                    	jmp .L_tc_recycle_frame_loop_08cd
  2909                                  	.L_tc_recycle_frame_done_08cd:
  2910 00000DC9 4883C308                	add rbx,8
  2911 00000DCD 4889DC                  	mov rsp,rbx
  2912 00000DD0 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  2913 00000DD4 C9                      	leave
  2914 00000DD5 C21800                  	ret AND_KILL_FRAME(1)
  2915                                  .L_lambda_simple_end_06fa:	; new closure is in rax
  2916 00000DD8 48890425[46110000]      	mov qword [free_var_44], rax
  2917 00000DE0 48B8-                   	mov rax, sob_void
  2917 00000DE2 [0000000000000000] 
  2918                                  
  2919 00000DEA 4889C7                  	mov rdi, rax
  2920 00000DED E893690100              	call print_sexpr_if_not_void
  2921 00000DF2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2922 00000DF7 E834670100              	call malloc
  2923 00000DFC 50                      	push rax
  2924 00000DFD BF00000000              	mov rdi, 8 * 0	; new rib
  2925 00000E02 E829670100              	call malloc
  2926 00000E07 50                      	push rax
  2927 00000E08 BF08000000              	mov rdi, 8 * 1	; extended env
  2928 00000E0D E81E670100              	call malloc
  2929 00000E12 488B7D10                	mov rdi, ENV
  2930 00000E16 BE00000000              	mov rsi, 0
  2931 00000E1B BA01000000              	mov rdx, 1
  2932                                  .L_lambda_simple_env_loop_06fb:	; ext_env[i + 1] <-- env[i]
  2933 00000E20 4883FE00                	cmp rsi, 0
  2934 00000E24 7410                    	je .L_lambda_simple_env_end_06fb
  2935 00000E26 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2936 00000E2A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2937 00000E2E 48FFC6                  	inc rsi
  2938 00000E31 48FFC2                  	inc rdx
  2939 00000E34 EBEA                    	jmp .L_lambda_simple_env_loop_06fb
  2940                                  .L_lambda_simple_env_end_06fb:
  2941 00000E36 5B                      	pop rbx
  2942 00000E37 BE00000000              	mov rsi, 0
  2943                                  .L_lambda_simple_params_loop_06fb:	; copy params
  2944 00000E3C 4883FE00                	cmp rsi, 0
  2945 00000E40 740E                    	je .L_lambda_simple_params_end_06fb
  2946 00000E42 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2947 00000E47 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2948 00000E4B 48FFC6                  	inc rsi
  2949 00000E4E EBEC                    	jmp .L_lambda_simple_params_loop_06fb
  2950                                  .L_lambda_simple_params_end_06fb:
  2951 00000E50 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2952 00000E53 4889C3                  	mov rbx, rax
  2953 00000E56 58                      	pop rax
  2954 00000E57 C60004                  	mov byte [rax], T_closure
  2955 00000E5A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2956 00000E5E 48C74009[6B0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06fb
  2957 00000E66 E9B6000000              	jmp .L_lambda_simple_end_06fb
  2958                                  .L_lambda_simple_code_06fb:	; lambda-simple body
  2959 00000E6B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2960 00000E71 740B                    	je .L_lambda_simple_arity_check_ok_07d6
  2961 00000E73 FF742410                	push qword [rsp + 8 * 2]
  2962 00000E77 6A01                    	push 1
  2963 00000E79 E96B660100              	jmp L_error_incorrect_arity_simple
  2964                                  .L_lambda_simple_arity_check_ok_07d6:
  2965 00000E7E C8000000                	enter 0, 0
  2966                                  	; preparing a tail-call
  2967                                  	; preparing a non-tail-call
  2968 00000E82 488B4520                	mov rax, PARAM(0)	; param x
  2969 00000E86 50                      	push rax
  2970 00000E87 6A01                    	push 1	; arg count
  2971 00000E89 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  2972 00000E91 803805                  	cmp byte [rax], T_undefined
  2973 00000E94 0F8469650100            	je L_error_fvar_undefined
  2974 00000E9A 803804                  	cmp byte [rax], T_closure
  2975 00000E9D 0F85E4650100            	jne L_error_non_closure
  2976 00000EA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2977 00000EA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2978 00000EA9 50                      	push rax
  2979 00000EAA 6A01                    	push 1	; arg count
  2980 00000EAC 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  2981 00000EB4 803805                  	cmp byte [rax], T_undefined
  2982 00000EB7 0F8446650100            	je L_error_fvar_undefined
  2983 00000EBD 803804                  	cmp byte [rax], T_closure
  2984 00000EC0 0F85C1650100            	jne L_error_non_closure
  2985 00000EC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2986 00000EC9 FF7508                  	push qword [rbp + 8 *1]
  2987 00000ECC 4989C0                  	mov r8, rax
  2988 00000ECF 488B5D18                	mov rbx, COUNT
  2989 00000ED3 4883C303                	add rbx,3
  2990 00000ED7 48C1E303                	shl rbx,3
  2991 00000EDB 4801EB                  	add rbx, rbp
  2992 00000EDE 488B6D00                	mov rbp, [rbp]
  2993 00000EE2 B900000000              	mov rcx,0
  2994 00000EE7 BA04000000              	mov rdx, 4
  2995 00000EEC 4889D0                  	mov rax, rdx
  2996 00000EEF 48FFC8                  	dec rax
  2997 00000EF2 48C1E003                	shl rax,3
  2998 00000EF6 4801E0                  	add rax, rsp
  2999                                  	.L_tc_recycle_frame_loop_08ce:
  3000 00000EF9 4839D1                  	cmp rcx, rdx
  3001 00000EFC 7414                    	je .L_tc_recycle_frame_done_08ce
  3002 00000EFE 4C8B08                  	mov r9, qword [rax]
  3003 00000F01 4C890B                  	mov qword [rbx],r9
  3004 00000F04 4883E808                	sub rax,8
  3005 00000F08 4883EB08                	sub rbx,8
  3006 00000F0C 4883C101                	add rcx,1
  3007 00000F10 EBE7                    	jmp .L_tc_recycle_frame_loop_08ce
  3008                                  	.L_tc_recycle_frame_done_08ce:
  3009 00000F12 4883C308                	add rbx,8
  3010 00000F16 4889DC                  	mov rsp,rbx
  3011 00000F19 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3012 00000F1D C9                      	leave
  3013 00000F1E C21800                  	ret AND_KILL_FRAME(1)
  3014                                  .L_lambda_simple_end_06fb:	; new closure is in rax
  3015 00000F21 48890425[79110000]      	mov qword [free_var_47], rax
  3016 00000F29 48B8-                   	mov rax, sob_void
  3016 00000F2B [0000000000000000] 
  3017                                  
  3018 00000F33 4889C7                  	mov rdi, rax
  3019 00000F36 E84A680100              	call print_sexpr_if_not_void
  3020 00000F3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3021 00000F40 E8EB650100              	call malloc
  3022 00000F45 50                      	push rax
  3023 00000F46 BF00000000              	mov rdi, 8 * 0	; new rib
  3024 00000F4B E8E0650100              	call malloc
  3025 00000F50 50                      	push rax
  3026 00000F51 BF08000000              	mov rdi, 8 * 1	; extended env
  3027 00000F56 E8D5650100              	call malloc
  3028 00000F5B 488B7D10                	mov rdi, ENV
  3029 00000F5F BE00000000              	mov rsi, 0
  3030 00000F64 BA01000000              	mov rdx, 1
  3031                                  .L_lambda_simple_env_loop_06fc:	; ext_env[i + 1] <-- env[i]
  3032 00000F69 4883FE00                	cmp rsi, 0
  3033 00000F6D 7410                    	je .L_lambda_simple_env_end_06fc
  3034 00000F6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3035 00000F73 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3036 00000F77 48FFC6                  	inc rsi
  3037 00000F7A 48FFC2                  	inc rdx
  3038 00000F7D EBEA                    	jmp .L_lambda_simple_env_loop_06fc
  3039                                  .L_lambda_simple_env_end_06fc:
  3040 00000F7F 5B                      	pop rbx
  3041 00000F80 BE00000000              	mov rsi, 0
  3042                                  .L_lambda_simple_params_loop_06fc:	; copy params
  3043 00000F85 4883FE00                	cmp rsi, 0
  3044 00000F89 740E                    	je .L_lambda_simple_params_end_06fc
  3045 00000F8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3046 00000F90 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3047 00000F94 48FFC6                  	inc rsi
  3048 00000F97 EBEC                    	jmp .L_lambda_simple_params_loop_06fc
  3049                                  .L_lambda_simple_params_end_06fc:
  3050 00000F99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3051 00000F9C 4889C3                  	mov rbx, rax
  3052 00000F9F 58                      	pop rax
  3053 00000FA0 C60004                  	mov byte [rax], T_closure
  3054 00000FA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3055 00000FA7 48C74009[B40F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06fc
  3056 00000FAF E9B6000000              	jmp .L_lambda_simple_end_06fc
  3057                                  .L_lambda_simple_code_06fc:	; lambda-simple body
  3058 00000FB4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3059 00000FBA 740B                    	je .L_lambda_simple_arity_check_ok_07d7
  3060 00000FBC FF742410                	push qword [rsp + 8 * 2]
  3061 00000FC0 6A01                    	push 1
  3062 00000FC2 E922650100              	jmp L_error_incorrect_arity_simple
  3063                                  .L_lambda_simple_arity_check_ok_07d7:
  3064 00000FC7 C8000000                	enter 0, 0
  3065                                  	; preparing a tail-call
  3066                                  	; preparing a non-tail-call
  3067 00000FCB 488B4520                	mov rax, PARAM(0)	; param x
  3068 00000FCF 50                      	push rax
  3069 00000FD0 6A01                    	push 1	; arg count
  3070 00000FD2 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3071 00000FDA 803805                  	cmp byte [rax], T_undefined
  3072 00000FDD 0F8420640100            	je L_error_fvar_undefined
  3073 00000FE3 803804                  	cmp byte [rax], T_closure
  3074 00000FE6 0F859B640100            	jne L_error_non_closure
  3075 00000FEC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3076 00000FEF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3077 00000FF2 50                      	push rax
  3078 00000FF3 6A01                    	push 1	; arg count
  3079 00000FF5 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  3080 00000FFD 803805                  	cmp byte [rax], T_undefined
  3081 00001000 0F84FD630100            	je L_error_fvar_undefined
  3082 00001006 803804                  	cmp byte [rax], T_closure
  3083 00001009 0F8578640100            	jne L_error_non_closure
  3084 0000100F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3085 00001012 FF7508                  	push qword [rbp + 8 *1]
  3086 00001015 4989C0                  	mov r8, rax
  3087 00001018 488B5D18                	mov rbx, COUNT
  3088 0000101C 4883C303                	add rbx,3
  3089 00001020 48C1E303                	shl rbx,3
  3090 00001024 4801EB                  	add rbx, rbp
  3091 00001027 488B6D00                	mov rbp, [rbp]
  3092 0000102B B900000000              	mov rcx,0
  3093 00001030 BA04000000              	mov rdx, 4
  3094 00001035 4889D0                  	mov rax, rdx
  3095 00001038 48FFC8                  	dec rax
  3096 0000103B 48C1E003                	shl rax,3
  3097 0000103F 4801E0                  	add rax, rsp
  3098                                  	.L_tc_recycle_frame_loop_08cf:
  3099 00001042 4839D1                  	cmp rcx, rdx
  3100 00001045 7414                    	je .L_tc_recycle_frame_done_08cf
  3101 00001047 4C8B08                  	mov r9, qword [rax]
  3102 0000104A 4C890B                  	mov qword [rbx],r9
  3103 0000104D 4883E808                	sub rax,8
  3104 00001051 4883EB08                	sub rbx,8
  3105 00001055 4883C101                	add rcx,1
  3106 00001059 EBE7                    	jmp .L_tc_recycle_frame_loop_08cf
  3107                                  	.L_tc_recycle_frame_done_08cf:
  3108 0000105B 4883C308                	add rbx,8
  3109 0000105F 4889DC                  	mov rsp,rbx
  3110 00001062 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3111 00001066 C9                      	leave
  3112 00001067 C21800                  	ret AND_KILL_FRAME(1)
  3113                                  .L_lambda_simple_end_06fc:	; new closure is in rax
  3114 0000106A 48890425[CE110000]      	mov qword [free_var_52], rax
  3115 00001072 48B8-                   	mov rax, sob_void
  3115 00001074 [0000000000000000] 
  3116                                  
  3117 0000107C 4889C7                  	mov rdi, rax
  3118 0000107F E801670100              	call print_sexpr_if_not_void
  3119 00001084 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3120 00001089 E8A2640100              	call malloc
  3121 0000108E 50                      	push rax
  3122 0000108F BF00000000              	mov rdi, 8 * 0	; new rib
  3123 00001094 E897640100              	call malloc
  3124 00001099 50                      	push rax
  3125 0000109A BF08000000              	mov rdi, 8 * 1	; extended env
  3126 0000109F E88C640100              	call malloc
  3127 000010A4 488B7D10                	mov rdi, ENV
  3128 000010A8 BE00000000              	mov rsi, 0
  3129 000010AD BA01000000              	mov rdx, 1
  3130                                  .L_lambda_simple_env_loop_06fd:	; ext_env[i + 1] <-- env[i]
  3131 000010B2 4883FE00                	cmp rsi, 0
  3132 000010B6 7410                    	je .L_lambda_simple_env_end_06fd
  3133 000010B8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3134 000010BC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3135 000010C0 48FFC6                  	inc rsi
  3136 000010C3 48FFC2                  	inc rdx
  3137 000010C6 EBEA                    	jmp .L_lambda_simple_env_loop_06fd
  3138                                  .L_lambda_simple_env_end_06fd:
  3139 000010C8 5B                      	pop rbx
  3140 000010C9 BE00000000              	mov rsi, 0
  3141                                  .L_lambda_simple_params_loop_06fd:	; copy params
  3142 000010CE 4883FE00                	cmp rsi, 0
  3143 000010D2 740E                    	je .L_lambda_simple_params_end_06fd
  3144 000010D4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3145 000010D9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3146 000010DD 48FFC6                  	inc rsi
  3147 000010E0 EBEC                    	jmp .L_lambda_simple_params_loop_06fd
  3148                                  .L_lambda_simple_params_end_06fd:
  3149 000010E2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3150 000010E5 4889C3                  	mov rbx, rax
  3151 000010E8 58                      	pop rax
  3152 000010E9 C60004                  	mov byte [rax], T_closure
  3153 000010EC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3154 000010F0 48C74009[FD100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06fd
  3155 000010F8 E9B6000000              	jmp .L_lambda_simple_end_06fd
  3156                                  .L_lambda_simple_code_06fd:	; lambda-simple body
  3157 000010FD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3158 00001103 740B                    	je .L_lambda_simple_arity_check_ok_07d8
  3159 00001105 FF742410                	push qword [rsp + 8 * 2]
  3160 00001109 6A01                    	push 1
  3161 0000110B E9D9630100              	jmp L_error_incorrect_arity_simple
  3162                                  .L_lambda_simple_arity_check_ok_07d8:
  3163 00001110 C8000000                	enter 0, 0
  3164                                  	; preparing a tail-call
  3165                                  	; preparing a non-tail-call
  3166 00001114 488B4520                	mov rax, PARAM(0)	; param x
  3167 00001118 50                      	push rax
  3168 00001119 6A01                    	push 1	; arg count
  3169 0000111B 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  3170 00001123 803805                  	cmp byte [rax], T_undefined
  3171 00001126 0F84D7620100            	je L_error_fvar_undefined
  3172 0000112C 803804                  	cmp byte [rax], T_closure
  3173 0000112F 0F8552630100            	jne L_error_non_closure
  3174 00001135 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3175 00001138 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3176 0000113B 50                      	push rax
  3177 0000113C 6A01                    	push 1	; arg count
  3178 0000113E 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  3179 00001146 803805                  	cmp byte [rax], T_undefined
  3180 00001149 0F84B4620100            	je L_error_fvar_undefined
  3181 0000114F 803804                  	cmp byte [rax], T_closure
  3182 00001152 0F852F630100            	jne L_error_non_closure
  3183 00001158 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3184 0000115B FF7508                  	push qword [rbp + 8 *1]
  3185 0000115E 4989C0                  	mov r8, rax
  3186 00001161 488B5D18                	mov rbx, COUNT
  3187 00001165 4883C303                	add rbx,3
  3188 00001169 48C1E303                	shl rbx,3
  3189 0000116D 4801EB                  	add rbx, rbp
  3190 00001170 488B6D00                	mov rbp, [rbp]
  3191 00001174 B900000000              	mov rcx,0
  3192 00001179 BA04000000              	mov rdx, 4
  3193 0000117E 4889D0                  	mov rax, rdx
  3194 00001181 48FFC8                  	dec rax
  3195 00001184 48C1E003                	shl rax,3
  3196 00001188 4801E0                  	add rax, rsp
  3197                                  	.L_tc_recycle_frame_loop_08d0:
  3198 0000118B 4839D1                  	cmp rcx, rdx
  3199 0000118E 7414                    	je .L_tc_recycle_frame_done_08d0
  3200 00001190 4C8B08                  	mov r9, qword [rax]
  3201 00001193 4C890B                  	mov qword [rbx],r9
  3202 00001196 4883E808                	sub rax,8
  3203 0000119A 4883EB08                	sub rbx,8
  3204 0000119E 4883C101                	add rcx,1
  3205 000011A2 EBE7                    	jmp .L_tc_recycle_frame_loop_08d0
  3206                                  	.L_tc_recycle_frame_done_08d0:
  3207 000011A4 4883C308                	add rbx,8
  3208 000011A8 4889DC                  	mov rsp,rbx
  3209 000011AB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3210 000011AF C9                      	leave
  3211 000011B0 C21800                  	ret AND_KILL_FRAME(1)
  3212                                  .L_lambda_simple_end_06fd:	; new closure is in rax
  3213 000011B3 48890425[01120000]      	mov qword [free_var_55], rax
  3214 000011BB 48B8-                   	mov rax, sob_void
  3214 000011BD [0000000000000000] 
  3215                                  
  3216 000011C5 4889C7                  	mov rdi, rax
  3217 000011C8 E8B8650100              	call print_sexpr_if_not_void
  3218 000011CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3219 000011D2 E859630100              	call malloc
  3220 000011D7 50                      	push rax
  3221 000011D8 BF00000000              	mov rdi, 8 * 0	; new rib
  3222 000011DD E84E630100              	call malloc
  3223 000011E2 50                      	push rax
  3224 000011E3 BF08000000              	mov rdi, 8 * 1	; extended env
  3225 000011E8 E843630100              	call malloc
  3226 000011ED 488B7D10                	mov rdi, ENV
  3227 000011F1 BE00000000              	mov rsi, 0
  3228 000011F6 BA01000000              	mov rdx, 1
  3229                                  .L_lambda_simple_env_loop_06fe:	; ext_env[i + 1] <-- env[i]
  3230 000011FB 4883FE00                	cmp rsi, 0
  3231 000011FF 7410                    	je .L_lambda_simple_env_end_06fe
  3232 00001201 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3233 00001205 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3234 00001209 48FFC6                  	inc rsi
  3235 0000120C 48FFC2                  	inc rdx
  3236 0000120F EBEA                    	jmp .L_lambda_simple_env_loop_06fe
  3237                                  .L_lambda_simple_env_end_06fe:
  3238 00001211 5B                      	pop rbx
  3239 00001212 BE00000000              	mov rsi, 0
  3240                                  .L_lambda_simple_params_loop_06fe:	; copy params
  3241 00001217 4883FE00                	cmp rsi, 0
  3242 0000121B 740E                    	je .L_lambda_simple_params_end_06fe
  3243 0000121D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3244 00001222 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3245 00001226 48FFC6                  	inc rsi
  3246 00001229 EBEC                    	jmp .L_lambda_simple_params_loop_06fe
  3247                                  .L_lambda_simple_params_end_06fe:
  3248 0000122B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3249 0000122E 4889C3                  	mov rbx, rax
  3250 00001231 58                      	pop rax
  3251 00001232 C60004                  	mov byte [rax], T_closure
  3252 00001235 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3253 00001239 48C74009[46120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06fe
  3254 00001241 E9B6000000              	jmp .L_lambda_simple_end_06fe
  3255                                  .L_lambda_simple_code_06fe:	; lambda-simple body
  3256 00001246 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3257 0000124C 740B                    	je .L_lambda_simple_arity_check_ok_07d9
  3258 0000124E FF742410                	push qword [rsp + 8 * 2]
  3259 00001252 6A01                    	push 1
  3260 00001254 E990620100              	jmp L_error_incorrect_arity_simple
  3261                                  .L_lambda_simple_arity_check_ok_07d9:
  3262 00001259 C8000000                	enter 0, 0
  3263                                  	; preparing a tail-call
  3264                                  	; preparing a non-tail-call
  3265 0000125D 488B4520                	mov rax, PARAM(0)	; param x
  3266 00001261 50                      	push rax
  3267 00001262 6A01                    	push 1	; arg count
  3268 00001264 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  3269 0000126C 803805                  	cmp byte [rax], T_undefined
  3270 0000126F 0F848E610100            	je L_error_fvar_undefined
  3271 00001275 803804                  	cmp byte [rax], T_closure
  3272 00001278 0F8509620100            	jne L_error_non_closure
  3273 0000127E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3274 00001281 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3275 00001284 50                      	push rax
  3276 00001285 6A01                    	push 1	; arg count
  3277 00001287 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  3278 0000128F 803805                  	cmp byte [rax], T_undefined
  3279 00001292 0F846B610100            	je L_error_fvar_undefined
  3280 00001298 803804                  	cmp byte [rax], T_closure
  3281 0000129B 0F85E6610100            	jne L_error_non_closure
  3282 000012A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3283 000012A4 FF7508                  	push qword [rbp + 8 *1]
  3284 000012A7 4989C0                  	mov r8, rax
  3285 000012AA 488B5D18                	mov rbx, COUNT
  3286 000012AE 4883C303                	add rbx,3
  3287 000012B2 48C1E303                	shl rbx,3
  3288 000012B6 4801EB                  	add rbx, rbp
  3289 000012B9 488B6D00                	mov rbp, [rbp]
  3290 000012BD B900000000              	mov rcx,0
  3291 000012C2 BA04000000              	mov rdx, 4
  3292 000012C7 4889D0                  	mov rax, rdx
  3293 000012CA 48FFC8                  	dec rax
  3294 000012CD 48C1E003                	shl rax,3
  3295 000012D1 4801E0                  	add rax, rsp
  3296                                  	.L_tc_recycle_frame_loop_08d1:
  3297 000012D4 4839D1                  	cmp rcx, rdx
  3298 000012D7 7414                    	je .L_tc_recycle_frame_done_08d1
  3299 000012D9 4C8B08                  	mov r9, qword [rax]
  3300 000012DC 4C890B                  	mov qword [rbx],r9
  3301 000012DF 4883E808                	sub rax,8
  3302 000012E3 4883EB08                	sub rbx,8
  3303 000012E7 4883C101                	add rcx,1
  3304 000012EB EBE7                    	jmp .L_tc_recycle_frame_loop_08d1
  3305                                  	.L_tc_recycle_frame_done_08d1:
  3306 000012ED 4883C308                	add rbx,8
  3307 000012F1 4889DC                  	mov rsp,rbx
  3308 000012F4 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3309 000012F8 C9                      	leave
  3310 000012F9 C21800                  	ret AND_KILL_FRAME(1)
  3311                                  .L_lambda_simple_end_06fe:	; new closure is in rax
  3312 000012FC 48890425[45120000]      	mov qword [free_var_59], rax
  3313 00001304 48B8-                   	mov rax, sob_void
  3313 00001306 [0000000000000000] 
  3314                                  
  3315 0000130E 4889C7                  	mov rdi, rax
  3316 00001311 E86F640100              	call print_sexpr_if_not_void
  3317 00001316 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3318 0000131B E810620100              	call malloc
  3319 00001320 50                      	push rax
  3320 00001321 BF00000000              	mov rdi, 8 * 0	; new rib
  3321 00001326 E805620100              	call malloc
  3322 0000132B 50                      	push rax
  3323 0000132C BF08000000              	mov rdi, 8 * 1	; extended env
  3324 00001331 E8FA610100              	call malloc
  3325 00001336 488B7D10                	mov rdi, ENV
  3326 0000133A BE00000000              	mov rsi, 0
  3327 0000133F BA01000000              	mov rdx, 1
  3328                                  .L_lambda_simple_env_loop_06ff:	; ext_env[i + 1] <-- env[i]
  3329 00001344 4883FE00                	cmp rsi, 0
  3330 00001348 7410                    	je .L_lambda_simple_env_end_06ff
  3331 0000134A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3332 0000134E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3333 00001352 48FFC6                  	inc rsi
  3334 00001355 48FFC2                  	inc rdx
  3335 00001358 EBEA                    	jmp .L_lambda_simple_env_loop_06ff
  3336                                  .L_lambda_simple_env_end_06ff:
  3337 0000135A 5B                      	pop rbx
  3338 0000135B BE00000000              	mov rsi, 0
  3339                                  .L_lambda_simple_params_loop_06ff:	; copy params
  3340 00001360 4883FE00                	cmp rsi, 0
  3341 00001364 740E                    	je .L_lambda_simple_params_end_06ff
  3342 00001366 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3343 0000136B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3344 0000136F 48FFC6                  	inc rsi
  3345 00001372 EBEC                    	jmp .L_lambda_simple_params_loop_06ff
  3346                                  .L_lambda_simple_params_end_06ff:
  3347 00001374 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3348 00001377 4889C3                  	mov rbx, rax
  3349 0000137A 58                      	pop rax
  3350 0000137B C60004                  	mov byte [rax], T_closure
  3351 0000137E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3352 00001382 48C74009[8F130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_06ff
  3353 0000138A E9B6000000              	jmp .L_lambda_simple_end_06ff
  3354                                  .L_lambda_simple_code_06ff:	; lambda-simple body
  3355 0000138F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3356 00001395 740B                    	je .L_lambda_simple_arity_check_ok_07da
  3357 00001397 FF742410                	push qword [rsp + 8 * 2]
  3358 0000139B 6A01                    	push 1
  3359 0000139D E947610100              	jmp L_error_incorrect_arity_simple
  3360                                  .L_lambda_simple_arity_check_ok_07da:
  3361 000013A2 C8000000                	enter 0, 0
  3362                                  	; preparing a tail-call
  3363                                  	; preparing a non-tail-call
  3364 000013A6 488B4520                	mov rax, PARAM(0)	; param x
  3365 000013AA 50                      	push rax
  3366 000013AB 6A01                    	push 1	; arg count
  3367 000013AD 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  3368 000013B5 803805                  	cmp byte [rax], T_undefined
  3369 000013B8 0F8445600100            	je L_error_fvar_undefined
  3370 000013BE 803804                  	cmp byte [rax], T_closure
  3371 000013C1 0F85C0600100            	jne L_error_non_closure
  3372 000013C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3373 000013CA FF5009                  	call SOB_CLOSURE_CODE(rax)
  3374 000013CD 50                      	push rax
  3375 000013CE 6A01                    	push 1	; arg count
  3376 000013D0 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  3377 000013D8 803805                  	cmp byte [rax], T_undefined
  3378 000013DB 0F8422600100            	je L_error_fvar_undefined
  3379 000013E1 803804                  	cmp byte [rax], T_closure
  3380 000013E4 0F859D600100            	jne L_error_non_closure
  3381 000013EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3382 000013ED FF7508                  	push qword [rbp + 8 *1]
  3383 000013F0 4989C0                  	mov r8, rax
  3384 000013F3 488B5D18                	mov rbx, COUNT
  3385 000013F7 4883C303                	add rbx,3
  3386 000013FB 48C1E303                	shl rbx,3
  3387 000013FF 4801EB                  	add rbx, rbp
  3388 00001402 488B6D00                	mov rbp, [rbp]
  3389 00001406 B900000000              	mov rcx,0
  3390 0000140B BA04000000              	mov rdx, 4
  3391 00001410 4889D0                  	mov rax, rdx
  3392 00001413 48FFC8                  	dec rax
  3393 00001416 48C1E003                	shl rax,3
  3394 0000141A 4801E0                  	add rax, rsp
  3395                                  	.L_tc_recycle_frame_loop_08d2:
  3396 0000141D 4839D1                  	cmp rcx, rdx
  3397 00001420 7414                    	je .L_tc_recycle_frame_done_08d2
  3398 00001422 4C8B08                  	mov r9, qword [rax]
  3399 00001425 4C890B                  	mov qword [rbx],r9
  3400 00001428 4883E808                	sub rax,8
  3401 0000142C 4883EB08                	sub rbx,8
  3402 00001430 4883C101                	add rcx,1
  3403 00001434 EBE7                    	jmp .L_tc_recycle_frame_loop_08d2
  3404                                  	.L_tc_recycle_frame_done_08d2:
  3405 00001436 4883C308                	add rbx,8
  3406 0000143A 4889DC                  	mov rsp,rbx
  3407 0000143D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3408 00001441 C9                      	leave
  3409 00001442 C21800                  	ret AND_KILL_FRAME(1)
  3410                                  .L_lambda_simple_end_06ff:	; new closure is in rax
  3411 00001445 48890425[78120000]      	mov qword [free_var_62], rax
  3412 0000144D 48B8-                   	mov rax, sob_void
  3412 0000144F [0000000000000000] 
  3413                                  
  3414 00001457 4889C7                  	mov rdi, rax
  3415 0000145A E826630100              	call print_sexpr_if_not_void
  3416 0000145F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3417 00001464 E8C7600100              	call malloc
  3418 00001469 50                      	push rax
  3419 0000146A BF00000000              	mov rdi, 8 * 0	; new rib
  3420 0000146F E8BC600100              	call malloc
  3421 00001474 50                      	push rax
  3422 00001475 BF08000000              	mov rdi, 8 * 1	; extended env
  3423 0000147A E8B1600100              	call malloc
  3424 0000147F 488B7D10                	mov rdi, ENV
  3425 00001483 BE00000000              	mov rsi, 0
  3426 00001488 BA01000000              	mov rdx, 1
  3427                                  .L_lambda_simple_env_loop_0700:	; ext_env[i + 1] <-- env[i]
  3428 0000148D 4883FE00                	cmp rsi, 0
  3429 00001491 7410                    	je .L_lambda_simple_env_end_0700
  3430 00001493 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3431 00001497 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3432 0000149B 48FFC6                  	inc rsi
  3433 0000149E 48FFC2                  	inc rdx
  3434 000014A1 EBEA                    	jmp .L_lambda_simple_env_loop_0700
  3435                                  .L_lambda_simple_env_end_0700:
  3436 000014A3 5B                      	pop rbx
  3437 000014A4 BE00000000              	mov rsi, 0
  3438                                  .L_lambda_simple_params_loop_0700:	; copy params
  3439 000014A9 4883FE00                	cmp rsi, 0
  3440 000014AD 740E                    	je .L_lambda_simple_params_end_0700
  3441 000014AF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3442 000014B4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3443 000014B8 48FFC6                  	inc rsi
  3444 000014BB EBEC                    	jmp .L_lambda_simple_params_loop_0700
  3445                                  .L_lambda_simple_params_end_0700:
  3446 000014BD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3447 000014C0 4889C3                  	mov rbx, rax
  3448 000014C3 58                      	pop rax
  3449 000014C4 C60004                  	mov byte [rax], T_closure
  3450 000014C7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3451 000014CB 48C74009[D8140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0700
  3452 000014D3 E9B6000000              	jmp .L_lambda_simple_end_0700
  3453                                  .L_lambda_simple_code_0700:	; lambda-simple body
  3454 000014D8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3455 000014DE 740B                    	je .L_lambda_simple_arity_check_ok_07db
  3456 000014E0 FF742410                	push qword [rsp + 8 * 2]
  3457 000014E4 6A01                    	push 1
  3458 000014E6 E9FE5F0100              	jmp L_error_incorrect_arity_simple
  3459                                  .L_lambda_simple_arity_check_ok_07db:
  3460 000014EB C8000000                	enter 0, 0
  3461                                  	; preparing a tail-call
  3462                                  	; preparing a non-tail-call
  3463 000014EF 488B4520                	mov rax, PARAM(0)	; param x
  3464 000014F3 50                      	push rax
  3465 000014F4 6A01                    	push 1	; arg count
  3466 000014F6 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3467 000014FE 803805                  	cmp byte [rax], T_undefined
  3468 00001501 0F84FC5E0100            	je L_error_fvar_undefined
  3469 00001507 803804                  	cmp byte [rax], T_closure
  3470 0000150A 0F85775F0100            	jne L_error_non_closure
  3471 00001510 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3472 00001513 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3473 00001516 50                      	push rax
  3474 00001517 6A01                    	push 1	; arg count
  3475 00001519 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3476 00001521 803805                  	cmp byte [rax], T_undefined
  3477 00001524 0F84D95E0100            	je L_error_fvar_undefined
  3478 0000152A 803804                  	cmp byte [rax], T_closure
  3479 0000152D 0F85545F0100            	jne L_error_non_closure
  3480 00001533 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3481 00001536 FF7508                  	push qword [rbp + 8 *1]
  3482 00001539 4989C0                  	mov r8, rax
  3483 0000153C 488B5D18                	mov rbx, COUNT
  3484 00001540 4883C303                	add rbx,3
  3485 00001544 48C1E303                	shl rbx,3
  3486 00001548 4801EB                  	add rbx, rbp
  3487 0000154B 488B6D00                	mov rbp, [rbp]
  3488 0000154F B900000000              	mov rcx,0
  3489 00001554 BA04000000              	mov rdx, 4
  3490 00001559 4889D0                  	mov rax, rdx
  3491 0000155C 48FFC8                  	dec rax
  3492 0000155F 48C1E003                	shl rax,3
  3493 00001563 4801E0                  	add rax, rsp
  3494                                  	.L_tc_recycle_frame_loop_08d3:
  3495 00001566 4839D1                  	cmp rcx, rdx
  3496 00001569 7414                    	je .L_tc_recycle_frame_done_08d3
  3497 0000156B 4C8B08                  	mov r9, qword [rax]
  3498 0000156E 4C890B                  	mov qword [rbx],r9
  3499 00001571 4883E808                	sub rax,8
  3500 00001575 4883EB08                	sub rbx,8
  3501 00001579 4883C101                	add rcx,1
  3502 0000157D EBE7                    	jmp .L_tc_recycle_frame_loop_08d3
  3503                                  	.L_tc_recycle_frame_done_08d3:
  3504 0000157F 4883C308                	add rbx,8
  3505 00001583 4889DC                  	mov rsp,rbx
  3506 00001586 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3507 0000158A C9                      	leave
  3508 0000158B C21800                  	ret AND_KILL_FRAME(1)
  3509                                  .L_lambda_simple_end_0700:	; new closure is in rax
  3510 0000158E 48890425[AD100000]      	mov qword [free_var_35], rax
  3511 00001596 48B8-                   	mov rax, sob_void
  3511 00001598 [0000000000000000] 
  3512                                  
  3513 000015A0 4889C7                  	mov rdi, rax
  3514 000015A3 E8DD610100              	call print_sexpr_if_not_void
  3515 000015A8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3516 000015AD E87E5F0100              	call malloc
  3517 000015B2 50                      	push rax
  3518 000015B3 BF00000000              	mov rdi, 8 * 0	; new rib
  3519 000015B8 E8735F0100              	call malloc
  3520 000015BD 50                      	push rax
  3521 000015BE BF08000000              	mov rdi, 8 * 1	; extended env
  3522 000015C3 E8685F0100              	call malloc
  3523 000015C8 488B7D10                	mov rdi, ENV
  3524 000015CC BE00000000              	mov rsi, 0
  3525 000015D1 BA01000000              	mov rdx, 1
  3526                                  .L_lambda_simple_env_loop_0701:	; ext_env[i + 1] <-- env[i]
  3527 000015D6 4883FE00                	cmp rsi, 0
  3528 000015DA 7410                    	je .L_lambda_simple_env_end_0701
  3529 000015DC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3530 000015E0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3531 000015E4 48FFC6                  	inc rsi
  3532 000015E7 48FFC2                  	inc rdx
  3533 000015EA EBEA                    	jmp .L_lambda_simple_env_loop_0701
  3534                                  .L_lambda_simple_env_end_0701:
  3535 000015EC 5B                      	pop rbx
  3536 000015ED BE00000000              	mov rsi, 0
  3537                                  .L_lambda_simple_params_loop_0701:	; copy params
  3538 000015F2 4883FE00                	cmp rsi, 0
  3539 000015F6 740E                    	je .L_lambda_simple_params_end_0701
  3540 000015F8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3541 000015FD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3542 00001601 48FFC6                  	inc rsi
  3543 00001604 EBEC                    	jmp .L_lambda_simple_params_loop_0701
  3544                                  .L_lambda_simple_params_end_0701:
  3545 00001606 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3546 00001609 4889C3                  	mov rbx, rax
  3547 0000160C 58                      	pop rax
  3548 0000160D C60004                  	mov byte [rax], T_closure
  3549 00001610 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3550 00001614 48C74009[21160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0701
  3551 0000161C E9B6000000              	jmp .L_lambda_simple_end_0701
  3552                                  .L_lambda_simple_code_0701:	; lambda-simple body
  3553 00001621 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3554 00001627 740B                    	je .L_lambda_simple_arity_check_ok_07dc
  3555 00001629 FF742410                	push qword [rsp + 8 * 2]
  3556 0000162D 6A01                    	push 1
  3557 0000162F E9B55E0100              	jmp L_error_incorrect_arity_simple
  3558                                  .L_lambda_simple_arity_check_ok_07dc:
  3559 00001634 C8000000                	enter 0, 0
  3560                                  	; preparing a tail-call
  3561                                  	; preparing a non-tail-call
  3562 00001638 488B4520                	mov rax, PARAM(0)	; param x
  3563 0000163C 50                      	push rax
  3564 0000163D 6A01                    	push 1	; arg count
  3565 0000163F 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  3566 00001647 803805                  	cmp byte [rax], T_undefined
  3567 0000164A 0F84B35D0100            	je L_error_fvar_undefined
  3568 00001650 803804                  	cmp byte [rax], T_closure
  3569 00001653 0F852E5E0100            	jne L_error_non_closure
  3570 00001659 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3571 0000165C FF5009                  	call SOB_CLOSURE_CODE(rax)
  3572 0000165F 50                      	push rax
  3573 00001660 6A01                    	push 1	; arg count
  3574 00001662 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3575 0000166A 803805                  	cmp byte [rax], T_undefined
  3576 0000166D 0F84905D0100            	je L_error_fvar_undefined
  3577 00001673 803804                  	cmp byte [rax], T_closure
  3578 00001676 0F850B5E0100            	jne L_error_non_closure
  3579 0000167C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3580 0000167F FF7508                  	push qword [rbp + 8 *1]
  3581 00001682 4989C0                  	mov r8, rax
  3582 00001685 488B5D18                	mov rbx, COUNT
  3583 00001689 4883C303                	add rbx,3
  3584 0000168D 48C1E303                	shl rbx,3
  3585 00001691 4801EB                  	add rbx, rbp
  3586 00001694 488B6D00                	mov rbp, [rbp]
  3587 00001698 B900000000              	mov rcx,0
  3588 0000169D BA04000000              	mov rdx, 4
  3589 000016A2 4889D0                  	mov rax, rdx
  3590 000016A5 48FFC8                  	dec rax
  3591 000016A8 48C1E003                	shl rax,3
  3592 000016AC 4801E0                  	add rax, rsp
  3593                                  	.L_tc_recycle_frame_loop_08d4:
  3594 000016AF 4839D1                  	cmp rcx, rdx
  3595 000016B2 7414                    	je .L_tc_recycle_frame_done_08d4
  3596 000016B4 4C8B08                  	mov r9, qword [rax]
  3597 000016B7 4C890B                  	mov qword [rbx],r9
  3598 000016BA 4883E808                	sub rax,8
  3599 000016BE 4883EB08                	sub rbx,8
  3600 000016C2 4883C101                	add rcx,1
  3601 000016C6 EBE7                    	jmp .L_tc_recycle_frame_loop_08d4
  3602                                  	.L_tc_recycle_frame_done_08d4:
  3603 000016C8 4883C308                	add rbx,8
  3604 000016CC 4889DC                  	mov rsp,rbx
  3605 000016CF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3606 000016D3 C9                      	leave
  3607 000016D4 C21800                  	ret AND_KILL_FRAME(1)
  3608                                  .L_lambda_simple_end_0701:	; new closure is in rax
  3609 000016D7 48890425[BE100000]      	mov qword [free_var_36], rax
  3610 000016DF 48B8-                   	mov rax, sob_void
  3610 000016E1 [0000000000000000] 
  3611                                  
  3612 000016E9 4889C7                  	mov rdi, rax
  3613 000016EC E894600100              	call print_sexpr_if_not_void
  3614 000016F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3615 000016F6 E8355E0100              	call malloc
  3616 000016FB 50                      	push rax
  3617 000016FC BF00000000              	mov rdi, 8 * 0	; new rib
  3618 00001701 E82A5E0100              	call malloc
  3619 00001706 50                      	push rax
  3620 00001707 BF08000000              	mov rdi, 8 * 1	; extended env
  3621 0000170C E81F5E0100              	call malloc
  3622 00001711 488B7D10                	mov rdi, ENV
  3623 00001715 BE00000000              	mov rsi, 0
  3624 0000171A BA01000000              	mov rdx, 1
  3625                                  .L_lambda_simple_env_loop_0702:	; ext_env[i + 1] <-- env[i]
  3626 0000171F 4883FE00                	cmp rsi, 0
  3627 00001723 7410                    	je .L_lambda_simple_env_end_0702
  3628 00001725 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3629 00001729 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3630 0000172D 48FFC6                  	inc rsi
  3631 00001730 48FFC2                  	inc rdx
  3632 00001733 EBEA                    	jmp .L_lambda_simple_env_loop_0702
  3633                                  .L_lambda_simple_env_end_0702:
  3634 00001735 5B                      	pop rbx
  3635 00001736 BE00000000              	mov rsi, 0
  3636                                  .L_lambda_simple_params_loop_0702:	; copy params
  3637 0000173B 4883FE00                	cmp rsi, 0
  3638 0000173F 740E                    	je .L_lambda_simple_params_end_0702
  3639 00001741 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3640 00001746 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3641 0000174A 48FFC6                  	inc rsi
  3642 0000174D EBEC                    	jmp .L_lambda_simple_params_loop_0702
  3643                                  .L_lambda_simple_params_end_0702:
  3644 0000174F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3645 00001752 4889C3                  	mov rbx, rax
  3646 00001755 58                      	pop rax
  3647 00001756 C60004                  	mov byte [rax], T_closure
  3648 00001759 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3649 0000175D 48C74009[6A170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0702
  3650 00001765 E9B6000000              	jmp .L_lambda_simple_end_0702
  3651                                  .L_lambda_simple_code_0702:	; lambda-simple body
  3652 0000176A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3653 00001770 740B                    	je .L_lambda_simple_arity_check_ok_07dd
  3654 00001772 FF742410                	push qword [rsp + 8 * 2]
  3655 00001776 6A01                    	push 1
  3656 00001778 E96C5D0100              	jmp L_error_incorrect_arity_simple
  3657                                  .L_lambda_simple_arity_check_ok_07dd:
  3658 0000177D C8000000                	enter 0, 0
  3659                                  	; preparing a tail-call
  3660                                  	; preparing a non-tail-call
  3661 00001781 488B4520                	mov rax, PARAM(0)	; param x
  3662 00001785 50                      	push rax
  3663 00001786 6A01                    	push 1	; arg count
  3664 00001788 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  3665 00001790 803805                  	cmp byte [rax], T_undefined
  3666 00001793 0F846A5C0100            	je L_error_fvar_undefined
  3667 00001799 803804                  	cmp byte [rax], T_closure
  3668 0000179C 0F85E55C0100            	jne L_error_non_closure
  3669 000017A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3670 000017A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3671 000017A8 50                      	push rax
  3672 000017A9 6A01                    	push 1	; arg count
  3673 000017AB 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3674 000017B3 803805                  	cmp byte [rax], T_undefined
  3675 000017B6 0F84475C0100            	je L_error_fvar_undefined
  3676 000017BC 803804                  	cmp byte [rax], T_closure
  3677 000017BF 0F85C25C0100            	jne L_error_non_closure
  3678 000017C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3679 000017C8 FF7508                  	push qword [rbp + 8 *1]
  3680 000017CB 4989C0                  	mov r8, rax
  3681 000017CE 488B5D18                	mov rbx, COUNT
  3682 000017D2 4883C303                	add rbx,3
  3683 000017D6 48C1E303                	shl rbx,3
  3684 000017DA 4801EB                  	add rbx, rbp
  3685 000017DD 488B6D00                	mov rbp, [rbp]
  3686 000017E1 B900000000              	mov rcx,0
  3687 000017E6 BA04000000              	mov rdx, 4
  3688 000017EB 4889D0                  	mov rax, rdx
  3689 000017EE 48FFC8                  	dec rax
  3690 000017F1 48C1E003                	shl rax,3
  3691 000017F5 4801E0                  	add rax, rsp
  3692                                  	.L_tc_recycle_frame_loop_08d5:
  3693 000017F8 4839D1                  	cmp rcx, rdx
  3694 000017FB 7414                    	je .L_tc_recycle_frame_done_08d5
  3695 000017FD 4C8B08                  	mov r9, qword [rax]
  3696 00001800 4C890B                  	mov qword [rbx],r9
  3697 00001803 4883E808                	sub rax,8
  3698 00001807 4883EB08                	sub rbx,8
  3699 0000180B 4883C101                	add rcx,1
  3700 0000180F EBE7                    	jmp .L_tc_recycle_frame_loop_08d5
  3701                                  	.L_tc_recycle_frame_done_08d5:
  3702 00001811 4883C308                	add rbx,8
  3703 00001815 4889DC                  	mov rsp,rbx
  3704 00001818 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3705 0000181C C9                      	leave
  3706 0000181D C21800                  	ret AND_KILL_FRAME(1)
  3707                                  .L_lambda_simple_end_0702:	; new closure is in rax
  3708 00001820 48890425[E0100000]      	mov qword [free_var_38], rax
  3709 00001828 48B8-                   	mov rax, sob_void
  3709 0000182A [0000000000000000] 
  3710                                  
  3711 00001832 4889C7                  	mov rdi, rax
  3712 00001835 E84B5F0100              	call print_sexpr_if_not_void
  3713 0000183A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3714 0000183F E8EC5C0100              	call malloc
  3715 00001844 50                      	push rax
  3716 00001845 BF00000000              	mov rdi, 8 * 0	; new rib
  3717 0000184A E8E15C0100              	call malloc
  3718 0000184F 50                      	push rax
  3719 00001850 BF08000000              	mov rdi, 8 * 1	; extended env
  3720 00001855 E8D65C0100              	call malloc
  3721 0000185A 488B7D10                	mov rdi, ENV
  3722 0000185E BE00000000              	mov rsi, 0
  3723 00001863 BA01000000              	mov rdx, 1
  3724                                  .L_lambda_simple_env_loop_0703:	; ext_env[i + 1] <-- env[i]
  3725 00001868 4883FE00                	cmp rsi, 0
  3726 0000186C 7410                    	je .L_lambda_simple_env_end_0703
  3727 0000186E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3728 00001872 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3729 00001876 48FFC6                  	inc rsi
  3730 00001879 48FFC2                  	inc rdx
  3731 0000187C EBEA                    	jmp .L_lambda_simple_env_loop_0703
  3732                                  .L_lambda_simple_env_end_0703:
  3733 0000187E 5B                      	pop rbx
  3734 0000187F BE00000000              	mov rsi, 0
  3735                                  .L_lambda_simple_params_loop_0703:	; copy params
  3736 00001884 4883FE00                	cmp rsi, 0
  3737 00001888 740E                    	je .L_lambda_simple_params_end_0703
  3738 0000188A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3739 0000188F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3740 00001893 48FFC6                  	inc rsi
  3741 00001896 EBEC                    	jmp .L_lambda_simple_params_loop_0703
  3742                                  .L_lambda_simple_params_end_0703:
  3743 00001898 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3744 0000189B 4889C3                  	mov rbx, rax
  3745 0000189E 58                      	pop rax
  3746 0000189F C60004                  	mov byte [rax], T_closure
  3747 000018A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3748 000018A6 48C74009[B3180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0703
  3749 000018AE E9B6000000              	jmp .L_lambda_simple_end_0703
  3750                                  .L_lambda_simple_code_0703:	; lambda-simple body
  3751 000018B3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3752 000018B9 740B                    	je .L_lambda_simple_arity_check_ok_07de
  3753 000018BB FF742410                	push qword [rsp + 8 * 2]
  3754 000018BF 6A01                    	push 1
  3755 000018C1 E9235C0100              	jmp L_error_incorrect_arity_simple
  3756                                  .L_lambda_simple_arity_check_ok_07de:
  3757 000018C6 C8000000                	enter 0, 0
  3758                                  	; preparing a tail-call
  3759                                  	; preparing a non-tail-call
  3760 000018CA 488B4520                	mov rax, PARAM(0)	; param x
  3761 000018CE 50                      	push rax
  3762 000018CF 6A01                    	push 1	; arg count
  3763 000018D1 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  3764 000018D9 803805                  	cmp byte [rax], T_undefined
  3765 000018DC 0F84215B0100            	je L_error_fvar_undefined
  3766 000018E2 803804                  	cmp byte [rax], T_closure
  3767 000018E5 0F859C5B0100            	jne L_error_non_closure
  3768 000018EB FF7001                  	push SOB_CLOSURE_ENV(rax)
  3769 000018EE FF5009                  	call SOB_CLOSURE_CODE(rax)
  3770 000018F1 50                      	push rax
  3771 000018F2 6A01                    	push 1	; arg count
  3772 000018F4 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3773 000018FC 803805                  	cmp byte [rax], T_undefined
  3774 000018FF 0F84FE5A0100            	je L_error_fvar_undefined
  3775 00001905 803804                  	cmp byte [rax], T_closure
  3776 00001908 0F85795B0100            	jne L_error_non_closure
  3777 0000190E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3778 00001911 FF7508                  	push qword [rbp + 8 *1]
  3779 00001914 4989C0                  	mov r8, rax
  3780 00001917 488B5D18                	mov rbx, COUNT
  3781 0000191B 4883C303                	add rbx,3
  3782 0000191F 48C1E303                	shl rbx,3
  3783 00001923 4801EB                  	add rbx, rbp
  3784 00001926 488B6D00                	mov rbp, [rbp]
  3785 0000192A B900000000              	mov rcx,0
  3786 0000192F BA04000000              	mov rdx, 4
  3787 00001934 4889D0                  	mov rax, rdx
  3788 00001937 48FFC8                  	dec rax
  3789 0000193A 48C1E003                	shl rax,3
  3790 0000193E 4801E0                  	add rax, rsp
  3791                                  	.L_tc_recycle_frame_loop_08d6:
  3792 00001941 4839D1                  	cmp rcx, rdx
  3793 00001944 7414                    	je .L_tc_recycle_frame_done_08d6
  3794 00001946 4C8B08                  	mov r9, qword [rax]
  3795 00001949 4C890B                  	mov qword [rbx],r9
  3796 0000194C 4883E808                	sub rax,8
  3797 00001950 4883EB08                	sub rbx,8
  3798 00001954 4883C101                	add rcx,1
  3799 00001958 EBE7                    	jmp .L_tc_recycle_frame_loop_08d6
  3800                                  	.L_tc_recycle_frame_done_08d6:
  3801 0000195A 4883C308                	add rbx,8
  3802 0000195E 4889DC                  	mov rsp,rbx
  3803 00001961 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3804 00001965 C9                      	leave
  3805 00001966 C21800                  	ret AND_KILL_FRAME(1)
  3806                                  .L_lambda_simple_end_0703:	; new closure is in rax
  3807 00001969 48890425[F1100000]      	mov qword [free_var_39], rax
  3808 00001971 48B8-                   	mov rax, sob_void
  3808 00001973 [0000000000000000] 
  3809                                  
  3810 0000197B 4889C7                  	mov rdi, rax
  3811 0000197E E8025E0100              	call print_sexpr_if_not_void
  3812 00001983 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3813 00001988 E8A35B0100              	call malloc
  3814 0000198D 50                      	push rax
  3815 0000198E BF00000000              	mov rdi, 8 * 0	; new rib
  3816 00001993 E8985B0100              	call malloc
  3817 00001998 50                      	push rax
  3818 00001999 BF08000000              	mov rdi, 8 * 1	; extended env
  3819 0000199E E88D5B0100              	call malloc
  3820 000019A3 488B7D10                	mov rdi, ENV
  3821 000019A7 BE00000000              	mov rsi, 0
  3822 000019AC BA01000000              	mov rdx, 1
  3823                                  .L_lambda_simple_env_loop_0704:	; ext_env[i + 1] <-- env[i]
  3824 000019B1 4883FE00                	cmp rsi, 0
  3825 000019B5 7410                    	je .L_lambda_simple_env_end_0704
  3826 000019B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3827 000019BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3828 000019BF 48FFC6                  	inc rsi
  3829 000019C2 48FFC2                  	inc rdx
  3830 000019C5 EBEA                    	jmp .L_lambda_simple_env_loop_0704
  3831                                  .L_lambda_simple_env_end_0704:
  3832 000019C7 5B                      	pop rbx
  3833 000019C8 BE00000000              	mov rsi, 0
  3834                                  .L_lambda_simple_params_loop_0704:	; copy params
  3835 000019CD 4883FE00                	cmp rsi, 0
  3836 000019D1 740E                    	je .L_lambda_simple_params_end_0704
  3837 000019D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3838 000019D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3839 000019DC 48FFC6                  	inc rsi
  3840 000019DF EBEC                    	jmp .L_lambda_simple_params_loop_0704
  3841                                  .L_lambda_simple_params_end_0704:
  3842 000019E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3843 000019E4 4889C3                  	mov rbx, rax
  3844 000019E7 58                      	pop rax
  3845 000019E8 C60004                  	mov byte [rax], T_closure
  3846 000019EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3847 000019EF 48C74009[FC190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0704
  3848 000019F7 E9B6000000              	jmp .L_lambda_simple_end_0704
  3849                                  .L_lambda_simple_code_0704:	; lambda-simple body
  3850 000019FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3851 00001A02 740B                    	je .L_lambda_simple_arity_check_ok_07df
  3852 00001A04 FF742410                	push qword [rsp + 8 * 2]
  3853 00001A08 6A01                    	push 1
  3854 00001A0A E9DA5A0100              	jmp L_error_incorrect_arity_simple
  3855                                  .L_lambda_simple_arity_check_ok_07df:
  3856 00001A0F C8000000                	enter 0, 0
  3857                                  	; preparing a tail-call
  3858                                  	; preparing a non-tail-call
  3859 00001A13 488B4520                	mov rax, PARAM(0)	; param x
  3860 00001A17 50                      	push rax
  3861 00001A18 6A01                    	push 1	; arg count
  3862 00001A1A 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  3863 00001A22 803805                  	cmp byte [rax], T_undefined
  3864 00001A25 0F84D8590100            	je L_error_fvar_undefined
  3865 00001A2B 803804                  	cmp byte [rax], T_closure
  3866 00001A2E 0F85535A0100            	jne L_error_non_closure
  3867 00001A34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3868 00001A37 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3869 00001A3A 50                      	push rax
  3870 00001A3B 6A01                    	push 1	; arg count
  3871 00001A3D 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  3872 00001A45 803805                  	cmp byte [rax], T_undefined
  3873 00001A48 0F84B5590100            	je L_error_fvar_undefined
  3874 00001A4E 803804                  	cmp byte [rax], T_closure
  3875 00001A51 0F85305A0100            	jne L_error_non_closure
  3876 00001A57 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3877 00001A5A FF7508                  	push qword [rbp + 8 *1]
  3878 00001A5D 4989C0                  	mov r8, rax
  3879 00001A60 488B5D18                	mov rbx, COUNT
  3880 00001A64 4883C303                	add rbx,3
  3881 00001A68 48C1E303                	shl rbx,3
  3882 00001A6C 4801EB                  	add rbx, rbp
  3883 00001A6F 488B6D00                	mov rbp, [rbp]
  3884 00001A73 B900000000              	mov rcx,0
  3885 00001A78 BA04000000              	mov rdx, 4
  3886 00001A7D 4889D0                  	mov rax, rdx
  3887 00001A80 48FFC8                  	dec rax
  3888 00001A83 48C1E003                	shl rax,3
  3889 00001A87 4801E0                  	add rax, rsp
  3890                                  	.L_tc_recycle_frame_loop_08d7:
  3891 00001A8A 4839D1                  	cmp rcx, rdx
  3892 00001A8D 7414                    	je .L_tc_recycle_frame_done_08d7
  3893 00001A8F 4C8B08                  	mov r9, qword [rax]
  3894 00001A92 4C890B                  	mov qword [rbx],r9
  3895 00001A95 4883E808                	sub rax,8
  3896 00001A99 4883EB08                	sub rbx,8
  3897 00001A9D 4883C101                	add rcx,1
  3898 00001AA1 EBE7                    	jmp .L_tc_recycle_frame_loop_08d7
  3899                                  	.L_tc_recycle_frame_done_08d7:
  3900 00001AA3 4883C308                	add rbx,8
  3901 00001AA7 4889DC                  	mov rsp,rbx
  3902 00001AAA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  3903 00001AAE C9                      	leave
  3904 00001AAF C21800                  	ret AND_KILL_FRAME(1)
  3905                                  .L_lambda_simple_end_0704:	; new closure is in rax
  3906 00001AB2 48890425[24110000]      	mov qword [free_var_42], rax
  3907 00001ABA 48B8-                   	mov rax, sob_void
  3907 00001ABC [0000000000000000] 
  3908                                  
  3909 00001AC4 4889C7                  	mov rdi, rax
  3910 00001AC7 E8B95C0100              	call print_sexpr_if_not_void
  3911 00001ACC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3912 00001AD1 E85A5A0100              	call malloc
  3913 00001AD6 50                      	push rax
  3914 00001AD7 BF00000000              	mov rdi, 8 * 0	; new rib
  3915 00001ADC E84F5A0100              	call malloc
  3916 00001AE1 50                      	push rax
  3917 00001AE2 BF08000000              	mov rdi, 8 * 1	; extended env
  3918 00001AE7 E8445A0100              	call malloc
  3919 00001AEC 488B7D10                	mov rdi, ENV
  3920 00001AF0 BE00000000              	mov rsi, 0
  3921 00001AF5 BA01000000              	mov rdx, 1
  3922                                  .L_lambda_simple_env_loop_0705:	; ext_env[i + 1] <-- env[i]
  3923 00001AFA 4883FE00                	cmp rsi, 0
  3924 00001AFE 7410                    	je .L_lambda_simple_env_end_0705
  3925 00001B00 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3926 00001B04 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3927 00001B08 48FFC6                  	inc rsi
  3928 00001B0B 48FFC2                  	inc rdx
  3929 00001B0E EBEA                    	jmp .L_lambda_simple_env_loop_0705
  3930                                  .L_lambda_simple_env_end_0705:
  3931 00001B10 5B                      	pop rbx
  3932 00001B11 BE00000000              	mov rsi, 0
  3933                                  .L_lambda_simple_params_loop_0705:	; copy params
  3934 00001B16 4883FE00                	cmp rsi, 0
  3935 00001B1A 740E                    	je .L_lambda_simple_params_end_0705
  3936 00001B1C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3937 00001B21 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3938 00001B25 48FFC6                  	inc rsi
  3939 00001B28 EBEC                    	jmp .L_lambda_simple_params_loop_0705
  3940                                  .L_lambda_simple_params_end_0705:
  3941 00001B2A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3942 00001B2D 4889C3                  	mov rbx, rax
  3943 00001B30 58                      	pop rax
  3944 00001B31 C60004                  	mov byte [rax], T_closure
  3945 00001B34 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3946 00001B38 48C74009[451B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0705
  3947 00001B40 E9B6000000              	jmp .L_lambda_simple_end_0705
  3948                                  .L_lambda_simple_code_0705:	; lambda-simple body
  3949 00001B45 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3950 00001B4B 740B                    	je .L_lambda_simple_arity_check_ok_07e0
  3951 00001B4D FF742410                	push qword [rsp + 8 * 2]
  3952 00001B51 6A01                    	push 1
  3953 00001B53 E991590100              	jmp L_error_incorrect_arity_simple
  3954                                  .L_lambda_simple_arity_check_ok_07e0:
  3955 00001B58 C8000000                	enter 0, 0
  3956                                  	; preparing a tail-call
  3957                                  	; preparing a non-tail-call
  3958 00001B5C 488B4520                	mov rax, PARAM(0)	; param x
  3959 00001B60 50                      	push rax
  3960 00001B61 6A01                    	push 1	; arg count
  3961 00001B63 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  3962 00001B6B 803805                  	cmp byte [rax], T_undefined
  3963 00001B6E 0F848F580100            	je L_error_fvar_undefined
  3964 00001B74 803804                  	cmp byte [rax], T_closure
  3965 00001B77 0F850A590100            	jne L_error_non_closure
  3966 00001B7D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3967 00001B80 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3968 00001B83 50                      	push rax
  3969 00001B84 6A01                    	push 1	; arg count
  3970 00001B86 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  3971 00001B8E 803805                  	cmp byte [rax], T_undefined
  3972 00001B91 0F846C580100            	je L_error_fvar_undefined
  3973 00001B97 803804                  	cmp byte [rax], T_closure
  3974 00001B9A 0F85E7580100            	jne L_error_non_closure
  3975 00001BA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3976 00001BA3 FF7508                  	push qword [rbp + 8 *1]
  3977 00001BA6 4989C0                  	mov r8, rax
  3978 00001BA9 488B5D18                	mov rbx, COUNT
  3979 00001BAD 4883C303                	add rbx,3
  3980 00001BB1 48C1E303                	shl rbx,3
  3981 00001BB5 4801EB                  	add rbx, rbp
  3982 00001BB8 488B6D00                	mov rbp, [rbp]
  3983 00001BBC B900000000              	mov rcx,0
  3984 00001BC1 BA04000000              	mov rdx, 4
  3985 00001BC6 4889D0                  	mov rax, rdx
  3986 00001BC9 48FFC8                  	dec rax
  3987 00001BCC 48C1E003                	shl rax,3
  3988 00001BD0 4801E0                  	add rax, rsp
  3989                                  	.L_tc_recycle_frame_loop_08d8:
  3990 00001BD3 4839D1                  	cmp rcx, rdx
  3991 00001BD6 7414                    	je .L_tc_recycle_frame_done_08d8
  3992 00001BD8 4C8B08                  	mov r9, qword [rax]
  3993 00001BDB 4C890B                  	mov qword [rbx],r9
  3994 00001BDE 4883E808                	sub rax,8
  3995 00001BE2 4883EB08                	sub rbx,8
  3996 00001BE6 4883C101                	add rcx,1
  3997 00001BEA EBE7                    	jmp .L_tc_recycle_frame_loop_08d8
  3998                                  	.L_tc_recycle_frame_done_08d8:
  3999 00001BEC 4883C308                	add rbx,8
  4000 00001BF0 4889DC                  	mov rsp,rbx
  4001 00001BF3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4002 00001BF7 C9                      	leave
  4003 00001BF8 C21800                  	ret AND_KILL_FRAME(1)
  4004                                  .L_lambda_simple_end_0705:	; new closure is in rax
  4005 00001BFB 48890425[35110000]      	mov qword [free_var_43], rax
  4006 00001C03 48B8-                   	mov rax, sob_void
  4006 00001C05 [0000000000000000] 
  4007                                  
  4008 00001C0D 4889C7                  	mov rdi, rax
  4009 00001C10 E8705B0100              	call print_sexpr_if_not_void
  4010 00001C15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4011 00001C1A E811590100              	call malloc
  4012 00001C1F 50                      	push rax
  4013 00001C20 BF00000000              	mov rdi, 8 * 0	; new rib
  4014 00001C25 E806590100              	call malloc
  4015 00001C2A 50                      	push rax
  4016 00001C2B BF08000000              	mov rdi, 8 * 1	; extended env
  4017 00001C30 E8FB580100              	call malloc
  4018 00001C35 488B7D10                	mov rdi, ENV
  4019 00001C39 BE00000000              	mov rsi, 0
  4020 00001C3E BA01000000              	mov rdx, 1
  4021                                  .L_lambda_simple_env_loop_0706:	; ext_env[i + 1] <-- env[i]
  4022 00001C43 4883FE00                	cmp rsi, 0
  4023 00001C47 7410                    	je .L_lambda_simple_env_end_0706
  4024 00001C49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4025 00001C4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4026 00001C51 48FFC6                  	inc rsi
  4027 00001C54 48FFC2                  	inc rdx
  4028 00001C57 EBEA                    	jmp .L_lambda_simple_env_loop_0706
  4029                                  .L_lambda_simple_env_end_0706:
  4030 00001C59 5B                      	pop rbx
  4031 00001C5A BE00000000              	mov rsi, 0
  4032                                  .L_lambda_simple_params_loop_0706:	; copy params
  4033 00001C5F 4883FE00                	cmp rsi, 0
  4034 00001C63 740E                    	je .L_lambda_simple_params_end_0706
  4035 00001C65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4036 00001C6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4037 00001C6E 48FFC6                  	inc rsi
  4038 00001C71 EBEC                    	jmp .L_lambda_simple_params_loop_0706
  4039                                  .L_lambda_simple_params_end_0706:
  4040 00001C73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4041 00001C76 4889C3                  	mov rbx, rax
  4042 00001C79 58                      	pop rax
  4043 00001C7A C60004                  	mov byte [rax], T_closure
  4044 00001C7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4045 00001C81 48C74009[8E1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0706
  4046 00001C89 E9B6000000              	jmp .L_lambda_simple_end_0706
  4047                                  .L_lambda_simple_code_0706:	; lambda-simple body
  4048 00001C8E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4049 00001C94 740B                    	je .L_lambda_simple_arity_check_ok_07e1
  4050 00001C96 FF742410                	push qword [rsp + 8 * 2]
  4051 00001C9A 6A01                    	push 1
  4052 00001C9C E948580100              	jmp L_error_incorrect_arity_simple
  4053                                  .L_lambda_simple_arity_check_ok_07e1:
  4054 00001CA1 C8000000                	enter 0, 0
  4055                                  	; preparing a tail-call
  4056                                  	; preparing a non-tail-call
  4057 00001CA5 488B4520                	mov rax, PARAM(0)	; param x
  4058 00001CA9 50                      	push rax
  4059 00001CAA 6A01                    	push 1	; arg count
  4060 00001CAC 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4061 00001CB4 803805                  	cmp byte [rax], T_undefined
  4062 00001CB7 0F8446570100            	je L_error_fvar_undefined
  4063 00001CBD 803804                  	cmp byte [rax], T_closure
  4064 00001CC0 0F85C1570100            	jne L_error_non_closure
  4065 00001CC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4066 00001CC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4067 00001CCC 50                      	push rax
  4068 00001CCD 6A01                    	push 1	; arg count
  4069 00001CCF 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  4070 00001CD7 803805                  	cmp byte [rax], T_undefined
  4071 00001CDA 0F8423570100            	je L_error_fvar_undefined
  4072 00001CE0 803804                  	cmp byte [rax], T_closure
  4073 00001CE3 0F859E570100            	jne L_error_non_closure
  4074 00001CE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4075 00001CEC FF7508                  	push qword [rbp + 8 *1]
  4076 00001CEF 4989C0                  	mov r8, rax
  4077 00001CF2 488B5D18                	mov rbx, COUNT
  4078 00001CF6 4883C303                	add rbx,3
  4079 00001CFA 48C1E303                	shl rbx,3
  4080 00001CFE 4801EB                  	add rbx, rbp
  4081 00001D01 488B6D00                	mov rbp, [rbp]
  4082 00001D05 B900000000              	mov rcx,0
  4083 00001D0A BA04000000              	mov rdx, 4
  4084 00001D0F 4889D0                  	mov rax, rdx
  4085 00001D12 48FFC8                  	dec rax
  4086 00001D15 48C1E003                	shl rax,3
  4087 00001D19 4801E0                  	add rax, rsp
  4088                                  	.L_tc_recycle_frame_loop_08d9:
  4089 00001D1C 4839D1                  	cmp rcx, rdx
  4090 00001D1F 7414                    	je .L_tc_recycle_frame_done_08d9
  4091 00001D21 4C8B08                  	mov r9, qword [rax]
  4092 00001D24 4C890B                  	mov qword [rbx],r9
  4093 00001D27 4883E808                	sub rax,8
  4094 00001D2B 4883EB08                	sub rbx,8
  4095 00001D2F 4883C101                	add rcx,1
  4096 00001D33 EBE7                    	jmp .L_tc_recycle_frame_loop_08d9
  4097                                  	.L_tc_recycle_frame_done_08d9:
  4098 00001D35 4883C308                	add rbx,8
  4099 00001D39 4889DC                  	mov rsp,rbx
  4100 00001D3C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4101 00001D40 C9                      	leave
  4102 00001D41 C21800                  	ret AND_KILL_FRAME(1)
  4103                                  .L_lambda_simple_end_0706:	; new closure is in rax
  4104 00001D44 48890425[57110000]      	mov qword [free_var_45], rax
  4105 00001D4C 48B8-                   	mov rax, sob_void
  4105 00001D4E [0000000000000000] 
  4106                                  
  4107 00001D56 4889C7                  	mov rdi, rax
  4108 00001D59 E8275A0100              	call print_sexpr_if_not_void
  4109 00001D5E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4110 00001D63 E8C8570100              	call malloc
  4111 00001D68 50                      	push rax
  4112 00001D69 BF00000000              	mov rdi, 8 * 0	; new rib
  4113 00001D6E E8BD570100              	call malloc
  4114 00001D73 50                      	push rax
  4115 00001D74 BF08000000              	mov rdi, 8 * 1	; extended env
  4116 00001D79 E8B2570100              	call malloc
  4117 00001D7E 488B7D10                	mov rdi, ENV
  4118 00001D82 BE00000000              	mov rsi, 0
  4119 00001D87 BA01000000              	mov rdx, 1
  4120                                  .L_lambda_simple_env_loop_0707:	; ext_env[i + 1] <-- env[i]
  4121 00001D8C 4883FE00                	cmp rsi, 0
  4122 00001D90 7410                    	je .L_lambda_simple_env_end_0707
  4123 00001D92 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4124 00001D96 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4125 00001D9A 48FFC6                  	inc rsi
  4126 00001D9D 48FFC2                  	inc rdx
  4127 00001DA0 EBEA                    	jmp .L_lambda_simple_env_loop_0707
  4128                                  .L_lambda_simple_env_end_0707:
  4129 00001DA2 5B                      	pop rbx
  4130 00001DA3 BE00000000              	mov rsi, 0
  4131                                  .L_lambda_simple_params_loop_0707:	; copy params
  4132 00001DA8 4883FE00                	cmp rsi, 0
  4133 00001DAC 740E                    	je .L_lambda_simple_params_end_0707
  4134 00001DAE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4135 00001DB3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4136 00001DB7 48FFC6                  	inc rsi
  4137 00001DBA EBEC                    	jmp .L_lambda_simple_params_loop_0707
  4138                                  .L_lambda_simple_params_end_0707:
  4139 00001DBC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4140 00001DBF 4889C3                  	mov rbx, rax
  4141 00001DC2 58                      	pop rax
  4142 00001DC3 C60004                  	mov byte [rax], T_closure
  4143 00001DC6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4144 00001DCA 48C74009[D71D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0707
  4145 00001DD2 E9B6000000              	jmp .L_lambda_simple_end_0707
  4146                                  .L_lambda_simple_code_0707:	; lambda-simple body
  4147 00001DD7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4148 00001DDD 740B                    	je .L_lambda_simple_arity_check_ok_07e2
  4149 00001DDF FF742410                	push qword [rsp + 8 * 2]
  4150 00001DE3 6A01                    	push 1
  4151 00001DE5 E9FF560100              	jmp L_error_incorrect_arity_simple
  4152                                  .L_lambda_simple_arity_check_ok_07e2:
  4153 00001DEA C8000000                	enter 0, 0
  4154                                  	; preparing a tail-call
  4155                                  	; preparing a non-tail-call
  4156 00001DEE 488B4520                	mov rax, PARAM(0)	; param x
  4157 00001DF2 50                      	push rax
  4158 00001DF3 6A01                    	push 1	; arg count
  4159 00001DF5 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4160 00001DFD 803805                  	cmp byte [rax], T_undefined
  4161 00001E00 0F84FD550100            	je L_error_fvar_undefined
  4162 00001E06 803804                  	cmp byte [rax], T_closure
  4163 00001E09 0F8578560100            	jne L_error_non_closure
  4164 00001E0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  4165 00001E12 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4166 00001E15 50                      	push rax
  4167 00001E16 6A01                    	push 1	; arg count
  4168 00001E18 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  4169 00001E20 803805                  	cmp byte [rax], T_undefined
  4170 00001E23 0F84DA550100            	je L_error_fvar_undefined
  4171 00001E29 803804                  	cmp byte [rax], T_closure
  4172 00001E2C 0F8555560100            	jne L_error_non_closure
  4173 00001E32 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4174 00001E35 FF7508                  	push qword [rbp + 8 *1]
  4175 00001E38 4989C0                  	mov r8, rax
  4176 00001E3B 488B5D18                	mov rbx, COUNT
  4177 00001E3F 4883C303                	add rbx,3
  4178 00001E43 48C1E303                	shl rbx,3
  4179 00001E47 4801EB                  	add rbx, rbp
  4180 00001E4A 488B6D00                	mov rbp, [rbp]
  4181 00001E4E B900000000              	mov rcx,0
  4182 00001E53 BA04000000              	mov rdx, 4
  4183 00001E58 4889D0                  	mov rax, rdx
  4184 00001E5B 48FFC8                  	dec rax
  4185 00001E5E 48C1E003                	shl rax,3
  4186 00001E62 4801E0                  	add rax, rsp
  4187                                  	.L_tc_recycle_frame_loop_08da:
  4188 00001E65 4839D1                  	cmp rcx, rdx
  4189 00001E68 7414                    	je .L_tc_recycle_frame_done_08da
  4190 00001E6A 4C8B08                  	mov r9, qword [rax]
  4191 00001E6D 4C890B                  	mov qword [rbx],r9
  4192 00001E70 4883E808                	sub rax,8
  4193 00001E74 4883EB08                	sub rbx,8
  4194 00001E78 4883C101                	add rcx,1
  4195 00001E7C EBE7                    	jmp .L_tc_recycle_frame_loop_08da
  4196                                  	.L_tc_recycle_frame_done_08da:
  4197 00001E7E 4883C308                	add rbx,8
  4198 00001E82 4889DC                  	mov rsp,rbx
  4199 00001E85 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4200 00001E89 C9                      	leave
  4201 00001E8A C21800                  	ret AND_KILL_FRAME(1)
  4202                                  .L_lambda_simple_end_0707:	; new closure is in rax
  4203 00001E8D 48890425[68110000]      	mov qword [free_var_46], rax
  4204 00001E95 48B8-                   	mov rax, sob_void
  4204 00001E97 [0000000000000000] 
  4205                                  
  4206 00001E9F 4889C7                  	mov rdi, rax
  4207 00001EA2 E8DE580100              	call print_sexpr_if_not_void
  4208 00001EA7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4209 00001EAC E87F560100              	call malloc
  4210 00001EB1 50                      	push rax
  4211 00001EB2 BF00000000              	mov rdi, 8 * 0	; new rib
  4212 00001EB7 E874560100              	call malloc
  4213 00001EBC 50                      	push rax
  4214 00001EBD BF08000000              	mov rdi, 8 * 1	; extended env
  4215 00001EC2 E869560100              	call malloc
  4216 00001EC7 488B7D10                	mov rdi, ENV
  4217 00001ECB BE00000000              	mov rsi, 0
  4218 00001ED0 BA01000000              	mov rdx, 1
  4219                                  .L_lambda_simple_env_loop_0708:	; ext_env[i + 1] <-- env[i]
  4220 00001ED5 4883FE00                	cmp rsi, 0
  4221 00001ED9 7410                    	je .L_lambda_simple_env_end_0708
  4222 00001EDB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4223 00001EDF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4224 00001EE3 48FFC6                  	inc rsi
  4225 00001EE6 48FFC2                  	inc rdx
  4226 00001EE9 EBEA                    	jmp .L_lambda_simple_env_loop_0708
  4227                                  .L_lambda_simple_env_end_0708:
  4228 00001EEB 5B                      	pop rbx
  4229 00001EEC BE00000000              	mov rsi, 0
  4230                                  .L_lambda_simple_params_loop_0708:	; copy params
  4231 00001EF1 4883FE00                	cmp rsi, 0
  4232 00001EF5 740E                    	je .L_lambda_simple_params_end_0708
  4233 00001EF7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4234 00001EFC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4235 00001F00 48FFC6                  	inc rsi
  4236 00001F03 EBEC                    	jmp .L_lambda_simple_params_loop_0708
  4237                                  .L_lambda_simple_params_end_0708:
  4238 00001F05 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4239 00001F08 4889C3                  	mov rbx, rax
  4240 00001F0B 58                      	pop rax
  4241 00001F0C C60004                  	mov byte [rax], T_closure
  4242 00001F0F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4243 00001F13 48C74009[201F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0708
  4244 00001F1B E9B6000000              	jmp .L_lambda_simple_end_0708
  4245                                  .L_lambda_simple_code_0708:	; lambda-simple body
  4246 00001F20 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4247 00001F26 740B                    	je .L_lambda_simple_arity_check_ok_07e3
  4248 00001F28 FF742410                	push qword [rsp + 8 * 2]
  4249 00001F2C 6A01                    	push 1
  4250 00001F2E E9B6550100              	jmp L_error_incorrect_arity_simple
  4251                                  .L_lambda_simple_arity_check_ok_07e3:
  4252 00001F33 C8000000                	enter 0, 0
  4253                                  	; preparing a tail-call
  4254                                  	; preparing a non-tail-call
  4255 00001F37 488B4520                	mov rax, PARAM(0)	; param x
  4256 00001F3B 50                      	push rax
  4257 00001F3C 6A01                    	push 1	; arg count
  4258 00001F3E 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  4259 00001F46 803805                  	cmp byte [rax], T_undefined
  4260 00001F49 0F84B4540100            	je L_error_fvar_undefined
  4261 00001F4F 803804                  	cmp byte [rax], T_closure
  4262 00001F52 0F852F550100            	jne L_error_non_closure
  4263 00001F58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4264 00001F5B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4265 00001F5E 50                      	push rax
  4266 00001F5F 6A01                    	push 1	; arg count
  4267 00001F61 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4268 00001F69 803805                  	cmp byte [rax], T_undefined
  4269 00001F6C 0F8491540100            	je L_error_fvar_undefined
  4270 00001F72 803804                  	cmp byte [rax], T_closure
  4271 00001F75 0F850C550100            	jne L_error_non_closure
  4272 00001F7B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4273 00001F7E FF7508                  	push qword [rbp + 8 *1]
  4274 00001F81 4989C0                  	mov r8, rax
  4275 00001F84 488B5D18                	mov rbx, COUNT
  4276 00001F88 4883C303                	add rbx,3
  4277 00001F8C 48C1E303                	shl rbx,3
  4278 00001F90 4801EB                  	add rbx, rbp
  4279 00001F93 488B6D00                	mov rbp, [rbp]
  4280 00001F97 B900000000              	mov rcx,0
  4281 00001F9C BA04000000              	mov rdx, 4
  4282 00001FA1 4889D0                  	mov rax, rdx
  4283 00001FA4 48FFC8                  	dec rax
  4284 00001FA7 48C1E003                	shl rax,3
  4285 00001FAB 4801E0                  	add rax, rsp
  4286                                  	.L_tc_recycle_frame_loop_08db:
  4287 00001FAE 4839D1                  	cmp rcx, rdx
  4288 00001FB1 7414                    	je .L_tc_recycle_frame_done_08db
  4289 00001FB3 4C8B08                  	mov r9, qword [rax]
  4290 00001FB6 4C890B                  	mov qword [rbx],r9
  4291 00001FB9 4883E808                	sub rax,8
  4292 00001FBD 4883EB08                	sub rbx,8
  4293 00001FC1 4883C101                	add rcx,1
  4294 00001FC5 EBE7                    	jmp .L_tc_recycle_frame_loop_08db
  4295                                  	.L_tc_recycle_frame_done_08db:
  4296 00001FC7 4883C308                	add rbx,8
  4297 00001FCB 4889DC                  	mov rsp,rbx
  4298 00001FCE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4299 00001FD2 C9                      	leave
  4300 00001FD3 C21800                  	ret AND_KILL_FRAME(1)
  4301                                  .L_lambda_simple_end_0708:	; new closure is in rax
  4302 00001FD6 48890425[AC110000]      	mov qword [free_var_50], rax
  4303 00001FDE 48B8-                   	mov rax, sob_void
  4303 00001FE0 [0000000000000000] 
  4304                                  
  4305 00001FE8 4889C7                  	mov rdi, rax
  4306 00001FEB E895570100              	call print_sexpr_if_not_void
  4307 00001FF0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4308 00001FF5 E836550100              	call malloc
  4309 00001FFA 50                      	push rax
  4310 00001FFB BF00000000              	mov rdi, 8 * 0	; new rib
  4311 00002000 E82B550100              	call malloc
  4312 00002005 50                      	push rax
  4313 00002006 BF08000000              	mov rdi, 8 * 1	; extended env
  4314 0000200B E820550100              	call malloc
  4315 00002010 488B7D10                	mov rdi, ENV
  4316 00002014 BE00000000              	mov rsi, 0
  4317 00002019 BA01000000              	mov rdx, 1
  4318                                  .L_lambda_simple_env_loop_0709:	; ext_env[i + 1] <-- env[i]
  4319 0000201E 4883FE00                	cmp rsi, 0
  4320 00002022 7410                    	je .L_lambda_simple_env_end_0709
  4321 00002024 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4322 00002028 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4323 0000202C 48FFC6                  	inc rsi
  4324 0000202F 48FFC2                  	inc rdx
  4325 00002032 EBEA                    	jmp .L_lambda_simple_env_loop_0709
  4326                                  .L_lambda_simple_env_end_0709:
  4327 00002034 5B                      	pop rbx
  4328 00002035 BE00000000              	mov rsi, 0
  4329                                  .L_lambda_simple_params_loop_0709:	; copy params
  4330 0000203A 4883FE00                	cmp rsi, 0
  4331 0000203E 740E                    	je .L_lambda_simple_params_end_0709
  4332 00002040 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4333 00002045 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4334 00002049 48FFC6                  	inc rsi
  4335 0000204C EBEC                    	jmp .L_lambda_simple_params_loop_0709
  4336                                  .L_lambda_simple_params_end_0709:
  4337 0000204E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4338 00002051 4889C3                  	mov rbx, rax
  4339 00002054 58                      	pop rax
  4340 00002055 C60004                  	mov byte [rax], T_closure
  4341 00002058 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4342 0000205C 48C74009[69200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0709
  4343 00002064 E9B6000000              	jmp .L_lambda_simple_end_0709
  4344                                  .L_lambda_simple_code_0709:	; lambda-simple body
  4345 00002069 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4346 0000206F 740B                    	je .L_lambda_simple_arity_check_ok_07e4
  4347 00002071 FF742410                	push qword [rsp + 8 * 2]
  4348 00002075 6A01                    	push 1
  4349 00002077 E96D540100              	jmp L_error_incorrect_arity_simple
  4350                                  .L_lambda_simple_arity_check_ok_07e4:
  4351 0000207C C8000000                	enter 0, 0
  4352                                  	; preparing a tail-call
  4353                                  	; preparing a non-tail-call
  4354 00002080 488B4520                	mov rax, PARAM(0)	; param x
  4355 00002084 50                      	push rax
  4356 00002085 6A01                    	push 1	; arg count
  4357 00002087 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  4358 0000208F 803805                  	cmp byte [rax], T_undefined
  4359 00002092 0F846B530100            	je L_error_fvar_undefined
  4360 00002098 803804                  	cmp byte [rax], T_closure
  4361 0000209B 0F85E6530100            	jne L_error_non_closure
  4362 000020A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4363 000020A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4364 000020A7 50                      	push rax
  4365 000020A8 6A01                    	push 1	; arg count
  4366 000020AA 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4367 000020B2 803805                  	cmp byte [rax], T_undefined
  4368 000020B5 0F8448530100            	je L_error_fvar_undefined
  4369 000020BB 803804                  	cmp byte [rax], T_closure
  4370 000020BE 0F85C3530100            	jne L_error_non_closure
  4371 000020C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4372 000020C7 FF7508                  	push qword [rbp + 8 *1]
  4373 000020CA 4989C0                  	mov r8, rax
  4374 000020CD 488B5D18                	mov rbx, COUNT
  4375 000020D1 4883C303                	add rbx,3
  4376 000020D5 48C1E303                	shl rbx,3
  4377 000020D9 4801EB                  	add rbx, rbp
  4378 000020DC 488B6D00                	mov rbp, [rbp]
  4379 000020E0 B900000000              	mov rcx,0
  4380 000020E5 BA04000000              	mov rdx, 4
  4381 000020EA 4889D0                  	mov rax, rdx
  4382 000020ED 48FFC8                  	dec rax
  4383 000020F0 48C1E003                	shl rax,3
  4384 000020F4 4801E0                  	add rax, rsp
  4385                                  	.L_tc_recycle_frame_loop_08dc:
  4386 000020F7 4839D1                  	cmp rcx, rdx
  4387 000020FA 7414                    	je .L_tc_recycle_frame_done_08dc
  4388 000020FC 4C8B08                  	mov r9, qword [rax]
  4389 000020FF 4C890B                  	mov qword [rbx],r9
  4390 00002102 4883E808                	sub rax,8
  4391 00002106 4883EB08                	sub rbx,8
  4392 0000210A 4883C101                	add rcx,1
  4393 0000210E EBE7                    	jmp .L_tc_recycle_frame_loop_08dc
  4394                                  	.L_tc_recycle_frame_done_08dc:
  4395 00002110 4883C308                	add rbx,8
  4396 00002114 4889DC                  	mov rsp,rbx
  4397 00002117 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4398 0000211B C9                      	leave
  4399 0000211C C21800                  	ret AND_KILL_FRAME(1)
  4400                                  .L_lambda_simple_end_0709:	; new closure is in rax
  4401 0000211F 48890425[BD110000]      	mov qword [free_var_51], rax
  4402 00002127 48B8-                   	mov rax, sob_void
  4402 00002129 [0000000000000000] 
  4403                                  
  4404 00002131 4889C7                  	mov rdi, rax
  4405 00002134 E84C560100              	call print_sexpr_if_not_void
  4406 00002139 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4407 0000213E E8ED530100              	call malloc
  4408 00002143 50                      	push rax
  4409 00002144 BF00000000              	mov rdi, 8 * 0	; new rib
  4410 00002149 E8E2530100              	call malloc
  4411 0000214E 50                      	push rax
  4412 0000214F BF08000000              	mov rdi, 8 * 1	; extended env
  4413 00002154 E8D7530100              	call malloc
  4414 00002159 488B7D10                	mov rdi, ENV
  4415 0000215D BE00000000              	mov rsi, 0
  4416 00002162 BA01000000              	mov rdx, 1
  4417                                  .L_lambda_simple_env_loop_070a:	; ext_env[i + 1] <-- env[i]
  4418 00002167 4883FE00                	cmp rsi, 0
  4419 0000216B 7410                    	je .L_lambda_simple_env_end_070a
  4420 0000216D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4421 00002171 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4422 00002175 48FFC6                  	inc rsi
  4423 00002178 48FFC2                  	inc rdx
  4424 0000217B EBEA                    	jmp .L_lambda_simple_env_loop_070a
  4425                                  .L_lambda_simple_env_end_070a:
  4426 0000217D 5B                      	pop rbx
  4427 0000217E BE00000000              	mov rsi, 0
  4428                                  .L_lambda_simple_params_loop_070a:	; copy params
  4429 00002183 4883FE00                	cmp rsi, 0
  4430 00002187 740E                    	je .L_lambda_simple_params_end_070a
  4431 00002189 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4432 0000218E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4433 00002192 48FFC6                  	inc rsi
  4434 00002195 EBEC                    	jmp .L_lambda_simple_params_loop_070a
  4435                                  .L_lambda_simple_params_end_070a:
  4436 00002197 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4437 0000219A 4889C3                  	mov rbx, rax
  4438 0000219D 58                      	pop rax
  4439 0000219E C60004                  	mov byte [rax], T_closure
  4440 000021A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4441 000021A5 48C74009[B2210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070a
  4442 000021AD E9B6000000              	jmp .L_lambda_simple_end_070a
  4443                                  .L_lambda_simple_code_070a:	; lambda-simple body
  4444 000021B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4445 000021B8 740B                    	je .L_lambda_simple_arity_check_ok_07e5
  4446 000021BA FF742410                	push qword [rsp + 8 * 2]
  4447 000021BE 6A01                    	push 1
  4448 000021C0 E924530100              	jmp L_error_incorrect_arity_simple
  4449                                  .L_lambda_simple_arity_check_ok_07e5:
  4450 000021C5 C8000000                	enter 0, 0
  4451                                  	; preparing a tail-call
  4452                                  	; preparing a non-tail-call
  4453 000021C9 488B4520                	mov rax, PARAM(0)	; param x
  4454 000021CD 50                      	push rax
  4455 000021CE 6A01                    	push 1	; arg count
  4456 000021D0 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4457 000021D8 803805                  	cmp byte [rax], T_undefined
  4458 000021DB 0F8422520100            	je L_error_fvar_undefined
  4459 000021E1 803804                  	cmp byte [rax], T_closure
  4460 000021E4 0F859D520100            	jne L_error_non_closure
  4461 000021EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4462 000021ED FF5009                  	call SOB_CLOSURE_CODE(rax)
  4463 000021F0 50                      	push rax
  4464 000021F1 6A01                    	push 1	; arg count
  4465 000021F3 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4466 000021FB 803805                  	cmp byte [rax], T_undefined
  4467 000021FE 0F84FF510100            	je L_error_fvar_undefined
  4468 00002204 803804                  	cmp byte [rax], T_closure
  4469 00002207 0F857A520100            	jne L_error_non_closure
  4470 0000220D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4471 00002210 FF7508                  	push qword [rbp + 8 *1]
  4472 00002213 4989C0                  	mov r8, rax
  4473 00002216 488B5D18                	mov rbx, COUNT
  4474 0000221A 4883C303                	add rbx,3
  4475 0000221E 48C1E303                	shl rbx,3
  4476 00002222 4801EB                  	add rbx, rbp
  4477 00002225 488B6D00                	mov rbp, [rbp]
  4478 00002229 B900000000              	mov rcx,0
  4479 0000222E BA04000000              	mov rdx, 4
  4480 00002233 4889D0                  	mov rax, rdx
  4481 00002236 48FFC8                  	dec rax
  4482 00002239 48C1E003                	shl rax,3
  4483 0000223D 4801E0                  	add rax, rsp
  4484                                  	.L_tc_recycle_frame_loop_08dd:
  4485 00002240 4839D1                  	cmp rcx, rdx
  4486 00002243 7414                    	je .L_tc_recycle_frame_done_08dd
  4487 00002245 4C8B08                  	mov r9, qword [rax]
  4488 00002248 4C890B                  	mov qword [rbx],r9
  4489 0000224B 4883E808                	sub rax,8
  4490 0000224F 4883EB08                	sub rbx,8
  4491 00002253 4883C101                	add rcx,1
  4492 00002257 EBE7                    	jmp .L_tc_recycle_frame_loop_08dd
  4493                                  	.L_tc_recycle_frame_done_08dd:
  4494 00002259 4883C308                	add rbx,8
  4495 0000225D 4889DC                  	mov rsp,rbx
  4496 00002260 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4497 00002264 C9                      	leave
  4498 00002265 C21800                  	ret AND_KILL_FRAME(1)
  4499                                  .L_lambda_simple_end_070a:	; new closure is in rax
  4500 00002268 48890425[DF110000]      	mov qword [free_var_53], rax
  4501 00002270 48B8-                   	mov rax, sob_void
  4501 00002272 [0000000000000000] 
  4502                                  
  4503 0000227A 4889C7                  	mov rdi, rax
  4504 0000227D E803550100              	call print_sexpr_if_not_void
  4505 00002282 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4506 00002287 E8A4520100              	call malloc
  4507 0000228C 50                      	push rax
  4508 0000228D BF00000000              	mov rdi, 8 * 0	; new rib
  4509 00002292 E899520100              	call malloc
  4510 00002297 50                      	push rax
  4511 00002298 BF08000000              	mov rdi, 8 * 1	; extended env
  4512 0000229D E88E520100              	call malloc
  4513 000022A2 488B7D10                	mov rdi, ENV
  4514 000022A6 BE00000000              	mov rsi, 0
  4515 000022AB BA01000000              	mov rdx, 1
  4516                                  .L_lambda_simple_env_loop_070b:	; ext_env[i + 1] <-- env[i]
  4517 000022B0 4883FE00                	cmp rsi, 0
  4518 000022B4 7410                    	je .L_lambda_simple_env_end_070b
  4519 000022B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4520 000022BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4521 000022BE 48FFC6                  	inc rsi
  4522 000022C1 48FFC2                  	inc rdx
  4523 000022C4 EBEA                    	jmp .L_lambda_simple_env_loop_070b
  4524                                  .L_lambda_simple_env_end_070b:
  4525 000022C6 5B                      	pop rbx
  4526 000022C7 BE00000000              	mov rsi, 0
  4527                                  .L_lambda_simple_params_loop_070b:	; copy params
  4528 000022CC 4883FE00                	cmp rsi, 0
  4529 000022D0 740E                    	je .L_lambda_simple_params_end_070b
  4530 000022D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4531 000022D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4532 000022DB 48FFC6                  	inc rsi
  4533 000022DE EBEC                    	jmp .L_lambda_simple_params_loop_070b
  4534                                  .L_lambda_simple_params_end_070b:
  4535 000022E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4536 000022E3 4889C3                  	mov rbx, rax
  4537 000022E6 58                      	pop rax
  4538 000022E7 C60004                  	mov byte [rax], T_closure
  4539 000022EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4540 000022EE 48C74009[FB220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070b
  4541 000022F6 E9B6000000              	jmp .L_lambda_simple_end_070b
  4542                                  .L_lambda_simple_code_070b:	; lambda-simple body
  4543 000022FB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4544 00002301 740B                    	je .L_lambda_simple_arity_check_ok_07e6
  4545 00002303 FF742410                	push qword [rsp + 8 * 2]
  4546 00002307 6A01                    	push 1
  4547 00002309 E9DB510100              	jmp L_error_incorrect_arity_simple
  4548                                  .L_lambda_simple_arity_check_ok_07e6:
  4549 0000230E C8000000                	enter 0, 0
  4550                                  	; preparing a tail-call
  4551                                  	; preparing a non-tail-call
  4552 00002312 488B4520                	mov rax, PARAM(0)	; param x
  4553 00002316 50                      	push rax
  4554 00002317 6A01                    	push 1	; arg count
  4555 00002319 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4556 00002321 803805                  	cmp byte [rax], T_undefined
  4557 00002324 0F84D9500100            	je L_error_fvar_undefined
  4558 0000232A 803804                  	cmp byte [rax], T_closure
  4559 0000232D 0F8554510100            	jne L_error_non_closure
  4560 00002333 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4561 00002336 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4562 00002339 50                      	push rax
  4563 0000233A 6A01                    	push 1	; arg count
  4564 0000233C 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4565 00002344 803805                  	cmp byte [rax], T_undefined
  4566 00002347 0F84B6500100            	je L_error_fvar_undefined
  4567 0000234D 803804                  	cmp byte [rax], T_closure
  4568 00002350 0F8531510100            	jne L_error_non_closure
  4569 00002356 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4570 00002359 FF7508                  	push qword [rbp + 8 *1]
  4571 0000235C 4989C0                  	mov r8, rax
  4572 0000235F 488B5D18                	mov rbx, COUNT
  4573 00002363 4883C303                	add rbx,3
  4574 00002367 48C1E303                	shl rbx,3
  4575 0000236B 4801EB                  	add rbx, rbp
  4576 0000236E 488B6D00                	mov rbp, [rbp]
  4577 00002372 B900000000              	mov rcx,0
  4578 00002377 BA04000000              	mov rdx, 4
  4579 0000237C 4889D0                  	mov rax, rdx
  4580 0000237F 48FFC8                  	dec rax
  4581 00002382 48C1E003                	shl rax,3
  4582 00002386 4801E0                  	add rax, rsp
  4583                                  	.L_tc_recycle_frame_loop_08de:
  4584 00002389 4839D1                  	cmp rcx, rdx
  4585 0000238C 7414                    	je .L_tc_recycle_frame_done_08de
  4586 0000238E 4C8B08                  	mov r9, qword [rax]
  4587 00002391 4C890B                  	mov qword [rbx],r9
  4588 00002394 4883E808                	sub rax,8
  4589 00002398 4883EB08                	sub rbx,8
  4590 0000239C 4883C101                	add rcx,1
  4591 000023A0 EBE7                    	jmp .L_tc_recycle_frame_loop_08de
  4592                                  	.L_tc_recycle_frame_done_08de:
  4593 000023A2 4883C308                	add rbx,8
  4594 000023A6 4889DC                  	mov rsp,rbx
  4595 000023A9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4596 000023AD C9                      	leave
  4597 000023AE C21800                  	ret AND_KILL_FRAME(1)
  4598                                  .L_lambda_simple_end_070b:	; new closure is in rax
  4599 000023B1 48890425[F0110000]      	mov qword [free_var_54], rax
  4600 000023B9 48B8-                   	mov rax, sob_void
  4600 000023BB [0000000000000000] 
  4601                                  
  4602 000023C3 4889C7                  	mov rdi, rax
  4603 000023C6 E8BA530100              	call print_sexpr_if_not_void
  4604 000023CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4605 000023D0 E85B510100              	call malloc
  4606 000023D5 50                      	push rax
  4607 000023D6 BF00000000              	mov rdi, 8 * 0	; new rib
  4608 000023DB E850510100              	call malloc
  4609 000023E0 50                      	push rax
  4610 000023E1 BF08000000              	mov rdi, 8 * 1	; extended env
  4611 000023E6 E845510100              	call malloc
  4612 000023EB 488B7D10                	mov rdi, ENV
  4613 000023EF BE00000000              	mov rsi, 0
  4614 000023F4 BA01000000              	mov rdx, 1
  4615                                  .L_lambda_simple_env_loop_070c:	; ext_env[i + 1] <-- env[i]
  4616 000023F9 4883FE00                	cmp rsi, 0
  4617 000023FD 7410                    	je .L_lambda_simple_env_end_070c
  4618 000023FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4619 00002403 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4620 00002407 48FFC6                  	inc rsi
  4621 0000240A 48FFC2                  	inc rdx
  4622 0000240D EBEA                    	jmp .L_lambda_simple_env_loop_070c
  4623                                  .L_lambda_simple_env_end_070c:
  4624 0000240F 5B                      	pop rbx
  4625 00002410 BE00000000              	mov rsi, 0
  4626                                  .L_lambda_simple_params_loop_070c:	; copy params
  4627 00002415 4883FE00                	cmp rsi, 0
  4628 00002419 740E                    	je .L_lambda_simple_params_end_070c
  4629 0000241B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4630 00002420 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4631 00002424 48FFC6                  	inc rsi
  4632 00002427 EBEC                    	jmp .L_lambda_simple_params_loop_070c
  4633                                  .L_lambda_simple_params_end_070c:
  4634 00002429 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4635 0000242C 4889C3                  	mov rbx, rax
  4636 0000242F 58                      	pop rax
  4637 00002430 C60004                  	mov byte [rax], T_closure
  4638 00002433 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4639 00002437 48C74009[44240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070c
  4640 0000243F E9B6000000              	jmp .L_lambda_simple_end_070c
  4641                                  .L_lambda_simple_code_070c:	; lambda-simple body
  4642 00002444 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4643 0000244A 740B                    	je .L_lambda_simple_arity_check_ok_07e7
  4644 0000244C FF742410                	push qword [rsp + 8 * 2]
  4645 00002450 6A01                    	push 1
  4646 00002452 E992500100              	jmp L_error_incorrect_arity_simple
  4647                                  .L_lambda_simple_arity_check_ok_07e7:
  4648 00002457 C8000000                	enter 0, 0
  4649                                  	; preparing a tail-call
  4650                                  	; preparing a non-tail-call
  4651 0000245B 488B4520                	mov rax, PARAM(0)	; param x
  4652 0000245F 50                      	push rax
  4653 00002460 6A01                    	push 1	; arg count
  4654 00002462 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
  4655 0000246A 803805                  	cmp byte [rax], T_undefined
  4656 0000246D 0F84904F0100            	je L_error_fvar_undefined
  4657 00002473 803804                  	cmp byte [rax], T_closure
  4658 00002476 0F850B500100            	jne L_error_non_closure
  4659 0000247C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4660 0000247F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4661 00002482 50                      	push rax
  4662 00002483 6A01                    	push 1	; arg count
  4663 00002485 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4664 0000248D 803805                  	cmp byte [rax], T_undefined
  4665 00002490 0F846D4F0100            	je L_error_fvar_undefined
  4666 00002496 803804                  	cmp byte [rax], T_closure
  4667 00002499 0F85E84F0100            	jne L_error_non_closure
  4668 0000249F FF7001                  	push SOB_CLOSURE_ENV(rax)
  4669 000024A2 FF7508                  	push qword [rbp + 8 *1]
  4670 000024A5 4989C0                  	mov r8, rax
  4671 000024A8 488B5D18                	mov rbx, COUNT
  4672 000024AC 4883C303                	add rbx,3
  4673 000024B0 48C1E303                	shl rbx,3
  4674 000024B4 4801EB                  	add rbx, rbp
  4675 000024B7 488B6D00                	mov rbp, [rbp]
  4676 000024BB B900000000              	mov rcx,0
  4677 000024C0 BA04000000              	mov rdx, 4
  4678 000024C5 4889D0                  	mov rax, rdx
  4679 000024C8 48FFC8                  	dec rax
  4680 000024CB 48C1E003                	shl rax,3
  4681 000024CF 4801E0                  	add rax, rsp
  4682                                  	.L_tc_recycle_frame_loop_08df:
  4683 000024D2 4839D1                  	cmp rcx, rdx
  4684 000024D5 7414                    	je .L_tc_recycle_frame_done_08df
  4685 000024D7 4C8B08                  	mov r9, qword [rax]
  4686 000024DA 4C890B                  	mov qword [rbx],r9
  4687 000024DD 4883E808                	sub rax,8
  4688 000024E1 4883EB08                	sub rbx,8
  4689 000024E5 4883C101                	add rcx,1
  4690 000024E9 EBE7                    	jmp .L_tc_recycle_frame_loop_08df
  4691                                  	.L_tc_recycle_frame_done_08df:
  4692 000024EB 4883C308                	add rbx,8
  4693 000024EF 4889DC                  	mov rsp,rbx
  4694 000024F2 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4695 000024F6 C9                      	leave
  4696 000024F7 C21800                  	ret AND_KILL_FRAME(1)
  4697                                  .L_lambda_simple_end_070c:	; new closure is in rax
  4698 000024FA 48890425[23120000]      	mov qword [free_var_57], rax
  4699 00002502 48B8-                   	mov rax, sob_void
  4699 00002504 [0000000000000000] 
  4700                                  
  4701 0000250C 4889C7                  	mov rdi, rax
  4702 0000250F E871520100              	call print_sexpr_if_not_void
  4703 00002514 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4704 00002519 E812500100              	call malloc
  4705 0000251E 50                      	push rax
  4706 0000251F BF00000000              	mov rdi, 8 * 0	; new rib
  4707 00002524 E807500100              	call malloc
  4708 00002529 50                      	push rax
  4709 0000252A BF08000000              	mov rdi, 8 * 1	; extended env
  4710 0000252F E8FC4F0100              	call malloc
  4711 00002534 488B7D10                	mov rdi, ENV
  4712 00002538 BE00000000              	mov rsi, 0
  4713 0000253D BA01000000              	mov rdx, 1
  4714                                  .L_lambda_simple_env_loop_070d:	; ext_env[i + 1] <-- env[i]
  4715 00002542 4883FE00                	cmp rsi, 0
  4716 00002546 7410                    	je .L_lambda_simple_env_end_070d
  4717 00002548 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4718 0000254C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4719 00002550 48FFC6                  	inc rsi
  4720 00002553 48FFC2                  	inc rdx
  4721 00002556 EBEA                    	jmp .L_lambda_simple_env_loop_070d
  4722                                  .L_lambda_simple_env_end_070d:
  4723 00002558 5B                      	pop rbx
  4724 00002559 BE00000000              	mov rsi, 0
  4725                                  .L_lambda_simple_params_loop_070d:	; copy params
  4726 0000255E 4883FE00                	cmp rsi, 0
  4727 00002562 740E                    	je .L_lambda_simple_params_end_070d
  4728 00002564 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4729 00002569 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4730 0000256D 48FFC6                  	inc rsi
  4731 00002570 EBEC                    	jmp .L_lambda_simple_params_loop_070d
  4732                                  .L_lambda_simple_params_end_070d:
  4733 00002572 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4734 00002575 4889C3                  	mov rbx, rax
  4735 00002578 58                      	pop rax
  4736 00002579 C60004                  	mov byte [rax], T_closure
  4737 0000257C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4738 00002580 48C74009[8D250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070d
  4739 00002588 E9B6000000              	jmp .L_lambda_simple_end_070d
  4740                                  .L_lambda_simple_code_070d:	; lambda-simple body
  4741 0000258D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4742 00002593 740B                    	je .L_lambda_simple_arity_check_ok_07e8
  4743 00002595 FF742410                	push qword [rsp + 8 * 2]
  4744 00002599 6A01                    	push 1
  4745 0000259B E9494F0100              	jmp L_error_incorrect_arity_simple
  4746                                  .L_lambda_simple_arity_check_ok_07e8:
  4747 000025A0 C8000000                	enter 0, 0
  4748                                  	; preparing a tail-call
  4749                                  	; preparing a non-tail-call
  4750 000025A4 488B4520                	mov rax, PARAM(0)	; param x
  4751 000025A8 50                      	push rax
  4752 000025A9 6A01                    	push 1	; arg count
  4753 000025AB 488B0425[8A110000]      	mov rax, qword [free_var_48]	; free var cadr
  4754 000025B3 803805                  	cmp byte [rax], T_undefined
  4755 000025B6 0F84474E0100            	je L_error_fvar_undefined
  4756 000025BC 803804                  	cmp byte [rax], T_closure
  4757 000025BF 0F85C24E0100            	jne L_error_non_closure
  4758 000025C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4759 000025C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4760 000025CB 50                      	push rax
  4761 000025CC 6A01                    	push 1	; arg count
  4762 000025CE 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4763 000025D6 803805                  	cmp byte [rax], T_undefined
  4764 000025D9 0F84244E0100            	je L_error_fvar_undefined
  4765 000025DF 803804                  	cmp byte [rax], T_closure
  4766 000025E2 0F859F4E0100            	jne L_error_non_closure
  4767 000025E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4768 000025EB FF7508                  	push qword [rbp + 8 *1]
  4769 000025EE 4989C0                  	mov r8, rax
  4770 000025F1 488B5D18                	mov rbx, COUNT
  4771 000025F5 4883C303                	add rbx,3
  4772 000025F9 48C1E303                	shl rbx,3
  4773 000025FD 4801EB                  	add rbx, rbp
  4774 00002600 488B6D00                	mov rbp, [rbp]
  4775 00002604 B900000000              	mov rcx,0
  4776 00002609 BA04000000              	mov rdx, 4
  4777 0000260E 4889D0                  	mov rax, rdx
  4778 00002611 48FFC8                  	dec rax
  4779 00002614 48C1E003                	shl rax,3
  4780 00002618 4801E0                  	add rax, rsp
  4781                                  	.L_tc_recycle_frame_loop_08e0:
  4782 0000261B 4839D1                  	cmp rcx, rdx
  4783 0000261E 7414                    	je .L_tc_recycle_frame_done_08e0
  4784 00002620 4C8B08                  	mov r9, qword [rax]
  4785 00002623 4C890B                  	mov qword [rbx],r9
  4786 00002626 4883E808                	sub rax,8
  4787 0000262A 4883EB08                	sub rbx,8
  4788 0000262E 4883C101                	add rcx,1
  4789 00002632 EBE7                    	jmp .L_tc_recycle_frame_loop_08e0
  4790                                  	.L_tc_recycle_frame_done_08e0:
  4791 00002634 4883C308                	add rbx,8
  4792 00002638 4889DC                  	mov rsp,rbx
  4793 0000263B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4794 0000263F C9                      	leave
  4795 00002640 C21800                  	ret AND_KILL_FRAME(1)
  4796                                  .L_lambda_simple_end_070d:	; new closure is in rax
  4797 00002643 48890425[34120000]      	mov qword [free_var_58], rax
  4798 0000264B 48B8-                   	mov rax, sob_void
  4798 0000264D [0000000000000000] 
  4799                                  
  4800 00002655 4889C7                  	mov rdi, rax
  4801 00002658 E828510100              	call print_sexpr_if_not_void
  4802 0000265D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4803 00002662 E8C94E0100              	call malloc
  4804 00002667 50                      	push rax
  4805 00002668 BF00000000              	mov rdi, 8 * 0	; new rib
  4806 0000266D E8BE4E0100              	call malloc
  4807 00002672 50                      	push rax
  4808 00002673 BF08000000              	mov rdi, 8 * 1	; extended env
  4809 00002678 E8B34E0100              	call malloc
  4810 0000267D 488B7D10                	mov rdi, ENV
  4811 00002681 BE00000000              	mov rsi, 0
  4812 00002686 BA01000000              	mov rdx, 1
  4813                                  .L_lambda_simple_env_loop_070e:	; ext_env[i + 1] <-- env[i]
  4814 0000268B 4883FE00                	cmp rsi, 0
  4815 0000268F 7410                    	je .L_lambda_simple_env_end_070e
  4816 00002691 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4817 00002695 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4818 00002699 48FFC6                  	inc rsi
  4819 0000269C 48FFC2                  	inc rdx
  4820 0000269F EBEA                    	jmp .L_lambda_simple_env_loop_070e
  4821                                  .L_lambda_simple_env_end_070e:
  4822 000026A1 5B                      	pop rbx
  4823 000026A2 BE00000000              	mov rsi, 0
  4824                                  .L_lambda_simple_params_loop_070e:	; copy params
  4825 000026A7 4883FE00                	cmp rsi, 0
  4826 000026AB 740E                    	je .L_lambda_simple_params_end_070e
  4827 000026AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4828 000026B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4829 000026B6 48FFC6                  	inc rsi
  4830 000026B9 EBEC                    	jmp .L_lambda_simple_params_loop_070e
  4831                                  .L_lambda_simple_params_end_070e:
  4832 000026BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4833 000026BE 4889C3                  	mov rbx, rax
  4834 000026C1 58                      	pop rax
  4835 000026C2 C60004                  	mov byte [rax], T_closure
  4836 000026C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4837 000026C9 48C74009[D6260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070e
  4838 000026D1 E9B6000000              	jmp .L_lambda_simple_end_070e
  4839                                  .L_lambda_simple_code_070e:	; lambda-simple body
  4840 000026D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4841 000026DC 740B                    	je .L_lambda_simple_arity_check_ok_07e9
  4842 000026DE FF742410                	push qword [rsp + 8 * 2]
  4843 000026E2 6A01                    	push 1
  4844 000026E4 E9004E0100              	jmp L_error_incorrect_arity_simple
  4845                                  .L_lambda_simple_arity_check_ok_07e9:
  4846 000026E9 C8000000                	enter 0, 0
  4847                                  	; preparing a tail-call
  4848                                  	; preparing a non-tail-call
  4849 000026ED 488B4520                	mov rax, PARAM(0)	; param x
  4850 000026F1 50                      	push rax
  4851 000026F2 6A01                    	push 1	; arg count
  4852 000026F4 488B0425[12120000]      	mov rax, qword [free_var_56]	; free var cdar
  4853 000026FC 803805                  	cmp byte [rax], T_undefined
  4854 000026FF 0F84FE4C0100            	je L_error_fvar_undefined
  4855 00002705 803804                  	cmp byte [rax], T_closure
  4856 00002708 0F85794D0100            	jne L_error_non_closure
  4857 0000270E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4858 00002711 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4859 00002714 50                      	push rax
  4860 00002715 6A01                    	push 1	; arg count
  4861 00002717 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4862 0000271F 803805                  	cmp byte [rax], T_undefined
  4863 00002722 0F84DB4C0100            	je L_error_fvar_undefined
  4864 00002728 803804                  	cmp byte [rax], T_closure
  4865 0000272B 0F85564D0100            	jne L_error_non_closure
  4866 00002731 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4867 00002734 FF7508                  	push qword [rbp + 8 *1]
  4868 00002737 4989C0                  	mov r8, rax
  4869 0000273A 488B5D18                	mov rbx, COUNT
  4870 0000273E 4883C303                	add rbx,3
  4871 00002742 48C1E303                	shl rbx,3
  4872 00002746 4801EB                  	add rbx, rbp
  4873 00002749 488B6D00                	mov rbp, [rbp]
  4874 0000274D B900000000              	mov rcx,0
  4875 00002752 BA04000000              	mov rdx, 4
  4876 00002757 4889D0                  	mov rax, rdx
  4877 0000275A 48FFC8                  	dec rax
  4878 0000275D 48C1E003                	shl rax,3
  4879 00002761 4801E0                  	add rax, rsp
  4880                                  	.L_tc_recycle_frame_loop_08e1:
  4881 00002764 4839D1                  	cmp rcx, rdx
  4882 00002767 7414                    	je .L_tc_recycle_frame_done_08e1
  4883 00002769 4C8B08                  	mov r9, qword [rax]
  4884 0000276C 4C890B                  	mov qword [rbx],r9
  4885 0000276F 4883E808                	sub rax,8
  4886 00002773 4883EB08                	sub rbx,8
  4887 00002777 4883C101                	add rcx,1
  4888 0000277B EBE7                    	jmp .L_tc_recycle_frame_loop_08e1
  4889                                  	.L_tc_recycle_frame_done_08e1:
  4890 0000277D 4883C308                	add rbx,8
  4891 00002781 4889DC                  	mov rsp,rbx
  4892 00002784 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4893 00002788 C9                      	leave
  4894 00002789 C21800                  	ret AND_KILL_FRAME(1)
  4895                                  .L_lambda_simple_end_070e:	; new closure is in rax
  4896 0000278C 48890425[56120000]      	mov qword [free_var_60], rax
  4897 00002794 48B8-                   	mov rax, sob_void
  4897 00002796 [0000000000000000] 
  4898                                  
  4899 0000279E 4889C7                  	mov rdi, rax
  4900 000027A1 E8DF4F0100              	call print_sexpr_if_not_void
  4901 000027A6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4902 000027AB E8804D0100              	call malloc
  4903 000027B0 50                      	push rax
  4904 000027B1 BF00000000              	mov rdi, 8 * 0	; new rib
  4905 000027B6 E8754D0100              	call malloc
  4906 000027BB 50                      	push rax
  4907 000027BC BF08000000              	mov rdi, 8 * 1	; extended env
  4908 000027C1 E86A4D0100              	call malloc
  4909 000027C6 488B7D10                	mov rdi, ENV
  4910 000027CA BE00000000              	mov rsi, 0
  4911 000027CF BA01000000              	mov rdx, 1
  4912                                  .L_lambda_simple_env_loop_070f:	; ext_env[i + 1] <-- env[i]
  4913 000027D4 4883FE00                	cmp rsi, 0
  4914 000027D8 7410                    	je .L_lambda_simple_env_end_070f
  4915 000027DA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4916 000027DE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4917 000027E2 48FFC6                  	inc rsi
  4918 000027E5 48FFC2                  	inc rdx
  4919 000027E8 EBEA                    	jmp .L_lambda_simple_env_loop_070f
  4920                                  .L_lambda_simple_env_end_070f:
  4921 000027EA 5B                      	pop rbx
  4922 000027EB BE00000000              	mov rsi, 0
  4923                                  .L_lambda_simple_params_loop_070f:	; copy params
  4924 000027F0 4883FE00                	cmp rsi, 0
  4925 000027F4 740E                    	je .L_lambda_simple_params_end_070f
  4926 000027F6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4927 000027FB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4928 000027FF 48FFC6                  	inc rsi
  4929 00002802 EBEC                    	jmp .L_lambda_simple_params_loop_070f
  4930                                  .L_lambda_simple_params_end_070f:
  4931 00002804 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4932 00002807 4889C3                  	mov rbx, rax
  4933 0000280A 58                      	pop rax
  4934 0000280B C60004                  	mov byte [rax], T_closure
  4935 0000280E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4936 00002812 48C74009[1F280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_070f
  4937 0000281A E9B6000000              	jmp .L_lambda_simple_end_070f
  4938                                  .L_lambda_simple_code_070f:	; lambda-simple body
  4939 0000281F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4940 00002825 740B                    	je .L_lambda_simple_arity_check_ok_07ea
  4941 00002827 FF742410                	push qword [rsp + 8 * 2]
  4942 0000282B 6A01                    	push 1
  4943 0000282D E9B74C0100              	jmp L_error_incorrect_arity_simple
  4944                                  .L_lambda_simple_arity_check_ok_07ea:
  4945 00002832 C8000000                	enter 0, 0
  4946                                  	; preparing a tail-call
  4947                                  	; preparing a non-tail-call
  4948 00002836 488B4520                	mov rax, PARAM(0)	; param x
  4949 0000283A 50                      	push rax
  4950 0000283B 6A01                    	push 1	; arg count
  4951 0000283D 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4952 00002845 803805                  	cmp byte [rax], T_undefined
  4953 00002848 0F84B54B0100            	je L_error_fvar_undefined
  4954 0000284E 803804                  	cmp byte [rax], T_closure
  4955 00002851 0F85304C0100            	jne L_error_non_closure
  4956 00002857 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4957 0000285A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4958 0000285D 50                      	push rax
  4959 0000285E 6A01                    	push 1	; arg count
  4960 00002860 488B0425[89120000]      	mov rax, qword [free_var_63]	; free var cddr
  4961 00002868 803805                  	cmp byte [rax], T_undefined
  4962 0000286B 0F84924B0100            	je L_error_fvar_undefined
  4963 00002871 803804                  	cmp byte [rax], T_closure
  4964 00002874 0F850D4C0100            	jne L_error_non_closure
  4965 0000287A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4966 0000287D FF7508                  	push qword [rbp + 8 *1]
  4967 00002880 4989C0                  	mov r8, rax
  4968 00002883 488B5D18                	mov rbx, COUNT
  4969 00002887 4883C303                	add rbx,3
  4970 0000288B 48C1E303                	shl rbx,3
  4971 0000288F 4801EB                  	add rbx, rbp
  4972 00002892 488B6D00                	mov rbp, [rbp]
  4973 00002896 B900000000              	mov rcx,0
  4974 0000289B BA04000000              	mov rdx, 4
  4975 000028A0 4889D0                  	mov rax, rdx
  4976 000028A3 48FFC8                  	dec rax
  4977 000028A6 48C1E003                	shl rax,3
  4978 000028AA 4801E0                  	add rax, rsp
  4979                                  	.L_tc_recycle_frame_loop_08e2:
  4980 000028AD 4839D1                  	cmp rcx, rdx
  4981 000028B0 7414                    	je .L_tc_recycle_frame_done_08e2
  4982 000028B2 4C8B08                  	mov r9, qword [rax]
  4983 000028B5 4C890B                  	mov qword [rbx],r9
  4984 000028B8 4883E808                	sub rax,8
  4985 000028BC 4883EB08                	sub rbx,8
  4986 000028C0 4883C101                	add rcx,1
  4987 000028C4 EBE7                    	jmp .L_tc_recycle_frame_loop_08e2
  4988                                  	.L_tc_recycle_frame_done_08e2:
  4989 000028C6 4883C308                	add rbx,8
  4990 000028CA 4889DC                  	mov rsp,rbx
  4991 000028CD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  4992 000028D1 C9                      	leave
  4993 000028D2 C21800                  	ret AND_KILL_FRAME(1)
  4994                                  .L_lambda_simple_end_070f:	; new closure is in rax
  4995 000028D5 48890425[67120000]      	mov qword [free_var_61], rax
  4996 000028DD 48B8-                   	mov rax, sob_void
  4996 000028DF [0000000000000000] 
  4997                                  
  4998 000028E7 4889C7                  	mov rdi, rax
  4999 000028EA E8964E0100              	call print_sexpr_if_not_void
  5000 000028EF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5001 000028F4 E8374C0100              	call malloc
  5002 000028F9 50                      	push rax
  5003 000028FA BF00000000              	mov rdi, 8 * 0	; new rib
  5004 000028FF E82C4C0100              	call malloc
  5005 00002904 50                      	push rax
  5006 00002905 BF08000000              	mov rdi, 8 * 1	; extended env
  5007 0000290A E8214C0100              	call malloc
  5008 0000290F 488B7D10                	mov rdi, ENV
  5009 00002913 BE00000000              	mov rsi, 0
  5010 00002918 BA01000000              	mov rdx, 1
  5011                                  .L_lambda_simple_env_loop_0710:	; ext_env[i + 1] <-- env[i]
  5012 0000291D 4883FE00                	cmp rsi, 0
  5013 00002921 7410                    	je .L_lambda_simple_env_end_0710
  5014 00002923 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5015 00002927 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5016 0000292B 48FFC6                  	inc rsi
  5017 0000292E 48FFC2                  	inc rdx
  5018 00002931 EBEA                    	jmp .L_lambda_simple_env_loop_0710
  5019                                  .L_lambda_simple_env_end_0710:
  5020 00002933 5B                      	pop rbx
  5021 00002934 BE00000000              	mov rsi, 0
  5022                                  .L_lambda_simple_params_loop_0710:	; copy params
  5023 00002939 4883FE00                	cmp rsi, 0
  5024 0000293D 740E                    	je .L_lambda_simple_params_end_0710
  5025 0000293F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5026 00002944 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5027 00002948 48FFC6                  	inc rsi
  5028 0000294B EBEC                    	jmp .L_lambda_simple_params_loop_0710
  5029                                  .L_lambda_simple_params_end_0710:
  5030 0000294D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5031 00002950 4889C3                  	mov rbx, rax
  5032 00002953 58                      	pop rax
  5033 00002954 C60004                  	mov byte [rax], T_closure
  5034 00002957 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5035 0000295B 48C74009[68290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0710
  5036 00002963 E930010000              	jmp .L_lambda_simple_end_0710
  5037                                  .L_lambda_simple_code_0710:	; lambda-simple body
  5038 00002968 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5039 0000296E 740B                    	je .L_lambda_simple_arity_check_ok_07eb
  5040 00002970 FF742410                	push qword [rsp + 8 * 2]
  5041 00002974 6A01                    	push 1
  5042 00002976 E96E4B0100              	jmp L_error_incorrect_arity_simple
  5043                                  .L_lambda_simple_arity_check_ok_07eb:
  5044 0000297B C8000000                	enter 0, 0
  5045                                  	; preparing a non-tail-call
  5046 0000297F 488B4520                	mov rax, PARAM(0)	; param e
  5047 00002983 50                      	push rax
  5048 00002984 6A01                    	push 1	; arg count
  5049 00002986 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  5050 0000298E 803805                  	cmp byte [rax], T_undefined
  5051 00002991 0F846C4A0100            	je L_error_fvar_undefined
  5052 00002997 803804                  	cmp byte [rax], T_closure
  5053 0000299A 0F85E74A0100            	jne L_error_non_closure
  5054 000029A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5055 000029A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5056 000029A6 483D[02000000]          	cmp rax, sob_boolean_false
  5057 000029AC 0F85E2000000            	jne .L_if_end_0550
  5058                                  	; preparing a non-tail-call
  5059 000029B2 488B4520                	mov rax, PARAM(0)	; param e
  5060 000029B6 50                      	push rax
  5061 000029B7 6A01                    	push 1	; arg count
  5062 000029B9 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
  5063 000029C1 803805                  	cmp byte [rax], T_undefined
  5064 000029C4 0F84394A0100            	je L_error_fvar_undefined
  5065 000029CA 803804                  	cmp byte [rax], T_closure
  5066 000029CD 0F85B44A0100            	jne L_error_non_closure
  5067 000029D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5068 000029D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5069 000029D9 483D[02000000]          	cmp rax, sob_boolean_false
  5070 000029DF 0F849D000000            	je .L_if_else_04d0
  5071                                  	; preparing a tail-call
  5072                                  	; preparing a non-tail-call
  5073 000029E5 488B4520                	mov rax, PARAM(0)	; param e
  5074 000029E9 50                      	push rax
  5075 000029EA 6A01                    	push 1	; arg count
  5076 000029EC 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  5077 000029F4 803805                  	cmp byte [rax], T_undefined
  5078 000029F7 0F84064A0100            	je L_error_fvar_undefined
  5079 000029FD 803804                  	cmp byte [rax], T_closure
  5080 00002A00 0F85814A0100            	jne L_error_non_closure
  5081 00002A06 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5082 00002A09 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5083 00002A0C 50                      	push rax
  5084 00002A0D 6A01                    	push 1	; arg count
  5085 00002A0F 488B0425[BA140000]      	mov rax, qword [free_var_96]	; free var list?
  5086 00002A17 803805                  	cmp byte [rax], T_undefined
  5087 00002A1A 0F84E3490100            	je L_error_fvar_undefined
  5088 00002A20 803804                  	cmp byte [rax], T_closure
  5089 00002A23 0F855E4A0100            	jne L_error_non_closure
  5090 00002A29 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5091 00002A2C FF7508                  	push qword [rbp + 8 *1]
  5092 00002A2F 4989C0                  	mov r8, rax
  5093 00002A32 488B5D18                	mov rbx, COUNT
  5094 00002A36 4883C303                	add rbx,3
  5095 00002A3A 48C1E303                	shl rbx,3
  5096 00002A3E 4801EB                  	add rbx, rbp
  5097 00002A41 488B6D00                	mov rbp, [rbp]
  5098 00002A45 B900000000              	mov rcx,0
  5099 00002A4A BA04000000              	mov rdx, 4
  5100 00002A4F 4889D0                  	mov rax, rdx
  5101 00002A52 48FFC8                  	dec rax
  5102 00002A55 48C1E003                	shl rax,3
  5103 00002A59 4801E0                  	add rax, rsp
  5104                                  	.L_tc_recycle_frame_loop_08e3:
  5105 00002A5C 4839D1                  	cmp rcx, rdx
  5106 00002A5F 7414                    	je .L_tc_recycle_frame_done_08e3
  5107 00002A61 4C8B08                  	mov r9, qword [rax]
  5108 00002A64 4C890B                  	mov qword [rbx],r9
  5109 00002A67 4883E808                	sub rax,8
  5110 00002A6B 4883EB08                	sub rbx,8
  5111 00002A6F 4883C101                	add rcx,1
  5112 00002A73 EBE7                    	jmp .L_tc_recycle_frame_loop_08e3
  5113                                  	.L_tc_recycle_frame_done_08e3:
  5114 00002A75 4883C308                	add rbx,8
  5115 00002A79 4889DC                  	mov rsp,rbx
  5116 00002A7C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  5117 00002A80 EB0A                    	jmp .L_if_end_0551
  5118                                  .L_if_else_04d0:
  5119 00002A82 48B8-                   	mov rax, L_constants + 2
  5119 00002A84 [0200000000000000] 
  5120                                  .L_if_end_0551:
  5121 00002A8C 483D[02000000]          	cmp rax, sob_boolean_false
  5122 00002A92 7500                    	jne .L_if_end_0550
  5123                                  .L_if_end_0550:
  5124 00002A94 C9                      	leave
  5125 00002A95 C21800                  	ret AND_KILL_FRAME(1)
  5126                                  .L_lambda_simple_end_0710:	; new closure is in rax
  5127 00002A98 48890425[BA140000]      	mov qword [free_var_96], rax
  5128 00002AA0 48B8-                   	mov rax, sob_void
  5128 00002AA2 [0000000000000000] 
  5129                                  
  5130 00002AAA 4889C7                  	mov rdi, rax
  5131 00002AAD E8D34C0100              	call print_sexpr_if_not_void
  5132 00002AB2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5133 00002AB7 E8744A0100              	call malloc
  5134 00002ABC 50                      	push rax
  5135 00002ABD 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  5136 00002AC1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5137 00002AC5 BF00000000              	mov rdi, 8 * 0	; new rib for optional parameters
  5138 00002ACA E8614A0100              	call malloc
  5139 00002ACF 50                      	push rax
  5140 00002AD0 BF08000000              	mov rdi, 8 * 1	; extended env
  5141 00002AD5 E8564A0100              	call malloc
  5142 00002ADA 488B7D10                	mov rdi, ENV
  5143 00002ADE BE00000000              	mov rsi, 0
  5144 00002AE3 BA01000000              	mov rdx, 1
  5145                                  .L_lambda_opt_env_loop_00dc:	; ext_env[i + 1] <-- env[i] copy all the array
  5146 00002AE8 4883FE00                	cmp rsi, 0
  5147 00002AEC 7410                    	je .L_lambda_opt_env_end_00dc
  5148 00002AEE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5149 00002AF2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5150 00002AF6 48FFC6                  	inc rsi
  5151 00002AF9 48FFC2                  	inc rdx
  5152 00002AFC EBEA                    	jmp .L_lambda_opt_env_loop_00dc
  5153                                  .L_lambda_opt_env_end_00dc:
  5154 00002AFE 5B                      	pop rbx
  5155 00002AFF BE00000000              	mov rsi, 0
  5156                                  .L_lambda_opt_params_loop_0292:	; copy params
  5157 00002B04 4883FE00                	cmp rsi, 0
  5158 00002B08 740E                    	je .L_lambda_opt_params_end_01b7
  5159 00002B0A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5160 00002B0F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5161 00002B13 48FFC6                  	inc rsi
  5162 00002B16 EBEC                    	jmp .L_lambda_opt_params_loop_0292
  5163                                  .L_lambda_opt_params_end_01b7:
  5164 00002B18 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  5165 00002B1B 4889C3                  	mov rbx, rax
  5166 00002B1E 58                      	pop rax
  5167 00002B1F C60004                  	mov byte [rax], T_closure
  5168 00002B22 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5169 00002B26 48C74009[332B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00dc
  5170 00002B2E E908010000              	jmp .L_lambda_opt_end_01b7
  5171                                  .L_lambda_opt_code_00dc:	; lambda-opt body
  5172 00002B33 48837C241000            	cmp qword [rsp + 8 * 2], 0
  5173 00002B39 7D0B                    	jge .L_lambda_simple_arity_check_ok_07ec
  5174 00002B3B FF742410                	push qword [rsp + 8 * 2]
  5175 00002B3F 6A00                    	push 0
  5176 00002B41 E9A3490100              	jmp L_error_incorrect_arity_simple
  5177                                  .L_lambda_simple_arity_check_ok_07ec:
  5178 00002B46 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5179 00002B4B 4983E800                	sub r8, 0
  5180 00002B4F 4C89C3                  	mov rbx,r8
  5181 00002B52 4983F800                	cmp r8, 0
  5182 00002B56 7535                    	jne .L_lambda_opt_params_loop_0294
  5183 00002B58 488B542410              	mov rdx, qword [rsp + 8 * 2]
  5184 00002B5D 4883C203                	add rdx , 3
  5185 00002B61 4883EC08                	sub rsp , 8
  5186 00002B65 4889E1                  	mov rcx, rsp
  5187                                  .L_lambda_opt_stack_adjusted_0293: ;pushing down the stack of the current function
  5188 00002B68 488B5908                	mov rbx, qword [rcx + 8 * 1]
  5189 00002B6C 488919                  	mov qword[rcx] , rbx
  5190 00002B6F 4883C108                	add rcx , 8
  5191 00002B73 48FFCA                  	dec rdx
  5192 00002B76 4883FA00                	cmp rdx, 0
  5193 00002B7A 75EC                    	jne .L_lambda_opt_stack_adjusted_0293
  5194 00002B7C 48FF442410              	inc qword [rsp + 8 * 2]
  5195 00002B81 48C701[01000000]        	mov qword [rcx], sob_nil 
  5196 00002B88 E9A2000000              	jmp .L_lambda_opt_end_01b8
  5197                                  	.L_lambda_opt_params_loop_0294:
  5198 00002B8D 488B542410              	mov rdx, qword [rsp + 8*2]
  5199 00002B92 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  5200 00002B97 4C89C2                  	mov rdx, r8
  5201 00002B9A 49B9-                   	mov r9, sob_nil
  5201 00002B9C [0100000000000000] 
  5202                                  	.L_lambda_opt_params_loop_0293: ;loop for copying the opt into list
  5203 00002BA4 BF11000000              	mov rdi, (1 + 8 + 8)
  5204 00002BA9 E882490100              	call malloc
  5205 00002BAE C60021                  	mov byte[rax], T_pair
  5206 00002BB1 488B19                  	mov rbx, qword [rcx]
  5207 00002BB4 48895801                	mov SOB_PAIR_CAR(rax), rbx
  5208 00002BB8 4C894809                	mov SOB_PAIR_CDR(rax), r9
  5209 00002BBC 4989C1                  	mov r9, rax
  5210 00002BBF 48FFCA                  	dec rdx
  5211 00002BC2 4883E908                	sub rcx, 8
  5212 00002BC6 4883FA00                	cmp rdx, 0
  5213 00002BCA 75D8                    	jne .L_lambda_opt_params_loop_0293
  5214 00002BCC 488B542410              	mov rdx, qword [rsp + 8 * 2]
  5215 00002BD1 4889E0                  	mov rax, rsp
  5216 00002BD4 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  5217 00002BD9 4C89C1                  	mov rcx, r8
  5218 00002BDC 48FFC9                  	dec rcx
  5219 00002BDF 4883C203                	add rdx, 3
  5220 00002BE3 4829CA                  	sub rdx,rcx
  5221 00002BE6 48C1E103                	shl rcx, 3
  5222                                  	.L_lambda_opt_stack_adjusted_0294:
  5223 00002BEA 4883FA00                	cmp rdx, 0
  5224 00002BEE 7419                    	je .L_lambda_opt_params_end_01b8
  5225 00002BF0 4889D8                  	mov rax, rbx
  5226 00002BF3 4829C8                  	sub rax, rcx
  5227 00002BF6 488B30                  	mov rsi, qword [rax]
  5228 00002BF9 488933                  	mov [rbx], rsi
  5229 00002BFC 4883EB08                	sub rbx, 8
  5230 00002C00 48FFCA                  	dec rdx
  5231 00002C03 4883FA00                	cmp rdx, 0
  5232 00002C07 75E1                    	jne .L_lambda_opt_stack_adjusted_0294
  5233                                  	.L_lambda_opt_params_end_01b8:
  5234 00002C09 4801CC                  	add rsp,rcx
  5235 00002C0C BB00000000              	mov rbx, 0
  5236 00002C11 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  5237 00002C16 4883C303                	add rbx,3
  5238 00002C1A 4C29C3                  	sub rbx,r8
  5239 00002C1D 48C1E303                	shl rbx, 3
  5240 00002C21 4801E3                  	add rbx, rsp
  5241 00002C24 4C890B                  	mov qword[rbx] , r9
  5242 00002C27 49FFC8                  	dec r8
  5243 00002C2A 4C29442410              	sub qword [rsp + 8 * 2], r8
  5244                                  	.L_lambda_opt_end_01b8:
  5245 00002C2F C8000000                	enter 0, 0
  5246 00002C33 488B4520                	mov rax, PARAM(0)	; param args
  5247                                  	LEAVE
    49 00002C37 C9                  <1>  leave
  5248 00002C38 C21800                  	ret AND_KILL_FRAME(1)
  5249                                  .L_lambda_opt_end_01b7:
  5250 00002C3B 48890425[76140000]      	mov qword [free_var_92], rax
  5251 00002C43 48B8-                   	mov rax, sob_void
  5251 00002C45 [0000000000000000] 
  5252                                  
  5253 00002C4D 4889C7                  	mov rdi, rax
  5254 00002C50 E8304B0100              	call print_sexpr_if_not_void
  5255 00002C55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5256 00002C5A E8D1480100              	call malloc
  5257 00002C5F 50                      	push rax
  5258 00002C60 BF00000000              	mov rdi, 8 * 0	; new rib
  5259 00002C65 E8C6480100              	call malloc
  5260 00002C6A 50                      	push rax
  5261 00002C6B BF08000000              	mov rdi, 8 * 1	; extended env
  5262 00002C70 E8BB480100              	call malloc
  5263 00002C75 488B7D10                	mov rdi, ENV
  5264 00002C79 BE00000000              	mov rsi, 0
  5265 00002C7E BA01000000              	mov rdx, 1
  5266                                  .L_lambda_simple_env_loop_0711:	; ext_env[i + 1] <-- env[i]
  5267 00002C83 4883FE00                	cmp rsi, 0
  5268 00002C87 7410                    	je .L_lambda_simple_env_end_0711
  5269 00002C89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5270 00002C8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5271 00002C91 48FFC6                  	inc rsi
  5272 00002C94 48FFC2                  	inc rdx
  5273 00002C97 EBEA                    	jmp .L_lambda_simple_env_loop_0711
  5274                                  .L_lambda_simple_env_end_0711:
  5275 00002C99 5B                      	pop rbx
  5276 00002C9A BE00000000              	mov rsi, 0
  5277                                  .L_lambda_simple_params_loop_0711:	; copy params
  5278 00002C9F 4883FE00                	cmp rsi, 0
  5279 00002CA3 740E                    	je .L_lambda_simple_params_end_0711
  5280 00002CA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5281 00002CAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5282 00002CAE 48FFC6                  	inc rsi
  5283 00002CB1 EBEC                    	jmp .L_lambda_simple_params_loop_0711
  5284                                  .L_lambda_simple_params_end_0711:
  5285 00002CB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5286 00002CB6 4889C3                  	mov rbx, rax
  5287 00002CB9 58                      	pop rax
  5288 00002CBA C60004                  	mov byte [rax], T_closure
  5289 00002CBD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5290 00002CC1 48C74009[CB2C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0711
  5291 00002CC9 EB3D                    	jmp .L_lambda_simple_end_0711
  5292                                  .L_lambda_simple_code_0711:	; lambda-simple body
  5293 00002CCB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5294 00002CD1 740B                    	je .L_lambda_simple_arity_check_ok_07ed
  5295 00002CD3 FF742410                	push qword [rsp + 8 * 2]
  5296 00002CD7 6A01                    	push 1
  5297 00002CD9 E90B480100              	jmp L_error_incorrect_arity_simple
  5298                                  .L_lambda_simple_arity_check_ok_07ed:
  5299 00002CDE C8000000                	enter 0, 0
  5300 00002CE2 488B4520                	mov rax, PARAM(0)	; param x
  5301 00002CE6 483D[02000000]          	cmp rax, sob_boolean_false
  5302 00002CEC 740C                    	je .L_if_else_04d1
  5303 00002CEE 48B8-                   	mov rax, L_constants + 2
  5303 00002CF0 [0200000000000000] 
  5304 00002CF8 EB0A                    	jmp .L_if_end_0552
  5305                                  .L_if_else_04d1:
  5306 00002CFA 48B8-                   	mov rax, L_constants + 3
  5306 00002CFC [0300000000000000] 
  5307                                  .L_if_end_0552:
  5308 00002D04 C9                      	leave
  5309 00002D05 C21800                  	ret AND_KILL_FRAME(1)
  5310                                  .L_lambda_simple_end_0711:	; new closure is in rax
  5311 00002D08 48890425[64150000]      	mov qword [free_var_106], rax
  5312 00002D10 48B8-                   	mov rax, sob_void
  5312 00002D12 [0000000000000000] 
  5313                                  
  5314 00002D1A 4889C7                  	mov rdi, rax
  5315 00002D1D E8634A0100              	call print_sexpr_if_not_void
  5316 00002D22 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5317 00002D27 E804480100              	call malloc
  5318 00002D2C 50                      	push rax
  5319 00002D2D BF00000000              	mov rdi, 8 * 0	; new rib
  5320 00002D32 E8F9470100              	call malloc
  5321 00002D37 50                      	push rax
  5322 00002D38 BF08000000              	mov rdi, 8 * 1	; extended env
  5323 00002D3D E8EE470100              	call malloc
  5324 00002D42 488B7D10                	mov rdi, ENV
  5325 00002D46 BE00000000              	mov rsi, 0
  5326 00002D4B BA01000000              	mov rdx, 1
  5327                                  .L_lambda_simple_env_loop_0712:	; ext_env[i + 1] <-- env[i]
  5328 00002D50 4883FE00                	cmp rsi, 0
  5329 00002D54 7410                    	je .L_lambda_simple_env_end_0712
  5330 00002D56 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5331 00002D5A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5332 00002D5E 48FFC6                  	inc rsi
  5333 00002D61 48FFC2                  	inc rdx
  5334 00002D64 EBEA                    	jmp .L_lambda_simple_env_loop_0712
  5335                                  .L_lambda_simple_env_end_0712:
  5336 00002D66 5B                      	pop rbx
  5337 00002D67 BE00000000              	mov rsi, 0
  5338                                  .L_lambda_simple_params_loop_0712:	; copy params
  5339 00002D6C 4883FE00                	cmp rsi, 0
  5340 00002D70 740E                    	je .L_lambda_simple_params_end_0712
  5341 00002D72 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5342 00002D77 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5343 00002D7B 48FFC6                  	inc rsi
  5344 00002D7E EBEC                    	jmp .L_lambda_simple_params_loop_0712
  5345                                  .L_lambda_simple_params_end_0712:
  5346 00002D80 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5347 00002D83 4889C3                  	mov rbx, rax
  5348 00002D86 58                      	pop rax
  5349 00002D87 C60004                  	mov byte [rax], T_closure
  5350 00002D8A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5351 00002D8E 48C74009[9B2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0712
  5352 00002D96 E9CE000000              	jmp .L_lambda_simple_end_0712
  5353                                  .L_lambda_simple_code_0712:	; lambda-simple body
  5354 00002D9B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5355 00002DA1 740B                    	je .L_lambda_simple_arity_check_ok_07ee
  5356 00002DA3 FF742410                	push qword [rsp + 8 * 2]
  5357 00002DA7 6A01                    	push 1
  5358 00002DA9 E93B470100              	jmp L_error_incorrect_arity_simple
  5359                                  .L_lambda_simple_arity_check_ok_07ee:
  5360 00002DAE C8000000                	enter 0, 0
  5361                                  	; preparing a non-tail-call
  5362 00002DB2 488B4520                	mov rax, PARAM(0)	; param q
  5363 00002DB6 50                      	push rax
  5364 00002DB7 6A01                    	push 1	; arg count
  5365 00002DB9 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
  5366 00002DC1 803805                  	cmp byte [rax], T_undefined
  5367 00002DC4 0F8439460100            	je L_error_fvar_undefined
  5368 00002DCA 803804                  	cmp byte [rax], T_closure
  5369 00002DCD 0F85B4460100            	jne L_error_non_closure
  5370 00002DD3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5371 00002DD6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5372 00002DD9 483D[02000000]          	cmp rax, sob_boolean_false
  5373 00002DDF 0F8580000000            	jne .L_if_end_0553
  5374                                  	; preparing a tail-call
  5375 00002DE5 488B4520                	mov rax, PARAM(0)	; param q
  5376 00002DE9 50                      	push rax
  5377 00002DEA 6A01                    	push 1	; arg count
  5378 00002DEC 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
  5379 00002DF4 803805                  	cmp byte [rax], T_undefined
  5380 00002DF7 0F8406460100            	je L_error_fvar_undefined
  5381 00002DFD 803804                  	cmp byte [rax], T_closure
  5382 00002E00 0F8581460100            	jne L_error_non_closure
  5383 00002E06 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5384 00002E09 FF7508                  	push qword [rbp + 8 *1]
  5385 00002E0C 4989C0                  	mov r8, rax
  5386 00002E0F 488B5D18                	mov rbx, COUNT
  5387 00002E13 4883C303                	add rbx,3
  5388 00002E17 48C1E303                	shl rbx,3
  5389 00002E1B 4801EB                  	add rbx, rbp
  5390 00002E1E 488B6D00                	mov rbp, [rbp]
  5391 00002E22 B900000000              	mov rcx,0
  5392 00002E27 BA04000000              	mov rdx, 4
  5393 00002E2C 4889D0                  	mov rax, rdx
  5394 00002E2F 48FFC8                  	dec rax
  5395 00002E32 48C1E003                	shl rax,3
  5396 00002E36 4801E0                  	add rax, rsp
  5397                                  	.L_tc_recycle_frame_loop_08e4:
  5398 00002E39 4839D1                  	cmp rcx, rdx
  5399 00002E3C 7414                    	je .L_tc_recycle_frame_done_08e4
  5400 00002E3E 4C8B08                  	mov r9, qword [rax]
  5401 00002E41 4C890B                  	mov qword [rbx],r9
  5402 00002E44 4883E808                	sub rax,8
  5403 00002E48 4883EB08                	sub rbx,8
  5404 00002E4C 4883C101                	add rcx,1
  5405 00002E50 EBE7                    	jmp .L_tc_recycle_frame_loop_08e4
  5406                                  	.L_tc_recycle_frame_done_08e4:
  5407 00002E52 4883C308                	add rbx,8
  5408 00002E56 4889DC                  	mov rsp,rbx
  5409 00002E59 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  5410 00002E5D 483D[02000000]          	cmp rax, sob_boolean_false
  5411 00002E63 7500                    	jne .L_if_end_0553
  5412                                  .L_if_end_0553:
  5413 00002E65 C9                      	leave
  5414 00002E66 C21800                  	ret AND_KILL_FRAME(1)
  5415                                  .L_lambda_simple_end_0712:	; new closure is in rax
  5416 00002E69 48890425[EC150000]      	mov qword [free_var_114], rax
  5417 00002E71 48B8-                   	mov rax, sob_void
  5417 00002E73 [0000000000000000] 
  5418                                  
  5419 00002E7B 4889C7                  	mov rdi, rax
  5420 00002E7E E802490100              	call print_sexpr_if_not_void
  5421                                  	; preparing a non-tail-call
  5422 00002E83 48B8-                   	mov rax, L_constants + 1993
  5422 00002E85 [C907000000000000] 
  5423 00002E8D 50                      	push rax
  5424 00002E8E 6A01                    	push 1	; arg count
  5425 00002E90 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5426 00002E95 E896460100              	call malloc
  5427 00002E9A 50                      	push rax
  5428 00002E9B BF00000000              	mov rdi, 8 * 0	; new rib
  5429 00002EA0 E88B460100              	call malloc
  5430 00002EA5 50                      	push rax
  5431 00002EA6 BF08000000              	mov rdi, 8 * 1	; extended env
  5432 00002EAB E880460100              	call malloc
  5433 00002EB0 488B7D10                	mov rdi, ENV
  5434 00002EB4 BE00000000              	mov rsi, 0
  5435 00002EB9 BA01000000              	mov rdx, 1
  5436                                  .L_lambda_simple_env_loop_0713:	; ext_env[i + 1] <-- env[i]
  5437 00002EBE 4883FE00                	cmp rsi, 0
  5438 00002EC2 7410                    	je .L_lambda_simple_env_end_0713
  5439 00002EC4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5440 00002EC8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5441 00002ECC 48FFC6                  	inc rsi
  5442 00002ECF 48FFC2                  	inc rdx
  5443 00002ED2 EBEA                    	jmp .L_lambda_simple_env_loop_0713
  5444                                  .L_lambda_simple_env_end_0713:
  5445 00002ED4 5B                      	pop rbx
  5446 00002ED5 BE00000000              	mov rsi, 0
  5447                                  .L_lambda_simple_params_loop_0713:	; copy params
  5448 00002EDA 4883FE00                	cmp rsi, 0
  5449 00002EDE 740E                    	je .L_lambda_simple_params_end_0713
  5450 00002EE0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5451 00002EE5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5452 00002EE9 48FFC6                  	inc rsi
  5453 00002EEC EBEC                    	jmp .L_lambda_simple_params_loop_0713
  5454                                  .L_lambda_simple_params_end_0713:
  5455 00002EEE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5456 00002EF1 4889C3                  	mov rbx, rax
  5457 00002EF4 58                      	pop rax
  5458 00002EF5 C60004                  	mov byte [rax], T_closure
  5459 00002EF8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5460 00002EFC 48C74009[092F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0713
  5461 00002F04 E9FC030000              	jmp .L_lambda_simple_end_0713
  5462                                  .L_lambda_simple_code_0713:	; lambda-simple body
  5463 00002F09 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5464 00002F0F 740B                    	je .L_lambda_simple_arity_check_ok_07ef
  5465 00002F11 FF742410                	push qword [rsp + 8 * 2]
  5466 00002F15 6A01                    	push 1
  5467 00002F17 E9CD450100              	jmp L_error_incorrect_arity_simple
  5468                                  .L_lambda_simple_arity_check_ok_07ef:
  5469 00002F1C C8000000                	enter 0, 0
  5470 00002F20 BF08000000              	mov rdi, 8
  5471 00002F25 E806460100              	call malloc
  5472 00002F2A 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  5473 00002F2E 488918                  	mov qword [rax], rbx
  5474 00002F31 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  5475 00002F35 48B8-                   	mov rax, sob_void
  5475 00002F37 [0000000000000000] 
  5476                                  
  5477 00002F3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5478 00002F44 E8E7450100              	call malloc
  5479 00002F49 50                      	push rax
  5480 00002F4A BF08000000              	mov rdi, 8 * 1	; new rib
  5481 00002F4F E8DC450100              	call malloc
  5482 00002F54 50                      	push rax
  5483 00002F55 BF10000000              	mov rdi, 8 * 2	; extended env
  5484 00002F5A E8D1450100              	call malloc
  5485 00002F5F 488B7D10                	mov rdi, ENV
  5486 00002F63 BE00000000              	mov rsi, 0
  5487 00002F68 BA01000000              	mov rdx, 1
  5488                                  .L_lambda_simple_env_loop_0714:	; ext_env[i + 1] <-- env[i]
  5489 00002F6D 4883FE01                	cmp rsi, 1
  5490 00002F71 7410                    	je .L_lambda_simple_env_end_0714
  5491 00002F73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5492 00002F77 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5493 00002F7B 48FFC6                  	inc rsi
  5494 00002F7E 48FFC2                  	inc rdx
  5495 00002F81 EBEA                    	jmp .L_lambda_simple_env_loop_0714
  5496                                  .L_lambda_simple_env_end_0714:
  5497 00002F83 5B                      	pop rbx
  5498 00002F84 BE00000000              	mov rsi, 0
  5499                                  .L_lambda_simple_params_loop_0714:	; copy params
  5500 00002F89 4883FE01                	cmp rsi, 1
  5501 00002F8D 740E                    	je .L_lambda_simple_params_end_0714
  5502 00002F8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5503 00002F94 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5504 00002F98 48FFC6                  	inc rsi
  5505 00002F9B EBEC                    	jmp .L_lambda_simple_params_loop_0714
  5506                                  .L_lambda_simple_params_end_0714:
  5507 00002F9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5508 00002FA0 4889C3                  	mov rbx, rax
  5509 00002FA3 58                      	pop rax
  5510 00002FA4 C60004                  	mov byte [rax], T_closure
  5511 00002FA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5512 00002FAB 48C74009[B82F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0714
  5513 00002FB3 E93A010000              	jmp .L_lambda_simple_end_0714
  5514                                  .L_lambda_simple_code_0714:	; lambda-simple body
  5515 00002FB8 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5516 00002FBE 740B                    	je .L_lambda_simple_arity_check_ok_07f0
  5517 00002FC0 FF742410                	push qword [rsp + 8 * 2]
  5518 00002FC4 6A02                    	push 2
  5519 00002FC6 E91E450100              	jmp L_error_incorrect_arity_simple
  5520                                  .L_lambda_simple_arity_check_ok_07f0:
  5521 00002FCB C8000000                	enter 0, 0
  5522                                  	; preparing a non-tail-call
  5523 00002FCF 488B4528                	mov rax, PARAM(1)	; param s
  5524 00002FD3 50                      	push rax
  5525 00002FD4 6A01                    	push 1	; arg count
  5526 00002FD6 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  5527 00002FDE 803805                  	cmp byte [rax], T_undefined
  5528 00002FE1 0F841C440100            	je L_error_fvar_undefined
  5529 00002FE7 803804                  	cmp byte [rax], T_closure
  5530 00002FEA 0F8597440100            	jne L_error_non_closure
  5531 00002FF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5532 00002FF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5533 00002FF6 483D[02000000]          	cmp rax, sob_boolean_false
  5534 00002FFC 7409                    	je .L_if_else_04d2
  5535 00002FFE 488B4520                	mov rax, PARAM(0)	; param a
  5536 00003002 E9E7000000              	jmp .L_if_end_0554
  5537                                  .L_if_else_04d2:
  5538                                  	; preparing a tail-call
  5539                                  	; preparing a non-tail-call
  5540                                  	; preparing a non-tail-call
  5541 00003007 488B4528                	mov rax, PARAM(1)	; param s
  5542 0000300B 50                      	push rax
  5543 0000300C 6A01                    	push 1	; arg count
  5544 0000300E 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  5545 00003016 803805                  	cmp byte [rax], T_undefined
  5546 00003019 0F84E4430100            	je L_error_fvar_undefined
  5547 0000301F 803804                  	cmp byte [rax], T_closure
  5548 00003022 0F855F440100            	jne L_error_non_closure
  5549 00003028 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5550 0000302B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5551 0000302E 50                      	push rax
  5552                                  	; preparing a non-tail-call
  5553 0000302F 488B4528                	mov rax, PARAM(1)	; param s
  5554 00003033 50                      	push rax
  5555 00003034 6A01                    	push 1	; arg count
  5556 00003036 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  5557 0000303E 803805                  	cmp byte [rax], T_undefined
  5558 00003041 0F84BC430100            	je L_error_fvar_undefined
  5559 00003047 803804                  	cmp byte [rax], T_closure
  5560 0000304A 0F8537440100            	jne L_error_non_closure
  5561 00003050 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5562 00003053 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5563 00003056 50                      	push rax
  5564 00003057 6A02                    	push 2	; arg count
  5565 00003059 488B4510                	mov rax, ENV
  5566 0000305D 488B00                  	mov rax, qword [rax + 8 * 0]
  5567 00003060 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5568 00003063 488B00                  	mov rax, qword [rax]
  5569 00003066 803804                  	cmp byte [rax], T_closure
  5570 00003069 0F8518440100            	jne L_error_non_closure
  5571 0000306F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5572 00003072 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5573 00003075 50                      	push rax
  5574 00003076 488B4520                	mov rax, PARAM(0)	; param a
  5575 0000307A 50                      	push rax
  5576 0000307B 6A02                    	push 2	; arg count
  5577 0000307D 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  5578 00003085 803805                  	cmp byte [rax], T_undefined
  5579 00003088 0F8475430100            	je L_error_fvar_undefined
  5580 0000308E 803804                  	cmp byte [rax], T_closure
  5581 00003091 0F85F0430100            	jne L_error_non_closure
  5582 00003097 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5583 0000309A FF7508                  	push qword [rbp + 8 *1]
  5584 0000309D 4989C0                  	mov r8, rax
  5585 000030A0 488B5D18                	mov rbx, COUNT
  5586 000030A4 4883C303                	add rbx,3
  5587 000030A8 48C1E303                	shl rbx,3
  5588 000030AC 4801EB                  	add rbx, rbp
  5589 000030AF 488B6D00                	mov rbp, [rbp]
  5590 000030B3 B900000000              	mov rcx,0
  5591 000030B8 BA05000000              	mov rdx, 5
  5592 000030BD 4889D0                  	mov rax, rdx
  5593 000030C0 48FFC8                  	dec rax
  5594 000030C3 48C1E003                	shl rax,3
  5595 000030C7 4801E0                  	add rax, rsp
  5596                                  	.L_tc_recycle_frame_loop_08e5:
  5597 000030CA 4839D1                  	cmp rcx, rdx
  5598 000030CD 7414                    	je .L_tc_recycle_frame_done_08e5
  5599 000030CF 4C8B08                  	mov r9, qword [rax]
  5600 000030D2 4C890B                  	mov qword [rbx],r9
  5601 000030D5 4883E808                	sub rax,8
  5602 000030D9 4883EB08                	sub rbx,8
  5603 000030DD 4883C101                	add rcx,1
  5604 000030E1 EBE7                    	jmp .L_tc_recycle_frame_loop_08e5
  5605                                  	.L_tc_recycle_frame_done_08e5:
  5606 000030E3 4883C308                	add rbx,8
  5607 000030E7 4889DC                  	mov rsp,rbx
  5608 000030EA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  5609                                  .L_if_end_0554:
  5610 000030EE C9                      	leave
  5611 000030EF C22000                  	ret AND_KILL_FRAME(2)
  5612                                  .L_lambda_simple_end_0714:	; new closure is in rax
  5613 000030F2 50                      	push rax
  5614 000030F3 488B4520                	mov rax, PARAM(0)	; param run
  5615 000030F7 8F00                    	pop qword [rax]
  5616 000030F9 48B8-                   	mov rax, sob_void
  5616 000030FB [0000000000000000] 
  5617                                  
  5618 00003103 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5619 00003108 E823440100              	call malloc
  5620 0000310D 50                      	push rax
  5621 0000310E 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  5622 00003112 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5623 00003116 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
  5624 0000311B E810440100              	call malloc
  5625 00003120 50                      	push rax
  5626 00003121 BF10000000              	mov rdi, 8 * 2	; extended env
  5627 00003126 E805440100              	call malloc
  5628 0000312B 488B7D10                	mov rdi, ENV
  5629 0000312F BE00000000              	mov rsi, 0
  5630 00003134 BA01000000              	mov rdx, 1
  5631                                  .L_lambda_opt_env_loop_00dd:	; ext_env[i + 1] <-- env[i] copy all the array
  5632 00003139 4883FE01                	cmp rsi, 1
  5633 0000313D 7410                    	je .L_lambda_opt_env_end_00dd
  5634 0000313F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5635 00003143 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5636 00003147 48FFC6                  	inc rsi
  5637 0000314A 48FFC2                  	inc rdx
  5638 0000314D EBEA                    	jmp .L_lambda_opt_env_loop_00dd
  5639                                  .L_lambda_opt_env_end_00dd:
  5640 0000314F 5B                      	pop rbx
  5641 00003150 BE00000000              	mov rsi, 0
  5642                                  .L_lambda_opt_params_loop_0295:	; copy params
  5643 00003155 4883FE01                	cmp rsi, 1
  5644 00003159 740E                    	je .L_lambda_opt_params_end_01b9
  5645 0000315B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5646 00003160 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5647 00003164 48FFC6                  	inc rsi
  5648 00003167 EBEC                    	jmp .L_lambda_opt_params_loop_0295
  5649                                  .L_lambda_opt_params_end_01b9:
  5650 00003169 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  5651 0000316C 4889C3                  	mov rbx, rax
  5652 0000316F 58                      	pop rax
  5653 00003170 C60004                  	mov byte [rax], T_closure
  5654 00003173 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5655 00003177 48C74009[84310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00dd
  5656 0000317F E97D010000              	jmp .L_lambda_opt_end_01b9
  5657                                  .L_lambda_opt_code_00dd:	; lambda-opt body
  5658 00003184 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5659 0000318A 7D0B                    	jge .L_lambda_simple_arity_check_ok_07f1
  5660 0000318C FF742410                	push qword [rsp + 8 * 2]
  5661 00003190 6A01                    	push 1
  5662 00003192 E952430100              	jmp L_error_incorrect_arity_simple
  5663                                  .L_lambda_simple_arity_check_ok_07f1:
  5664 00003197 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5665 0000319C 4983E801                	sub r8, 1
  5666 000031A0 4C89C3                  	mov rbx,r8
  5667 000031A3 4983F800                	cmp r8, 0
  5668 000031A7 7535                    	jne .L_lambda_opt_params_loop_0297
  5669 000031A9 488B542410              	mov rdx, qword [rsp + 8 * 2]
  5670 000031AE 4883C203                	add rdx , 3
  5671 000031B2 4883EC08                	sub rsp , 8
  5672 000031B6 4889E1                  	mov rcx, rsp
  5673                                  .L_lambda_opt_stack_adjusted_0296: ;pushing down the stack of the current function
  5674 000031B9 488B5908                	mov rbx, qword [rcx + 8 * 1]
  5675 000031BD 488919                  	mov qword[rcx] , rbx
  5676 000031C0 4883C108                	add rcx , 8
  5677 000031C4 48FFCA                  	dec rdx
  5678 000031C7 4883FA00                	cmp rdx, 0
  5679 000031CB 75EC                    	jne .L_lambda_opt_stack_adjusted_0296
  5680 000031CD 48FF442410              	inc qword [rsp + 8 * 2]
  5681 000031D2 48C701[01000000]        	mov qword [rcx], sob_nil 
  5682 000031D9 E9A2000000              	jmp .L_lambda_opt_end_01ba
  5683                                  	.L_lambda_opt_params_loop_0297:
  5684 000031DE 488B542410              	mov rdx, qword [rsp + 8*2]
  5685 000031E3 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  5686 000031E8 4C89C2                  	mov rdx, r8
  5687 000031EB 49B9-                   	mov r9, sob_nil
  5687 000031ED [0100000000000000] 
  5688                                  	.L_lambda_opt_params_loop_0296: ;loop for copying the opt into list
  5689 000031F5 BF11000000              	mov rdi, (1 + 8 + 8)
  5690 000031FA E831430100              	call malloc
  5691 000031FF C60021                  	mov byte[rax], T_pair
  5692 00003202 488B19                  	mov rbx, qword [rcx]
  5693 00003205 48895801                	mov SOB_PAIR_CAR(rax), rbx
  5694 00003209 4C894809                	mov SOB_PAIR_CDR(rax), r9
  5695 0000320D 4989C1                  	mov r9, rax
  5696 00003210 48FFCA                  	dec rdx
  5697 00003213 4883E908                	sub rcx, 8
  5698 00003217 4883FA00                	cmp rdx, 0
  5699 0000321B 75D8                    	jne .L_lambda_opt_params_loop_0296
  5700 0000321D 488B542410              	mov rdx, qword [rsp + 8 * 2]
  5701 00003222 4889E0                  	mov rax, rsp
  5702 00003225 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  5703 0000322A 4C89C1                  	mov rcx, r8
  5704 0000322D 48FFC9                  	dec rcx
  5705 00003230 4883C203                	add rdx, 3
  5706 00003234 4829CA                  	sub rdx,rcx
  5707 00003237 48C1E103                	shl rcx, 3
  5708                                  	.L_lambda_opt_stack_adjusted_0297:
  5709 0000323B 4883FA00                	cmp rdx, 0
  5710 0000323F 7419                    	je .L_lambda_opt_params_end_01ba
  5711 00003241 4889D8                  	mov rax, rbx
  5712 00003244 4829C8                  	sub rax, rcx
  5713 00003247 488B30                  	mov rsi, qword [rax]
  5714 0000324A 488933                  	mov [rbx], rsi
  5715 0000324D 4883EB08                	sub rbx, 8
  5716 00003251 48FFCA                  	dec rdx
  5717 00003254 4883FA00                	cmp rdx, 0
  5718 00003258 75E1                    	jne .L_lambda_opt_stack_adjusted_0297
  5719                                  	.L_lambda_opt_params_end_01ba:
  5720 0000325A 4801CC                  	add rsp,rcx
  5721 0000325D BB01000000              	mov rbx, 1
  5722 00003262 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  5723 00003267 4883C303                	add rbx,3
  5724 0000326B 4C29C3                  	sub rbx,r8
  5725 0000326E 48C1E303                	shl rbx, 3
  5726 00003272 4801E3                  	add rbx, rsp
  5727 00003275 4C890B                  	mov qword[rbx] , r9
  5728 00003278 49FFC8                  	dec r8
  5729 0000327B 4C29442410              	sub qword [rsp + 8 * 2], r8
  5730                                  	.L_lambda_opt_end_01ba:
  5731 00003280 C8000000                	enter 0, 0
  5732                                  	; preparing a tail-call
  5733 00003284 488B4528                	mov rax, PARAM(1)	; param s
  5734 00003288 50                      	push rax
  5735 00003289 488B4520                	mov rax, PARAM(0)	; param a
  5736 0000328D 50                      	push rax
  5737 0000328E 6A02                    	push 2	; arg count
  5738 00003290 488B4510                	mov rax, ENV
  5739 00003294 488B00                  	mov rax, qword [rax + 8 * 0]
  5740 00003297 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5741 0000329A 488B00                  	mov rax, qword [rax]
  5742 0000329D 803804                  	cmp byte [rax], T_closure
  5743 000032A0 0F85E1410100            	jne L_error_non_closure
  5744 000032A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5745 000032A9 FF7508                  	push qword [rbp + 8 *1]
  5746 000032AC 4989C0                  	mov r8, rax
  5747 000032AF 488B5D18                	mov rbx, COUNT
  5748 000032B3 4883C303                	add rbx,3
  5749 000032B7 48C1E303                	shl rbx,3
  5750 000032BB 4801EB                  	add rbx, rbp
  5751 000032BE 488B6D00                	mov rbp, [rbp]
  5752 000032C2 B900000000              	mov rcx,0
  5753 000032C7 BA05000000              	mov rdx, 5
  5754 000032CC 4889D0                  	mov rax, rdx
  5755 000032CF 48FFC8                  	dec rax
  5756 000032D2 48C1E003                	shl rax,3
  5757 000032D6 4801E0                  	add rax, rsp
  5758                                  	.L_tc_recycle_frame_loop_08e6:
  5759 000032D9 4839D1                  	cmp rcx, rdx
  5760 000032DC 7414                    	je .L_tc_recycle_frame_done_08e6
  5761 000032DE 4C8B08                  	mov r9, qword [rax]
  5762 000032E1 4C890B                  	mov qword [rbx],r9
  5763 000032E4 4883E808                	sub rax,8
  5764 000032E8 4883EB08                	sub rbx,8
  5765 000032EC 4883C101                	add rcx,1
  5766 000032F0 EBE7                    	jmp .L_tc_recycle_frame_loop_08e6
  5767                                  	.L_tc_recycle_frame_done_08e6:
  5768 000032F2 4883C308                	add rbx,8
  5769 000032F6 4889DC                  	mov rsp,rbx
  5770 000032F9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  5771                                  	LEAVE
    49 000032FD C9                  <1>  leave
  5772 000032FE C22000                  	ret AND_KILL_FRAME(2)
  5773                                  .L_lambda_opt_end_01b9:
  5774 00003301 C9                      	leave
  5775 00003302 C21800                  	ret AND_KILL_FRAME(1)
  5776                                  .L_lambda_simple_end_0713:	; new closure is in rax
  5777 00003305 803804                  	cmp byte [rax], T_closure
  5778 00003308 0F8579410100            	jne L_error_non_closure
  5779 0000330E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5780 00003311 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5781 00003314 48890425[87140000]      	mov qword [free_var_93], rax
  5782 0000331C 48B8-                   	mov rax, sob_void
  5782 0000331E [0000000000000000] 
  5783                                  
  5784 00003326 4889C7                  	mov rdi, rax
  5785 00003329 E857440100              	call print_sexpr_if_not_void
  5786                                  	; preparing a non-tail-call
  5787 0000332E 48B8-                   	mov rax, L_constants + 1993
  5787 00003330 [C907000000000000] 
  5788 00003338 50                      	push rax
  5789 00003339 6A01                    	push 1	; arg count
  5790 0000333B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5791 00003340 E8EB410100              	call malloc
  5792 00003345 50                      	push rax
  5793 00003346 BF00000000              	mov rdi, 8 * 0	; new rib
  5794 0000334B E8E0410100              	call malloc
  5795 00003350 50                      	push rax
  5796 00003351 BF08000000              	mov rdi, 8 * 1	; extended env
  5797 00003356 E8D5410100              	call malloc
  5798 0000335B 488B7D10                	mov rdi, ENV
  5799 0000335F BE00000000              	mov rsi, 0
  5800 00003364 BA01000000              	mov rdx, 1
  5801                                  .L_lambda_simple_env_loop_0715:	; ext_env[i + 1] <-- env[i]
  5802 00003369 4883FE00                	cmp rsi, 0
  5803 0000336D 7410                    	je .L_lambda_simple_env_end_0715
  5804 0000336F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5805 00003373 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5806 00003377 48FFC6                  	inc rsi
  5807 0000337A 48FFC2                  	inc rdx
  5808 0000337D EBEA                    	jmp .L_lambda_simple_env_loop_0715
  5809                                  .L_lambda_simple_env_end_0715:
  5810 0000337F 5B                      	pop rbx
  5811 00003380 BE00000000              	mov rsi, 0
  5812                                  .L_lambda_simple_params_loop_0715:	; copy params
  5813 00003385 4883FE00                	cmp rsi, 0
  5814 00003389 740E                    	je .L_lambda_simple_params_end_0715
  5815 0000338B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5816 00003390 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5817 00003394 48FFC6                  	inc rsi
  5818 00003397 EBEC                    	jmp .L_lambda_simple_params_loop_0715
  5819                                  .L_lambda_simple_params_end_0715:
  5820 00003399 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5821 0000339C 4889C3                  	mov rbx, rax
  5822 0000339F 58                      	pop rax
  5823 000033A0 C60004                  	mov byte [rax], T_closure
  5824 000033A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5825 000033A7 48C74009[B4330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0715
  5826 000033AF E96B040000              	jmp .L_lambda_simple_end_0715
  5827                                  .L_lambda_simple_code_0715:	; lambda-simple body
  5828 000033B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5829 000033BA 740B                    	je .L_lambda_simple_arity_check_ok_07f2
  5830 000033BC FF742410                	push qword [rsp + 8 * 2]
  5831 000033C0 6A01                    	push 1
  5832 000033C2 E922410100              	jmp L_error_incorrect_arity_simple
  5833                                  .L_lambda_simple_arity_check_ok_07f2:
  5834 000033C7 C8000000                	enter 0, 0
  5835 000033CB BF08000000              	mov rdi, 8
  5836 000033D0 E85B410100              	call malloc
  5837 000033D5 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  5838 000033D9 488918                  	mov qword [rax], rbx
  5839 000033DC 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  5840 000033E0 48B8-                   	mov rax, sob_void
  5840 000033E2 [0000000000000000] 
  5841                                  
  5842 000033EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5843 000033EF E83C410100              	call malloc
  5844 000033F4 50                      	push rax
  5845 000033F5 BF08000000              	mov rdi, 8 * 1	; new rib
  5846 000033FA E831410100              	call malloc
  5847 000033FF 50                      	push rax
  5848 00003400 BF10000000              	mov rdi, 8 * 2	; extended env
  5849 00003405 E826410100              	call malloc
  5850 0000340A 488B7D10                	mov rdi, ENV
  5851 0000340E BE00000000              	mov rsi, 0
  5852 00003413 BA01000000              	mov rdx, 1
  5853                                  .L_lambda_simple_env_loop_0716:	; ext_env[i + 1] <-- env[i]
  5854 00003418 4883FE01                	cmp rsi, 1
  5855 0000341C 7410                    	je .L_lambda_simple_env_end_0716
  5856 0000341E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5857 00003422 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5858 00003426 48FFC6                  	inc rsi
  5859 00003429 48FFC2                  	inc rdx
  5860 0000342C EBEA                    	jmp .L_lambda_simple_env_loop_0716
  5861                                  .L_lambda_simple_env_end_0716:
  5862 0000342E 5B                      	pop rbx
  5863 0000342F BE00000000              	mov rsi, 0
  5864                                  .L_lambda_simple_params_loop_0716:	; copy params
  5865 00003434 4883FE01                	cmp rsi, 1
  5866 00003438 740E                    	je .L_lambda_simple_params_end_0716
  5867 0000343A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5868 0000343F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5869 00003443 48FFC6                  	inc rsi
  5870 00003446 EBEC                    	jmp .L_lambda_simple_params_loop_0716
  5871                                  .L_lambda_simple_params_end_0716:
  5872 00003448 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5873 0000344B 4889C3                  	mov rbx, rax
  5874 0000344E 58                      	pop rax
  5875 0000344F C60004                  	mov byte [rax], T_closure
  5876 00003452 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5877 00003456 48C74009[63340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0716
  5878 0000345E E93B010000              	jmp .L_lambda_simple_end_0716
  5879                                  .L_lambda_simple_code_0716:	; lambda-simple body
  5880 00003463 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5881 00003469 740B                    	je .L_lambda_simple_arity_check_ok_07f3
  5882 0000346B FF742410                	push qword [rsp + 8 * 2]
  5883 0000346F 6A02                    	push 2
  5884 00003471 E973400100              	jmp L_error_incorrect_arity_simple
  5885                                  .L_lambda_simple_arity_check_ok_07f3:
  5886 00003476 C8000000                	enter 0, 0
  5887                                  	; preparing a non-tail-call
  5888 0000347A 488B4528                	mov rax, PARAM(1)	; param s
  5889 0000347E 50                      	push rax
  5890 0000347F 6A01                    	push 1	; arg count
  5891 00003481 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
  5892 00003489 803805                  	cmp byte [rax], T_undefined
  5893 0000348C 0F84713F0100            	je L_error_fvar_undefined
  5894 00003492 803804                  	cmp byte [rax], T_closure
  5895 00003495 0F85EC3F0100            	jne L_error_non_closure
  5896 0000349B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5897 0000349E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5898 000034A1 483D[02000000]          	cmp rax, sob_boolean_false
  5899 000034A7 0F84E9000000            	je .L_if_else_04d3
  5900                                  	; preparing a tail-call
  5901                                  	; preparing a non-tail-call
  5902                                  	; preparing a non-tail-call
  5903 000034AD 488B4528                	mov rax, PARAM(1)	; param s
  5904 000034B1 50                      	push rax
  5905 000034B2 6A01                    	push 1	; arg count
  5906 000034B4 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  5907 000034BC 803805                  	cmp byte [rax], T_undefined
  5908 000034BF 0F843E3F0100            	je L_error_fvar_undefined
  5909 000034C5 803804                  	cmp byte [rax], T_closure
  5910 000034C8 0F85B93F0100            	jne L_error_non_closure
  5911 000034CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  5912 000034D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5913 000034D4 50                      	push rax
  5914                                  	; preparing a non-tail-call
  5915 000034D5 488B4528                	mov rax, PARAM(1)	; param s
  5916 000034D9 50                      	push rax
  5917 000034DA 6A01                    	push 1	; arg count
  5918 000034DC 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  5919 000034E4 803805                  	cmp byte [rax], T_undefined
  5920 000034E7 0F84163F0100            	je L_error_fvar_undefined
  5921 000034ED 803804                  	cmp byte [rax], T_closure
  5922 000034F0 0F85913F0100            	jne L_error_non_closure
  5923 000034F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5924 000034F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5925 000034FC 50                      	push rax
  5926 000034FD 6A02                    	push 2	; arg count
  5927 000034FF 488B4510                	mov rax, ENV
  5928 00003503 488B00                  	mov rax, qword [rax + 8 * 0]
  5929 00003506 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5930 00003509 488B00                  	mov rax, qword [rax]
  5931 0000350C 803804                  	cmp byte [rax], T_closure
  5932 0000350F 0F85723F0100            	jne L_error_non_closure
  5933 00003515 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5934 00003518 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5935 0000351B 50                      	push rax
  5936 0000351C 488B4520                	mov rax, PARAM(0)	; param a
  5937 00003520 50                      	push rax
  5938 00003521 6A02                    	push 2	; arg count
  5939 00003523 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  5940 0000352B 803805                  	cmp byte [rax], T_undefined
  5941 0000352E 0F84CF3E0100            	je L_error_fvar_undefined
  5942 00003534 803804                  	cmp byte [rax], T_closure
  5943 00003537 0F854A3F0100            	jne L_error_non_closure
  5944 0000353D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5945 00003540 FF7508                  	push qword [rbp + 8 *1]
  5946 00003543 4989C0                  	mov r8, rax
  5947 00003546 488B5D18                	mov rbx, COUNT
  5948 0000354A 4883C303                	add rbx,3
  5949 0000354E 48C1E303                	shl rbx,3
  5950 00003552 4801EB                  	add rbx, rbp
  5951 00003555 488B6D00                	mov rbp, [rbp]
  5952 00003559 B900000000              	mov rcx,0
  5953 0000355E BA05000000              	mov rdx, 5
  5954 00003563 4889D0                  	mov rax, rdx
  5955 00003566 48FFC8                  	dec rax
  5956 00003569 48C1E003                	shl rax,3
  5957 0000356D 4801E0                  	add rax, rsp
  5958                                  	.L_tc_recycle_frame_loop_08e7:
  5959 00003570 4839D1                  	cmp rcx, rdx
  5960 00003573 7414                    	je .L_tc_recycle_frame_done_08e7
  5961 00003575 4C8B08                  	mov r9, qword [rax]
  5962 00003578 4C890B                  	mov qword [rbx],r9
  5963 0000357B 4883E808                	sub rax,8
  5964 0000357F 4883EB08                	sub rbx,8
  5965 00003583 4883C101                	add rcx,1
  5966 00003587 EBE7                    	jmp .L_tc_recycle_frame_loop_08e7
  5967                                  	.L_tc_recycle_frame_done_08e7:
  5968 00003589 4883C308                	add rbx,8
  5969 0000358D 4889DC                  	mov rsp,rbx
  5970 00003590 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  5971 00003594 EB04                    	jmp .L_if_end_0555
  5972                                  .L_if_else_04d3:
  5973 00003596 488B4520                	mov rax, PARAM(0)	; param a
  5974                                  .L_if_end_0555:
  5975 0000359A C9                      	leave
  5976 0000359B C22000                  	ret AND_KILL_FRAME(2)
  5977                                  .L_lambda_simple_end_0716:	; new closure is in rax
  5978 0000359E 50                      	push rax
  5979 0000359F 488B4520                	mov rax, PARAM(0)	; param run
  5980 000035A3 8F00                    	pop qword [rax]
  5981 000035A5 48B8-                   	mov rax, sob_void
  5981 000035A7 [0000000000000000] 
  5982                                  
  5983 000035AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5984 000035B4 E8773F0100              	call malloc
  5985 000035B9 50                      	push rax
  5986 000035BA 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  5987 000035BE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5988 000035C2 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
  5989 000035C7 E8643F0100              	call malloc
  5990 000035CC 50                      	push rax
  5991 000035CD BF10000000              	mov rdi, 8 * 2	; extended env
  5992 000035D2 E8593F0100              	call malloc
  5993 000035D7 488B7D10                	mov rdi, ENV
  5994 000035DB BE00000000              	mov rsi, 0
  5995 000035E0 BA01000000              	mov rdx, 1
  5996                                  .L_lambda_opt_env_loop_00de:	; ext_env[i + 1] <-- env[i] copy all the array
  5997 000035E5 4883FE01                	cmp rsi, 1
  5998 000035E9 7410                    	je .L_lambda_opt_env_end_00de
  5999 000035EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6000 000035EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6001 000035F3 48FFC6                  	inc rsi
  6002 000035F6 48FFC2                  	inc rdx
  6003 000035F9 EBEA                    	jmp .L_lambda_opt_env_loop_00de
  6004                                  .L_lambda_opt_env_end_00de:
  6005 000035FB 5B                      	pop rbx
  6006 000035FC BE00000000              	mov rsi, 0
  6007                                  .L_lambda_opt_params_loop_0298:	; copy params
  6008 00003601 4883FE01                	cmp rsi, 1
  6009 00003605 740E                    	je .L_lambda_opt_params_end_01bb
  6010 00003607 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6011 0000360C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6012 00003610 48FFC6                  	inc rsi
  6013 00003613 EBEC                    	jmp .L_lambda_opt_params_loop_0298
  6014                                  .L_lambda_opt_params_end_01bb:
  6015 00003615 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  6016 00003618 4889C3                  	mov rbx, rax
  6017 0000361B 58                      	pop rax
  6018 0000361C C60004                  	mov byte [rax], T_closure
  6019 0000361F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6020 00003623 48C74009[30360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00de
  6021 0000362B E9EB010000              	jmp .L_lambda_opt_end_01bb
  6022                                  .L_lambda_opt_code_00de:	; lambda-opt body
  6023 00003630 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6024 00003636 7D0B                    	jge .L_lambda_simple_arity_check_ok_07f4
  6025 00003638 FF742410                	push qword [rsp + 8 * 2]
  6026 0000363C 6A01                    	push 1
  6027 0000363E E9A63E0100              	jmp L_error_incorrect_arity_simple
  6028                                  .L_lambda_simple_arity_check_ok_07f4:
  6029 00003643 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6030 00003648 4983E801                	sub r8, 1
  6031 0000364C 4C89C3                  	mov rbx,r8
  6032 0000364F 4983F800                	cmp r8, 0
  6033 00003653 7535                    	jne .L_lambda_opt_params_loop_029a
  6034 00003655 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6035 0000365A 4883C203                	add rdx , 3
  6036 0000365E 4883EC08                	sub rsp , 8
  6037 00003662 4889E1                  	mov rcx, rsp
  6038                                  .L_lambda_opt_stack_adjusted_0299: ;pushing down the stack of the current function
  6039 00003665 488B5908                	mov rbx, qword [rcx + 8 * 1]
  6040 00003669 488919                  	mov qword[rcx] , rbx
  6041 0000366C 4883C108                	add rcx , 8
  6042 00003670 48FFCA                  	dec rdx
  6043 00003673 4883FA00                	cmp rdx, 0
  6044 00003677 75EC                    	jne .L_lambda_opt_stack_adjusted_0299
  6045 00003679 48FF442410              	inc qword [rsp + 8 * 2]
  6046 0000367E 48C701[01000000]        	mov qword [rcx], sob_nil 
  6047 00003685 E9A2000000              	jmp .L_lambda_opt_end_01bc
  6048                                  	.L_lambda_opt_params_loop_029a:
  6049 0000368A 488B542410              	mov rdx, qword [rsp + 8*2]
  6050 0000368F 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  6051 00003694 4C89C2                  	mov rdx, r8
  6052 00003697 49B9-                   	mov r9, sob_nil
  6052 00003699 [0100000000000000] 
  6053                                  	.L_lambda_opt_params_loop_0299: ;loop for copying the opt into list
  6054 000036A1 BF11000000              	mov rdi, (1 + 8 + 8)
  6055 000036A6 E8853E0100              	call malloc
  6056 000036AB C60021                  	mov byte[rax], T_pair
  6057 000036AE 488B19                  	mov rbx, qword [rcx]
  6058 000036B1 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6059 000036B5 4C894809                	mov SOB_PAIR_CDR(rax), r9
  6060 000036B9 4989C1                  	mov r9, rax
  6061 000036BC 48FFCA                  	dec rdx
  6062 000036BF 4883E908                	sub rcx, 8
  6063 000036C3 4883FA00                	cmp rdx, 0
  6064 000036C7 75D8                    	jne .L_lambda_opt_params_loop_0299
  6065 000036C9 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6066 000036CE 4889E0                  	mov rax, rsp
  6067 000036D1 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  6068 000036D6 4C89C1                  	mov rcx, r8
  6069 000036D9 48FFC9                  	dec rcx
  6070 000036DC 4883C203                	add rdx, 3
  6071 000036E0 4829CA                  	sub rdx,rcx
  6072 000036E3 48C1E103                	shl rcx, 3
  6073                                  	.L_lambda_opt_stack_adjusted_029a:
  6074 000036E7 4883FA00                	cmp rdx, 0
  6075 000036EB 7419                    	je .L_lambda_opt_params_end_01bc
  6076 000036ED 4889D8                  	mov rax, rbx
  6077 000036F0 4829C8                  	sub rax, rcx
  6078 000036F3 488B30                  	mov rsi, qword [rax]
  6079 000036F6 488933                  	mov [rbx], rsi
  6080 000036F9 4883EB08                	sub rbx, 8
  6081 000036FD 48FFCA                  	dec rdx
  6082 00003700 4883FA00                	cmp rdx, 0
  6083 00003704 75E1                    	jne .L_lambda_opt_stack_adjusted_029a
  6084                                  	.L_lambda_opt_params_end_01bc:
  6085 00003706 4801CC                  	add rsp,rcx
  6086 00003709 BB01000000              	mov rbx, 1
  6087 0000370E 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  6088 00003713 4883C303                	add rbx,3
  6089 00003717 4C29C3                  	sub rbx,r8
  6090 0000371A 48C1E303                	shl rbx, 3
  6091 0000371E 4801E3                  	add rbx, rsp
  6092 00003721 4C890B                  	mov qword[rbx] , r9
  6093 00003724 49FFC8                  	dec r8
  6094 00003727 4C29442410              	sub qword [rsp + 8 * 2], r8
  6095                                  	.L_lambda_opt_end_01bc:
  6096 0000372C C8000000                	enter 0, 0
  6097                                  	; preparing a tail-call
  6098                                  	; preparing a non-tail-call
  6099                                  	; preparing a non-tail-call
  6100 00003730 488B4528                	mov rax, PARAM(1)	; param s
  6101 00003734 50                      	push rax
  6102 00003735 6A01                    	push 1	; arg count
  6103 00003737 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  6104 0000373F 803805                  	cmp byte [rax], T_undefined
  6105 00003742 0F84BB3C0100            	je L_error_fvar_undefined
  6106 00003748 803804                  	cmp byte [rax], T_closure
  6107 0000374B 0F85363D0100            	jne L_error_non_closure
  6108 00003751 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6109 00003754 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6110 00003757 50                      	push rax
  6111                                  	; preparing a non-tail-call
  6112 00003758 488B4528                	mov rax, PARAM(1)	; param s
  6113 0000375C 50                      	push rax
  6114 0000375D 6A01                    	push 1	; arg count
  6115 0000375F 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  6116 00003767 803805                  	cmp byte [rax], T_undefined
  6117 0000376A 0F84933C0100            	je L_error_fvar_undefined
  6118 00003770 803804                  	cmp byte [rax], T_closure
  6119 00003773 0F850E3D0100            	jne L_error_non_closure
  6120 00003779 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6121 0000377C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6122 0000377F 50                      	push rax
  6123 00003780 6A02                    	push 2	; arg count
  6124 00003782 488B4510                	mov rax, ENV
  6125 00003786 488B00                  	mov rax, qword [rax + 8 * 0]
  6126 00003789 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  6127 0000378C 488B00                  	mov rax, qword [rax]
  6128 0000378F 803804                  	cmp byte [rax], T_closure
  6129 00003792 0F85EF3C0100            	jne L_error_non_closure
  6130 00003798 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6131 0000379B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6132 0000379E 50                      	push rax
  6133 0000379F 488B4520                	mov rax, PARAM(0)	; param f
  6134 000037A3 50                      	push rax
  6135 000037A4 6A02                    	push 2	; arg count
  6136 000037A6 488B0425[260F0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  6137 000037AE 803805                  	cmp byte [rax], T_undefined
  6138 000037B1 0F844C3C0100            	je L_error_fvar_undefined
  6139 000037B7 803804                  	cmp byte [rax], T_closure
  6140 000037BA 0F85C73C0100            	jne L_error_non_closure
  6141 000037C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6142 000037C3 FF7508                  	push qword [rbp + 8 *1]
  6143 000037C6 4989C0                  	mov r8, rax
  6144 000037C9 488B5D18                	mov rbx, COUNT
  6145 000037CD 4883C303                	add rbx,3
  6146 000037D1 48C1E303                	shl rbx,3
  6147 000037D5 4801EB                  	add rbx, rbp
  6148 000037D8 488B6D00                	mov rbp, [rbp]
  6149 000037DC B900000000              	mov rcx,0
  6150 000037E1 BA05000000              	mov rdx, 5
  6151 000037E6 4889D0                  	mov rax, rdx
  6152 000037E9 48FFC8                  	dec rax
  6153 000037EC 48C1E003                	shl rax,3
  6154 000037F0 4801E0                  	add rax, rsp
  6155                                  	.L_tc_recycle_frame_loop_08e8:
  6156 000037F3 4839D1                  	cmp rcx, rdx
  6157 000037F6 7414                    	je .L_tc_recycle_frame_done_08e8
  6158 000037F8 4C8B08                  	mov r9, qword [rax]
  6159 000037FB 4C890B                  	mov qword [rbx],r9
  6160 000037FE 4883E808                	sub rax,8
  6161 00003802 4883EB08                	sub rbx,8
  6162 00003806 4883C101                	add rcx,1
  6163 0000380A EBE7                    	jmp .L_tc_recycle_frame_loop_08e8
  6164                                  	.L_tc_recycle_frame_done_08e8:
  6165 0000380C 4883C308                	add rbx,8
  6166 00003810 4889DC                  	mov rsp,rbx
  6167 00003813 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  6168                                  	LEAVE
    49 00003817 C9                  <1>  leave
  6169 00003818 C22000                  	ret AND_KILL_FRAME(2)
  6170                                  .L_lambda_opt_end_01bb:
  6171 0000381B C9                      	leave
  6172 0000381C C21800                  	ret AND_KILL_FRAME(1)
  6173                                  .L_lambda_simple_end_0715:	; new closure is in rax
  6174 0000381F 803804                  	cmp byte [rax], T_closure
  6175 00003822 0F855F3C0100            	jne L_error_non_closure
  6176 00003828 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6177 0000382B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6178 0000382E 48890425[8B100000]      	mov qword [free_var_33], rax
  6179 00003836 48B8-                   	mov rax, sob_void
  6179 00003838 [0000000000000000] 
  6180                                  
  6181 00003840 4889C7                  	mov rdi, rax
  6182 00003843 E83D3F0100              	call print_sexpr_if_not_void
  6183 00003848 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6184 0000384D E8DE3C0100              	call malloc
  6185 00003852 50                      	push rax
  6186 00003853 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  6187 00003857 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6188 0000385B BF00000000              	mov rdi, 8 * 0	; new rib for optional parameters
  6189 00003860 E8CB3C0100              	call malloc
  6190 00003865 50                      	push rax
  6191 00003866 BF08000000              	mov rdi, 8 * 1	; extended env
  6192 0000386B E8C03C0100              	call malloc
  6193 00003870 488B7D10                	mov rdi, ENV
  6194 00003874 BE00000000              	mov rsi, 0
  6195 00003879 BA01000000              	mov rdx, 1
  6196                                  .L_lambda_opt_env_loop_00df:	; ext_env[i + 1] <-- env[i] copy all the array
  6197 0000387E 4883FE00                	cmp rsi, 0
  6198 00003882 7410                    	je .L_lambda_opt_env_end_00df
  6199 00003884 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6200 00003888 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6201 0000388C 48FFC6                  	inc rsi
  6202 0000388F 48FFC2                  	inc rdx
  6203 00003892 EBEA                    	jmp .L_lambda_opt_env_loop_00df
  6204                                  .L_lambda_opt_env_end_00df:
  6205 00003894 5B                      	pop rbx
  6206 00003895 BE00000000              	mov rsi, 0
  6207                                  .L_lambda_opt_params_loop_029b:	; copy params
  6208 0000389A 4883FE00                	cmp rsi, 0
  6209 0000389E 740E                    	je .L_lambda_opt_params_end_01bd
  6210 000038A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6211 000038A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6212 000038A9 48FFC6                  	inc rsi
  6213 000038AC EBEC                    	jmp .L_lambda_opt_params_loop_029b
  6214                                  .L_lambda_opt_params_end_01bd:
  6215 000038AE 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  6216 000038B1 4889C3                  	mov rbx, rax
  6217 000038B4 58                      	pop rax
  6218 000038B5 C60004                  	mov byte [rax], T_closure
  6219 000038B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6220 000038BC 48C74009[C9380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00df
  6221 000038C4 E907050000              	jmp .L_lambda_opt_end_01bd
  6222                                  .L_lambda_opt_code_00df:	; lambda-opt body
  6223 000038C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6224 000038CF 7D0B                    	jge .L_lambda_simple_arity_check_ok_07f5
  6225 000038D1 FF742410                	push qword [rsp + 8 * 2]
  6226 000038D5 6A01                    	push 1
  6227 000038D7 E90D3C0100              	jmp L_error_incorrect_arity_simple
  6228                                  .L_lambda_simple_arity_check_ok_07f5:
  6229 000038DC 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6230 000038E1 4983E801                	sub r8, 1
  6231 000038E5 4C89C3                  	mov rbx,r8
  6232 000038E8 4983F800                	cmp r8, 0
  6233 000038EC 7535                    	jne .L_lambda_opt_params_loop_029d
  6234 000038EE 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6235 000038F3 4883C203                	add rdx , 3
  6236 000038F7 4883EC08                	sub rsp , 8
  6237 000038FB 4889E1                  	mov rcx, rsp
  6238                                  .L_lambda_opt_stack_adjusted_029c: ;pushing down the stack of the current function
  6239 000038FE 488B5908                	mov rbx, qword [rcx + 8 * 1]
  6240 00003902 488919                  	mov qword[rcx] , rbx
  6241 00003905 4883C108                	add rcx , 8
  6242 00003909 48FFCA                  	dec rdx
  6243 0000390C 4883FA00                	cmp rdx, 0
  6244 00003910 75EC                    	jne .L_lambda_opt_stack_adjusted_029c
  6245 00003912 48FF442410              	inc qword [rsp + 8 * 2]
  6246 00003917 48C701[01000000]        	mov qword [rcx], sob_nil 
  6247 0000391E E9A2000000              	jmp .L_lambda_opt_end_01be
  6248                                  	.L_lambda_opt_params_loop_029d:
  6249 00003923 488B542410              	mov rdx, qword [rsp + 8*2]
  6250 00003928 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  6251 0000392D 4C89C2                  	mov rdx, r8
  6252 00003930 49B9-                   	mov r9, sob_nil
  6252 00003932 [0100000000000000] 
  6253                                  	.L_lambda_opt_params_loop_029c: ;loop for copying the opt into list
  6254 0000393A BF11000000              	mov rdi, (1 + 8 + 8)
  6255 0000393F E8EC3B0100              	call malloc
  6256 00003944 C60021                  	mov byte[rax], T_pair
  6257 00003947 488B19                  	mov rbx, qword [rcx]
  6258 0000394A 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6259 0000394E 4C894809                	mov SOB_PAIR_CDR(rax), r9
  6260 00003952 4989C1                  	mov r9, rax
  6261 00003955 48FFCA                  	dec rdx
  6262 00003958 4883E908                	sub rcx, 8
  6263 0000395C 4883FA00                	cmp rdx, 0
  6264 00003960 75D8                    	jne .L_lambda_opt_params_loop_029c
  6265 00003962 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6266 00003967 4889E0                  	mov rax, rsp
  6267 0000396A 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  6268 0000396F 4C89C1                  	mov rcx, r8
  6269 00003972 48FFC9                  	dec rcx
  6270 00003975 4883C203                	add rdx, 3
  6271 00003979 4829CA                  	sub rdx,rcx
  6272 0000397C 48C1E103                	shl rcx, 3
  6273                                  	.L_lambda_opt_stack_adjusted_029d:
  6274 00003980 4883FA00                	cmp rdx, 0
  6275 00003984 7419                    	je .L_lambda_opt_params_end_01be
  6276 00003986 4889D8                  	mov rax, rbx
  6277 00003989 4829C8                  	sub rax, rcx
  6278 0000398C 488B30                  	mov rsi, qword [rax]
  6279 0000398F 488933                  	mov [rbx], rsi
  6280 00003992 4883EB08                	sub rbx, 8
  6281 00003996 48FFCA                  	dec rdx
  6282 00003999 4883FA00                	cmp rdx, 0
  6283 0000399D 75E1                    	jne .L_lambda_opt_stack_adjusted_029d
  6284                                  	.L_lambda_opt_params_end_01be:
  6285 0000399F 4801CC                  	add rsp,rcx
  6286 000039A2 BB01000000              	mov rbx, 1
  6287 000039A7 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  6288 000039AC 4883C303                	add rbx,3
  6289 000039B0 4C29C3                  	sub rbx,r8
  6290 000039B3 48C1E303                	shl rbx, 3
  6291 000039B7 4801E3                  	add rbx, rsp
  6292 000039BA 4C890B                  	mov qword[rbx] , r9
  6293 000039BD 49FFC8                  	dec r8
  6294 000039C0 4C29442410              	sub qword [rsp + 8 * 2], r8
  6295                                  	.L_lambda_opt_end_01be:
  6296 000039C5 C8000000                	enter 0, 0
  6297                                  	; preparing a tail-call
  6298 000039C9 48B8-                   	mov rax, L_constants + 1993
  6298 000039CB [C907000000000000] 
  6299 000039D3 50                      	push rax
  6300 000039D4 6A01                    	push 1	; arg count
  6301 000039D6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6302 000039DB E8503B0100              	call malloc
  6303 000039E0 50                      	push rax
  6304 000039E1 BF10000000              	mov rdi, 8 * 2	; new rib
  6305 000039E6 E8453B0100              	call malloc
  6306 000039EB 50                      	push rax
  6307 000039EC BF10000000              	mov rdi, 8 * 2	; extended env
  6308 000039F1 E83A3B0100              	call malloc
  6309 000039F6 488B7D10                	mov rdi, ENV
  6310 000039FA BE00000000              	mov rsi, 0
  6311 000039FF BA01000000              	mov rdx, 1
  6312                                  .L_lambda_simple_env_loop_0717:	; ext_env[i + 1] <-- env[i]
  6313 00003A04 4883FE01                	cmp rsi, 1
  6314 00003A08 7410                    	je .L_lambda_simple_env_end_0717
  6315 00003A0A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6316 00003A0E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6317 00003A12 48FFC6                  	inc rsi
  6318 00003A15 48FFC2                  	inc rdx
  6319 00003A18 EBEA                    	jmp .L_lambda_simple_env_loop_0717
  6320                                  .L_lambda_simple_env_end_0717:
  6321 00003A1A 5B                      	pop rbx
  6322 00003A1B BE00000000              	mov rsi, 0
  6323                                  .L_lambda_simple_params_loop_0717:	; copy params
  6324 00003A20 4883FE02                	cmp rsi, 2
  6325 00003A24 740E                    	je .L_lambda_simple_params_end_0717
  6326 00003A26 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6327 00003A2B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6328 00003A2F 48FFC6                  	inc rsi
  6329 00003A32 EBEC                    	jmp .L_lambda_simple_params_loop_0717
  6330                                  .L_lambda_simple_params_end_0717:
  6331 00003A34 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6332 00003A37 4889C3                  	mov rbx, rax
  6333 00003A3A 58                      	pop rax
  6334 00003A3B C60004                  	mov byte [rax], T_closure
  6335 00003A3E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6336 00003A42 48C74009[4F3A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0717
  6337 00003A4A E91D030000              	jmp .L_lambda_simple_end_0717
  6338                                  .L_lambda_simple_code_0717:	; lambda-simple body
  6339 00003A4F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6340 00003A55 740B                    	je .L_lambda_simple_arity_check_ok_07f6
  6341 00003A57 FF742410                	push qword [rsp + 8 * 2]
  6342 00003A5B 6A01                    	push 1
  6343 00003A5D E9873A0100              	jmp L_error_incorrect_arity_simple
  6344                                  .L_lambda_simple_arity_check_ok_07f6:
  6345 00003A62 C8000000                	enter 0, 0
  6346 00003A66 BF08000000              	mov rdi, 8
  6347 00003A6B E8C03A0100              	call malloc
  6348 00003A70 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  6349 00003A74 488918                  	mov qword [rax], rbx
  6350 00003A77 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  6351 00003A7B 48B8-                   	mov rax, sob_void
  6351 00003A7D [0000000000000000] 
  6352                                  
  6353 00003A85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6354 00003A8A E8A13A0100              	call malloc
  6355 00003A8F 50                      	push rax
  6356 00003A90 BF08000000              	mov rdi, 8 * 1	; new rib
  6357 00003A95 E8963A0100              	call malloc
  6358 00003A9A 50                      	push rax
  6359 00003A9B BF18000000              	mov rdi, 8 * 3	; extended env
  6360 00003AA0 E88B3A0100              	call malloc
  6361 00003AA5 488B7D10                	mov rdi, ENV
  6362 00003AA9 BE00000000              	mov rsi, 0
  6363 00003AAE BA01000000              	mov rdx, 1
  6364                                  .L_lambda_simple_env_loop_0718:	; ext_env[i + 1] <-- env[i]
  6365 00003AB3 4883FE02                	cmp rsi, 2
  6366 00003AB7 7410                    	je .L_lambda_simple_env_end_0718
  6367 00003AB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6368 00003ABD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6369 00003AC1 48FFC6                  	inc rsi
  6370 00003AC4 48FFC2                  	inc rdx
  6371 00003AC7 EBEA                    	jmp .L_lambda_simple_env_loop_0718
  6372                                  .L_lambda_simple_env_end_0718:
  6373 00003AC9 5B                      	pop rbx
  6374 00003ACA BE00000000              	mov rsi, 0
  6375                                  .L_lambda_simple_params_loop_0718:	; copy params
  6376 00003ACF 4883FE01                	cmp rsi, 1
  6377 00003AD3 740E                    	je .L_lambda_simple_params_end_0718
  6378 00003AD5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6379 00003ADA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6380 00003ADE 48FFC6                  	inc rsi
  6381 00003AE1 EBEC                    	jmp .L_lambda_simple_params_loop_0718
  6382                                  .L_lambda_simple_params_end_0718:
  6383 00003AE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6384 00003AE6 4889C3                  	mov rbx, rax
  6385 00003AE9 58                      	pop rax
  6386 00003AEA C60004                  	mov byte [rax], T_closure
  6387 00003AED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6388 00003AF1 48C74009[FE3A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0718
  6389 00003AF9 E9A2010000              	jmp .L_lambda_simple_end_0718
  6390                                  .L_lambda_simple_code_0718:	; lambda-simple body
  6391 00003AFE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6392 00003B04 740B                    	je .L_lambda_simple_arity_check_ok_07f7
  6393 00003B06 FF742410                	push qword [rsp + 8 * 2]
  6394 00003B0A 6A01                    	push 1
  6395 00003B0C E9D8390100              	jmp L_error_incorrect_arity_simple
  6396                                  .L_lambda_simple_arity_check_ok_07f7:
  6397 00003B11 C8000000                	enter 0, 0
  6398                                  	; preparing a non-tail-call
  6399                                  	; preparing a non-tail-call
  6400 00003B15 488B4520                	mov rax, PARAM(0)	; param s
  6401 00003B19 50                      	push rax
  6402 00003B1A 6A01                    	push 1	; arg count
  6403 00003B1C 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  6404 00003B24 803805                  	cmp byte [rax], T_undefined
  6405 00003B27 0F84D6380100            	je L_error_fvar_undefined
  6406 00003B2D 803804                  	cmp byte [rax], T_closure
  6407 00003B30 0F8551390100            	jne L_error_non_closure
  6408 00003B36 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6409 00003B39 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6410 00003B3C 50                      	push rax
  6411 00003B3D 6A01                    	push 1	; arg count
  6412 00003B3F 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
  6413 00003B47 803805                  	cmp byte [rax], T_undefined
  6414 00003B4A 0F84B3380100            	je L_error_fvar_undefined
  6415 00003B50 803804                  	cmp byte [rax], T_closure
  6416 00003B53 0F852E390100            	jne L_error_non_closure
  6417 00003B59 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6418 00003B5C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6419 00003B5F 483D[02000000]          	cmp rax, sob_boolean_false
  6420 00003B65 0F8427010000            	je .L_if_else_04d4
  6421                                  	; preparing a non-tail-call
  6422                                  	; preparing a non-tail-call
  6423 00003B6B 488B4520                	mov rax, PARAM(0)	; param s
  6424 00003B6F 50                      	push rax
  6425 00003B70 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  6426 00003B78 803805                  	cmp byte [rax], T_undefined
  6427 00003B7B 0F8482380100            	je L_error_fvar_undefined
  6428 00003B81 50                      	push rax
  6429 00003B82 6A02                    	push 2	; arg count
  6430 00003B84 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  6431 00003B8C 803805                  	cmp byte [rax], T_undefined
  6432 00003B8F 0F846E380100            	je L_error_fvar_undefined
  6433 00003B95 803804                  	cmp byte [rax], T_closure
  6434 00003B98 0F85E9380100            	jne L_error_non_closure
  6435 00003B9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6436 00003BA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6437 00003BA4 50                      	push rax
  6438 00003BA5 488B4510                	mov rax, ENV
  6439 00003BA9 488B4008                	mov rax, qword [rax + 8 * 1]
  6440 00003BAD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6441 00003BB0 50                      	push rax
  6442 00003BB1 6A02                    	push 2	; arg count
  6443 00003BB3 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
  6444 00003BBB 803805                  	cmp byte [rax], T_undefined
  6445 00003BBE 0F843F380100            	je L_error_fvar_undefined
  6446 00003BC4 803804                  	cmp byte [rax], T_closure
  6447 00003BC7 0F85BA380100            	jne L_error_non_closure
  6448 00003BCD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6449 00003BD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6450 00003BD3 483D[02000000]          	cmp rax, sob_boolean_false
  6451 00003BD9 0F85B1000000            	jne .L_if_end_0556
  6452                                  	; preparing a tail-call
  6453                                  	; preparing a non-tail-call
  6454 00003BDF 488B4520                	mov rax, PARAM(0)	; param s
  6455 00003BE3 50                      	push rax
  6456 00003BE4 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  6457 00003BEC 803805                  	cmp byte [rax], T_undefined
  6458 00003BEF 0F840E380100            	je L_error_fvar_undefined
  6459 00003BF5 50                      	push rax
  6460 00003BF6 6A02                    	push 2	; arg count
  6461 00003BF8 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  6462 00003C00 803805                  	cmp byte [rax], T_undefined
  6463 00003C03 0F84FA370100            	je L_error_fvar_undefined
  6464 00003C09 803804                  	cmp byte [rax], T_closure
  6465 00003C0C 0F8575380100            	jne L_error_non_closure
  6466 00003C12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6467 00003C15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6468 00003C18 50                      	push rax
  6469 00003C19 6A01                    	push 1	; arg count
  6470 00003C1B 488B4510                	mov rax, ENV
  6471 00003C1F 488B00                  	mov rax, qword [rax + 8 * 0]
  6472 00003C22 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6473 00003C25 488B00                  	mov rax, qword [rax]
  6474 00003C28 803804                  	cmp byte [rax], T_closure
  6475 00003C2B 0F8556380100            	jne L_error_non_closure
  6476 00003C31 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6477 00003C34 FF7508                  	push qword [rbp + 8 *1]
  6478 00003C37 4989C0                  	mov r8, rax
  6479 00003C3A 488B5D18                	mov rbx, COUNT
  6480 00003C3E 4883C303                	add rbx,3
  6481 00003C42 48C1E303                	shl rbx,3
  6482 00003C46 4801EB                  	add rbx, rbp
  6483 00003C49 488B6D00                	mov rbp, [rbp]
  6484 00003C4D B900000000              	mov rcx,0
  6485 00003C52 BA04000000              	mov rdx, 4
  6486 00003C57 4889D0                  	mov rax, rdx
  6487 00003C5A 48FFC8                  	dec rax
  6488 00003C5D 48C1E003                	shl rax,3
  6489 00003C61 4801E0                  	add rax, rsp
  6490                                  	.L_tc_recycle_frame_loop_08ea:
  6491 00003C64 4839D1                  	cmp rcx, rdx
  6492 00003C67 7414                    	je .L_tc_recycle_frame_done_08ea
  6493 00003C69 4C8B08                  	mov r9, qword [rax]
  6494 00003C6C 4C890B                  	mov qword [rbx],r9
  6495 00003C6F 4883E808                	sub rax,8
  6496 00003C73 4883EB08                	sub rbx,8
  6497 00003C77 4883C101                	add rcx,1
  6498 00003C7B EBE7                    	jmp .L_tc_recycle_frame_loop_08ea
  6499                                  	.L_tc_recycle_frame_done_08ea:
  6500 00003C7D 4883C308                	add rbx,8
  6501 00003C81 4889DC                  	mov rsp,rbx
  6502 00003C84 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  6503 00003C88 483D[02000000]          	cmp rax, sob_boolean_false
  6504 00003C8E 7500                    	jne .L_if_end_0556
  6505                                  .L_if_end_0556:
  6506 00003C90 EB0A                    	jmp .L_if_end_0557
  6507                                  .L_if_else_04d4:
  6508 00003C92 48B8-                   	mov rax, L_constants + 2
  6508 00003C94 [0200000000000000] 
  6509                                  .L_if_end_0557:
  6510 00003C9C C9                      	leave
  6511 00003C9D C21800                  	ret AND_KILL_FRAME(1)
  6512                                  .L_lambda_simple_end_0718:	; new closure is in rax
  6513 00003CA0 50                      	push rax
  6514 00003CA1 488B4520                	mov rax, PARAM(0)	; param loop
  6515 00003CA5 8F00                    	pop qword [rax]
  6516 00003CA7 48B8-                   	mov rax, sob_void
  6516 00003CA9 [0000000000000000] 
  6517                                  
  6518                                  	; preparing a non-tail-call
  6519 00003CB1 488B4510                	mov rax, ENV
  6520 00003CB5 488B00                  	mov rax, qword [rax + 8 * 0]
  6521 00003CB8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6522 00003CBC 50                      	push rax
  6523 00003CBD 6A01                    	push 1	; arg count
  6524 00003CBF 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
  6525 00003CC7 803805                  	cmp byte [rax], T_undefined
  6526 00003CCA 0F8433370100            	je L_error_fvar_undefined
  6527 00003CD0 803804                  	cmp byte [rax], T_closure
  6528 00003CD3 0F85AE370100            	jne L_error_non_closure
  6529 00003CD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6530 00003CDC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6531 00003CDF 483D[02000000]          	cmp rax, sob_boolean_false
  6532 00003CE5 7477                    	je .L_if_else_04d5
  6533                                  	; preparing a tail-call
  6534 00003CE7 488B4510                	mov rax, ENV
  6535 00003CEB 488B00                  	mov rax, qword [rax + 8 * 0]
  6536 00003CEE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6537 00003CF2 50                      	push rax
  6538 00003CF3 6A01                    	push 1	; arg count
  6539 00003CF5 488B4520                	mov rax, PARAM(0)	; param loop
  6540 00003CF9 488B00                  	mov rax, qword [rax]
  6541 00003CFC 803804                  	cmp byte [rax], T_closure
  6542 00003CFF 0F8582370100            	jne L_error_non_closure
  6543 00003D05 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6544 00003D08 FF7508                  	push qword [rbp + 8 *1]
  6545 00003D0B 4989C0                  	mov r8, rax
  6546 00003D0E 488B5D18                	mov rbx, COUNT
  6547 00003D12 4883C303                	add rbx,3
  6548 00003D16 48C1E303                	shl rbx,3
  6549 00003D1A 4801EB                  	add rbx, rbp
  6550 00003D1D 488B6D00                	mov rbp, [rbp]
  6551 00003D21 B900000000              	mov rcx,0
  6552 00003D26 BA04000000              	mov rdx, 4
  6553 00003D2B 4889D0                  	mov rax, rdx
  6554 00003D2E 48FFC8                  	dec rax
  6555 00003D31 48C1E003                	shl rax,3
  6556 00003D35 4801E0                  	add rax, rsp
  6557                                  	.L_tc_recycle_frame_loop_08eb:
  6558 00003D38 4839D1                  	cmp rcx, rdx
  6559 00003D3B 7414                    	je .L_tc_recycle_frame_done_08eb
  6560 00003D3D 4C8B08                  	mov r9, qword [rax]
  6561 00003D40 4C890B                  	mov qword [rbx],r9
  6562 00003D43 4883E808                	sub rax,8
  6563 00003D47 4883EB08                	sub rbx,8
  6564 00003D4B 4883C101                	add rcx,1
  6565 00003D4F EBE7                    	jmp .L_tc_recycle_frame_loop_08eb
  6566                                  	.L_tc_recycle_frame_done_08eb:
  6567 00003D51 4883C308                	add rbx,8
  6568 00003D55 4889DC                  	mov rsp,rbx
  6569 00003D58 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  6570 00003D5C EB0A                    	jmp .L_if_end_0558
  6571                                  .L_if_else_04d5:
  6572 00003D5E 48B8-                   	mov rax, L_constants + 2
  6572 00003D60 [0200000000000000] 
  6573                                  .L_if_end_0558:
  6574 00003D68 C9                      	leave
  6575 00003D69 C21800                  	ret AND_KILL_FRAME(1)
  6576                                  .L_lambda_simple_end_0717:	; new closure is in rax
  6577 00003D6C 803804                  	cmp byte [rax], T_closure
  6578 00003D6F 0F8512370100            	jne L_error_non_closure
  6579 00003D75 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6580 00003D78 FF7508                  	push qword [rbp + 8 *1]
  6581 00003D7B 4989C0                  	mov r8, rax
  6582 00003D7E 488B5D18                	mov rbx, COUNT
  6583 00003D82 4883C303                	add rbx,3
  6584 00003D86 48C1E303                	shl rbx,3
  6585 00003D8A 4801EB                  	add rbx, rbp
  6586 00003D8D 488B6D00                	mov rbp, [rbp]
  6587 00003D91 B900000000              	mov rcx,0
  6588 00003D96 BA04000000              	mov rdx, 4
  6589 00003D9B 4889D0                  	mov rax, rdx
  6590 00003D9E 48FFC8                  	dec rax
  6591 00003DA1 48C1E003                	shl rax,3
  6592 00003DA5 4801E0                  	add rax, rsp
  6593                                  	.L_tc_recycle_frame_loop_08e9:
  6594 00003DA8 4839D1                  	cmp rcx, rdx
  6595 00003DAB 7414                    	je .L_tc_recycle_frame_done_08e9
  6596 00003DAD 4C8B08                  	mov r9, qword [rax]
  6597 00003DB0 4C890B                  	mov qword [rbx],r9
  6598 00003DB3 4883E808                	sub rax,8
  6599 00003DB7 4883EB08                	sub rbx,8
  6600 00003DBB 4883C101                	add rcx,1
  6601 00003DBF EBE7                    	jmp .L_tc_recycle_frame_loop_08e9
  6602                                  	.L_tc_recycle_frame_done_08e9:
  6603 00003DC1 4883C308                	add rbx,8
  6604 00003DC5 4889DC                  	mov rsp,rbx
  6605 00003DC8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  6606                                  	LEAVE
    49 00003DCC C9                  <1>  leave
  6607 00003DCD C22000                  	ret AND_KILL_FRAME(2)
  6608                                  .L_lambda_opt_end_01bd:
  6609 00003DD0 48890425[A8150000]      	mov qword [free_var_110], rax
  6610 00003DD8 48B8-                   	mov rax, sob_void
  6610 00003DDA [0000000000000000] 
  6611                                  
  6612 00003DE2 4889C7                  	mov rdi, rax
  6613 00003DE5 E89B390100              	call print_sexpr_if_not_void
  6614 00003DEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6615 00003DEF E83C370100              	call malloc
  6616 00003DF4 50                      	push rax
  6617 00003DF5 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  6618 00003DF9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6619 00003DFD BF00000000              	mov rdi, 8 * 0	; new rib for optional parameters
  6620 00003E02 E829370100              	call malloc
  6621 00003E07 50                      	push rax
  6622 00003E08 BF08000000              	mov rdi, 8 * 1	; extended env
  6623 00003E0D E81E370100              	call malloc
  6624 00003E12 488B7D10                	mov rdi, ENV
  6625 00003E16 BE00000000              	mov rsi, 0
  6626 00003E1B BA01000000              	mov rdx, 1
  6627                                  .L_lambda_opt_env_loop_00e0:	; ext_env[i + 1] <-- env[i] copy all the array
  6628 00003E20 4883FE00                	cmp rsi, 0
  6629 00003E24 7410                    	je .L_lambda_opt_env_end_00e0
  6630 00003E26 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6631 00003E2A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6632 00003E2E 48FFC6                  	inc rsi
  6633 00003E31 48FFC2                  	inc rdx
  6634 00003E34 EBEA                    	jmp .L_lambda_opt_env_loop_00e0
  6635                                  .L_lambda_opt_env_end_00e0:
  6636 00003E36 5B                      	pop rbx
  6637 00003E37 BE00000000              	mov rsi, 0
  6638                                  .L_lambda_opt_params_loop_029e:	; copy params
  6639 00003E3C 4883FE00                	cmp rsi, 0
  6640 00003E40 740E                    	je .L_lambda_opt_params_end_01bf
  6641 00003E42 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6642 00003E47 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6643 00003E4B 48FFC6                  	inc rsi
  6644 00003E4E EBEC                    	jmp .L_lambda_opt_params_loop_029e
  6645                                  .L_lambda_opt_params_end_01bf:
  6646 00003E50 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  6647 00003E53 4889C3                  	mov rbx, rax
  6648 00003E56 58                      	pop rax
  6649 00003E57 C60004                  	mov byte [rax], T_closure
  6650 00003E5A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6651 00003E5E 48C74009[6B3E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e0
  6652 00003E66 E949050000              	jmp .L_lambda_opt_end_01bf
  6653                                  .L_lambda_opt_code_00e0:	; lambda-opt body
  6654 00003E6B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6655 00003E71 7D0B                    	jge .L_lambda_simple_arity_check_ok_07f8
  6656 00003E73 FF742410                	push qword [rsp + 8 * 2]
  6657 00003E77 6A01                    	push 1
  6658 00003E79 E96B360100              	jmp L_error_incorrect_arity_simple
  6659                                  .L_lambda_simple_arity_check_ok_07f8:
  6660 00003E7E 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6661 00003E83 4983E801                	sub r8, 1
  6662 00003E87 4C89C3                  	mov rbx,r8
  6663 00003E8A 4983F800                	cmp r8, 0
  6664 00003E8E 7535                    	jne .L_lambda_opt_params_loop_02a0
  6665 00003E90 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6666 00003E95 4883C203                	add rdx , 3
  6667 00003E99 4883EC08                	sub rsp , 8
  6668 00003E9D 4889E1                  	mov rcx, rsp
  6669                                  .L_lambda_opt_stack_adjusted_029f: ;pushing down the stack of the current function
  6670 00003EA0 488B5908                	mov rbx, qword [rcx + 8 * 1]
  6671 00003EA4 488919                  	mov qword[rcx] , rbx
  6672 00003EA7 4883C108                	add rcx , 8
  6673 00003EAB 48FFCA                  	dec rdx
  6674 00003EAE 4883FA00                	cmp rdx, 0
  6675 00003EB2 75EC                    	jne .L_lambda_opt_stack_adjusted_029f
  6676 00003EB4 48FF442410              	inc qword [rsp + 8 * 2]
  6677 00003EB9 48C701[01000000]        	mov qword [rcx], sob_nil 
  6678 00003EC0 E9A2000000              	jmp .L_lambda_opt_end_01c0
  6679                                  	.L_lambda_opt_params_loop_02a0:
  6680 00003EC5 488B542410              	mov rdx, qword [rsp + 8*2]
  6681 00003ECA 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  6682 00003ECF 4C89C2                  	mov rdx, r8
  6683 00003ED2 49B9-                   	mov r9, sob_nil
  6683 00003ED4 [0100000000000000] 
  6684                                  	.L_lambda_opt_params_loop_029f: ;loop for copying the opt into list
  6685 00003EDC BF11000000              	mov rdi, (1 + 8 + 8)
  6686 00003EE1 E84A360100              	call malloc
  6687 00003EE6 C60021                  	mov byte[rax], T_pair
  6688 00003EE9 488B19                  	mov rbx, qword [rcx]
  6689 00003EEC 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6690 00003EF0 4C894809                	mov SOB_PAIR_CDR(rax), r9
  6691 00003EF4 4989C1                  	mov r9, rax
  6692 00003EF7 48FFCA                  	dec rdx
  6693 00003EFA 4883E908                	sub rcx, 8
  6694 00003EFE 4883FA00                	cmp rdx, 0
  6695 00003F02 75D8                    	jne .L_lambda_opt_params_loop_029f
  6696 00003F04 488B542410              	mov rdx, qword [rsp + 8 * 2]
  6697 00003F09 4889E0                  	mov rax, rsp
  6698 00003F0C 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  6699 00003F11 4C89C1                  	mov rcx, r8
  6700 00003F14 48FFC9                  	dec rcx
  6701 00003F17 4883C203                	add rdx, 3
  6702 00003F1B 4829CA                  	sub rdx,rcx
  6703 00003F1E 48C1E103                	shl rcx, 3
  6704                                  	.L_lambda_opt_stack_adjusted_02a0:
  6705 00003F22 4883FA00                	cmp rdx, 0
  6706 00003F26 7419                    	je .L_lambda_opt_params_end_01c0
  6707 00003F28 4889D8                  	mov rax, rbx
  6708 00003F2B 4829C8                  	sub rax, rcx
  6709 00003F2E 488B30                  	mov rsi, qword [rax]
  6710 00003F31 488933                  	mov [rbx], rsi
  6711 00003F34 4883EB08                	sub rbx, 8
  6712 00003F38 48FFCA                  	dec rdx
  6713 00003F3B 4883FA00                	cmp rdx, 0
  6714 00003F3F 75E1                    	jne .L_lambda_opt_stack_adjusted_02a0
  6715                                  	.L_lambda_opt_params_end_01c0:
  6716 00003F41 4801CC                  	add rsp,rcx
  6717 00003F44 BB01000000              	mov rbx, 1
  6718 00003F49 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  6719 00003F4E 4883C303                	add rbx,3
  6720 00003F52 4C29C3                  	sub rbx,r8
  6721 00003F55 48C1E303                	shl rbx, 3
  6722 00003F59 4801E3                  	add rbx, rsp
  6723 00003F5C 4C890B                  	mov qword[rbx] , r9
  6724 00003F5F 49FFC8                  	dec r8
  6725 00003F62 4C29442410              	sub qword [rsp + 8 * 2], r8
  6726                                  	.L_lambda_opt_end_01c0:
  6727 00003F67 C8000000                	enter 0, 0
  6728                                  	; preparing a tail-call
  6729 00003F6B 48B8-                   	mov rax, L_constants + 1993
  6729 00003F6D [C907000000000000] 
  6730 00003F75 50                      	push rax
  6731 00003F76 6A01                    	push 1	; arg count
  6732 00003F78 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6733 00003F7D E8AE350100              	call malloc
  6734 00003F82 50                      	push rax
  6735 00003F83 BF10000000              	mov rdi, 8 * 2	; new rib
  6736 00003F88 E8A3350100              	call malloc
  6737 00003F8D 50                      	push rax
  6738 00003F8E BF10000000              	mov rdi, 8 * 2	; extended env
  6739 00003F93 E898350100              	call malloc
  6740 00003F98 488B7D10                	mov rdi, ENV
  6741 00003F9C BE00000000              	mov rsi, 0
  6742 00003FA1 BA01000000              	mov rdx, 1
  6743                                  .L_lambda_simple_env_loop_0719:	; ext_env[i + 1] <-- env[i]
  6744 00003FA6 4883FE01                	cmp rsi, 1
  6745 00003FAA 7410                    	je .L_lambda_simple_env_end_0719
  6746 00003FAC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6747 00003FB0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6748 00003FB4 48FFC6                  	inc rsi
  6749 00003FB7 48FFC2                  	inc rdx
  6750 00003FBA EBEA                    	jmp .L_lambda_simple_env_loop_0719
  6751                                  .L_lambda_simple_env_end_0719:
  6752 00003FBC 5B                      	pop rbx
  6753 00003FBD BE00000000              	mov rsi, 0
  6754                                  .L_lambda_simple_params_loop_0719:	; copy params
  6755 00003FC2 4883FE02                	cmp rsi, 2
  6756 00003FC6 740E                    	je .L_lambda_simple_params_end_0719
  6757 00003FC8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6758 00003FCD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6759 00003FD1 48FFC6                  	inc rsi
  6760 00003FD4 EBEC                    	jmp .L_lambda_simple_params_loop_0719
  6761                                  .L_lambda_simple_params_end_0719:
  6762 00003FD6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6763 00003FD9 4889C3                  	mov rbx, rax
  6764 00003FDC 58                      	pop rax
  6765 00003FDD C60004                  	mov byte [rax], T_closure
  6766 00003FE0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6767 00003FE4 48C74009[F13F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0719
  6768 00003FEC E95F030000              	jmp .L_lambda_simple_end_0719
  6769                                  .L_lambda_simple_code_0719:	; lambda-simple body
  6770 00003FF1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6771 00003FF7 740B                    	je .L_lambda_simple_arity_check_ok_07f9
  6772 00003FF9 FF742410                	push qword [rsp + 8 * 2]
  6773 00003FFD 6A01                    	push 1
  6774 00003FFF E9E5340100              	jmp L_error_incorrect_arity_simple
  6775                                  .L_lambda_simple_arity_check_ok_07f9:
  6776 00004004 C8000000                	enter 0, 0
  6777 00004008 BF08000000              	mov rdi, 8
  6778 0000400D E81E350100              	call malloc
  6779 00004012 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  6780 00004016 488918                  	mov qword [rax], rbx
  6781 00004019 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  6782 0000401D 48B8-                   	mov rax, sob_void
  6782 0000401F [0000000000000000] 
  6783                                  
  6784 00004027 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6785 0000402C E8FF340100              	call malloc
  6786 00004031 50                      	push rax
  6787 00004032 BF08000000              	mov rdi, 8 * 1	; new rib
  6788 00004037 E8F4340100              	call malloc
  6789 0000403C 50                      	push rax
  6790 0000403D BF18000000              	mov rdi, 8 * 3	; extended env
  6791 00004042 E8E9340100              	call malloc
  6792 00004047 488B7D10                	mov rdi, ENV
  6793 0000404B BE00000000              	mov rsi, 0
  6794 00004050 BA01000000              	mov rdx, 1
  6795                                  .L_lambda_simple_env_loop_071a:	; ext_env[i + 1] <-- env[i]
  6796 00004055 4883FE02                	cmp rsi, 2
  6797 00004059 7410                    	je .L_lambda_simple_env_end_071a
  6798 0000405B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6799 0000405F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6800 00004063 48FFC6                  	inc rsi
  6801 00004066 48FFC2                  	inc rdx
  6802 00004069 EBEA                    	jmp .L_lambda_simple_env_loop_071a
  6803                                  .L_lambda_simple_env_end_071a:
  6804 0000406B 5B                      	pop rbx
  6805 0000406C BE00000000              	mov rsi, 0
  6806                                  .L_lambda_simple_params_loop_071a:	; copy params
  6807 00004071 4883FE01                	cmp rsi, 1
  6808 00004075 740E                    	je .L_lambda_simple_params_end_071a
  6809 00004077 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6810 0000407C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6811 00004080 48FFC6                  	inc rsi
  6812 00004083 EBEC                    	jmp .L_lambda_simple_params_loop_071a
  6813                                  .L_lambda_simple_params_end_071a:
  6814 00004085 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6815 00004088 4889C3                  	mov rbx, rax
  6816 0000408B 58                      	pop rax
  6817 0000408C C60004                  	mov byte [rax], T_closure
  6818 0000408F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6819 00004093 48C74009[A0400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071a
  6820 0000409B E9A2010000              	jmp .L_lambda_simple_end_071a
  6821                                  .L_lambda_simple_code_071a:	; lambda-simple body
  6822 000040A0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6823 000040A6 740B                    	je .L_lambda_simple_arity_check_ok_07fa
  6824 000040A8 FF742410                	push qword [rsp + 8 * 2]
  6825 000040AC 6A01                    	push 1
  6826 000040AE E936340100              	jmp L_error_incorrect_arity_simple
  6827                                  .L_lambda_simple_arity_check_ok_07fa:
  6828 000040B3 C8000000                	enter 0, 0
  6829                                  	; preparing a non-tail-call
  6830                                  	; preparing a non-tail-call
  6831 000040B7 488B4520                	mov rax, PARAM(0)	; param s
  6832 000040BB 50                      	push rax
  6833 000040BC 6A01                    	push 1	; arg count
  6834 000040BE 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  6835 000040C6 803805                  	cmp byte [rax], T_undefined
  6836 000040C9 0F8434330100            	je L_error_fvar_undefined
  6837 000040CF 803804                  	cmp byte [rax], T_closure
  6838 000040D2 0F85AF330100            	jne L_error_non_closure
  6839 000040D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6840 000040DB FF5009                  	call SOB_CLOSURE_CODE(rax)
  6841 000040DE 50                      	push rax
  6842 000040DF 6A01                    	push 1	; arg count
  6843 000040E1 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  6844 000040E9 803805                  	cmp byte [rax], T_undefined
  6845 000040EC 0F8411330100            	je L_error_fvar_undefined
  6846 000040F2 803804                  	cmp byte [rax], T_closure
  6847 000040F5 0F858C330100            	jne L_error_non_closure
  6848 000040FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6849 000040FE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6850 00004101 483D[02000000]          	cmp rax, sob_boolean_false
  6851 00004107 0F8531010000            	jne .L_if_end_0559
  6852                                  	; preparing a non-tail-call
  6853                                  	; preparing a non-tail-call
  6854 0000410D 488B4520                	mov rax, PARAM(0)	; param s
  6855 00004111 50                      	push rax
  6856 00004112 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  6857 0000411A 803805                  	cmp byte [rax], T_undefined
  6858 0000411D 0F84E0320100            	je L_error_fvar_undefined
  6859 00004123 50                      	push rax
  6860 00004124 6A02                    	push 2	; arg count
  6861 00004126 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  6862 0000412E 803805                  	cmp byte [rax], T_undefined
  6863 00004131 0F84CC320100            	je L_error_fvar_undefined
  6864 00004137 803804                  	cmp byte [rax], T_closure
  6865 0000413A 0F8547330100            	jne L_error_non_closure
  6866 00004140 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6867 00004143 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6868 00004146 50                      	push rax
  6869 00004147 488B4510                	mov rax, ENV
  6870 0000414B 488B4008                	mov rax, qword [rax + 8 * 1]
  6871 0000414F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6872 00004152 50                      	push rax
  6873 00004153 6A02                    	push 2	; arg count
  6874 00004155 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
  6875 0000415D 803805                  	cmp byte [rax], T_undefined
  6876 00004160 0F849D320100            	je L_error_fvar_undefined
  6877 00004166 803804                  	cmp byte [rax], T_closure
  6878 00004169 0F8518330100            	jne L_error_non_closure
  6879 0000416F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6880 00004172 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6881 00004175 483D[02000000]          	cmp rax, sob_boolean_false
  6882 0000417B 0F84AB000000            	je .L_if_else_04d6
  6883                                  	; preparing a tail-call
  6884                                  	; preparing a non-tail-call
  6885 00004181 488B4520                	mov rax, PARAM(0)	; param s
  6886 00004185 50                      	push rax
  6887 00004186 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  6888 0000418E 803805                  	cmp byte [rax], T_undefined
  6889 00004191 0F846C320100            	je L_error_fvar_undefined
  6890 00004197 50                      	push rax
  6891 00004198 6A02                    	push 2	; arg count
  6892 0000419A 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  6893 000041A2 803805                  	cmp byte [rax], T_undefined
  6894 000041A5 0F8458320100            	je L_error_fvar_undefined
  6895 000041AB 803804                  	cmp byte [rax], T_closure
  6896 000041AE 0F85D3320100            	jne L_error_non_closure
  6897 000041B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6898 000041B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6899 000041BA 50                      	push rax
  6900 000041BB 6A01                    	push 1	; arg count
  6901 000041BD 488B4510                	mov rax, ENV
  6902 000041C1 488B00                  	mov rax, qword [rax + 8 * 0]
  6903 000041C4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6904 000041C7 488B00                  	mov rax, qword [rax]
  6905 000041CA 803804                  	cmp byte [rax], T_closure
  6906 000041CD 0F85B4320100            	jne L_error_non_closure
  6907 000041D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6908 000041D6 FF7508                  	push qword [rbp + 8 *1]
  6909 000041D9 4989C0                  	mov r8, rax
  6910 000041DC 488B5D18                	mov rbx, COUNT
  6911 000041E0 4883C303                	add rbx,3
  6912 000041E4 48C1E303                	shl rbx,3
  6913 000041E8 4801EB                  	add rbx, rbp
  6914 000041EB 488B6D00                	mov rbp, [rbp]
  6915 000041EF B900000000              	mov rcx,0
  6916 000041F4 BA04000000              	mov rdx, 4
  6917 000041F9 4889D0                  	mov rax, rdx
  6918 000041FC 48FFC8                  	dec rax
  6919 000041FF 48C1E003                	shl rax,3
  6920 00004203 4801E0                  	add rax, rsp
  6921                                  	.L_tc_recycle_frame_loop_08ed:
  6922 00004206 4839D1                  	cmp rcx, rdx
  6923 00004209 7414                    	je .L_tc_recycle_frame_done_08ed
  6924 0000420B 4C8B08                  	mov r9, qword [rax]
  6925 0000420E 4C890B                  	mov qword [rbx],r9
  6926 00004211 4883E808                	sub rax,8
  6927 00004215 4883EB08                	sub rbx,8
  6928 00004219 4883C101                	add rcx,1
  6929 0000421D EBE7                    	jmp .L_tc_recycle_frame_loop_08ed
  6930                                  	.L_tc_recycle_frame_done_08ed:
  6931 0000421F 4883C308                	add rbx,8
  6932 00004223 4889DC                  	mov rsp,rbx
  6933 00004226 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  6934 0000422A EB0A                    	jmp .L_if_end_055a
  6935                                  .L_if_else_04d6:
  6936 0000422C 48B8-                   	mov rax, L_constants + 2
  6936 0000422E [0200000000000000] 
  6937                                  .L_if_end_055a:
  6938 00004236 483D[02000000]          	cmp rax, sob_boolean_false
  6939 0000423C 7500                    	jne .L_if_end_0559
  6940                                  .L_if_end_0559:
  6941 0000423E C9                      	leave
  6942 0000423F C21800                  	ret AND_KILL_FRAME(1)
  6943                                  .L_lambda_simple_end_071a:	; new closure is in rax
  6944 00004242 50                      	push rax
  6945 00004243 488B4520                	mov rax, PARAM(0)	; param loop
  6946 00004247 8F00                    	pop qword [rax]
  6947 00004249 48B8-                   	mov rax, sob_void
  6947 0000424B [0000000000000000] 
  6948                                  
  6949                                  	; preparing a non-tail-call
  6950 00004253 488B4510                	mov rax, ENV
  6951 00004257 488B00                  	mov rax, qword [rax + 8 * 0]
  6952 0000425A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6953 0000425E 50                      	push rax
  6954 0000425F 6A01                    	push 1	; arg count
  6955 00004261 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  6956 00004269 803805                  	cmp byte [rax], T_undefined
  6957 0000426C 0F8491310100            	je L_error_fvar_undefined
  6958 00004272 803804                  	cmp byte [rax], T_closure
  6959 00004275 0F850C320100            	jne L_error_non_closure
  6960 0000427B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6961 0000427E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6962 00004281 483D[02000000]          	cmp rax, sob_boolean_false
  6963 00004287 0F85BF000000            	jne .L_if_end_055b
  6964                                  	; preparing a non-tail-call
  6965 0000428D 488B4510                	mov rax, ENV
  6966 00004291 488B00                  	mov rax, qword [rax + 8 * 0]
  6967 00004294 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6968 00004298 50                      	push rax
  6969 00004299 6A01                    	push 1	; arg count
  6970 0000429B 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
  6971 000042A3 803805                  	cmp byte [rax], T_undefined
  6972 000042A6 0F8457310100            	je L_error_fvar_undefined
  6973 000042AC 803804                  	cmp byte [rax], T_closure
  6974 000042AF 0F85D2310100            	jne L_error_non_closure
  6975 000042B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6976 000042B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6977 000042BB 483D[02000000]          	cmp rax, sob_boolean_false
  6978 000042C1 7477                    	je .L_if_else_04d7
  6979                                  	; preparing a tail-call
  6980 000042C3 488B4510                	mov rax, ENV
  6981 000042C7 488B00                  	mov rax, qword [rax + 8 * 0]
  6982 000042CA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6983 000042CE 50                      	push rax
  6984 000042CF 6A01                    	push 1	; arg count
  6985 000042D1 488B4520                	mov rax, PARAM(0)	; param loop
  6986 000042D5 488B00                  	mov rax, qword [rax]
  6987 000042D8 803804                  	cmp byte [rax], T_closure
  6988 000042DB 0F85A6310100            	jne L_error_non_closure
  6989 000042E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6990 000042E4 FF7508                  	push qword [rbp + 8 *1]
  6991 000042E7 4989C0                  	mov r8, rax
  6992 000042EA 488B5D18                	mov rbx, COUNT
  6993 000042EE 4883C303                	add rbx,3
  6994 000042F2 48C1E303                	shl rbx,3
  6995 000042F6 4801EB                  	add rbx, rbp
  6996 000042F9 488B6D00                	mov rbp, [rbp]
  6997 000042FD B900000000              	mov rcx,0
  6998 00004302 BA04000000              	mov rdx, 4
  6999 00004307 4889D0                  	mov rax, rdx
  7000 0000430A 48FFC8                  	dec rax
  7001 0000430D 48C1E003                	shl rax,3
  7002 00004311 4801E0                  	add rax, rsp
  7003                                  	.L_tc_recycle_frame_loop_08ee:
  7004 00004314 4839D1                  	cmp rcx, rdx
  7005 00004317 7414                    	je .L_tc_recycle_frame_done_08ee
  7006 00004319 4C8B08                  	mov r9, qword [rax]
  7007 0000431C 4C890B                  	mov qword [rbx],r9
  7008 0000431F 4883E808                	sub rax,8
  7009 00004323 4883EB08                	sub rbx,8
  7010 00004327 4883C101                	add rcx,1
  7011 0000432B EBE7                    	jmp .L_tc_recycle_frame_loop_08ee
  7012                                  	.L_tc_recycle_frame_done_08ee:
  7013 0000432D 4883C308                	add rbx,8
  7014 00004331 4889DC                  	mov rsp,rbx
  7015 00004334 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7016 00004338 EB0A                    	jmp .L_if_end_055c
  7017                                  .L_if_else_04d7:
  7018 0000433A 48B8-                   	mov rax, L_constants + 2
  7018 0000433C [0200000000000000] 
  7019                                  .L_if_end_055c:
  7020 00004344 483D[02000000]          	cmp rax, sob_boolean_false
  7021 0000434A 7500                    	jne .L_if_end_055b
  7022                                  .L_if_end_055b:
  7023 0000434C C9                      	leave
  7024 0000434D C21800                  	ret AND_KILL_FRAME(1)
  7025                                  .L_lambda_simple_end_0719:	; new closure is in rax
  7026 00004350 803804                  	cmp byte [rax], T_closure
  7027 00004353 0F852E310100            	jne L_error_non_closure
  7028 00004359 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7029 0000435C FF7508                  	push qword [rbp + 8 *1]
  7030 0000435F 4989C0                  	mov r8, rax
  7031 00004362 488B5D18                	mov rbx, COUNT
  7032 00004366 4883C303                	add rbx,3
  7033 0000436A 48C1E303                	shl rbx,3
  7034 0000436E 4801EB                  	add rbx, rbp
  7035 00004371 488B6D00                	mov rbp, [rbp]
  7036 00004375 B900000000              	mov rcx,0
  7037 0000437A BA04000000              	mov rdx, 4
  7038 0000437F 4889D0                  	mov rax, rdx
  7039 00004382 48FFC8                  	dec rax
  7040 00004385 48C1E003                	shl rax,3
  7041 00004389 4801E0                  	add rax, rsp
  7042                                  	.L_tc_recycle_frame_loop_08ec:
  7043 0000438C 4839D1                  	cmp rcx, rdx
  7044 0000438F 7414                    	je .L_tc_recycle_frame_done_08ec
  7045 00004391 4C8B08                  	mov r9, qword [rax]
  7046 00004394 4C890B                  	mov qword [rbx],r9
  7047 00004397 4883E808                	sub rax,8
  7048 0000439B 4883EB08                	sub rbx,8
  7049 0000439F 4883C101                	add rcx,1
  7050 000043A3 EBE7                    	jmp .L_tc_recycle_frame_loop_08ec
  7051                                  	.L_tc_recycle_frame_done_08ec:
  7052 000043A5 4883C308                	add rbx,8
  7053 000043A9 4889DC                  	mov rsp,rbx
  7054 000043AC 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7055                                  	LEAVE
    49 000043B0 C9                  <1>  leave
  7056 000043B1 C22000                  	ret AND_KILL_FRAME(2)
  7057                                  .L_lambda_opt_end_01bf:
  7058 000043B4 48890425[69100000]      	mov qword [free_var_31], rax
  7059 000043BC 48B8-                   	mov rax, sob_void
  7059 000043BE [0000000000000000] 
  7060                                  
  7061 000043C6 4889C7                  	mov rdi, rax
  7062 000043C9 E8B7330100              	call print_sexpr_if_not_void
  7063                                  	; preparing a non-tail-call
  7064 000043CE 48B8-                   	mov rax, L_constants + 1993
  7064 000043D0 [C907000000000000] 
  7065 000043D8 50                      	push rax
  7066 000043D9 48B8-                   	mov rax, L_constants + 1993
  7066 000043DB [C907000000000000] 
  7067 000043E3 50                      	push rax
  7068 000043E4 6A02                    	push 2	; arg count
  7069 000043E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7070 000043EB E840310100              	call malloc
  7071 000043F0 50                      	push rax
  7072 000043F1 BF00000000              	mov rdi, 8 * 0	; new rib
  7073 000043F6 E835310100              	call malloc
  7074 000043FB 50                      	push rax
  7075 000043FC BF08000000              	mov rdi, 8 * 1	; extended env
  7076 00004401 E82A310100              	call malloc
  7077 00004406 488B7D10                	mov rdi, ENV
  7078 0000440A BE00000000              	mov rsi, 0
  7079 0000440F BA01000000              	mov rdx, 1
  7080                                  .L_lambda_simple_env_loop_071b:	; ext_env[i + 1] <-- env[i]
  7081 00004414 4883FE00                	cmp rsi, 0
  7082 00004418 7410                    	je .L_lambda_simple_env_end_071b
  7083 0000441A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7084 0000441E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7085 00004422 48FFC6                  	inc rsi
  7086 00004425 48FFC2                  	inc rdx
  7087 00004428 EBEA                    	jmp .L_lambda_simple_env_loop_071b
  7088                                  .L_lambda_simple_env_end_071b:
  7089 0000442A 5B                      	pop rbx
  7090 0000442B BE00000000              	mov rsi, 0
  7091                                  .L_lambda_simple_params_loop_071b:	; copy params
  7092 00004430 4883FE00                	cmp rsi, 0
  7093 00004434 740E                    	je .L_lambda_simple_params_end_071b
  7094 00004436 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7095 0000443B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7096 0000443F 48FFC6                  	inc rsi
  7097 00004442 EBEC                    	jmp .L_lambda_simple_params_loop_071b
  7098                                  .L_lambda_simple_params_end_071b:
  7099 00004444 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7100 00004447 4889C3                  	mov rbx, rax
  7101 0000444A 58                      	pop rax
  7102 0000444B C60004                  	mov byte [rax], T_closure
  7103 0000444E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7104 00004452 48C74009[5F440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071b
  7105 0000445A E9A5060000              	jmp .L_lambda_simple_end_071b
  7106                                  .L_lambda_simple_code_071b:	; lambda-simple body
  7107 0000445F 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7108 00004465 740B                    	je .L_lambda_simple_arity_check_ok_07fb
  7109 00004467 FF742410                	push qword [rsp + 8 * 2]
  7110 0000446B 6A02                    	push 2
  7111 0000446D E977300100              	jmp L_error_incorrect_arity_simple
  7112                                  .L_lambda_simple_arity_check_ok_07fb:
  7113 00004472 C8000000                	enter 0, 0
  7114 00004476 BF08000000              	mov rdi, 8
  7115 0000447B E8B0300100              	call malloc
  7116 00004480 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  7117 00004484 488918                  	mov qword [rax], rbx
  7118 00004487 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  7119 0000448B 48B8-                   	mov rax, sob_void
  7119 0000448D [0000000000000000] 
  7120                                  
  7121 00004495 BF08000000              	mov rdi, 8
  7122 0000449A E891300100              	call malloc
  7123 0000449F 488B5D28                	 mov rbx, qword [rbp + 8 * (4 +1)]
  7124 000044A3 488918                  	mov qword [rax], rbx
  7125 000044A6 48894528                	mov qword [rbp + 8 * (4 +1)], rax
  7126 000044AA 48B8-                   	mov rax, sob_void
  7126 000044AC [0000000000000000] 
  7127                                  
  7128 000044B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7129 000044B9 E872300100              	call malloc
  7130 000044BE 50                      	push rax
  7131 000044BF BF10000000              	mov rdi, 8 * 2	; new rib
  7132 000044C4 E867300100              	call malloc
  7133 000044C9 50                      	push rax
  7134 000044CA BF10000000              	mov rdi, 8 * 2	; extended env
  7135 000044CF E85C300100              	call malloc
  7136 000044D4 488B7D10                	mov rdi, ENV
  7137 000044D8 BE00000000              	mov rsi, 0
  7138 000044DD BA01000000              	mov rdx, 1
  7139                                  .L_lambda_simple_env_loop_071c:	; ext_env[i + 1] <-- env[i]
  7140 000044E2 4883FE01                	cmp rsi, 1
  7141 000044E6 7410                    	je .L_lambda_simple_env_end_071c
  7142 000044E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7143 000044EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7144 000044F0 48FFC6                  	inc rsi
  7145 000044F3 48FFC2                  	inc rdx
  7146 000044F6 EBEA                    	jmp .L_lambda_simple_env_loop_071c
  7147                                  .L_lambda_simple_env_end_071c:
  7148 000044F8 5B                      	pop rbx
  7149 000044F9 BE00000000              	mov rsi, 0
  7150                                  .L_lambda_simple_params_loop_071c:	; copy params
  7151 000044FE 4883FE02                	cmp rsi, 2
  7152 00004502 740E                    	je .L_lambda_simple_params_end_071c
  7153 00004504 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7154 00004509 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7155 0000450D 48FFC6                  	inc rsi
  7156 00004510 EBEC                    	jmp .L_lambda_simple_params_loop_071c
  7157                                  .L_lambda_simple_params_end_071c:
  7158 00004512 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7159 00004515 4889C3                  	mov rbx, rax
  7160 00004518 58                      	pop rax
  7161 00004519 C60004                  	mov byte [rax], T_closure
  7162 0000451C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7163 00004520 48C74009[2D450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071c
  7164 00004528 E956010000              	jmp .L_lambda_simple_end_071c
  7165                                  .L_lambda_simple_code_071c:	; lambda-simple body
  7166 0000452D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7167 00004533 740B                    	je .L_lambda_simple_arity_check_ok_07fc
  7168 00004535 FF742410                	push qword [rsp + 8 * 2]
  7169 00004539 6A02                    	push 2
  7170 0000453B E9A92F0100              	jmp L_error_incorrect_arity_simple
  7171                                  .L_lambda_simple_arity_check_ok_07fc:
  7172 00004540 C8000000                	enter 0, 0
  7173                                  	; preparing a non-tail-call
  7174 00004544 488B4528                	mov rax, PARAM(1)	; param s
  7175 00004548 50                      	push rax
  7176 00004549 6A01                    	push 1	; arg count
  7177 0000454B 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  7178 00004553 803805                  	cmp byte [rax], T_undefined
  7179 00004556 0F84A72E0100            	je L_error_fvar_undefined
  7180 0000455C 803804                  	cmp byte [rax], T_closure
  7181 0000455F 0F85222F0100            	jne L_error_non_closure
  7182 00004565 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7183 00004568 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7184 0000456B 483D[02000000]          	cmp rax, sob_boolean_false
  7185 00004571 740F                    	je .L_if_else_04d8
  7186 00004573 48B8-                   	mov rax, L_constants + 1
  7186 00004575 [0100000000000000] 
  7187 0000457D E9FD000000              	jmp .L_if_end_055d
  7188                                  .L_if_else_04d8:
  7189                                  	; preparing a tail-call
  7190                                  	; preparing a non-tail-call
  7191                                  	; preparing a non-tail-call
  7192 00004582 488B4528                	mov rax, PARAM(1)	; param s
  7193 00004586 50                      	push rax
  7194 00004587 6A01                    	push 1	; arg count
  7195 00004589 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  7196 00004591 803805                  	cmp byte [rax], T_undefined
  7197 00004594 0F84692E0100            	je L_error_fvar_undefined
  7198 0000459A 803804                  	cmp byte [rax], T_closure
  7199 0000459D 0F85E42E0100            	jne L_error_non_closure
  7200 000045A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7201 000045A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7202 000045A9 50                      	push rax
  7203 000045AA 488B4520                	mov rax, PARAM(0)	; param f
  7204 000045AE 50                      	push rax
  7205 000045AF 6A02                    	push 2	; arg count
  7206 000045B1 488B4510                	mov rax, ENV
  7207 000045B5 488B00                  	mov rax, qword [rax + 8 * 0]
  7208 000045B8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7209 000045BB 488B00                  	mov rax, qword [rax]
  7210 000045BE 803804                  	cmp byte [rax], T_closure
  7211 000045C1 0F85C02E0100            	jne L_error_non_closure
  7212 000045C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7213 000045CA FF5009                  	call SOB_CLOSURE_CODE(rax)
  7214 000045CD 50                      	push rax
  7215                                  	; preparing a non-tail-call
  7216                                  	; preparing a non-tail-call
  7217 000045CE 488B4528                	mov rax, PARAM(1)	; param s
  7218 000045D2 50                      	push rax
  7219 000045D3 6A01                    	push 1	; arg count
  7220 000045D5 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  7221 000045DD 803805                  	cmp byte [rax], T_undefined
  7222 000045E0 0F841D2E0100            	je L_error_fvar_undefined
  7223 000045E6 803804                  	cmp byte [rax], T_closure
  7224 000045E9 0F85982E0100            	jne L_error_non_closure
  7225 000045EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7226 000045F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7227 000045F5 50                      	push rax
  7228 000045F6 6A01                    	push 1	; arg count
  7229 000045F8 488B4520                	mov rax, PARAM(0)	; param f
  7230 000045FC 803804                  	cmp byte [rax], T_closure
  7231 000045FF 0F85822E0100            	jne L_error_non_closure
  7232 00004605 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7233 00004608 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7234 0000460B 50                      	push rax
  7235 0000460C 6A02                    	push 2	; arg count
  7236 0000460E 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  7237 00004616 803805                  	cmp byte [rax], T_undefined
  7238 00004619 0F84E42D0100            	je L_error_fvar_undefined
  7239 0000461F 803804                  	cmp byte [rax], T_closure
  7240 00004622 0F855F2E0100            	jne L_error_non_closure
  7241 00004628 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7242 0000462B FF7508                  	push qword [rbp + 8 *1]
  7243 0000462E 4989C0                  	mov r8, rax
  7244 00004631 488B5D18                	mov rbx, COUNT
  7245 00004635 4883C303                	add rbx,3
  7246 00004639 48C1E303                	shl rbx,3
  7247 0000463D 4801EB                  	add rbx, rbp
  7248 00004640 488B6D00                	mov rbp, [rbp]
  7249 00004644 B900000000              	mov rcx,0
  7250 00004649 BA05000000              	mov rdx, 5
  7251 0000464E 4889D0                  	mov rax, rdx
  7252 00004651 48FFC8                  	dec rax
  7253 00004654 48C1E003                	shl rax,3
  7254 00004658 4801E0                  	add rax, rsp
  7255                                  	.L_tc_recycle_frame_loop_08ef:
  7256 0000465B 4839D1                  	cmp rcx, rdx
  7257 0000465E 7414                    	je .L_tc_recycle_frame_done_08ef
  7258 00004660 4C8B08                  	mov r9, qword [rax]
  7259 00004663 4C890B                  	mov qword [rbx],r9
  7260 00004666 4883E808                	sub rax,8
  7261 0000466A 4883EB08                	sub rbx,8
  7262 0000466E 4883C101                	add rcx,1
  7263 00004672 EBE7                    	jmp .L_tc_recycle_frame_loop_08ef
  7264                                  	.L_tc_recycle_frame_done_08ef:
  7265 00004674 4883C308                	add rbx,8
  7266 00004678 4889DC                  	mov rsp,rbx
  7267 0000467B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7268                                  .L_if_end_055d:
  7269 0000467F C9                      	leave
  7270 00004680 C22000                  	ret AND_KILL_FRAME(2)
  7271                                  .L_lambda_simple_end_071c:	; new closure is in rax
  7272 00004683 50                      	push rax
  7273 00004684 488B4520                	mov rax, PARAM(0)	; param map1
  7274 00004688 8F00                    	pop qword [rax]
  7275 0000468A 48B8-                   	mov rax, sob_void
  7275 0000468C [0000000000000000] 
  7276                                  
  7277 00004694 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7278 00004699 E8922E0100              	call malloc
  7279 0000469E 50                      	push rax
  7280 0000469F BF10000000              	mov rdi, 8 * 2	; new rib
  7281 000046A4 E8872E0100              	call malloc
  7282 000046A9 50                      	push rax
  7283 000046AA BF10000000              	mov rdi, 8 * 2	; extended env
  7284 000046AF E87C2E0100              	call malloc
  7285 000046B4 488B7D10                	mov rdi, ENV
  7286 000046B8 BE00000000              	mov rsi, 0
  7287 000046BD BA01000000              	mov rdx, 1
  7288                                  .L_lambda_simple_env_loop_071d:	; ext_env[i + 1] <-- env[i]
  7289 000046C2 4883FE01                	cmp rsi, 1
  7290 000046C6 7410                    	je .L_lambda_simple_env_end_071d
  7291 000046C8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7292 000046CC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7293 000046D0 48FFC6                  	inc rsi
  7294 000046D3 48FFC2                  	inc rdx
  7295 000046D6 EBEA                    	jmp .L_lambda_simple_env_loop_071d
  7296                                  .L_lambda_simple_env_end_071d:
  7297 000046D8 5B                      	pop rbx
  7298 000046D9 BE00000000              	mov rsi, 0
  7299                                  .L_lambda_simple_params_loop_071d:	; copy params
  7300 000046DE 4883FE02                	cmp rsi, 2
  7301 000046E2 740E                    	je .L_lambda_simple_params_end_071d
  7302 000046E4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7303 000046E9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7304 000046ED 48FFC6                  	inc rsi
  7305 000046F0 EBEC                    	jmp .L_lambda_simple_params_loop_071d
  7306                                  .L_lambda_simple_params_end_071d:
  7307 000046F2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7308 000046F5 4889C3                  	mov rbx, rax
  7309 000046F8 58                      	pop rax
  7310 000046F9 C60004                  	mov byte [rax], T_closure
  7311 000046FC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7312 00004700 48C74009[0D470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071d
  7313 00004708 E9A8010000              	jmp .L_lambda_simple_end_071d
  7314                                  .L_lambda_simple_code_071d:	; lambda-simple body
  7315 0000470D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7316 00004713 740B                    	je .L_lambda_simple_arity_check_ok_07fd
  7317 00004715 FF742410                	push qword [rsp + 8 * 2]
  7318 00004719 6A02                    	push 2
  7319 0000471B E9C92D0100              	jmp L_error_incorrect_arity_simple
  7320                                  .L_lambda_simple_arity_check_ok_07fd:
  7321 00004720 C8000000                	enter 0, 0
  7322                                  	; preparing a non-tail-call
  7323                                  	; preparing a non-tail-call
  7324 00004724 488B4528                	mov rax, PARAM(1)	; param s
  7325 00004728 50                      	push rax
  7326 00004729 6A01                    	push 1	; arg count
  7327 0000472B 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  7328 00004733 803805                  	cmp byte [rax], T_undefined
  7329 00004736 0F84C72C0100            	je L_error_fvar_undefined
  7330 0000473C 803804                  	cmp byte [rax], T_closure
  7331 0000473F 0F85422D0100            	jne L_error_non_closure
  7332 00004745 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7333 00004748 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7334 0000474B 50                      	push rax
  7335 0000474C 6A01                    	push 1	; arg count
  7336 0000474E 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  7337 00004756 803805                  	cmp byte [rax], T_undefined
  7338 00004759 0F84A42C0100            	je L_error_fvar_undefined
  7339 0000475F 803804                  	cmp byte [rax], T_closure
  7340 00004762 0F851F2D0100            	jne L_error_non_closure
  7341 00004768 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7342 0000476B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7343 0000476E 483D[02000000]          	cmp rax, sob_boolean_false
  7344 00004774 740F                    	je .L_if_else_04d9
  7345 00004776 48B8-                   	mov rax, L_constants + 1
  7345 00004778 [0100000000000000] 
  7346 00004780 E92C010000              	jmp .L_if_end_055e
  7347                                  .L_if_else_04d9:
  7348                                  	; preparing a tail-call
  7349                                  	; preparing a non-tail-call
  7350                                  	; preparing a non-tail-call
  7351 00004785 488B4528                	mov rax, PARAM(1)	; param s
  7352 00004789 50                      	push rax
  7353 0000478A 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  7354 00004792 803805                  	cmp byte [rax], T_undefined
  7355 00004795 0F84682C0100            	je L_error_fvar_undefined
  7356 0000479B 50                      	push rax
  7357 0000479C 6A02                    	push 2	; arg count
  7358 0000479E 488B4510                	mov rax, ENV
  7359 000047A2 488B00                  	mov rax, qword [rax + 8 * 0]
  7360 000047A5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7361 000047A8 488B00                  	mov rax, qword [rax]
  7362 000047AB 803804                  	cmp byte [rax], T_closure
  7363 000047AE 0F85D32C0100            	jne L_error_non_closure
  7364 000047B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7365 000047B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7366 000047BA 50                      	push rax
  7367 000047BB 488B4520                	mov rax, PARAM(0)	; param f
  7368 000047BF 50                      	push rax
  7369 000047C0 6A02                    	push 2	; arg count
  7370 000047C2 488B4510                	mov rax, ENV
  7371 000047C6 488B00                  	mov rax, qword [rax + 8 * 0]
  7372 000047C9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7373 000047CD 488B00                  	mov rax, qword [rax]
  7374 000047D0 803804                  	cmp byte [rax], T_closure
  7375 000047D3 0F85AE2C0100            	jne L_error_non_closure
  7376 000047D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7377 000047DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  7378 000047DF 50                      	push rax
  7379                                  	; preparing a non-tail-call
  7380                                  	; preparing a non-tail-call
  7381 000047E0 488B4528                	mov rax, PARAM(1)	; param s
  7382 000047E4 50                      	push rax
  7383 000047E5 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  7384 000047ED 803805                  	cmp byte [rax], T_undefined
  7385 000047F0 0F840D2C0100            	je L_error_fvar_undefined
  7386 000047F6 50                      	push rax
  7387 000047F7 6A02                    	push 2	; arg count
  7388 000047F9 488B4510                	mov rax, ENV
  7389 000047FD 488B00                  	mov rax, qword [rax + 8 * 0]
  7390 00004800 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7391 00004803 488B00                  	mov rax, qword [rax]
  7392 00004806 803804                  	cmp byte [rax], T_closure
  7393 00004809 0F85782C0100            	jne L_error_non_closure
  7394 0000480F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7395 00004812 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7396 00004815 50                      	push rax
  7397 00004816 488B4520                	mov rax, PARAM(0)	; param f
  7398 0000481A 50                      	push rax
  7399 0000481B 6A02                    	push 2	; arg count
  7400 0000481D 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
  7401 00004825 803805                  	cmp byte [rax], T_undefined
  7402 00004828 0F84D52B0100            	je L_error_fvar_undefined
  7403 0000482E 803804                  	cmp byte [rax], T_closure
  7404 00004831 0F85502C0100            	jne L_error_non_closure
  7405 00004837 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7406 0000483A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7407 0000483D 50                      	push rax
  7408 0000483E 6A02                    	push 2	; arg count
  7409 00004840 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  7410 00004848 803805                  	cmp byte [rax], T_undefined
  7411 0000484B 0F84B22B0100            	je L_error_fvar_undefined
  7412 00004851 803804                  	cmp byte [rax], T_closure
  7413 00004854 0F852D2C0100            	jne L_error_non_closure
  7414 0000485A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7415 0000485D FF7508                  	push qword [rbp + 8 *1]
  7416 00004860 4989C0                  	mov r8, rax
  7417 00004863 488B5D18                	mov rbx, COUNT
  7418 00004867 4883C303                	add rbx,3
  7419 0000486B 48C1E303                	shl rbx,3
  7420 0000486F 4801EB                  	add rbx, rbp
  7421 00004872 488B6D00                	mov rbp, [rbp]
  7422 00004876 B900000000              	mov rcx,0
  7423 0000487B BA05000000              	mov rdx, 5
  7424 00004880 4889D0                  	mov rax, rdx
  7425 00004883 48FFC8                  	dec rax
  7426 00004886 48C1E003                	shl rax,3
  7427 0000488A 4801E0                  	add rax, rsp
  7428                                  	.L_tc_recycle_frame_loop_08f0:
  7429 0000488D 4839D1                  	cmp rcx, rdx
  7430 00004890 7414                    	je .L_tc_recycle_frame_done_08f0
  7431 00004892 4C8B08                  	mov r9, qword [rax]
  7432 00004895 4C890B                  	mov qword [rbx],r9
  7433 00004898 4883E808                	sub rax,8
  7434 0000489C 4883EB08                	sub rbx,8
  7435 000048A0 4883C101                	add rcx,1
  7436 000048A4 EBE7                    	jmp .L_tc_recycle_frame_loop_08f0
  7437                                  	.L_tc_recycle_frame_done_08f0:
  7438 000048A6 4883C308                	add rbx,8
  7439 000048AA 4889DC                  	mov rsp,rbx
  7440 000048AD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7441                                  .L_if_end_055e:
  7442 000048B1 C9                      	leave
  7443 000048B2 C22000                  	ret AND_KILL_FRAME(2)
  7444                                  .L_lambda_simple_end_071d:	; new closure is in rax
  7445 000048B5 50                      	push rax
  7446 000048B6 488B4528                	mov rax, PARAM(1)	; param map-list
  7447 000048BA 8F00                    	pop qword [rax]
  7448 000048BC 48B8-                   	mov rax, sob_void
  7448 000048BE [0000000000000000] 
  7449                                  
  7450 000048C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7451 000048CB E8602C0100              	call malloc
  7452 000048D0 50                      	push rax
  7453 000048D1 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  7454 000048D5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7455 000048D9 BF10000000              	mov rdi, 8 * 2	; new rib for optional parameters
  7456 000048DE E84D2C0100              	call malloc
  7457 000048E3 50                      	push rax
  7458 000048E4 BF10000000              	mov rdi, 8 * 2	; extended env
  7459 000048E9 E8422C0100              	call malloc
  7460 000048EE 488B7D10                	mov rdi, ENV
  7461 000048F2 BE00000000              	mov rsi, 0
  7462 000048F7 BA01000000              	mov rdx, 1
  7463                                  .L_lambda_opt_env_loop_00e1:	; ext_env[i + 1] <-- env[i] copy all the array
  7464 000048FC 4883FE01                	cmp rsi, 1
  7465 00004900 7410                    	je .L_lambda_opt_env_end_00e1
  7466 00004902 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7467 00004906 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7468 0000490A 48FFC6                  	inc rsi
  7469 0000490D 48FFC2                  	inc rdx
  7470 00004910 EBEA                    	jmp .L_lambda_opt_env_loop_00e1
  7471                                  .L_lambda_opt_env_end_00e1:
  7472 00004912 5B                      	pop rbx
  7473 00004913 BE00000000              	mov rsi, 0
  7474                                  .L_lambda_opt_params_loop_02a1:	; copy params
  7475 00004918 4883FE02                	cmp rsi, 2
  7476 0000491C 740E                    	je .L_lambda_opt_params_end_01c1
  7477 0000491E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7478 00004923 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7479 00004927 48FFC6                  	inc rsi
  7480 0000492A EBEC                    	jmp .L_lambda_opt_params_loop_02a1
  7481                                  .L_lambda_opt_params_end_01c1:
  7482 0000492C 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  7483 0000492F 4889C3                  	mov rbx, rax
  7484 00004932 58                      	pop rax
  7485 00004933 C60004                  	mov byte [rax], T_closure
  7486 00004936 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7487 0000493A 48C74009[47490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e1
  7488 00004942 E9B9010000              	jmp .L_lambda_opt_end_01c1
  7489                                  .L_lambda_opt_code_00e1:	; lambda-opt body
  7490 00004947 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7491 0000494D 7D0B                    	jge .L_lambda_simple_arity_check_ok_07fe
  7492 0000494F FF742410                	push qword [rsp + 8 * 2]
  7493 00004953 6A01                    	push 1
  7494 00004955 E98F2B0100              	jmp L_error_incorrect_arity_simple
  7495                                  .L_lambda_simple_arity_check_ok_07fe:
  7496 0000495A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  7497 0000495F 4983E801                	sub r8, 1
  7498 00004963 4C89C3                  	mov rbx,r8
  7499 00004966 4983F800                	cmp r8, 0
  7500 0000496A 7535                    	jne .L_lambda_opt_params_loop_02a3
  7501 0000496C 488B542410              	mov rdx, qword [rsp + 8 * 2]
  7502 00004971 4883C203                	add rdx , 3
  7503 00004975 4883EC08                	sub rsp , 8
  7504 00004979 4889E1                  	mov rcx, rsp
  7505                                  .L_lambda_opt_stack_adjusted_02a2: ;pushing down the stack of the current function
  7506 0000497C 488B5908                	mov rbx, qword [rcx + 8 * 1]
  7507 00004980 488919                  	mov qword[rcx] , rbx
  7508 00004983 4883C108                	add rcx , 8
  7509 00004987 48FFCA                  	dec rdx
  7510 0000498A 4883FA00                	cmp rdx, 0
  7511 0000498E 75EC                    	jne .L_lambda_opt_stack_adjusted_02a2
  7512 00004990 48FF442410              	inc qword [rsp + 8 * 2]
  7513 00004995 48C701[01000000]        	mov qword [rcx], sob_nil 
  7514 0000499C E9A2000000              	jmp .L_lambda_opt_end_01c2
  7515                                  	.L_lambda_opt_params_loop_02a3:
  7516 000049A1 488B542410              	mov rdx, qword [rsp + 8*2]
  7517 000049A6 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  7518 000049AB 4C89C2                  	mov rdx, r8
  7519 000049AE 49B9-                   	mov r9, sob_nil
  7519 000049B0 [0100000000000000] 
  7520                                  	.L_lambda_opt_params_loop_02a2: ;loop for copying the opt into list
  7521 000049B8 BF11000000              	mov rdi, (1 + 8 + 8)
  7522 000049BD E86E2B0100              	call malloc
  7523 000049C2 C60021                  	mov byte[rax], T_pair
  7524 000049C5 488B19                  	mov rbx, qword [rcx]
  7525 000049C8 48895801                	mov SOB_PAIR_CAR(rax), rbx
  7526 000049CC 4C894809                	mov SOB_PAIR_CDR(rax), r9
  7527 000049D0 4989C1                  	mov r9, rax
  7528 000049D3 48FFCA                  	dec rdx
  7529 000049D6 4883E908                	sub rcx, 8
  7530 000049DA 4883FA00                	cmp rdx, 0
  7531 000049DE 75D8                    	jne .L_lambda_opt_params_loop_02a2
  7532 000049E0 488B542410              	mov rdx, qword [rsp + 8 * 2]
  7533 000049E5 4889E0                  	mov rax, rsp
  7534 000049E8 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  7535 000049ED 4C89C1                  	mov rcx, r8
  7536 000049F0 48FFC9                  	dec rcx
  7537 000049F3 4883C203                	add rdx, 3
  7538 000049F7 4829CA                  	sub rdx,rcx
  7539 000049FA 48C1E103                	shl rcx, 3
  7540                                  	.L_lambda_opt_stack_adjusted_02a3:
  7541 000049FE 4883FA00                	cmp rdx, 0
  7542 00004A02 7419                    	je .L_lambda_opt_params_end_01c2
  7543 00004A04 4889D8                  	mov rax, rbx
  7544 00004A07 4829C8                  	sub rax, rcx
  7545 00004A0A 488B30                  	mov rsi, qword [rax]
  7546 00004A0D 488933                  	mov [rbx], rsi
  7547 00004A10 4883EB08                	sub rbx, 8
  7548 00004A14 48FFCA                  	dec rdx
  7549 00004A17 4883FA00                	cmp rdx, 0
  7550 00004A1B 75E1                    	jne .L_lambda_opt_stack_adjusted_02a3
  7551                                  	.L_lambda_opt_params_end_01c2:
  7552 00004A1D 4801CC                  	add rsp,rcx
  7553 00004A20 BB01000000              	mov rbx, 1
  7554 00004A25 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  7555 00004A2A 4883C303                	add rbx,3
  7556 00004A2E 4C29C3                  	sub rbx,r8
  7557 00004A31 48C1E303                	shl rbx, 3
  7558 00004A35 4801E3                  	add rbx, rsp
  7559 00004A38 4C890B                  	mov qword[rbx] , r9
  7560 00004A3B 49FFC8                  	dec r8
  7561 00004A3E 4C29442410              	sub qword [rsp + 8 * 2], r8
  7562                                  	.L_lambda_opt_end_01c2:
  7563 00004A43 C8000000                	enter 0, 0
  7564                                  	; preparing a non-tail-call
  7565 00004A47 488B4528                	mov rax, PARAM(1)	; param s
  7566 00004A4B 50                      	push rax
  7567 00004A4C 6A01                    	push 1	; arg count
  7568 00004A4E 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  7569 00004A56 803805                  	cmp byte [rax], T_undefined
  7570 00004A59 0F84A4290100            	je L_error_fvar_undefined
  7571 00004A5F 803804                  	cmp byte [rax], T_closure
  7572 00004A62 0F851F2A0100            	jne L_error_non_closure
  7573 00004A68 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7574 00004A6B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7575 00004A6E 483D[02000000]          	cmp rax, sob_boolean_false
  7576 00004A74 740C                    	je .L_if_else_04da
  7577 00004A76 48B8-                   	mov rax, L_constants + 1
  7577 00004A78 [0100000000000000] 
  7578 00004A80 EB7A                    	jmp .L_if_end_055f
  7579                                  .L_if_else_04da:
  7580                                  	; preparing a tail-call
  7581 00004A82 488B4528                	mov rax, PARAM(1)	; param s
  7582 00004A86 50                      	push rax
  7583 00004A87 488B4520                	mov rax, PARAM(0)	; param f
  7584 00004A8B 50                      	push rax
  7585 00004A8C 6A02                    	push 2	; arg count
  7586 00004A8E 488B4510                	mov rax, ENV
  7587 00004A92 488B00                  	mov rax, qword [rax + 8 * 0]
  7588 00004A95 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7589 00004A99 488B00                  	mov rax, qword [rax]
  7590 00004A9C 803804                  	cmp byte [rax], T_closure
  7591 00004A9F 0F85E2290100            	jne L_error_non_closure
  7592 00004AA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7593 00004AA8 FF7508                  	push qword [rbp + 8 *1]
  7594 00004AAB 4989C0                  	mov r8, rax
  7595 00004AAE 488B5D18                	mov rbx, COUNT
  7596 00004AB2 4883C303                	add rbx,3
  7597 00004AB6 48C1E303                	shl rbx,3
  7598 00004ABA 4801EB                  	add rbx, rbp
  7599 00004ABD 488B6D00                	mov rbp, [rbp]
  7600 00004AC1 B900000000              	mov rcx,0
  7601 00004AC6 BA05000000              	mov rdx, 5
  7602 00004ACB 4889D0                  	mov rax, rdx
  7603 00004ACE 48FFC8                  	dec rax
  7604 00004AD1 48C1E003                	shl rax,3
  7605 00004AD5 4801E0                  	add rax, rsp
  7606                                  	.L_tc_recycle_frame_loop_08f1:
  7607 00004AD8 4839D1                  	cmp rcx, rdx
  7608 00004ADB 7414                    	je .L_tc_recycle_frame_done_08f1
  7609 00004ADD 4C8B08                  	mov r9, qword [rax]
  7610 00004AE0 4C890B                  	mov qword [rbx],r9
  7611 00004AE3 4883E808                	sub rax,8
  7612 00004AE7 4883EB08                	sub rbx,8
  7613 00004AEB 4883C101                	add rcx,1
  7614 00004AEF EBE7                    	jmp .L_tc_recycle_frame_loop_08f1
  7615                                  	.L_tc_recycle_frame_done_08f1:
  7616 00004AF1 4883C308                	add rbx,8
  7617 00004AF5 4889DC                  	mov rsp,rbx
  7618 00004AF8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7619                                  .L_if_end_055f:
  7620                                  	LEAVE
    49 00004AFC C9                  <1>  leave
  7621 00004AFD C22000                  	ret AND_KILL_FRAME(2)
  7622                                  .L_lambda_opt_end_01c1:
  7623 00004B00 C9                      	leave
  7624 00004B01 C22000                  	ret AND_KILL_FRAME(2)
  7625                                  .L_lambda_simple_end_071b:	; new closure is in rax
  7626 00004B04 803804                  	cmp byte [rax], T_closure
  7627 00004B07 0F857A290100            	jne L_error_non_closure
  7628 00004B0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7629 00004B10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7630 00004B13 48890425[31150000]      	mov qword [free_var_103], rax
  7631 00004B1B 48B8-                   	mov rax, sob_void
  7631 00004B1D [0000000000000000] 
  7632                                  
  7633 00004B25 4889C7                  	mov rdi, rax
  7634 00004B28 E8582C0100              	call print_sexpr_if_not_void
  7635 00004B2D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7636 00004B32 E8F9290100              	call malloc
  7637 00004B37 50                      	push rax
  7638 00004B38 BF00000000              	mov rdi, 8 * 0	; new rib
  7639 00004B3D E8EE290100              	call malloc
  7640 00004B42 50                      	push rax
  7641 00004B43 BF08000000              	mov rdi, 8 * 1	; extended env
  7642 00004B48 E8E3290100              	call malloc
  7643 00004B4D 488B7D10                	mov rdi, ENV
  7644 00004B51 BE00000000              	mov rsi, 0
  7645 00004B56 BA01000000              	mov rdx, 1
  7646                                  .L_lambda_simple_env_loop_071e:	; ext_env[i + 1] <-- env[i]
  7647 00004B5B 4883FE00                	cmp rsi, 0
  7648 00004B5F 7410                    	je .L_lambda_simple_env_end_071e
  7649 00004B61 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7650 00004B65 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7651 00004B69 48FFC6                  	inc rsi
  7652 00004B6C 48FFC2                  	inc rdx
  7653 00004B6F EBEA                    	jmp .L_lambda_simple_env_loop_071e
  7654                                  .L_lambda_simple_env_end_071e:
  7655 00004B71 5B                      	pop rbx
  7656 00004B72 BE00000000              	mov rsi, 0
  7657                                  .L_lambda_simple_params_loop_071e:	; copy params
  7658 00004B77 4883FE00                	cmp rsi, 0
  7659 00004B7B 740E                    	je .L_lambda_simple_params_end_071e
  7660 00004B7D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7661 00004B82 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7662 00004B86 48FFC6                  	inc rsi
  7663 00004B89 EBEC                    	jmp .L_lambda_simple_params_loop_071e
  7664                                  .L_lambda_simple_params_end_071e:
  7665 00004B8B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7666 00004B8E 4889C3                  	mov rbx, rax
  7667 00004B91 58                      	pop rax
  7668 00004B92 C60004                  	mov byte [rax], T_closure
  7669 00004B95 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7670 00004B99 48C74009[A64B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071e
  7671 00004BA1 E9B0010000              	jmp .L_lambda_simple_end_071e
  7672                                  .L_lambda_simple_code_071e:	; lambda-simple body
  7673 00004BA6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7674 00004BAC 740B                    	je .L_lambda_simple_arity_check_ok_07ff
  7675 00004BAE FF742410                	push qword [rsp + 8 * 2]
  7676 00004BB2 6A01                    	push 1
  7677 00004BB4 E930290100              	jmp L_error_incorrect_arity_simple
  7678                                  .L_lambda_simple_arity_check_ok_07ff:
  7679 00004BB9 C8000000                	enter 0, 0
  7680                                  	; preparing a tail-call
  7681 00004BBD 488B4520                	mov rax, PARAM(0)	; param s
  7682 00004BC1 50                      	push rax
  7683 00004BC2 48B8-                   	mov rax, L_constants + 1
  7683 00004BC4 [0100000000000000] 
  7684 00004BCC 50                      	push rax
  7685 00004BCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7686 00004BD2 E859290100              	call malloc
  7687 00004BD7 50                      	push rax
  7688 00004BD8 BF08000000              	mov rdi, 8 * 1	; new rib
  7689 00004BDD E84E290100              	call malloc
  7690 00004BE2 50                      	push rax
  7691 00004BE3 BF10000000              	mov rdi, 8 * 2	; extended env
  7692 00004BE8 E843290100              	call malloc
  7693 00004BED 488B7D10                	mov rdi, ENV
  7694 00004BF1 BE00000000              	mov rsi, 0
  7695 00004BF6 BA01000000              	mov rdx, 1
  7696                                  .L_lambda_simple_env_loop_071f:	; ext_env[i + 1] <-- env[i]
  7697 00004BFB 4883FE01                	cmp rsi, 1
  7698 00004BFF 7410                    	je .L_lambda_simple_env_end_071f
  7699 00004C01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7700 00004C05 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7701 00004C09 48FFC6                  	inc rsi
  7702 00004C0C 48FFC2                  	inc rdx
  7703 00004C0F EBEA                    	jmp .L_lambda_simple_env_loop_071f
  7704                                  .L_lambda_simple_env_end_071f:
  7705 00004C11 5B                      	pop rbx
  7706 00004C12 BE00000000              	mov rsi, 0
  7707                                  .L_lambda_simple_params_loop_071f:	; copy params
  7708 00004C17 4883FE01                	cmp rsi, 1
  7709 00004C1B 740E                    	je .L_lambda_simple_params_end_071f
  7710 00004C1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7711 00004C22 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7712 00004C26 48FFC6                  	inc rsi
  7713 00004C29 EBEC                    	jmp .L_lambda_simple_params_loop_071f
  7714                                  .L_lambda_simple_params_end_071f:
  7715 00004C2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7716 00004C2E 4889C3                  	mov rbx, rax
  7717 00004C31 58                      	pop rax
  7718 00004C32 C60004                  	mov byte [rax], T_closure
  7719 00004C35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7720 00004C39 48C74009[464C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_071f
  7721 00004C41 E998000000              	jmp .L_lambda_simple_end_071f
  7722                                  .L_lambda_simple_code_071f:	; lambda-simple body
  7723 00004C46 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7724 00004C4C 740B                    	je .L_lambda_simple_arity_check_ok_0800
  7725 00004C4E FF742410                	push qword [rsp + 8 * 2]
  7726 00004C52 6A02                    	push 2
  7727 00004C54 E990280100              	jmp L_error_incorrect_arity_simple
  7728                                  .L_lambda_simple_arity_check_ok_0800:
  7729 00004C59 C8000000                	enter 0, 0
  7730                                  	; preparing a tail-call
  7731 00004C5D 488B4520                	mov rax, PARAM(0)	; param r
  7732 00004C61 50                      	push rax
  7733 00004C62 488B4528                	mov rax, PARAM(1)	; param a
  7734 00004C66 50                      	push rax
  7735 00004C67 6A02                    	push 2	; arg count
  7736 00004C69 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  7737 00004C71 803805                  	cmp byte [rax], T_undefined
  7738 00004C74 0F8489270100            	je L_error_fvar_undefined
  7739 00004C7A 803804                  	cmp byte [rax], T_closure
  7740 00004C7D 0F8504280100            	jne L_error_non_closure
  7741 00004C83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7742 00004C86 FF7508                  	push qword [rbp + 8 *1]
  7743 00004C89 4989C0                  	mov r8, rax
  7744 00004C8C 488B5D18                	mov rbx, COUNT
  7745 00004C90 4883C303                	add rbx,3
  7746 00004C94 48C1E303                	shl rbx,3
  7747 00004C98 4801EB                  	add rbx, rbp
  7748 00004C9B 488B6D00                	mov rbp, [rbp]
  7749 00004C9F B900000000              	mov rcx,0
  7750 00004CA4 BA05000000              	mov rdx, 5
  7751 00004CA9 4889D0                  	mov rax, rdx
  7752 00004CAC 48FFC8                  	dec rax
  7753 00004CAF 48C1E003                	shl rax,3
  7754 00004CB3 4801E0                  	add rax, rsp
  7755                                  	.L_tc_recycle_frame_loop_08f3:
  7756 00004CB6 4839D1                  	cmp rcx, rdx
  7757 00004CB9 7414                    	je .L_tc_recycle_frame_done_08f3
  7758 00004CBB 4C8B08                  	mov r9, qword [rax]
  7759 00004CBE 4C890B                  	mov qword [rbx],r9
  7760 00004CC1 4883E808                	sub rax,8
  7761 00004CC5 4883EB08                	sub rbx,8
  7762 00004CC9 4883C101                	add rcx,1
  7763 00004CCD EBE7                    	jmp .L_tc_recycle_frame_loop_08f3
  7764                                  	.L_tc_recycle_frame_done_08f3:
  7765 00004CCF 4883C308                	add rbx,8
  7766 00004CD3 4889DC                  	mov rsp,rbx
  7767 00004CD6 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7768 00004CDA C9                      	leave
  7769 00004CDB C22000                  	ret AND_KILL_FRAME(2)
  7770                                  .L_lambda_simple_end_071f:	; new closure is in rax
  7771 00004CDE 50                      	push rax
  7772 00004CDF 6A03                    	push 3	; arg count
  7773 00004CE1 488B0425[FF130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7774 00004CE9 803805                  	cmp byte [rax], T_undefined
  7775 00004CEC 0F8411270100            	je L_error_fvar_undefined
  7776 00004CF2 803804                  	cmp byte [rax], T_closure
  7777 00004CF5 0F858C270100            	jne L_error_non_closure
  7778 00004CFB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7779 00004CFE FF7508                  	push qword [rbp + 8 *1]
  7780 00004D01 4989C0                  	mov r8, rax
  7781 00004D04 488B5D18                	mov rbx, COUNT
  7782 00004D08 4883C303                	add rbx,3
  7783 00004D0C 48C1E303                	shl rbx,3
  7784 00004D10 4801EB                  	add rbx, rbp
  7785 00004D13 488B6D00                	mov rbp, [rbp]
  7786 00004D17 B900000000              	mov rcx,0
  7787 00004D1C BA06000000              	mov rdx, 6
  7788 00004D21 4889D0                  	mov rax, rdx
  7789 00004D24 48FFC8                  	dec rax
  7790 00004D27 48C1E003                	shl rax,3
  7791 00004D2B 4801E0                  	add rax, rsp
  7792                                  	.L_tc_recycle_frame_loop_08f2:
  7793 00004D2E 4839D1                  	cmp rcx, rdx
  7794 00004D31 7414                    	je .L_tc_recycle_frame_done_08f2
  7795 00004D33 4C8B08                  	mov r9, qword [rax]
  7796 00004D36 4C890B                  	mov qword [rbx],r9
  7797 00004D39 4883E808                	sub rax,8
  7798 00004D3D 4883EB08                	sub rbx,8
  7799 00004D41 4883C101                	add rcx,1
  7800 00004D45 EBE7                    	jmp .L_tc_recycle_frame_loop_08f2
  7801                                  	.L_tc_recycle_frame_done_08f2:
  7802 00004D47 4883C308                	add rbx,8
  7803 00004D4B 4889DC                  	mov rsp,rbx
  7804 00004D4E 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  7805 00004D52 C9                      	leave
  7806 00004D53 C21800                  	ret AND_KILL_FRAME(1)
  7807                                  .L_lambda_simple_end_071e:	; new closure is in rax
  7808 00004D56 48890425[30160000]      	mov qword [free_var_118], rax
  7809 00004D5E 48B8-                   	mov rax, sob_void
  7809 00004D60 [0000000000000000] 
  7810                                  
  7811 00004D68 4889C7                  	mov rdi, rax
  7812 00004D6B E8152A0100              	call print_sexpr_if_not_void
  7813                                  	; preparing a non-tail-call
  7814 00004D70 48B8-                   	mov rax, L_constants + 1993
  7814 00004D72 [C907000000000000] 
  7815 00004D7A 50                      	push rax
  7816 00004D7B 48B8-                   	mov rax, L_constants + 1993
  7816 00004D7D [C907000000000000] 
  7817 00004D85 50                      	push rax
  7818 00004D86 6A02                    	push 2	; arg count
  7819 00004D88 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7820 00004D8D E89E270100              	call malloc
  7821 00004D92 50                      	push rax
  7822 00004D93 BF00000000              	mov rdi, 8 * 0	; new rib
  7823 00004D98 E893270100              	call malloc
  7824 00004D9D 50                      	push rax
  7825 00004D9E BF08000000              	mov rdi, 8 * 1	; extended env
  7826 00004DA3 E888270100              	call malloc
  7827 00004DA8 488B7D10                	mov rdi, ENV
  7828 00004DAC BE00000000              	mov rsi, 0
  7829 00004DB1 BA01000000              	mov rdx, 1
  7830                                  .L_lambda_simple_env_loop_0720:	; ext_env[i + 1] <-- env[i]
  7831 00004DB6 4883FE00                	cmp rsi, 0
  7832 00004DBA 7410                    	je .L_lambda_simple_env_end_0720
  7833 00004DBC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7834 00004DC0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7835 00004DC4 48FFC6                  	inc rsi
  7836 00004DC7 48FFC2                  	inc rdx
  7837 00004DCA EBEA                    	jmp .L_lambda_simple_env_loop_0720
  7838                                  .L_lambda_simple_env_end_0720:
  7839 00004DCC 5B                      	pop rbx
  7840 00004DCD BE00000000              	mov rsi, 0
  7841                                  .L_lambda_simple_params_loop_0720:	; copy params
  7842 00004DD2 4883FE00                	cmp rsi, 0
  7843 00004DD6 740E                    	je .L_lambda_simple_params_end_0720
  7844 00004DD8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7845 00004DDD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7846 00004DE1 48FFC6                  	inc rsi
  7847 00004DE4 EBEC                    	jmp .L_lambda_simple_params_loop_0720
  7848                                  .L_lambda_simple_params_end_0720:
  7849 00004DE6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7850 00004DE9 4889C3                  	mov rbx, rax
  7851 00004DEC 58                      	pop rax
  7852 00004DED C60004                  	mov byte [rax], T_closure
  7853 00004DF0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7854 00004DF4 48C74009[014E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0720
  7855 00004DFC E961060000              	jmp .L_lambda_simple_end_0720
  7856                                  .L_lambda_simple_code_0720:	; lambda-simple body
  7857 00004E01 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7858 00004E07 740B                    	je .L_lambda_simple_arity_check_ok_0801
  7859 00004E09 FF742410                	push qword [rsp + 8 * 2]
  7860 00004E0D 6A02                    	push 2
  7861 00004E0F E9D5260100              	jmp L_error_incorrect_arity_simple
  7862                                  .L_lambda_simple_arity_check_ok_0801:
  7863 00004E14 C8000000                	enter 0, 0
  7864 00004E18 BF08000000              	mov rdi, 8
  7865 00004E1D E80E270100              	call malloc
  7866 00004E22 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  7867 00004E26 488918                  	mov qword [rax], rbx
  7868 00004E29 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  7869 00004E2D 48B8-                   	mov rax, sob_void
  7869 00004E2F [0000000000000000] 
  7870                                  
  7871 00004E37 BF08000000              	mov rdi, 8
  7872 00004E3C E8EF260100              	call malloc
  7873 00004E41 488B5D28                	 mov rbx, qword [rbp + 8 * (4 +1)]
  7874 00004E45 488918                  	mov qword [rax], rbx
  7875 00004E48 48894528                	mov qword [rbp + 8 * (4 +1)], rax
  7876 00004E4C 48B8-                   	mov rax, sob_void
  7876 00004E4E [0000000000000000] 
  7877                                  
  7878 00004E56 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7879 00004E5B E8D0260100              	call malloc
  7880 00004E60 50                      	push rax
  7881 00004E61 BF10000000              	mov rdi, 8 * 2	; new rib
  7882 00004E66 E8C5260100              	call malloc
  7883 00004E6B 50                      	push rax
  7884 00004E6C BF10000000              	mov rdi, 8 * 2	; extended env
  7885 00004E71 E8BA260100              	call malloc
  7886 00004E76 488B7D10                	mov rdi, ENV
  7887 00004E7A BE00000000              	mov rsi, 0
  7888 00004E7F BA01000000              	mov rdx, 1
  7889                                  .L_lambda_simple_env_loop_0721:	; ext_env[i + 1] <-- env[i]
  7890 00004E84 4883FE01                	cmp rsi, 1
  7891 00004E88 7410                    	je .L_lambda_simple_env_end_0721
  7892 00004E8A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7893 00004E8E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7894 00004E92 48FFC6                  	inc rsi
  7895 00004E95 48FFC2                  	inc rdx
  7896 00004E98 EBEA                    	jmp .L_lambda_simple_env_loop_0721
  7897                                  .L_lambda_simple_env_end_0721:
  7898 00004E9A 5B                      	pop rbx
  7899 00004E9B BE00000000              	mov rsi, 0
  7900                                  .L_lambda_simple_params_loop_0721:	; copy params
  7901 00004EA0 4883FE02                	cmp rsi, 2
  7902 00004EA4 740E                    	je .L_lambda_simple_params_end_0721
  7903 00004EA6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7904 00004EAB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7905 00004EAF 48FFC6                  	inc rsi
  7906 00004EB2 EBEC                    	jmp .L_lambda_simple_params_loop_0721
  7907                                  .L_lambda_simple_params_end_0721:
  7908 00004EB4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7909 00004EB7 4889C3                  	mov rbx, rax
  7910 00004EBA 58                      	pop rax
  7911 00004EBB C60004                  	mov byte [rax], T_closure
  7912 00004EBE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7913 00004EC2 48C74009[CF4E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0721
  7914 00004ECA E937010000              	jmp .L_lambda_simple_end_0721
  7915                                  .L_lambda_simple_code_0721:	; lambda-simple body
  7916 00004ECF 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7917 00004ED5 740B                    	je .L_lambda_simple_arity_check_ok_0802
  7918 00004ED7 FF742410                	push qword [rsp + 8 * 2]
  7919 00004EDB 6A02                    	push 2
  7920 00004EDD E907260100              	jmp L_error_incorrect_arity_simple
  7921                                  .L_lambda_simple_arity_check_ok_0802:
  7922 00004EE2 C8000000                	enter 0, 0
  7923                                  	; preparing a non-tail-call
  7924 00004EE6 488B4528                	mov rax, PARAM(1)	; param sr
  7925 00004EEA 50                      	push rax
  7926 00004EEB 6A01                    	push 1	; arg count
  7927 00004EED 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  7928 00004EF5 803805                  	cmp byte [rax], T_undefined
  7929 00004EF8 0F8405250100            	je L_error_fvar_undefined
  7930 00004EFE 803804                  	cmp byte [rax], T_closure
  7931 00004F01 0F8580250100            	jne L_error_non_closure
  7932 00004F07 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7933 00004F0A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7934 00004F0D 483D[02000000]          	cmp rax, sob_boolean_false
  7935 00004F13 7409                    	je .L_if_else_04db
  7936 00004F15 488B4520                	mov rax, PARAM(0)	; param s1
  7937 00004F19 E9E4000000              	jmp .L_if_end_0560
  7938                                  .L_if_else_04db:
  7939                                  	; preparing a tail-call
  7940                                  	; preparing a non-tail-call
  7941                                  	; preparing a non-tail-call
  7942 00004F1E 488B4528                	mov rax, PARAM(1)	; param sr
  7943 00004F22 50                      	push rax
  7944 00004F23 6A01                    	push 1	; arg count
  7945 00004F25 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  7946 00004F2D 803805                  	cmp byte [rax], T_undefined
  7947 00004F30 0F84CD240100            	je L_error_fvar_undefined
  7948 00004F36 803804                  	cmp byte [rax], T_closure
  7949 00004F39 0F8548250100            	jne L_error_non_closure
  7950 00004F3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7951 00004F42 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7952 00004F45 50                      	push rax
  7953                                  	; preparing a non-tail-call
  7954 00004F46 488B4528                	mov rax, PARAM(1)	; param sr
  7955 00004F4A 50                      	push rax
  7956 00004F4B 6A01                    	push 1	; arg count
  7957 00004F4D 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  7958 00004F55 803805                  	cmp byte [rax], T_undefined
  7959 00004F58 0F84A5240100            	je L_error_fvar_undefined
  7960 00004F5E 803804                  	cmp byte [rax], T_closure
  7961 00004F61 0F8520250100            	jne L_error_non_closure
  7962 00004F67 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7963 00004F6A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7964 00004F6D 50                      	push rax
  7965 00004F6E 6A02                    	push 2	; arg count
  7966 00004F70 488B4510                	mov rax, ENV
  7967 00004F74 488B00                  	mov rax, qword [rax + 8 * 0]
  7968 00004F77 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7969 00004F7A 488B00                  	mov rax, qword [rax]
  7970 00004F7D 803804                  	cmp byte [rax], T_closure
  7971 00004F80 0F8501250100            	jne L_error_non_closure
  7972 00004F86 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7973 00004F89 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7974 00004F8C 50                      	push rax
  7975 00004F8D 488B4520                	mov rax, PARAM(0)	; param s1
  7976 00004F91 50                      	push rax
  7977 00004F92 6A02                    	push 2	; arg count
  7978 00004F94 488B4510                	mov rax, ENV
  7979 00004F98 488B00                  	mov rax, qword [rax + 8 * 0]
  7980 00004F9B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7981 00004F9F 488B00                  	mov rax, qword [rax]
  7982 00004FA2 803804                  	cmp byte [rax], T_closure
  7983 00004FA5 0F85DC240100            	jne L_error_non_closure
  7984 00004FAB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7985 00004FAE FF7508                  	push qword [rbp + 8 *1]
  7986 00004FB1 4989C0                  	mov r8, rax
  7987 00004FB4 488B5D18                	mov rbx, COUNT
  7988 00004FB8 4883C303                	add rbx,3
  7989 00004FBC 48C1E303                	shl rbx,3
  7990 00004FC0 4801EB                  	add rbx, rbp
  7991 00004FC3 488B6D00                	mov rbp, [rbp]
  7992 00004FC7 B900000000              	mov rcx,0
  7993 00004FCC BA05000000              	mov rdx, 5
  7994 00004FD1 4889D0                  	mov rax, rdx
  7995 00004FD4 48FFC8                  	dec rax
  7996 00004FD7 48C1E003                	shl rax,3
  7997 00004FDB 4801E0                  	add rax, rsp
  7998                                  	.L_tc_recycle_frame_loop_08f4:
  7999 00004FDE 4839D1                  	cmp rcx, rdx
  8000 00004FE1 7414                    	je .L_tc_recycle_frame_done_08f4
  8001 00004FE3 4C8B08                  	mov r9, qword [rax]
  8002 00004FE6 4C890B                  	mov qword [rbx],r9
  8003 00004FE9 4883E808                	sub rax,8
  8004 00004FED 4883EB08                	sub rbx,8
  8005 00004FF1 4883C101                	add rcx,1
  8006 00004FF5 EBE7                    	jmp .L_tc_recycle_frame_loop_08f4
  8007                                  	.L_tc_recycle_frame_done_08f4:
  8008 00004FF7 4883C308                	add rbx,8
  8009 00004FFB 4889DC                  	mov rsp,rbx
  8010 00004FFE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8011                                  .L_if_end_0560:
  8012 00005002 C9                      	leave
  8013 00005003 C22000                  	ret AND_KILL_FRAME(2)
  8014                                  .L_lambda_simple_end_0721:	; new closure is in rax
  8015 00005006 50                      	push rax
  8016 00005007 488B4520                	mov rax, PARAM(0)	; param run-1
  8017 0000500B 8F00                    	pop qword [rax]
  8018 0000500D 48B8-                   	mov rax, sob_void
  8018 0000500F [0000000000000000] 
  8019                                  
  8020 00005017 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8021 0000501C E80F250100              	call malloc
  8022 00005021 50                      	push rax
  8023 00005022 BF10000000              	mov rdi, 8 * 2	; new rib
  8024 00005027 E804250100              	call malloc
  8025 0000502C 50                      	push rax
  8026 0000502D BF10000000              	mov rdi, 8 * 2	; extended env
  8027 00005032 E8F9240100              	call malloc
  8028 00005037 488B7D10                	mov rdi, ENV
  8029 0000503B BE00000000              	mov rsi, 0
  8030 00005040 BA01000000              	mov rdx, 1
  8031                                  .L_lambda_simple_env_loop_0722:	; ext_env[i + 1] <-- env[i]
  8032 00005045 4883FE01                	cmp rsi, 1
  8033 00005049 7410                    	je .L_lambda_simple_env_end_0722
  8034 0000504B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8035 0000504F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8036 00005053 48FFC6                  	inc rsi
  8037 00005056 48FFC2                  	inc rdx
  8038 00005059 EBEA                    	jmp .L_lambda_simple_env_loop_0722
  8039                                  .L_lambda_simple_env_end_0722:
  8040 0000505B 5B                      	pop rbx
  8041 0000505C BE00000000              	mov rsi, 0
  8042                                  .L_lambda_simple_params_loop_0722:	; copy params
  8043 00005061 4883FE02                	cmp rsi, 2
  8044 00005065 740E                    	je .L_lambda_simple_params_end_0722
  8045 00005067 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8046 0000506C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8047 00005070 48FFC6                  	inc rsi
  8048 00005073 EBEC                    	jmp .L_lambda_simple_params_loop_0722
  8049                                  .L_lambda_simple_params_end_0722:
  8050 00005075 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8051 00005078 4889C3                  	mov rbx, rax
  8052 0000507B 58                      	pop rax
  8053 0000507C C60004                  	mov byte [rax], T_closure
  8054 0000507F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8055 00005083 48C74009[90500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0722
  8056 0000508B E93B010000              	jmp .L_lambda_simple_end_0722
  8057                                  .L_lambda_simple_code_0722:	; lambda-simple body
  8058 00005090 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8059 00005096 740B                    	je .L_lambda_simple_arity_check_ok_0803
  8060 00005098 FF742410                	push qword [rsp + 8 * 2]
  8061 0000509C 6A02                    	push 2
  8062 0000509E E946240100              	jmp L_error_incorrect_arity_simple
  8063                                  .L_lambda_simple_arity_check_ok_0803:
  8064 000050A3 C8000000                	enter 0, 0
  8065                                  	; preparing a non-tail-call
  8066 000050A7 488B4520                	mov rax, PARAM(0)	; param s1
  8067 000050AB 50                      	push rax
  8068 000050AC 6A01                    	push 1	; arg count
  8069 000050AE 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  8070 000050B6 803805                  	cmp byte [rax], T_undefined
  8071 000050B9 0F8444230100            	je L_error_fvar_undefined
  8072 000050BF 803804                  	cmp byte [rax], T_closure
  8073 000050C2 0F85BF230100            	jne L_error_non_closure
  8074 000050C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8075 000050CB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8076 000050CE 483D[02000000]          	cmp rax, sob_boolean_false
  8077 000050D4 7409                    	je .L_if_else_04dc
  8078 000050D6 488B4528                	mov rax, PARAM(1)	; param s2
  8079 000050DA E9E8000000              	jmp .L_if_end_0561
  8080                                  .L_if_else_04dc:
  8081                                  	; preparing a tail-call
  8082                                  	; preparing a non-tail-call
  8083 000050DF 488B4528                	mov rax, PARAM(1)	; param s2
  8084 000050E3 50                      	push rax
  8085                                  	; preparing a non-tail-call
  8086 000050E4 488B4520                	mov rax, PARAM(0)	; param s1
  8087 000050E8 50                      	push rax
  8088 000050E9 6A01                    	push 1	; arg count
  8089 000050EB 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  8090 000050F3 803805                  	cmp byte [rax], T_undefined
  8091 000050F6 0F8407230100            	je L_error_fvar_undefined
  8092 000050FC 803804                  	cmp byte [rax], T_closure
  8093 000050FF 0F8582230100            	jne L_error_non_closure
  8094 00005105 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8095 00005108 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8096 0000510B 50                      	push rax
  8097 0000510C 6A02                    	push 2	; arg count
  8098 0000510E 488B4510                	mov rax, ENV
  8099 00005112 488B00                  	mov rax, qword [rax + 8 * 0]
  8100 00005115 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  8101 00005119 488B00                  	mov rax, qword [rax]
  8102 0000511C 803804                  	cmp byte [rax], T_closure
  8103 0000511F 0F8562230100            	jne L_error_non_closure
  8104 00005125 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8105 00005128 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8106 0000512B 50                      	push rax
  8107                                  	; preparing a non-tail-call
  8108 0000512C 488B4520                	mov rax, PARAM(0)	; param s1
  8109 00005130 50                      	push rax
  8110 00005131 6A01                    	push 1	; arg count
  8111 00005133 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  8112 0000513B 803805                  	cmp byte [rax], T_undefined
  8113 0000513E 0F84BF220100            	je L_error_fvar_undefined
  8114 00005144 803804                  	cmp byte [rax], T_closure
  8115 00005147 0F853A230100            	jne L_error_non_closure
  8116 0000514D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8117 00005150 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8118 00005153 50                      	push rax
  8119 00005154 6A02                    	push 2	; arg count
  8120 00005156 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  8121 0000515E 803805                  	cmp byte [rax], T_undefined
  8122 00005161 0F849C220100            	je L_error_fvar_undefined
  8123 00005167 803804                  	cmp byte [rax], T_closure
  8124 0000516A 0F8517230100            	jne L_error_non_closure
  8125 00005170 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8126 00005173 FF7508                  	push qword [rbp + 8 *1]
  8127 00005176 4989C0                  	mov r8, rax
  8128 00005179 488B5D18                	mov rbx, COUNT
  8129 0000517D 4883C303                	add rbx,3
  8130 00005181 48C1E303                	shl rbx,3
  8131 00005185 4801EB                  	add rbx, rbp
  8132 00005188 488B6D00                	mov rbp, [rbp]
  8133 0000518C B900000000              	mov rcx,0
  8134 00005191 BA05000000              	mov rdx, 5
  8135 00005196 4889D0                  	mov rax, rdx
  8136 00005199 48FFC8                  	dec rax
  8137 0000519C 48C1E003                	shl rax,3
  8138 000051A0 4801E0                  	add rax, rsp
  8139                                  	.L_tc_recycle_frame_loop_08f5:
  8140 000051A3 4839D1                  	cmp rcx, rdx
  8141 000051A6 7414                    	je .L_tc_recycle_frame_done_08f5
  8142 000051A8 4C8B08                  	mov r9, qword [rax]
  8143 000051AB 4C890B                  	mov qword [rbx],r9
  8144 000051AE 4883E808                	sub rax,8
  8145 000051B2 4883EB08                	sub rbx,8
  8146 000051B6 4883C101                	add rcx,1
  8147 000051BA EBE7                    	jmp .L_tc_recycle_frame_loop_08f5
  8148                                  	.L_tc_recycle_frame_done_08f5:
  8149 000051BC 4883C308                	add rbx,8
  8150 000051C0 4889DC                  	mov rsp,rbx
  8151 000051C3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8152                                  .L_if_end_0561:
  8153 000051C7 C9                      	leave
  8154 000051C8 C22000                  	ret AND_KILL_FRAME(2)
  8155                                  .L_lambda_simple_end_0722:	; new closure is in rax
  8156 000051CB 50                      	push rax
  8157 000051CC 488B4528                	mov rax, PARAM(1)	; param run-2
  8158 000051D0 8F00                    	pop qword [rax]
  8159 000051D2 48B8-                   	mov rax, sob_void
  8159 000051D4 [0000000000000000] 
  8160                                  
  8161 000051DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8162 000051E1 E84A230100              	call malloc
  8163 000051E6 50                      	push rax
  8164 000051E7 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  8165 000051EB 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8166 000051EF BF10000000              	mov rdi, 8 * 2	; new rib for optional parameters
  8167 000051F4 E837230100              	call malloc
  8168 000051F9 50                      	push rax
  8169 000051FA BF10000000              	mov rdi, 8 * 2	; extended env
  8170 000051FF E82C230100              	call malloc
  8171 00005204 488B7D10                	mov rdi, ENV
  8172 00005208 BE00000000              	mov rsi, 0
  8173 0000520D BA01000000              	mov rdx, 1
  8174                                  .L_lambda_opt_env_loop_00e2:	; ext_env[i + 1] <-- env[i] copy all the array
  8175 00005212 4883FE01                	cmp rsi, 1
  8176 00005216 7410                    	je .L_lambda_opt_env_end_00e2
  8177 00005218 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8178 0000521C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8179 00005220 48FFC6                  	inc rsi
  8180 00005223 48FFC2                  	inc rdx
  8181 00005226 EBEA                    	jmp .L_lambda_opt_env_loop_00e2
  8182                                  .L_lambda_opt_env_end_00e2:
  8183 00005228 5B                      	pop rbx
  8184 00005229 BE00000000              	mov rsi, 0
  8185                                  .L_lambda_opt_params_loop_02a4:	; copy params
  8186 0000522E 4883FE02                	cmp rsi, 2
  8187 00005232 740E                    	je .L_lambda_opt_params_end_01c3
  8188 00005234 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8189 00005239 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8190 0000523D 48FFC6                  	inc rsi
  8191 00005240 EBEC                    	jmp .L_lambda_opt_params_loop_02a4
  8192                                  .L_lambda_opt_params_end_01c3:
  8193 00005242 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  8194 00005245 4889C3                  	mov rbx, rax
  8195 00005248 58                      	pop rax
  8196 00005249 C60004                  	mov byte [rax], T_closure
  8197 0000524C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8198 00005250 48C74009[5D520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e2
  8199 00005258 E901020000              	jmp .L_lambda_opt_end_01c3
  8200                                  .L_lambda_opt_code_00e2:	; lambda-opt body
  8201 0000525D 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8202 00005263 7D0B                    	jge .L_lambda_simple_arity_check_ok_0804
  8203 00005265 FF742410                	push qword [rsp + 8 * 2]
  8204 00005269 6A00                    	push 0
  8205 0000526B E979220100              	jmp L_error_incorrect_arity_simple
  8206                                  .L_lambda_simple_arity_check_ok_0804:
  8207 00005270 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8208 00005275 4983E800                	sub r8, 0
  8209 00005279 4C89C3                  	mov rbx,r8
  8210 0000527C 4983F800                	cmp r8, 0
  8211 00005280 7535                    	jne .L_lambda_opt_params_loop_02a6
  8212 00005282 488B542410              	mov rdx, qword [rsp + 8 * 2]
  8213 00005287 4883C203                	add rdx , 3
  8214 0000528B 4883EC08                	sub rsp , 8
  8215 0000528F 4889E1                  	mov rcx, rsp
  8216                                  .L_lambda_opt_stack_adjusted_02a5: ;pushing down the stack of the current function
  8217 00005292 488B5908                	mov rbx, qword [rcx + 8 * 1]
  8218 00005296 488919                  	mov qword[rcx] , rbx
  8219 00005299 4883C108                	add rcx , 8
  8220 0000529D 48FFCA                  	dec rdx
  8221 000052A0 4883FA00                	cmp rdx, 0
  8222 000052A4 75EC                    	jne .L_lambda_opt_stack_adjusted_02a5
  8223 000052A6 48FF442410              	inc qword [rsp + 8 * 2]
  8224 000052AB 48C701[01000000]        	mov qword [rcx], sob_nil 
  8225 000052B2 E9A2000000              	jmp .L_lambda_opt_end_01c4
  8226                                  	.L_lambda_opt_params_loop_02a6:
  8227 000052B7 488B542410              	mov rdx, qword [rsp + 8*2]
  8228 000052BC 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  8229 000052C1 4C89C2                  	mov rdx, r8
  8230 000052C4 49B9-                   	mov r9, sob_nil
  8230 000052C6 [0100000000000000] 
  8231                                  	.L_lambda_opt_params_loop_02a5: ;loop for copying the opt into list
  8232 000052CE BF11000000              	mov rdi, (1 + 8 + 8)
  8233 000052D3 E858220100              	call malloc
  8234 000052D8 C60021                  	mov byte[rax], T_pair
  8235 000052DB 488B19                  	mov rbx, qword [rcx]
  8236 000052DE 48895801                	mov SOB_PAIR_CAR(rax), rbx
  8237 000052E2 4C894809                	mov SOB_PAIR_CDR(rax), r9
  8238 000052E6 4989C1                  	mov r9, rax
  8239 000052E9 48FFCA                  	dec rdx
  8240 000052EC 4883E908                	sub rcx, 8
  8241 000052F0 4883FA00                	cmp rdx, 0
  8242 000052F4 75D8                    	jne .L_lambda_opt_params_loop_02a5
  8243 000052F6 488B542410              	mov rdx, qword [rsp + 8 * 2]
  8244 000052FB 4889E0                  	mov rax, rsp
  8245 000052FE 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  8246 00005303 4C89C1                  	mov rcx, r8
  8247 00005306 48FFC9                  	dec rcx
  8248 00005309 4883C203                	add rdx, 3
  8249 0000530D 4829CA                  	sub rdx,rcx
  8250 00005310 48C1E103                	shl rcx, 3
  8251                                  	.L_lambda_opt_stack_adjusted_02a6:
  8252 00005314 4883FA00                	cmp rdx, 0
  8253 00005318 7419                    	je .L_lambda_opt_params_end_01c4
  8254 0000531A 4889D8                  	mov rax, rbx
  8255 0000531D 4829C8                  	sub rax, rcx
  8256 00005320 488B30                  	mov rsi, qword [rax]
  8257 00005323 488933                  	mov [rbx], rsi
  8258 00005326 4883EB08                	sub rbx, 8
  8259 0000532A 48FFCA                  	dec rdx
  8260 0000532D 4883FA00                	cmp rdx, 0
  8261 00005331 75E1                    	jne .L_lambda_opt_stack_adjusted_02a6
  8262                                  	.L_lambda_opt_params_end_01c4:
  8263 00005333 4801CC                  	add rsp,rcx
  8264 00005336 BB00000000              	mov rbx, 0
  8265 0000533B 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  8266 00005340 4883C303                	add rbx,3
  8267 00005344 4C29C3                  	sub rbx,r8
  8268 00005347 48C1E303                	shl rbx, 3
  8269 0000534B 4801E3                  	add rbx, rsp
  8270 0000534E 4C890B                  	mov qword[rbx] , r9
  8271 00005351 49FFC8                  	dec r8
  8272 00005354 4C29442410              	sub qword [rsp + 8 * 2], r8
  8273                                  	.L_lambda_opt_end_01c4:
  8274 00005359 C8000000                	enter 0, 0
  8275                                  	; preparing a non-tail-call
  8276 0000535D 488B4520                	mov rax, PARAM(0)	; param s
  8277 00005361 50                      	push rax
  8278 00005362 6A01                    	push 1	; arg count
  8279 00005364 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  8280 0000536C 803805                  	cmp byte [rax], T_undefined
  8281 0000536F 0F848E200100            	je L_error_fvar_undefined
  8282 00005375 803804                  	cmp byte [rax], T_closure
  8283 00005378 0F8509210100            	jne L_error_non_closure
  8284 0000537E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8285 00005381 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8286 00005384 483D[02000000]          	cmp rax, sob_boolean_false
  8287 0000538A 740F                    	je .L_if_else_04dd
  8288 0000538C 48B8-                   	mov rax, L_constants + 1
  8288 0000538E [0100000000000000] 
  8289 00005396 E9BF000000              	jmp .L_if_end_0562
  8290                                  .L_if_else_04dd:
  8291                                  	; preparing a tail-call
  8292                                  	; preparing a non-tail-call
  8293 0000539B 488B4520                	mov rax, PARAM(0)	; param s
  8294 0000539F 50                      	push rax
  8295 000053A0 6A01                    	push 1	; arg count
  8296 000053A2 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  8297 000053AA 803805                  	cmp byte [rax], T_undefined
  8298 000053AD 0F8450200100            	je L_error_fvar_undefined
  8299 000053B3 803804                  	cmp byte [rax], T_closure
  8300 000053B6 0F85CB200100            	jne L_error_non_closure
  8301 000053BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  8302 000053BF FF5009                  	call SOB_CLOSURE_CODE(rax)
  8303 000053C2 50                      	push rax
  8304                                  	; preparing a non-tail-call
  8305 000053C3 488B4520                	mov rax, PARAM(0)	; param s
  8306 000053C7 50                      	push rax
  8307 000053C8 6A01                    	push 1	; arg count
  8308 000053CA 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  8309 000053D2 803805                  	cmp byte [rax], T_undefined
  8310 000053D5 0F8428200100            	je L_error_fvar_undefined
  8311 000053DB 803804                  	cmp byte [rax], T_closure
  8312 000053DE 0F85A3200100            	jne L_error_non_closure
  8313 000053E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8314 000053E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8315 000053EA 50                      	push rax
  8316 000053EB 6A02                    	push 2	; arg count
  8317 000053ED 488B4510                	mov rax, ENV
  8318 000053F1 488B00                  	mov rax, qword [rax + 8 * 0]
  8319 000053F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8320 000053F7 488B00                  	mov rax, qword [rax]
  8321 000053FA 803804                  	cmp byte [rax], T_closure
  8322 000053FD 0F8584200100            	jne L_error_non_closure
  8323 00005403 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8324 00005406 FF7508                  	push qword [rbp + 8 *1]
  8325 00005409 4989C0                  	mov r8, rax
  8326 0000540C 488B5D18                	mov rbx, COUNT
  8327 00005410 4883C303                	add rbx,3
  8328 00005414 48C1E303                	shl rbx,3
  8329 00005418 4801EB                  	add rbx, rbp
  8330 0000541B 488B6D00                	mov rbp, [rbp]
  8331 0000541F B900000000              	mov rcx,0
  8332 00005424 BA05000000              	mov rdx, 5
  8333 00005429 4889D0                  	mov rax, rdx
  8334 0000542C 48FFC8                  	dec rax
  8335 0000542F 48C1E003                	shl rax,3
  8336 00005433 4801E0                  	add rax, rsp
  8337                                  	.L_tc_recycle_frame_loop_08f6:
  8338 00005436 4839D1                  	cmp rcx, rdx
  8339 00005439 7414                    	je .L_tc_recycle_frame_done_08f6
  8340 0000543B 4C8B08                  	mov r9, qword [rax]
  8341 0000543E 4C890B                  	mov qword [rbx],r9
  8342 00005441 4883E808                	sub rax,8
  8343 00005445 4883EB08                	sub rbx,8
  8344 00005449 4883C101                	add rcx,1
  8345 0000544D EBE7                    	jmp .L_tc_recycle_frame_loop_08f6
  8346                                  	.L_tc_recycle_frame_done_08f6:
  8347 0000544F 4883C308                	add rbx,8
  8348 00005453 4889DC                  	mov rsp,rbx
  8349 00005456 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8350                                  .L_if_end_0562:
  8351                                  	LEAVE
    49 0000545A C9                  <1>  leave
  8352 0000545B C21800                  	ret AND_KILL_FRAME(1)
  8353                                  .L_lambda_opt_end_01c3:
  8354 0000545E C9                      	leave
  8355 0000545F C22000                  	ret AND_KILL_FRAME(2)
  8356                                  .L_lambda_simple_end_0720:	; new closure is in rax
  8357 00005462 803804                  	cmp byte [rax], T_closure
  8358 00005465 0F851C200100            	jne L_error_non_closure
  8359 0000546B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8360 0000546E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8361 00005471 48890425[7A100000]      	mov qword [free_var_32], rax
  8362 00005479 48B8-                   	mov rax, sob_void
  8362 0000547B [0000000000000000] 
  8363                                  
  8364 00005483 4889C7                  	mov rdi, rax
  8365 00005486 E8FA220100              	call print_sexpr_if_not_void
  8366                                  	; preparing a non-tail-call
  8367 0000548B 48B8-                   	mov rax, L_constants + 1993
  8367 0000548D [C907000000000000] 
  8368 00005495 50                      	push rax
  8369 00005496 6A01                    	push 1	; arg count
  8370 00005498 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8371 0000549D E88E200100              	call malloc
  8372 000054A2 50                      	push rax
  8373 000054A3 BF00000000              	mov rdi, 8 * 0	; new rib
  8374 000054A8 E883200100              	call malloc
  8375 000054AD 50                      	push rax
  8376 000054AE BF08000000              	mov rdi, 8 * 1	; extended env
  8377 000054B3 E878200100              	call malloc
  8378 000054B8 488B7D10                	mov rdi, ENV
  8379 000054BC BE00000000              	mov rsi, 0
  8380 000054C1 BA01000000              	mov rdx, 1
  8381                                  .L_lambda_simple_env_loop_0723:	; ext_env[i + 1] <-- env[i]
  8382 000054C6 4883FE00                	cmp rsi, 0
  8383 000054CA 7410                    	je .L_lambda_simple_env_end_0723
  8384 000054CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8385 000054D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8386 000054D4 48FFC6                  	inc rsi
  8387 000054D7 48FFC2                  	inc rdx
  8388 000054DA EBEA                    	jmp .L_lambda_simple_env_loop_0723
  8389                                  .L_lambda_simple_env_end_0723:
  8390 000054DC 5B                      	pop rbx
  8391 000054DD BE00000000              	mov rsi, 0
  8392                                  .L_lambda_simple_params_loop_0723:	; copy params
  8393 000054E2 4883FE00                	cmp rsi, 0
  8394 000054E6 740E                    	je .L_lambda_simple_params_end_0723
  8395 000054E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8396 000054ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8397 000054F1 48FFC6                  	inc rsi
  8398 000054F4 EBEC                    	jmp .L_lambda_simple_params_loop_0723
  8399                                  .L_lambda_simple_params_end_0723:
  8400 000054F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8401 000054F9 4889C3                  	mov rbx, rax
  8402 000054FC 58                      	pop rax
  8403 000054FD C60004                  	mov byte [rax], T_closure
  8404 00005500 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8405 00005504 48C74009[11550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0723
  8406 0000550C E941040000              	jmp .L_lambda_simple_end_0723
  8407                                  .L_lambda_simple_code_0723:	; lambda-simple body
  8408 00005511 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8409 00005517 740B                    	je .L_lambda_simple_arity_check_ok_0805
  8410 00005519 FF742410                	push qword [rsp + 8 * 2]
  8411 0000551D 6A01                    	push 1
  8412 0000551F E9C51F0100              	jmp L_error_incorrect_arity_simple
  8413                                  .L_lambda_simple_arity_check_ok_0805:
  8414 00005524 C8000000                	enter 0, 0
  8415 00005528 BF08000000              	mov rdi, 8
  8416 0000552D E8FE1F0100              	call malloc
  8417 00005532 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  8418 00005536 488918                  	mov qword [rax], rbx
  8419 00005539 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  8420 0000553D 48B8-                   	mov rax, sob_void
  8420 0000553F [0000000000000000] 
  8421                                  
  8422 00005547 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8423 0000554C E8DF1F0100              	call malloc
  8424 00005551 50                      	push rax
  8425 00005552 BF08000000              	mov rdi, 8 * 1	; new rib
  8426 00005557 E8D41F0100              	call malloc
  8427 0000555C 50                      	push rax
  8428 0000555D BF10000000              	mov rdi, 8 * 2	; extended env
  8429 00005562 E8C91F0100              	call malloc
  8430 00005567 488B7D10                	mov rdi, ENV
  8431 0000556B BE00000000              	mov rsi, 0
  8432 00005570 BA01000000              	mov rdx, 1
  8433                                  .L_lambda_simple_env_loop_0724:	; ext_env[i + 1] <-- env[i]
  8434 00005575 4883FE01                	cmp rsi, 1
  8435 00005579 7410                    	je .L_lambda_simple_env_end_0724
  8436 0000557B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8437 0000557F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8438 00005583 48FFC6                  	inc rsi
  8439 00005586 48FFC2                  	inc rdx
  8440 00005589 EBEA                    	jmp .L_lambda_simple_env_loop_0724
  8441                                  .L_lambda_simple_env_end_0724:
  8442 0000558B 5B                      	pop rbx
  8443 0000558C BE00000000              	mov rsi, 0
  8444                                  .L_lambda_simple_params_loop_0724:	; copy params
  8445 00005591 4883FE01                	cmp rsi, 1
  8446 00005595 740E                    	je .L_lambda_simple_params_end_0724
  8447 00005597 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8448 0000559C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8449 000055A0 48FFC6                  	inc rsi
  8450 000055A3 EBEC                    	jmp .L_lambda_simple_params_loop_0724
  8451                                  .L_lambda_simple_params_end_0724:
  8452 000055A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8453 000055A8 4889C3                  	mov rbx, rax
  8454 000055AB 58                      	pop rax
  8455 000055AC C60004                  	mov byte [rax], T_closure
  8456 000055AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8457 000055B3 48C74009[C0550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0724
  8458 000055BB E97A010000              	jmp .L_lambda_simple_end_0724
  8459                                  .L_lambda_simple_code_0724:	; lambda-simple body
  8460 000055C0 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8461 000055C6 740B                    	je .L_lambda_simple_arity_check_ok_0806
  8462 000055C8 FF742410                	push qword [rsp + 8 * 2]
  8463 000055CC 6A03                    	push 3
  8464 000055CE E9161F0100              	jmp L_error_incorrect_arity_simple
  8465                                  .L_lambda_simple_arity_check_ok_0806:
  8466 000055D3 C8000000                	enter 0, 0
  8467                                  	; preparing a non-tail-call
  8468 000055D7 488B4530                	mov rax, PARAM(2)	; param ss
  8469 000055DB 50                      	push rax
  8470 000055DC 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  8471 000055E4 803805                  	cmp byte [rax], T_undefined
  8472 000055E7 0F84161E0100            	je L_error_fvar_undefined
  8473 000055ED 50                      	push rax
  8474 000055EE 6A02                    	push 2	; arg count
  8475 000055F0 488B0425[A8150000]      	mov rax, qword [free_var_110]	; free var ormap
  8476 000055F8 803805                  	cmp byte [rax], T_undefined
  8477 000055FB 0F84021E0100            	je L_error_fvar_undefined
  8478 00005601 803804                  	cmp byte [rax], T_closure
  8479 00005604 0F857D1E0100            	jne L_error_non_closure
  8480 0000560A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8481 0000560D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8482 00005610 483D[02000000]          	cmp rax, sob_boolean_false
  8483 00005616 7409                    	je .L_if_else_04de
  8484 00005618 488B4528                	mov rax, PARAM(1)	; param unit
  8485 0000561C E915010000              	jmp .L_if_end_0563
  8486                                  .L_if_else_04de:
  8487                                  	; preparing a tail-call
  8488                                  	; preparing a non-tail-call
  8489 00005621 488B4530                	mov rax, PARAM(2)	; param ss
  8490 00005625 50                      	push rax
  8491 00005626 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  8492 0000562E 803805                  	cmp byte [rax], T_undefined
  8493 00005631 0F84CC1D0100            	je L_error_fvar_undefined
  8494 00005637 50                      	push rax
  8495 00005638 6A02                    	push 2	; arg count
  8496 0000563A 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  8497 00005642 803805                  	cmp byte [rax], T_undefined
  8498 00005645 0F84B81D0100            	je L_error_fvar_undefined
  8499 0000564B 803804                  	cmp byte [rax], T_closure
  8500 0000564E 0F85331E0100            	jne L_error_non_closure
  8501 00005654 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8502 00005657 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8503 0000565A 50                      	push rax
  8504                                  	; preparing a non-tail-call
  8505                                  	; preparing a non-tail-call
  8506 0000565B 488B4530                	mov rax, PARAM(2)	; param ss
  8507 0000565F 50                      	push rax
  8508 00005660 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  8509 00005668 803805                  	cmp byte [rax], T_undefined
  8510 0000566B 0F84921D0100            	je L_error_fvar_undefined
  8511 00005671 50                      	push rax
  8512 00005672 6A02                    	push 2	; arg count
  8513 00005674 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  8514 0000567C 803805                  	cmp byte [rax], T_undefined
  8515 0000567F 0F847E1D0100            	je L_error_fvar_undefined
  8516 00005685 803804                  	cmp byte [rax], T_closure
  8517 00005688 0F85F91D0100            	jne L_error_non_closure
  8518 0000568E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8519 00005691 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8520 00005694 50                      	push rax
  8521 00005695 488B4528                	mov rax, PARAM(1)	; param unit
  8522 00005699 50                      	push rax
  8523 0000569A 488B4520                	mov rax, PARAM(0)	; param f
  8524 0000569E 50                      	push rax
  8525 0000569F 6A03                    	push 3	; arg count
  8526 000056A1 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
  8527 000056A9 803805                  	cmp byte [rax], T_undefined
  8528 000056AC 0F84511D0100            	je L_error_fvar_undefined
  8529 000056B2 803804                  	cmp byte [rax], T_closure
  8530 000056B5 0F85CC1D0100            	jne L_error_non_closure
  8531 000056BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8532 000056BE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8533 000056C1 50                      	push rax
  8534 000056C2 488B4520                	mov rax, PARAM(0)	; param f
  8535 000056C6 50                      	push rax
  8536 000056C7 6A03                    	push 3	; arg count
  8537 000056C9 488B4510                	mov rax, ENV
  8538 000056CD 488B00                  	mov rax, qword [rax + 8 * 0]
  8539 000056D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8540 000056D3 488B00                  	mov rax, qword [rax]
  8541 000056D6 803804                  	cmp byte [rax], T_closure
  8542 000056D9 0F85A81D0100            	jne L_error_non_closure
  8543 000056DF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8544 000056E2 FF7508                  	push qword [rbp + 8 *1]
  8545 000056E5 4989C0                  	mov r8, rax
  8546 000056E8 488B5D18                	mov rbx, COUNT
  8547 000056EC 4883C303                	add rbx,3
  8548 000056F0 48C1E303                	shl rbx,3
  8549 000056F4 4801EB                  	add rbx, rbp
  8550 000056F7 488B6D00                	mov rbp, [rbp]
  8551 000056FB B900000000              	mov rcx,0
  8552 00005700 BA06000000              	mov rdx, 6
  8553 00005705 4889D0                  	mov rax, rdx
  8554 00005708 48FFC8                  	dec rax
  8555 0000570B 48C1E003                	shl rax,3
  8556 0000570F 4801E0                  	add rax, rsp
  8557                                  	.L_tc_recycle_frame_loop_08f7:
  8558 00005712 4839D1                  	cmp rcx, rdx
  8559 00005715 7414                    	je .L_tc_recycle_frame_done_08f7
  8560 00005717 4C8B08                  	mov r9, qword [rax]
  8561 0000571A 4C890B                  	mov qword [rbx],r9
  8562 0000571D 4883E808                	sub rax,8
  8563 00005721 4883EB08                	sub rbx,8
  8564 00005725 4883C101                	add rcx,1
  8565 00005729 EBE7                    	jmp .L_tc_recycle_frame_loop_08f7
  8566                                  	.L_tc_recycle_frame_done_08f7:
  8567 0000572B 4883C308                	add rbx,8
  8568 0000572F 4889DC                  	mov rsp,rbx
  8569 00005732 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8570                                  .L_if_end_0563:
  8571 00005736 C9                      	leave
  8572 00005737 C22800                  	ret AND_KILL_FRAME(3)
  8573                                  .L_lambda_simple_end_0724:	; new closure is in rax
  8574 0000573A 50                      	push rax
  8575 0000573B 488B4520                	mov rax, PARAM(0)	; param run
  8576 0000573F 8F00                    	pop qword [rax]
  8577 00005741 48B8-                   	mov rax, sob_void
  8577 00005743 [0000000000000000] 
  8578                                  
  8579 0000574B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8580 00005750 E8DB1D0100              	call malloc
  8581 00005755 50                      	push rax
  8582 00005756 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  8583 0000575A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8584 0000575E BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
  8585 00005763 E8C81D0100              	call malloc
  8586 00005768 50                      	push rax
  8587 00005769 BF10000000              	mov rdi, 8 * 2	; extended env
  8588 0000576E E8BD1D0100              	call malloc
  8589 00005773 488B7D10                	mov rdi, ENV
  8590 00005777 BE00000000              	mov rsi, 0
  8591 0000577C BA01000000              	mov rdx, 1
  8592                                  .L_lambda_opt_env_loop_00e3:	; ext_env[i + 1] <-- env[i] copy all the array
  8593 00005781 4883FE01                	cmp rsi, 1
  8594 00005785 7410                    	je .L_lambda_opt_env_end_00e3
  8595 00005787 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8596 0000578B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8597 0000578F 48FFC6                  	inc rsi
  8598 00005792 48FFC2                  	inc rdx
  8599 00005795 EBEA                    	jmp .L_lambda_opt_env_loop_00e3
  8600                                  .L_lambda_opt_env_end_00e3:
  8601 00005797 5B                      	pop rbx
  8602 00005798 BE00000000              	mov rsi, 0
  8603                                  .L_lambda_opt_params_loop_02a7:	; copy params
  8604 0000579D 4883FE01                	cmp rsi, 1
  8605 000057A1 740E                    	je .L_lambda_opt_params_end_01c5
  8606 000057A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8607 000057A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8608 000057AC 48FFC6                  	inc rsi
  8609 000057AF EBEC                    	jmp .L_lambda_opt_params_loop_02a7
  8610                                  .L_lambda_opt_params_end_01c5:
  8611 000057B1 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  8612 000057B4 4889C3                  	mov rbx, rax
  8613 000057B7 58                      	pop rax
  8614 000057B8 C60004                  	mov byte [rax], T_closure
  8615 000057BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8616 000057BF 48C74009[CC570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e3
  8617 000057C7 E982010000              	jmp .L_lambda_opt_end_01c5
  8618                                  .L_lambda_opt_code_00e3:	; lambda-opt body
  8619 000057CC 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8620 000057D2 7D0B                    	jge .L_lambda_simple_arity_check_ok_0807
  8621 000057D4 FF742410                	push qword [rsp + 8 * 2]
  8622 000057D8 6A02                    	push 2
  8623 000057DA E90A1D0100              	jmp L_error_incorrect_arity_simple
  8624                                  .L_lambda_simple_arity_check_ok_0807:
  8625 000057DF 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8626 000057E4 4983E802                	sub r8, 2
  8627 000057E8 4C89C3                  	mov rbx,r8
  8628 000057EB 4983F800                	cmp r8, 0
  8629 000057EF 7535                    	jne .L_lambda_opt_params_loop_02a9
  8630 000057F1 488B542410              	mov rdx, qword [rsp + 8 * 2]
  8631 000057F6 4883C203                	add rdx , 3
  8632 000057FA 4883EC08                	sub rsp , 8
  8633 000057FE 4889E1                  	mov rcx, rsp
  8634                                  .L_lambda_opt_stack_adjusted_02a8: ;pushing down the stack of the current function
  8635 00005801 488B5908                	mov rbx, qword [rcx + 8 * 1]
  8636 00005805 488919                  	mov qword[rcx] , rbx
  8637 00005808 4883C108                	add rcx , 8
  8638 0000580C 48FFCA                  	dec rdx
  8639 0000580F 4883FA00                	cmp rdx, 0
  8640 00005813 75EC                    	jne .L_lambda_opt_stack_adjusted_02a8
  8641 00005815 48FF442410              	inc qword [rsp + 8 * 2]
  8642 0000581A 48C701[01000000]        	mov qword [rcx], sob_nil 
  8643 00005821 E9A2000000              	jmp .L_lambda_opt_end_01c6
  8644                                  	.L_lambda_opt_params_loop_02a9:
  8645 00005826 488B542410              	mov rdx, qword [rsp + 8*2]
  8646 0000582B 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  8647 00005830 4C89C2                  	mov rdx, r8
  8648 00005833 49B9-                   	mov r9, sob_nil
  8648 00005835 [0100000000000000] 
  8649                                  	.L_lambda_opt_params_loop_02a8: ;loop for copying the opt into list
  8650 0000583D BF11000000              	mov rdi, (1 + 8 + 8)
  8651 00005842 E8E91C0100              	call malloc
  8652 00005847 C60021                  	mov byte[rax], T_pair
  8653 0000584A 488B19                  	mov rbx, qword [rcx]
  8654 0000584D 48895801                	mov SOB_PAIR_CAR(rax), rbx
  8655 00005851 4C894809                	mov SOB_PAIR_CDR(rax), r9
  8656 00005855 4989C1                  	mov r9, rax
  8657 00005858 48FFCA                  	dec rdx
  8658 0000585B 4883E908                	sub rcx, 8
  8659 0000585F 4883FA00                	cmp rdx, 0
  8660 00005863 75D8                    	jne .L_lambda_opt_params_loop_02a8
  8661 00005865 488B542410              	mov rdx, qword [rsp + 8 * 2]
  8662 0000586A 4889E0                  	mov rax, rsp
  8663 0000586D 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  8664 00005872 4C89C1                  	mov rcx, r8
  8665 00005875 48FFC9                  	dec rcx
  8666 00005878 4883C203                	add rdx, 3
  8667 0000587C 4829CA                  	sub rdx,rcx
  8668 0000587F 48C1E103                	shl rcx, 3
  8669                                  	.L_lambda_opt_stack_adjusted_02a9:
  8670 00005883 4883FA00                	cmp rdx, 0
  8671 00005887 7419                    	je .L_lambda_opt_params_end_01c6
  8672 00005889 4889D8                  	mov rax, rbx
  8673 0000588C 4829C8                  	sub rax, rcx
  8674 0000588F 488B30                  	mov rsi, qword [rax]
  8675 00005892 488933                  	mov [rbx], rsi
  8676 00005895 4883EB08                	sub rbx, 8
  8677 00005899 48FFCA                  	dec rdx
  8678 0000589C 4883FA00                	cmp rdx, 0
  8679 000058A0 75E1                    	jne .L_lambda_opt_stack_adjusted_02a9
  8680                                  	.L_lambda_opt_params_end_01c6:
  8681 000058A2 4801CC                  	add rsp,rcx
  8682 000058A5 BB02000000              	mov rbx, 2
  8683 000058AA 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  8684 000058AF 4883C303                	add rbx,3
  8685 000058B3 4C29C3                  	sub rbx,r8
  8686 000058B6 48C1E303                	shl rbx, 3
  8687 000058BA 4801E3                  	add rbx, rsp
  8688 000058BD 4C890B                  	mov qword[rbx] , r9
  8689 000058C0 49FFC8                  	dec r8
  8690 000058C3 4C29442410              	sub qword [rsp + 8 * 2], r8
  8691                                  	.L_lambda_opt_end_01c6:
  8692 000058C8 C8000000                	enter 0, 0
  8693                                  	; preparing a tail-call
  8694 000058CC 488B4530                	mov rax, PARAM(2)	; param ss
  8695 000058D0 50                      	push rax
  8696 000058D1 488B4528                	mov rax, PARAM(1)	; param unit
  8697 000058D5 50                      	push rax
  8698 000058D6 488B4520                	mov rax, PARAM(0)	; param f
  8699 000058DA 50                      	push rax
  8700 000058DB 6A03                    	push 3	; arg count
  8701 000058DD 488B4510                	mov rax, ENV
  8702 000058E1 488B00                  	mov rax, qword [rax + 8 * 0]
  8703 000058E4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8704 000058E7 488B00                  	mov rax, qword [rax]
  8705 000058EA 803804                  	cmp byte [rax], T_closure
  8706 000058ED 0F85941B0100            	jne L_error_non_closure
  8707 000058F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8708 000058F6 FF7508                  	push qword [rbp + 8 *1]
  8709 000058F9 4989C0                  	mov r8, rax
  8710 000058FC 488B5D18                	mov rbx, COUNT
  8711 00005900 4883C303                	add rbx,3
  8712 00005904 48C1E303                	shl rbx,3
  8713 00005908 4801EB                  	add rbx, rbp
  8714 0000590B 488B6D00                	mov rbp, [rbp]
  8715 0000590F B900000000              	mov rcx,0
  8716 00005914 BA06000000              	mov rdx, 6
  8717 00005919 4889D0                  	mov rax, rdx
  8718 0000591C 48FFC8                  	dec rax
  8719 0000591F 48C1E003                	shl rax,3
  8720 00005923 4801E0                  	add rax, rsp
  8721                                  	.L_tc_recycle_frame_loop_08f8:
  8722 00005926 4839D1                  	cmp rcx, rdx
  8723 00005929 7414                    	je .L_tc_recycle_frame_done_08f8
  8724 0000592B 4C8B08                  	mov r9, qword [rax]
  8725 0000592E 4C890B                  	mov qword [rbx],r9
  8726 00005931 4883E808                	sub rax,8
  8727 00005935 4883EB08                	sub rbx,8
  8728 00005939 4883C101                	add rcx,1
  8729 0000593D EBE7                    	jmp .L_tc_recycle_frame_loop_08f8
  8730                                  	.L_tc_recycle_frame_done_08f8:
  8731 0000593F 4883C308                	add rbx,8
  8732 00005943 4889DC                  	mov rsp,rbx
  8733 00005946 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8734                                  	LEAVE
    49 0000594A C9                  <1>  leave
  8735 0000594B C22800                  	ret AND_KILL_FRAME(3)
  8736                                  .L_lambda_opt_end_01c5:
  8737 0000594E C9                      	leave
  8738 0000594F C21800                  	ret AND_KILL_FRAME(1)
  8739                                  .L_lambda_simple_end_0723:	; new closure is in rax
  8740 00005952 803804                  	cmp byte [rax], T_closure
  8741 00005955 0F852C1B0100            	jne L_error_non_closure
  8742 0000595B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8743 0000595E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8744 00005961 48890425[FF130000]      	mov qword [free_var_85], rax
  8745 00005969 48B8-                   	mov rax, sob_void
  8745 0000596B [0000000000000000] 
  8746                                  
  8747 00005973 4889C7                  	mov rdi, rax
  8748 00005976 E80A1E0100              	call print_sexpr_if_not_void
  8749                                  	; preparing a non-tail-call
  8750 0000597B 48B8-                   	mov rax, L_constants + 1993
  8750 0000597D [C907000000000000] 
  8751 00005985 50                      	push rax
  8752 00005986 6A01                    	push 1	; arg count
  8753 00005988 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8754 0000598D E89E1B0100              	call malloc
  8755 00005992 50                      	push rax
  8756 00005993 BF00000000              	mov rdi, 8 * 0	; new rib
  8757 00005998 E8931B0100              	call malloc
  8758 0000599D 50                      	push rax
  8759 0000599E BF08000000              	mov rdi, 8 * 1	; extended env
  8760 000059A3 E8881B0100              	call malloc
  8761 000059A8 488B7D10                	mov rdi, ENV
  8762 000059AC BE00000000              	mov rsi, 0
  8763 000059B1 BA01000000              	mov rdx, 1
  8764                                  .L_lambda_simple_env_loop_0725:	; ext_env[i + 1] <-- env[i]
  8765 000059B6 4883FE00                	cmp rsi, 0
  8766 000059BA 7410                    	je .L_lambda_simple_env_end_0725
  8767 000059BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8768 000059C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8769 000059C4 48FFC6                  	inc rsi
  8770 000059C7 48FFC2                  	inc rdx
  8771 000059CA EBEA                    	jmp .L_lambda_simple_env_loop_0725
  8772                                  .L_lambda_simple_env_end_0725:
  8773 000059CC 5B                      	pop rbx
  8774 000059CD BE00000000              	mov rsi, 0
  8775                                  .L_lambda_simple_params_loop_0725:	; copy params
  8776 000059D2 4883FE00                	cmp rsi, 0
  8777 000059D6 740E                    	je .L_lambda_simple_params_end_0725
  8778 000059D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8779 000059DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8780 000059E1 48FFC6                  	inc rsi
  8781 000059E4 EBEC                    	jmp .L_lambda_simple_params_loop_0725
  8782                                  .L_lambda_simple_params_end_0725:
  8783 000059E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8784 000059E9 4889C3                  	mov rbx, rax
  8785 000059EC 58                      	pop rax
  8786 000059ED C60004                  	mov byte [rax], T_closure
  8787 000059F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8788 000059F4 48C74009[015A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0725
  8789 000059FC E992040000              	jmp .L_lambda_simple_end_0725
  8790                                  .L_lambda_simple_code_0725:	; lambda-simple body
  8791 00005A01 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8792 00005A07 740B                    	je .L_lambda_simple_arity_check_ok_0808
  8793 00005A09 FF742410                	push qword [rsp + 8 * 2]
  8794 00005A0D 6A01                    	push 1
  8795 00005A0F E9D51A0100              	jmp L_error_incorrect_arity_simple
  8796                                  .L_lambda_simple_arity_check_ok_0808:
  8797 00005A14 C8000000                	enter 0, 0
  8798 00005A18 BF08000000              	mov rdi, 8
  8799 00005A1D E80E1B0100              	call malloc
  8800 00005A22 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
  8801 00005A26 488918                  	mov qword [rax], rbx
  8802 00005A29 48894520                	mov qword [rbp + 8 * (4 +0)], rax
  8803 00005A2D 48B8-                   	mov rax, sob_void
  8803 00005A2F [0000000000000000] 
  8804                                  
  8805 00005A37 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8806 00005A3C E8EF1A0100              	call malloc
  8807 00005A41 50                      	push rax
  8808 00005A42 BF08000000              	mov rdi, 8 * 1	; new rib
  8809 00005A47 E8E41A0100              	call malloc
  8810 00005A4C 50                      	push rax
  8811 00005A4D BF10000000              	mov rdi, 8 * 2	; extended env
  8812 00005A52 E8D91A0100              	call malloc
  8813 00005A57 488B7D10                	mov rdi, ENV
  8814 00005A5B BE00000000              	mov rsi, 0
  8815 00005A60 BA01000000              	mov rdx, 1
  8816                                  .L_lambda_simple_env_loop_0726:	; ext_env[i + 1] <-- env[i]
  8817 00005A65 4883FE01                	cmp rsi, 1
  8818 00005A69 7410                    	je .L_lambda_simple_env_end_0726
  8819 00005A6B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8820 00005A6F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8821 00005A73 48FFC6                  	inc rsi
  8822 00005A76 48FFC2                  	inc rdx
  8823 00005A79 EBEA                    	jmp .L_lambda_simple_env_loop_0726
  8824                                  .L_lambda_simple_env_end_0726:
  8825 00005A7B 5B                      	pop rbx
  8826 00005A7C BE00000000              	mov rsi, 0
  8827                                  .L_lambda_simple_params_loop_0726:	; copy params
  8828 00005A81 4883FE01                	cmp rsi, 1
  8829 00005A85 740E                    	je .L_lambda_simple_params_end_0726
  8830 00005A87 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8831 00005A8C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8832 00005A90 48FFC6                  	inc rsi
  8833 00005A93 EBEC                    	jmp .L_lambda_simple_params_loop_0726
  8834                                  .L_lambda_simple_params_end_0726:
  8835 00005A95 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8836 00005A98 4889C3                  	mov rbx, rax
  8837 00005A9B 58                      	pop rax
  8838 00005A9C C60004                  	mov byte [rax], T_closure
  8839 00005A9F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8840 00005AA3 48C74009[B05A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0726
  8841 00005AAB E9CB010000              	jmp .L_lambda_simple_end_0726
  8842                                  .L_lambda_simple_code_0726:	; lambda-simple body
  8843 00005AB0 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8844 00005AB6 740B                    	je .L_lambda_simple_arity_check_ok_0809
  8845 00005AB8 FF742410                	push qword [rsp + 8 * 2]
  8846 00005ABC 6A03                    	push 3
  8847 00005ABE E9261A0100              	jmp L_error_incorrect_arity_simple
  8848                                  .L_lambda_simple_arity_check_ok_0809:
  8849 00005AC3 C8000000                	enter 0, 0
  8850                                  	; preparing a non-tail-call
  8851 00005AC7 488B4530                	mov rax, PARAM(2)	; param ss
  8852 00005ACB 50                      	push rax
  8853 00005ACC 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
  8854 00005AD4 803805                  	cmp byte [rax], T_undefined
  8855 00005AD7 0F8426190100            	je L_error_fvar_undefined
  8856 00005ADD 50                      	push rax
  8857 00005ADE 6A02                    	push 2	; arg count
  8858 00005AE0 488B0425[A8150000]      	mov rax, qword [free_var_110]	; free var ormap
  8859 00005AE8 803805                  	cmp byte [rax], T_undefined
  8860 00005AEB 0F8412190100            	je L_error_fvar_undefined
  8861 00005AF1 803804                  	cmp byte [rax], T_closure
  8862 00005AF4 0F858D190100            	jne L_error_non_closure
  8863 00005AFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8864 00005AFD FF5009                  	call SOB_CLOSURE_CODE(rax)
  8865 00005B00 483D[02000000]          	cmp rax, sob_boolean_false
  8866 00005B06 7409                    	je .L_if_else_04df
  8867 00005B08 488B4528                	mov rax, PARAM(1)	; param unit
  8868 00005B0C E966010000              	jmp .L_if_end_0564
  8869                                  .L_if_else_04df:
  8870                                  	; preparing a tail-call
  8871                                  	; preparing a non-tail-call
  8872                                  	; preparing a non-tail-call
  8873 00005B11 48B8-                   	mov rax, L_constants + 1
  8873 00005B13 [0100000000000000] 
  8874 00005B1B 50                      	push rax
  8875                                  	; preparing a non-tail-call
  8876                                  	; preparing a non-tail-call
  8877 00005B1C 488B4530                	mov rax, PARAM(2)	; param ss
  8878 00005B20 50                      	push rax
  8879 00005B21 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
  8880 00005B29 803805                  	cmp byte [rax], T_undefined
  8881 00005B2C 0F84D1180100            	je L_error_fvar_undefined
  8882 00005B32 50                      	push rax
  8883 00005B33 6A02                    	push 2	; arg count
  8884 00005B35 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  8885 00005B3D 803805                  	cmp byte [rax], T_undefined
  8886 00005B40 0F84BD180100            	je L_error_fvar_undefined
  8887 00005B46 803804                  	cmp byte [rax], T_closure
  8888 00005B49 0F8538190100            	jne L_error_non_closure
  8889 00005B4F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8890 00005B52 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8891 00005B55 50                      	push rax
  8892 00005B56 488B4528                	mov rax, PARAM(1)	; param unit
  8893 00005B5A 50                      	push rax
  8894 00005B5B 488B4520                	mov rax, PARAM(0)	; param f
  8895 00005B5F 50                      	push rax
  8896 00005B60 6A03                    	push 3	; arg count
  8897 00005B62 488B4510                	mov rax, ENV
  8898 00005B66 488B00                  	mov rax, qword [rax + 8 * 0]
  8899 00005B69 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8900 00005B6C 488B00                  	mov rax, qword [rax]
  8901 00005B6F 803804                  	cmp byte [rax], T_closure
  8902 00005B72 0F850F190100            	jne L_error_non_closure
  8903 00005B78 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8904 00005B7B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8905 00005B7E 50                      	push rax
  8906 00005B7F 6A02                    	push 2	; arg count
  8907 00005B81 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
  8908 00005B89 803805                  	cmp byte [rax], T_undefined
  8909 00005B8C 0F8471180100            	je L_error_fvar_undefined
  8910 00005B92 803804                  	cmp byte [rax], T_closure
  8911 00005B95 0F85EC180100            	jne L_error_non_closure
  8912 00005B9B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8913 00005B9E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8914 00005BA1 50                      	push rax
  8915                                  	; preparing a non-tail-call
  8916 00005BA2 488B4530                	mov rax, PARAM(2)	; param ss
  8917 00005BA6 50                      	push rax
  8918 00005BA7 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
  8919 00005BAF 803805                  	cmp byte [rax], T_undefined
  8920 00005BB2 0F844B180100            	je L_error_fvar_undefined
  8921 00005BB8 50                      	push rax
  8922 00005BB9 6A02                    	push 2	; arg count
  8923 00005BBB 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
  8924 00005BC3 803805                  	cmp byte [rax], T_undefined
  8925 00005BC6 0F8437180100            	je L_error_fvar_undefined
  8926 00005BCC 803804                  	cmp byte [rax], T_closure
  8927 00005BCF 0F85B2180100            	jne L_error_non_closure
  8928 00005BD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8929 00005BD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8930 00005BDB 50                      	push rax
  8931 00005BDC 6A02                    	push 2	; arg count
  8932 00005BDE 488B0425[7A100000]      	mov rax, qword [free_var_32]	; free var append
  8933 00005BE6 803805                  	cmp byte [rax], T_undefined
  8934 00005BE9 0F8414180100            	je L_error_fvar_undefined
  8935 00005BEF 803804                  	cmp byte [rax], T_closure
  8936 00005BF2 0F858F180100            	jne L_error_non_closure
  8937 00005BF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8938 00005BFB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8939 00005BFE 50                      	push rax
  8940 00005BFF 488B4520                	mov rax, PARAM(0)	; param f
  8941 00005C03 50                      	push rax
  8942 00005C04 6A02                    	push 2	; arg count
  8943 00005C06 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
  8944 00005C0E 803805                  	cmp byte [rax], T_undefined
  8945 00005C11 0F84EC170100            	je L_error_fvar_undefined
  8946 00005C17 803804                  	cmp byte [rax], T_closure
  8947 00005C1A 0F8567180100            	jne L_error_non_closure
  8948 00005C20 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8949 00005C23 FF7508                  	push qword [rbp + 8 *1]
  8950 00005C26 4989C0                  	mov r8, rax
  8951 00005C29 488B5D18                	mov rbx, COUNT
  8952 00005C2D 4883C303                	add rbx,3
  8953 00005C31 48C1E303                	shl rbx,3
  8954 00005C35 4801EB                  	add rbx, rbp
  8955 00005C38 488B6D00                	mov rbp, [rbp]
  8956 00005C3C B900000000              	mov rcx,0
  8957 00005C41 BA05000000              	mov rdx, 5
  8958 00005C46 4889D0                  	mov rax, rdx
  8959 00005C49 48FFC8                  	dec rax
  8960 00005C4C 48C1E003                	shl rax,3
  8961 00005C50 4801E0                  	add rax, rsp
  8962                                  	.L_tc_recycle_frame_loop_08f9:
  8963 00005C53 4839D1                  	cmp rcx, rdx
  8964 00005C56 7414                    	je .L_tc_recycle_frame_done_08f9
  8965 00005C58 4C8B08                  	mov r9, qword [rax]
  8966 00005C5B 4C890B                  	mov qword [rbx],r9
  8967 00005C5E 4883E808                	sub rax,8
  8968 00005C62 4883EB08                	sub rbx,8
  8969 00005C66 4883C101                	add rcx,1
  8970 00005C6A EBE7                    	jmp .L_tc_recycle_frame_loop_08f9
  8971                                  	.L_tc_recycle_frame_done_08f9:
  8972 00005C6C 4883C308                	add rbx,8
  8973 00005C70 4889DC                  	mov rsp,rbx
  8974 00005C73 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  8975                                  .L_if_end_0564:
  8976 00005C77 C9                      	leave
  8977 00005C78 C22800                  	ret AND_KILL_FRAME(3)
  8978                                  .L_lambda_simple_end_0726:	; new closure is in rax
  8979 00005C7B 50                      	push rax
  8980 00005C7C 488B4520                	mov rax, PARAM(0)	; param run
  8981 00005C80 8F00                    	pop qword [rax]
  8982 00005C82 48B8-                   	mov rax, sob_void
  8982 00005C84 [0000000000000000] 
  8983                                  
  8984 00005C8C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8985 00005C91 E89A180100              	call malloc
  8986 00005C96 50                      	push rax
  8987 00005C97 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
  8988 00005C9B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8989 00005C9F BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
  8990 00005CA4 E887180100              	call malloc
  8991 00005CA9 50                      	push rax
  8992 00005CAA BF10000000              	mov rdi, 8 * 2	; extended env
  8993 00005CAF E87C180100              	call malloc
  8994 00005CB4 488B7D10                	mov rdi, ENV
  8995 00005CB8 BE00000000              	mov rsi, 0
  8996 00005CBD BA01000000              	mov rdx, 1
  8997                                  .L_lambda_opt_env_loop_00e4:	; ext_env[i + 1] <-- env[i] copy all the array
  8998 00005CC2 4883FE01                	cmp rsi, 1
  8999 00005CC6 7410                    	je .L_lambda_opt_env_end_00e4
  9000 00005CC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9001 00005CCC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9002 00005CD0 48FFC6                  	inc rsi
  9003 00005CD3 48FFC2                  	inc rdx
  9004 00005CD6 EBEA                    	jmp .L_lambda_opt_env_loop_00e4
  9005                                  .L_lambda_opt_env_end_00e4:
  9006 00005CD8 5B                      	pop rbx
  9007 00005CD9 BE00000000              	mov rsi, 0
  9008                                  .L_lambda_opt_params_loop_02aa:	; copy params
  9009 00005CDE 4883FE01                	cmp rsi, 1
  9010 00005CE2 740E                    	je .L_lambda_opt_params_end_01c7
  9011 00005CE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9012 00005CE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9013 00005CED 48FFC6                  	inc rsi
  9014 00005CF0 EBEC                    	jmp .L_lambda_opt_params_loop_02aa
  9015                                  .L_lambda_opt_params_end_01c7:
  9016 00005CF2 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
  9017 00005CF5 4889C3                  	mov rbx, rax
  9018 00005CF8 58                      	pop rax
  9019 00005CF9 C60004                  	mov byte [rax], T_closure
  9020 00005CFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9021 00005D00 48C74009[0D5D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e4
  9022 00005D08 E982010000              	jmp .L_lambda_opt_end_01c7
  9023                                  .L_lambda_opt_code_00e4:	; lambda-opt body
  9024 00005D0D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9025 00005D13 7D0B                    	jge .L_lambda_simple_arity_check_ok_080a
  9026 00005D15 FF742410                	push qword [rsp + 8 * 2]
  9027 00005D19 6A02                    	push 2
  9028 00005D1B E9C9170100              	jmp L_error_incorrect_arity_simple
  9029                                  .L_lambda_simple_arity_check_ok_080a:
  9030 00005D20 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  9031 00005D25 4983E802                	sub r8, 2
  9032 00005D29 4C89C3                  	mov rbx,r8
  9033 00005D2C 4983F800                	cmp r8, 0
  9034 00005D30 7535                    	jne .L_lambda_opt_params_loop_02ac
  9035 00005D32 488B542410              	mov rdx, qword [rsp + 8 * 2]
  9036 00005D37 4883C203                	add rdx , 3
  9037 00005D3B 4883EC08                	sub rsp , 8
  9038 00005D3F 4889E1                  	mov rcx, rsp
  9039                                  .L_lambda_opt_stack_adjusted_02ab: ;pushing down the stack of the current function
  9040 00005D42 488B5908                	mov rbx, qword [rcx + 8 * 1]
  9041 00005D46 488919                  	mov qword[rcx] , rbx
  9042 00005D49 4883C108                	add rcx , 8
  9043 00005D4D 48FFCA                  	dec rdx
  9044 00005D50 4883FA00                	cmp rdx, 0
  9045 00005D54 75EC                    	jne .L_lambda_opt_stack_adjusted_02ab
  9046 00005D56 48FF442410              	inc qword [rsp + 8 * 2]
  9047 00005D5B 48C701[01000000]        	mov qword [rcx], sob_nil 
  9048 00005D62 E9A2000000              	jmp .L_lambda_opt_end_01c8
  9049                                  	.L_lambda_opt_params_loop_02ac:
  9050 00005D67 488B542410              	mov rdx, qword [rsp + 8*2]
  9051 00005D6C 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
  9052 00005D71 4C89C2                  	mov rdx, r8
  9053 00005D74 49B9-                   	mov r9, sob_nil
  9053 00005D76 [0100000000000000] 
  9054                                  	.L_lambda_opt_params_loop_02ab: ;loop for copying the opt into list
  9055 00005D7E BF11000000              	mov rdi, (1 + 8 + 8)
  9056 00005D83 E8A8170100              	call malloc
  9057 00005D88 C60021                  	mov byte[rax], T_pair
  9058 00005D8B 488B19                  	mov rbx, qword [rcx]
  9059 00005D8E 48895801                	mov SOB_PAIR_CAR(rax), rbx
  9060 00005D92 4C894809                	mov SOB_PAIR_CDR(rax), r9
  9061 00005D96 4989C1                  	mov r9, rax
  9062 00005D99 48FFCA                  	dec rdx
  9063 00005D9C 4883E908                	sub rcx, 8
  9064 00005DA0 4883FA00                	cmp rdx, 0
  9065 00005DA4 75D8                    	jne .L_lambda_opt_params_loop_02ab
  9066 00005DA6 488B542410              	mov rdx, qword [rsp + 8 * 2]
  9067 00005DAB 4889E0                  	mov rax, rsp
  9068 00005DAE 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
  9069 00005DB3 4C89C1                  	mov rcx, r8
  9070 00005DB6 48FFC9                  	dec rcx
  9071 00005DB9 4883C203                	add rdx, 3
  9072 00005DBD 4829CA                  	sub rdx,rcx
  9073 00005DC0 48C1E103                	shl rcx, 3
  9074                                  	.L_lambda_opt_stack_adjusted_02ac:
  9075 00005DC4 4883FA00                	cmp rdx, 0
  9076 00005DC8 7419                    	je .L_lambda_opt_params_end_01c8
  9077 00005DCA 4889D8                  	mov rax, rbx
  9078 00005DCD 4829C8                  	sub rax, rcx
  9079 00005DD0 488B30                  	mov rsi, qword [rax]
  9080 00005DD3 488933                  	mov [rbx], rsi
  9081 00005DD6 4883EB08                	sub rbx, 8
  9082 00005DDA 48FFCA                  	dec rdx
  9083 00005DDD 4883FA00                	cmp rdx, 0
  9084 00005DE1 75E1                    	jne .L_lambda_opt_stack_adjusted_02ac
  9085                                  	.L_lambda_opt_params_end_01c8:
  9086 00005DE3 4801CC                  	add rsp,rcx
  9087 00005DE6 BB02000000              	mov rbx, 2
  9088 00005DEB 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
  9089 00005DF0 4883C303                	add rbx,3
  9090 00005DF4 4C29C3                  	sub rbx,r8
  9091 00005DF7 48C1E303                	shl rbx, 3
  9092 00005DFB 4801E3                  	add rbx, rsp
  9093 00005DFE 4C890B                  	mov qword[rbx] , r9
  9094 00005E01 49FFC8                  	dec r8
  9095 00005E04 4C29442410              	sub qword [rsp + 8 * 2], r8
  9096                                  	.L_lambda_opt_end_01c8:
  9097 00005E09 C8000000                	enter 0, 0
  9098                                  	; preparing a tail-call
  9099 00005E0D 488B4530                	mov rax, PARAM(2)	; param ss
  9100 00005E11 50                      	push rax
  9101 00005E12 488B4528                	mov rax, PARAM(1)	; param unit
  9102 00005E16 50                      	push rax
  9103 00005E17 488B4520                	mov rax, PARAM(0)	; param f
  9104 00005E1B 50                      	push rax
  9105 00005E1C 6A03                    	push 3	; arg count
  9106 00005E1E 488B4510                	mov rax, ENV
  9107 00005E22 488B00                  	mov rax, qword [rax + 8 * 0]
  9108 00005E25 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9109 00005E28 488B00                  	mov rax, qword [rax]
  9110 00005E2B 803804                  	cmp byte [rax], T_closure
  9111 00005E2E 0F8553160100            	jne L_error_non_closure
  9112 00005E34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9113 00005E37 FF7508                  	push qword [rbp + 8 *1]
  9114 00005E3A 4989C0                  	mov r8, rax
  9115 00005E3D 488B5D18                	mov rbx, COUNT
  9116 00005E41 4883C303                	add rbx,3
  9117 00005E45 48C1E303                	shl rbx,3
  9118 00005E49 4801EB                  	add rbx, rbp
  9119 00005E4C 488B6D00                	mov rbp, [rbp]
  9120 00005E50 B900000000              	mov rcx,0
  9121 00005E55 BA06000000              	mov rdx, 6
  9122 00005E5A 4889D0                  	mov rax, rdx
  9123 00005E5D 48FFC8                  	dec rax
  9124 00005E60 48C1E003                	shl rax,3
  9125 00005E64 4801E0                  	add rax, rsp
  9126                                  	.L_tc_recycle_frame_loop_08fa:
  9127 00005E67 4839D1                  	cmp rcx, rdx
  9128 00005E6A 7414                    	je .L_tc_recycle_frame_done_08fa
  9129 00005E6C 4C8B08                  	mov r9, qword [rax]
  9130 00005E6F 4C890B                  	mov qword [rbx],r9
  9131 00005E72 4883E808                	sub rax,8
  9132 00005E76 4883EB08                	sub rbx,8
  9133 00005E7A 4883C101                	add rcx,1
  9134 00005E7E EBE7                    	jmp .L_tc_recycle_frame_loop_08fa
  9135                                  	.L_tc_recycle_frame_done_08fa:
  9136 00005E80 4883C308                	add rbx,8
  9137 00005E84 4889DC                  	mov rsp,rbx
  9138 00005E87 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9139                                  	LEAVE
    49 00005E8B C9                  <1>  leave
  9140 00005E8C C22800                  	ret AND_KILL_FRAME(3)
  9141                                  .L_lambda_opt_end_01c7:
  9142 00005E8F C9                      	leave
  9143 00005E90 C21800                  	ret AND_KILL_FRAME(1)
  9144                                  .L_lambda_simple_end_0725:	; new closure is in rax
  9145 00005E93 803804                  	cmp byte [rax], T_closure
  9146 00005E96 0F85EB150100            	jne L_error_non_closure
  9147 00005E9C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9148 00005E9F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9149 00005EA2 48890425[10140000]      	mov qword [free_var_86], rax
  9150 00005EAA 48B8-                   	mov rax, sob_void
  9150 00005EAC [0000000000000000] 
  9151                                  
  9152 00005EB4 4889C7                  	mov rdi, rax
  9153 00005EB7 E8C9180100              	call print_sexpr_if_not_void
  9154                                  	; preparing a non-tail-call
  9155 00005EBC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9156 00005EC1 E86A160100              	call malloc
  9157 00005EC6 50                      	push rax
  9158 00005EC7 BF00000000              	mov rdi, 8 * 0	; new rib
  9159 00005ECC E85F160100              	call malloc
  9160 00005ED1 50                      	push rax
  9161 00005ED2 BF08000000              	mov rdi, 8 * 1	; extended env
  9162 00005ED7 E854160100              	call malloc
  9163 00005EDC 488B7D10                	mov rdi, ENV
  9164 00005EE0 BE00000000              	mov rsi, 0
  9165 00005EE5 BA01000000              	mov rdx, 1
  9166                                  .L_lambda_simple_env_loop_0727:	; ext_env[i + 1] <-- env[i]
  9167 00005EEA 4883FE00                	cmp rsi, 0
  9168 00005EEE 7410                    	je .L_lambda_simple_env_end_0727
  9169 00005EF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9170 00005EF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9171 00005EF8 48FFC6                  	inc rsi
  9172 00005EFB 48FFC2                  	inc rdx
  9173 00005EFE EBEA                    	jmp .L_lambda_simple_env_loop_0727
  9174                                  .L_lambda_simple_env_end_0727:
  9175 00005F00 5B                      	pop rbx
  9176 00005F01 BE00000000              	mov rsi, 0
  9177                                  .L_lambda_simple_params_loop_0727:	; copy params
  9178 00005F06 4883FE00                	cmp rsi, 0
  9179 00005F0A 740E                    	je .L_lambda_simple_params_end_0727
  9180 00005F0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9181 00005F11 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9182 00005F15 48FFC6                  	inc rsi
  9183 00005F18 EBEC                    	jmp .L_lambda_simple_params_loop_0727
  9184                                  .L_lambda_simple_params_end_0727:
  9185 00005F1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9186 00005F1D 4889C3                  	mov rbx, rax
  9187 00005F20 58                      	pop rax
  9188 00005F21 C60004                  	mov byte [rax], T_closure
  9189 00005F24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9190 00005F28 48C74009[355F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0727
  9191 00005F30 E9A4000000              	jmp .L_lambda_simple_end_0727
  9192                                  .L_lambda_simple_code_0727:	; lambda-simple body
  9193 00005F35 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9194 00005F3B 740B                    	je .L_lambda_simple_arity_check_ok_080b
  9195 00005F3D FF742410                	push qword [rsp + 8 * 2]
  9196 00005F41 6A00                    	push 0
  9197 00005F43 E9A1150100              	jmp L_error_incorrect_arity_simple
  9198                                  .L_lambda_simple_arity_check_ok_080b:
  9199 00005F48 C8000000                	enter 0, 0
  9200                                  	; preparing a tail-call
  9201 00005F4C 48B8-                   	mov rax, L_constants + 2187
  9201 00005F4E [8B08000000000000] 
  9202 00005F56 50                      	push rax
  9203 00005F57 48B8-                   	mov rax, L_constants + 2178
  9203 00005F59 [8208000000000000] 
  9204 00005F61 50                      	push rax
  9205 00005F62 6A02                    	push 2	; arg count
  9206 00005F64 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
  9207 00005F6C 803805                  	cmp byte [rax], T_undefined
  9208 00005F6F 0F848E140100            	je L_error_fvar_undefined
  9209 00005F75 803804                  	cmp byte [rax], T_closure
  9210 00005F78 0F8509150100            	jne L_error_non_closure
  9211 00005F7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9212 00005F81 FF7508                  	push qword [rbp + 8 *1]
  9213 00005F84 4989C0                  	mov r8, rax
  9214 00005F87 488B5D18                	mov rbx, COUNT
  9215 00005F8B 4883C303                	add rbx,3
  9216 00005F8F 48C1E303                	shl rbx,3
  9217 00005F93 4801EB                  	add rbx, rbp
  9218 00005F96 488B6D00                	mov rbp, [rbp]
  9219 00005F9A B900000000              	mov rcx,0
  9220 00005F9F BA05000000              	mov rdx, 5
  9221 00005FA4 4889D0                  	mov rax, rdx
  9222 00005FA7 48FFC8                  	dec rax
  9223 00005FAA 48C1E003                	shl rax,3
  9224 00005FAE 4801E0                  	add rax, rsp
  9225                                  	.L_tc_recycle_frame_loop_08fb:
  9226 00005FB1 4839D1                  	cmp rcx, rdx
  9227 00005FB4 7414                    	je .L_tc_recycle_frame_done_08fb
  9228 00005FB6 4C8B08                  	mov r9, qword [rax]
  9229 00005FB9 4C890B                  	mov qword [rbx],r9
  9230 00005FBC 4883E808                	sub rax,8
  9231 00005FC0 4883EB08                	sub rbx,8
  9232 00005FC4 4883C101                	add rcx,1
  9233 00005FC8 EBE7                    	jmp .L_tc_recycle_frame_loop_08fb
  9234                                  	.L_tc_recycle_frame_done_08fb:
  9235 00005FCA 4883C308                	add rbx,8
  9236 00005FCE 4889DC                  	mov rsp,rbx
  9237 00005FD1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9238 00005FD5 C9                      	leave
  9239 00005FD6 C21000                  	ret AND_KILL_FRAME(0)
  9240                                  .L_lambda_simple_end_0727:	; new closure is in rax
  9241 00005FD9 50                      	push rax
  9242 00005FDA 6A01                    	push 1	; arg count
  9243 00005FDC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9244 00005FE1 E84A150100              	call malloc
  9245 00005FE6 50                      	push rax
  9246 00005FE7 BF00000000              	mov rdi, 8 * 0	; new rib
  9247 00005FEC E83F150100              	call malloc
  9248 00005FF1 50                      	push rax
  9249 00005FF2 BF08000000              	mov rdi, 8 * 1	; extended env
  9250 00005FF7 E834150100              	call malloc
  9251 00005FFC 488B7D10                	mov rdi, ENV
  9252 00006000 BE00000000              	mov rsi, 0
  9253 00006005 BA01000000              	mov rdx, 1
  9254                                  .L_lambda_simple_env_loop_0728:	; ext_env[i + 1] <-- env[i]
  9255 0000600A 4883FE00                	cmp rsi, 0
  9256 0000600E 7410                    	je .L_lambda_simple_env_end_0728
  9257 00006010 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9258 00006014 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9259 00006018 48FFC6                  	inc rsi
  9260 0000601B 48FFC2                  	inc rdx
  9261 0000601E EBEA                    	jmp .L_lambda_simple_env_loop_0728
  9262                                  .L_lambda_simple_env_end_0728:
  9263 00006020 5B                      	pop rbx
  9264 00006021 BE00000000              	mov rsi, 0
  9265                                  .L_lambda_simple_params_loop_0728:	; copy params
  9266 00006026 4883FE00                	cmp rsi, 0
  9267 0000602A 740E                    	je .L_lambda_simple_params_end_0728
  9268 0000602C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9269 00006031 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9270 00006035 48FFC6                  	inc rsi
  9271 00006038 EBEC                    	jmp .L_lambda_simple_params_loop_0728
  9272                                  .L_lambda_simple_params_end_0728:
  9273 0000603A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9274 0000603D 4889C3                  	mov rbx, rax
  9275 00006040 58                      	pop rax
  9276 00006041 C60004                  	mov byte [rax], T_closure
  9277 00006044 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9278 00006048 48C74009[55600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0728
  9279 00006050 E9340D0000              	jmp .L_lambda_simple_end_0728
  9280                                  .L_lambda_simple_code_0728:	; lambda-simple body
  9281 00006055 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9282 0000605B 740B                    	je .L_lambda_simple_arity_check_ok_080c
  9283 0000605D FF742410                	push qword [rsp + 8 * 2]
  9284 00006061 6A01                    	push 1
  9285 00006063 E981140100              	jmp L_error_incorrect_arity_simple
  9286                                  .L_lambda_simple_arity_check_ok_080c:
  9287 00006068 C8000000                	enter 0, 0
  9288                                  	; preparing a tail-call
  9289 0000606C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9290 00006071 E8BA140100              	call malloc
  9291 00006076 50                      	push rax
  9292 00006077 BF08000000              	mov rdi, 8 * 1	; new rib
  9293 0000607C E8AF140100              	call malloc
  9294 00006081 50                      	push rax
  9295 00006082 BF10000000              	mov rdi, 8 * 2	; extended env
  9296 00006087 E8A4140100              	call malloc
  9297 0000608C 488B7D10                	mov rdi, ENV
  9298 00006090 BE00000000              	mov rsi, 0
  9299 00006095 BA01000000              	mov rdx, 1
  9300                                  .L_lambda_simple_env_loop_0729:	; ext_env[i + 1] <-- env[i]
  9301 0000609A 4883FE01                	cmp rsi, 1
  9302 0000609E 7410                    	je .L_lambda_simple_env_end_0729
  9303 000060A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9304 000060A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9305 000060A8 48FFC6                  	inc rsi
  9306 000060AB 48FFC2                  	inc rdx
  9307 000060AE EBEA                    	jmp .L_lambda_simple_env_loop_0729
  9308                                  .L_lambda_simple_env_end_0729:
  9309 000060B0 5B                      	pop rbx
  9310 000060B1 BE00000000              	mov rsi, 0
  9311                                  .L_lambda_simple_params_loop_0729:	; copy params
  9312 000060B6 4883FE01                	cmp rsi, 1
  9313 000060BA 740E                    	je .L_lambda_simple_params_end_0729
  9314 000060BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9315 000060C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9316 000060C5 48FFC6                  	inc rsi
  9317 000060C8 EBEC                    	jmp .L_lambda_simple_params_loop_0729
  9318                                  .L_lambda_simple_params_end_0729:
  9319 000060CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9320 000060CD 4889C3                  	mov rbx, rax
  9321 000060D0 58                      	pop rax
  9322 000060D1 C60004                  	mov byte [rax], T_closure
  9323 000060D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9324 000060D8 48C74009[E5600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0729
  9325 000060E0 E996090000              	jmp .L_lambda_simple_end_0729
  9326                                  .L_lambda_simple_code_0729:	; lambda-simple body
  9327 000060E5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9328 000060EB 740B                    	je .L_lambda_simple_arity_check_ok_080d
  9329 000060ED FF742410                	push qword [rsp + 8 * 2]
  9330 000060F1 6A02                    	push 2
  9331 000060F3 E9F1130100              	jmp L_error_incorrect_arity_simple
  9332                                  .L_lambda_simple_arity_check_ok_080d:
  9333 000060F8 C8000000                	enter 0, 0
  9334                                  	; preparing a non-tail-call
  9335 000060FC 488B4520                	mov rax, PARAM(0)	; param a
  9336 00006100 50                      	push rax
  9337 00006101 6A01                    	push 1	; arg count
  9338 00006103 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
  9339 0000610B 803805                  	cmp byte [rax], T_undefined
  9340 0000610E 0F84EF120100            	je L_error_fvar_undefined
  9341 00006114 803804                  	cmp byte [rax], T_closure
  9342 00006117 0F856A130100            	jne L_error_non_closure
  9343 0000611D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9344 00006120 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9345 00006123 483D[02000000]          	cmp rax, sob_boolean_false
  9346 00006129 0F84D3020000            	je .L_if_else_04eb
  9347                                  	; preparing a non-tail-call
  9348 0000612F 488B4528                	mov rax, PARAM(1)	; param b
  9349 00006133 50                      	push rax
  9350 00006134 6A01                    	push 1	; arg count
  9351 00006136 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
  9352 0000613E 803805                  	cmp byte [rax], T_undefined
  9353 00006141 0F84BC120100            	je L_error_fvar_undefined
  9354 00006147 803804                  	cmp byte [rax], T_closure
  9355 0000614A 0F8537130100            	jne L_error_non_closure
  9356 00006150 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9357 00006153 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9358 00006156 483D[02000000]          	cmp rax, sob_boolean_false
  9359 0000615C 0F8482000000            	je .L_if_else_04e2
  9360                                  	; preparing a tail-call
  9361 00006162 488B4528                	mov rax, PARAM(1)	; param b
  9362 00006166 50                      	push rax
  9363 00006167 488B4520                	mov rax, PARAM(0)	; param a
  9364 0000616B 50                      	push rax
  9365 0000616C 6A02                    	push 2	; arg count
  9366 0000616E 488B0425[150F0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9367 00006176 803805                  	cmp byte [rax], T_undefined
  9368 00006179 0F8484120100            	je L_error_fvar_undefined
  9369 0000617F 803804                  	cmp byte [rax], T_closure
  9370 00006182 0F85FF120100            	jne L_error_non_closure
  9371 00006188 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9372 0000618B FF7508                  	push qword [rbp + 8 *1]
  9373 0000618E 4989C0                  	mov r8, rax
  9374 00006191 488B5D18                	mov rbx, COUNT
  9375 00006195 4883C303                	add rbx,3
  9376 00006199 48C1E303                	shl rbx,3
  9377 0000619D 4801EB                  	add rbx, rbp
  9378 000061A0 488B6D00                	mov rbp, [rbp]
  9379 000061A4 B900000000              	mov rcx,0
  9380 000061A9 BA05000000              	mov rdx, 5
  9381 000061AE 4889D0                  	mov rax, rdx
  9382 000061B1 48FFC8                  	dec rax
  9383 000061B4 48C1E003                	shl rax,3
  9384 000061B8 4801E0                  	add rax, rsp
  9385                                  	.L_tc_recycle_frame_loop_08fd:
  9386 000061BB 4839D1                  	cmp rcx, rdx
  9387 000061BE 7414                    	je .L_tc_recycle_frame_done_08fd
  9388 000061C0 4C8B08                  	mov r9, qword [rax]
  9389 000061C3 4C890B                  	mov qword [rbx],r9
  9390 000061C6 4883E808                	sub rax,8
  9391 000061CA 4883EB08                	sub rbx,8
  9392 000061CE 4883C101                	add rcx,1
  9393 000061D2 EBE7                    	jmp .L_tc_recycle_frame_loop_08fd
  9394                                  	.L_tc_recycle_frame_done_08fd:
  9395 000061D4 4883C308                	add rbx,8
  9396 000061D8 4889DC                  	mov rsp,rbx
  9397 000061DB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9398 000061DF E919020000              	jmp .L_if_end_0567
  9399                                  .L_if_else_04e2:
  9400                                  	; preparing a non-tail-call
  9401 000061E4 488B4528                	mov rax, PARAM(1)	; param b
  9402 000061E8 50                      	push rax
  9403 000061E9 6A01                    	push 1	; arg count
  9404 000061EB 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
  9405 000061F3 803805                  	cmp byte [rax], T_undefined
  9406 000061F6 0F8407120100            	je L_error_fvar_undefined
  9407 000061FC 803804                  	cmp byte [rax], T_closure
  9408 000061FF 0F8582120100            	jne L_error_non_closure
  9409 00006205 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9410 00006208 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9411 0000620B 483D[02000000]          	cmp rax, sob_boolean_false
  9412 00006211 0F84A5000000            	je .L_if_else_04e1
  9413                                  	; preparing a tail-call
  9414 00006217 488B4528                	mov rax, PARAM(1)	; param b
  9415 0000621B 50                      	push rax
  9416                                  	; preparing a non-tail-call
  9417 0000621C 488B4520                	mov rax, PARAM(0)	; param a
  9418 00006220 50                      	push rax
  9419 00006221 6A01                    	push 1	; arg count
  9420 00006223 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9421 0000622B 803805                  	cmp byte [rax], T_undefined
  9422 0000622E 0F84CF110100            	je L_error_fvar_undefined
  9423 00006234 803804                  	cmp byte [rax], T_closure
  9424 00006237 0F854A120100            	jne L_error_non_closure
  9425 0000623D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9426 00006240 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9427 00006243 50                      	push rax
  9428 00006244 6A02                    	push 2	; arg count
  9429 00006246 488B0425[F30E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9430 0000624E 803805                  	cmp byte [rax], T_undefined
  9431 00006251 0F84AC110100            	je L_error_fvar_undefined
  9432 00006257 803804                  	cmp byte [rax], T_closure
  9433 0000625A 0F8527120100            	jne L_error_non_closure
  9434 00006260 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9435 00006263 FF7508                  	push qword [rbp + 8 *1]
  9436 00006266 4989C0                  	mov r8, rax
  9437 00006269 488B5D18                	mov rbx, COUNT
  9438 0000626D 4883C303                	add rbx,3
  9439 00006271 48C1E303                	shl rbx,3
  9440 00006275 4801EB                  	add rbx, rbp
  9441 00006278 488B6D00                	mov rbp, [rbp]
  9442 0000627C B900000000              	mov rcx,0
  9443 00006281 BA05000000              	mov rdx, 5
  9444 00006286 4889D0                  	mov rax, rdx
  9445 00006289 48FFC8                  	dec rax
  9446 0000628C 48C1E003                	shl rax,3
  9447 00006290 4801E0                  	add rax, rsp
  9448                                  	.L_tc_recycle_frame_loop_08fe:
  9449 00006293 4839D1                  	cmp rcx, rdx
  9450 00006296 7414                    	je .L_tc_recycle_frame_done_08fe
  9451 00006298 4C8B08                  	mov r9, qword [rax]
  9452 0000629B 4C890B                  	mov qword [rbx],r9
  9453 0000629E 4883E808                	sub rax,8
  9454 000062A2 4883EB08                	sub rbx,8
  9455 000062A6 4883C101                	add rcx,1
  9456 000062AA EBE7                    	jmp .L_tc_recycle_frame_loop_08fe
  9457                                  	.L_tc_recycle_frame_done_08fe:
  9458 000062AC 4883C308                	add rbx,8
  9459 000062B0 4889DC                  	mov rsp,rbx
  9460 000062B3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9461 000062B7 E941010000              	jmp .L_if_end_0566
  9462                                  .L_if_else_04e1:
  9463                                  	; preparing a non-tail-call
  9464 000062BC 488B4528                	mov rax, PARAM(1)	; param b
  9465 000062C0 50                      	push rax
  9466 000062C1 6A01                    	push 1	; arg count
  9467 000062C3 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
  9468 000062CB 803805                  	cmp byte [rax], T_undefined
  9469 000062CE 0F842F110100            	je L_error_fvar_undefined
  9470 000062D4 803804                  	cmp byte [rax], T_closure
  9471 000062D7 0F85AA110100            	jne L_error_non_closure
  9472 000062DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9473 000062E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9474 000062E3 483D[02000000]          	cmp rax, sob_boolean_false
  9475 000062E9 0F84A2000000            	je .L_if_else_04e0
  9476                                  	; preparing a tail-call
  9477 000062EF 488B4528                	mov rax, PARAM(1)	; param b
  9478 000062F3 50                      	push rax
  9479                                  	; preparing a non-tail-call
  9480 000062F4 488B4520                	mov rax, PARAM(0)	; param a
  9481 000062F8 50                      	push rax
  9482 000062F9 6A01                    	push 1	; arg count
  9483 000062FB 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
  9484 00006303 803805                  	cmp byte [rax], T_undefined
  9485 00006306 0F84F7100100            	je L_error_fvar_undefined
  9486 0000630C 803804                  	cmp byte [rax], T_closure
  9487 0000630F 0F8572110100            	jne L_error_non_closure
  9488 00006315 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9489 00006318 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9490 0000631B 50                      	push rax
  9491 0000631C 6A02                    	push 2	; arg count
  9492 0000631E 488B0425[040F0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9493 00006326 803805                  	cmp byte [rax], T_undefined
  9494 00006329 0F84D4100100            	je L_error_fvar_undefined
  9495 0000632F 803804                  	cmp byte [rax], T_closure
  9496 00006332 0F854F110100            	jne L_error_non_closure
  9497 00006338 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9498 0000633B FF7508                  	push qword [rbp + 8 *1]
  9499 0000633E 4989C0                  	mov r8, rax
  9500 00006341 488B5D18                	mov rbx, COUNT
  9501 00006345 4883C303                	add rbx,3
  9502 00006349 48C1E303                	shl rbx,3
  9503 0000634D 4801EB                  	add rbx, rbp
  9504 00006350 488B6D00                	mov rbp, [rbp]
  9505 00006354 B900000000              	mov rcx,0
  9506 00006359 BA05000000              	mov rdx, 5
  9507 0000635E 4889D0                  	mov rax, rdx
  9508 00006361 48FFC8                  	dec rax
  9509 00006364 48C1E003                	shl rax,3
  9510 00006368 4801E0                  	add rax, rsp
  9511                                  	.L_tc_recycle_frame_loop_08ff:
  9512 0000636B 4839D1                  	cmp rcx, rdx
  9513 0000636E 7414                    	je .L_tc_recycle_frame_done_08ff
  9514 00006370 4C8B08                  	mov r9, qword [rax]
  9515 00006373 4C890B                  	mov qword [rbx],r9
  9516 00006376 4883E808                	sub rax,8
  9517 0000637A 4883EB08                	sub rbx,8
  9518 0000637E 4883C101                	add rcx,1
  9519 00006382 EBE7                    	jmp .L_tc_recycle_frame_loop_08ff
  9520                                  	.L_tc_recycle_frame_done_08ff:
  9521 00006384 4883C308                	add rbx,8
  9522 00006388 4889DC                  	mov rsp,rbx
  9523 0000638B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9524 0000638F EB6C                    	jmp .L_if_end_0565
  9525                                  .L_if_else_04e0:
  9526                                  	; preparing a tail-call
  9527 00006391 6A00                    	push 0	; arg count
  9528 00006393 488B4510                	mov rax, ENV
  9529 00006397 488B00                  	mov rax, qword [rax + 8 * 0]
  9530 0000639A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9531 0000639D 803804                  	cmp byte [rax], T_closure
  9532 000063A0 0F85E1100100            	jne L_error_non_closure
  9533 000063A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9534 000063A9 FF7508                  	push qword [rbp + 8 *1]
  9535 000063AC 4989C0                  	mov r8, rax
  9536 000063AF 488B5D18                	mov rbx, COUNT
  9537 000063B3 4883C303                	add rbx,3
  9538 000063B7 48C1E303                	shl rbx,3
  9539 000063BB 4801EB                  	add rbx, rbp
  9540 000063BE 488B6D00                	mov rbp, [rbp]
  9541 000063C2 B900000000              	mov rcx,0
  9542 000063C7 BA03000000              	mov rdx, 3
  9543 000063CC 4889D0                  	mov rax, rdx
  9544 000063CF 48FFC8                  	dec rax
  9545 000063D2 48C1E003                	shl rax,3
  9546 000063D6 4801E0                  	add rax, rsp
  9547                                  	.L_tc_recycle_frame_loop_0900:
  9548 000063D9 4839D1                  	cmp rcx, rdx
  9549 000063DC 7414                    	je .L_tc_recycle_frame_done_0900
  9550 000063DE 4C8B08                  	mov r9, qword [rax]
  9551 000063E1 4C890B                  	mov qword [rbx],r9
  9552 000063E4 4883E808                	sub rax,8
  9553 000063E8 4883EB08                	sub rbx,8
  9554 000063EC 4883C101                	add rcx,1
  9555 000063F0 EBE7                    	jmp .L_tc_recycle_frame_loop_0900
  9556                                  	.L_tc_recycle_frame_done_0900:
  9557 000063F2 4883C308                	add rbx,8
  9558 000063F6 4889DC                  	mov rsp,rbx
  9559 000063F9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9560                                  .L_if_end_0565:
  9561                                  .L_if_end_0566:
  9562                                  .L_if_end_0567:
  9563 000063FD E975060000              	jmp .L_if_end_0570
  9564                                  .L_if_else_04eb:
  9565                                  	; preparing a non-tail-call
  9566 00006402 488B4520                	mov rax, PARAM(0)	; param a
  9567 00006406 50                      	push rax
  9568 00006407 6A01                    	push 1	; arg count
  9569 00006409 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
  9570 00006411 803805                  	cmp byte [rax], T_undefined
  9571 00006414 0F84E90F0100            	je L_error_fvar_undefined
  9572 0000641A 803804                  	cmp byte [rax], T_closure
  9573 0000641D 0F8564100100            	jne L_error_non_closure
  9574 00006423 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9575 00006426 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9576 00006429 483D[02000000]          	cmp rax, sob_boolean_false
  9577 0000642F 0F84D3020000            	je .L_if_else_04ea
  9578                                  	; preparing a non-tail-call
  9579 00006435 488B4528                	mov rax, PARAM(1)	; param b
  9580 00006439 50                      	push rax
  9581 0000643A 6A01                    	push 1	; arg count
  9582 0000643C 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
  9583 00006444 803805                  	cmp byte [rax], T_undefined
  9584 00006447 0F84B60F0100            	je L_error_fvar_undefined
  9585 0000644D 803804                  	cmp byte [rax], T_closure
  9586 00006450 0F8531100100            	jne L_error_non_closure
  9587 00006456 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9588 00006459 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9589 0000645C 483D[02000000]          	cmp rax, sob_boolean_false
  9590 00006462 0F84A5000000            	je .L_if_else_04e5
  9591                                  	; preparing a tail-call
  9592                                  	; preparing a non-tail-call
  9593 00006468 488B4528                	mov rax, PARAM(1)	; param b
  9594 0000646C 50                      	push rax
  9595 0000646D 6A01                    	push 1	; arg count
  9596 0000646F 488B0425[36100000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9597 00006477 803805                  	cmp byte [rax], T_undefined
  9598 0000647A 0F84830F0100            	je L_error_fvar_undefined
  9599 00006480 803804                  	cmp byte [rax], T_closure
  9600 00006483 0F85FE0F0100            	jne L_error_non_closure
  9601 00006489 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9602 0000648C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9603 0000648F 50                      	push rax
  9604 00006490 488B4520                	mov rax, PARAM(0)	; param a
  9605 00006494 50                      	push rax
  9606 00006495 6A02                    	push 2	; arg count
  9607 00006497 488B0425[F30E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9608 0000649F 803805                  	cmp byte [rax], T_undefined
  9609 000064A2 0F845B0F0100            	je L_error_fvar_undefined
  9610 000064A8 803804                  	cmp byte [rax], T_closure
  9611 000064AB 0F85D60F0100            	jne L_error_non_closure
  9612 000064B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9613 000064B4 FF7508                  	push qword [rbp + 8 *1]
  9614 000064B7 4989C0                  	mov r8, rax
  9615 000064BA 488B5D18                	mov rbx, COUNT
  9616 000064BE 4883C303                	add rbx,3
  9617 000064C2 48C1E303                	shl rbx,3
  9618 000064C6 4801EB                  	add rbx, rbp
  9619 000064C9 488B6D00                	mov rbp, [rbp]
  9620 000064CD B900000000              	mov rcx,0
  9621 000064D2 BA05000000              	mov rdx, 5
  9622 000064D7 4889D0                  	mov rax, rdx
  9623 000064DA 48FFC8                  	dec rax
  9624 000064DD 48C1E003                	shl rax,3
  9625 000064E1 4801E0                  	add rax, rsp
  9626                                  	.L_tc_recycle_frame_loop_0901:
  9627 000064E4 4839D1                  	cmp rcx, rdx
  9628 000064E7 7414                    	je .L_tc_recycle_frame_done_0901
  9629 000064E9 4C8B08                  	mov r9, qword [rax]
  9630 000064EC 4C890B                  	mov qword [rbx],r9
  9631 000064EF 4883E808                	sub rax,8
  9632 000064F3 4883EB08                	sub rbx,8
  9633 000064F7 4883C101                	add rcx,1
  9634 000064FB EBE7                    	jmp .L_tc_recycle_frame_loop_0901
  9635                                  	.L_tc_recycle_frame_done_0901:
  9636 000064FD 4883C308                	add rbx,8
  9637 00006501 4889DC                  	mov rsp,rbx
  9638 00006504 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9639 00006508 E9F6010000              	jmp .L_if_end_056a
  9640                                  .L_if_else_04e5:
  9641                                  	; preparing a non-tail-call
  9642 0000650D 488B4528                	mov rax, PARAM(1)	; param b
  9643 00006511 50                      	push rax
  9644 00006512 6A01                    	push 1	; arg count
  9645 00006514 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
  9646 0000651C 803805                  	cmp byte [rax], T_undefined
  9647 0000651F 0F84DE0E0100            	je L_error_fvar_undefined
  9648 00006525 803804                  	cmp byte [rax], T_closure
  9649 00006528 0F85590F0100            	jne L_error_non_closure
  9650 0000652E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9651 00006531 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9652 00006534 483D[02000000]          	cmp rax, sob_boolean_false
  9653 0000653A 0F8482000000            	je .L_if_else_04e4
  9654                                  	; preparing a tail-call
  9655 00006540 488B4528                	mov rax, PARAM(1)	; param b
  9656 00006544 50                      	push rax
  9657 00006545 488B4520                	mov rax, PARAM(0)	; param a
  9658 00006549 50                      	push rax
  9659 0000654A 6A02                    	push 2	; arg count
  9660 0000654C 488B0425[F30E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9661 00006554 803805                  	cmp byte [rax], T_undefined
  9662 00006557 0F84A60E0100            	je L_error_fvar_undefined
  9663 0000655D 803804                  	cmp byte [rax], T_closure
  9664 00006560 0F85210F0100            	jne L_error_non_closure
  9665 00006566 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9666 00006569 FF7508                  	push qword [rbp + 8 *1]
  9667 0000656C 4989C0                  	mov r8, rax
  9668 0000656F 488B5D18                	mov rbx, COUNT
  9669 00006573 4883C303                	add rbx,3
  9670 00006577 48C1E303                	shl rbx,3
  9671 0000657B 4801EB                  	add rbx, rbp
  9672 0000657E 488B6D00                	mov rbp, [rbp]
  9673 00006582 B900000000              	mov rcx,0
  9674 00006587 BA05000000              	mov rdx, 5
  9675 0000658C 4889D0                  	mov rax, rdx
  9676 0000658F 48FFC8                  	dec rax
  9677 00006592 48C1E003                	shl rax,3
  9678 00006596 4801E0                  	add rax, rsp
  9679                                  	.L_tc_recycle_frame_loop_0902:
  9680 00006599 4839D1                  	cmp rcx, rdx
  9681 0000659C 7414                    	je .L_tc_recycle_frame_done_0902
  9682 0000659E 4C8B08                  	mov r9, qword [rax]
  9683 000065A1 4C890B                  	mov qword [rbx],r9
  9684 000065A4 4883E808                	sub rax,8
  9685 000065A8 4883EB08                	sub rbx,8
  9686 000065AC 4883C101                	add rcx,1
  9687 000065B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0902
  9688                                  	.L_tc_recycle_frame_done_0902:
  9689 000065B2 4883C308                	add rbx,8
  9690 000065B6 4889DC                  	mov rsp,rbx
  9691 000065B9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9692 000065BD E941010000              	jmp .L_if_end_0569
  9693                                  .L_if_else_04e4:
  9694                                  	; preparing a non-tail-call
  9695 000065C2 488B4528                	mov rax, PARAM(1)	; param b
  9696 000065C6 50                      	push rax
  9697 000065C7 6A01                    	push 1	; arg count
  9698 000065C9 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
  9699 000065D1 803805                  	cmp byte [rax], T_undefined
  9700 000065D4 0F84290E0100            	je L_error_fvar_undefined
  9701 000065DA 803804                  	cmp byte [rax], T_closure
  9702 000065DD 0F85A40E0100            	jne L_error_non_closure
  9703 000065E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9704 000065E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9705 000065E9 483D[02000000]          	cmp rax, sob_boolean_false
  9706 000065EF 0F84A2000000            	je .L_if_else_04e3
  9707                                  	; preparing a tail-call
  9708 000065F5 488B4528                	mov rax, PARAM(1)	; param b
  9709 000065F9 50                      	push rax
  9710                                  	; preparing a non-tail-call
  9711 000065FA 488B4520                	mov rax, PARAM(0)	; param a
  9712 000065FE 50                      	push rax
  9713 000065FF 6A01                    	push 1	; arg count
  9714 00006601 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9715 00006609 803805                  	cmp byte [rax], T_undefined
  9716 0000660C 0F84F10D0100            	je L_error_fvar_undefined
  9717 00006612 803804                  	cmp byte [rax], T_closure
  9718 00006615 0F856C0E0100            	jne L_error_non_closure
  9719 0000661B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9720 0000661E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9721 00006621 50                      	push rax
  9722 00006622 6A02                    	push 2	; arg count
  9723 00006624 488B0425[040F0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9724 0000662C 803805                  	cmp byte [rax], T_undefined
  9725 0000662F 0F84CE0D0100            	je L_error_fvar_undefined
  9726 00006635 803804                  	cmp byte [rax], T_closure
  9727 00006638 0F85490E0100            	jne L_error_non_closure
  9728 0000663E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9729 00006641 FF7508                  	push qword [rbp + 8 *1]
  9730 00006644 4989C0                  	mov r8, rax
  9731 00006647 488B5D18                	mov rbx, COUNT
  9732 0000664B 4883C303                	add rbx,3
  9733 0000664F 48C1E303                	shl rbx,3
  9734 00006653 4801EB                  	add rbx, rbp
  9735 00006656 488B6D00                	mov rbp, [rbp]
  9736 0000665A B900000000              	mov rcx,0
  9737 0000665F BA05000000              	mov rdx, 5
  9738 00006664 4889D0                  	mov rax, rdx
  9739 00006667 48FFC8                  	dec rax
  9740 0000666A 48C1E003                	shl rax,3
  9741 0000666E 4801E0                  	add rax, rsp
  9742                                  	.L_tc_recycle_frame_loop_0903:
  9743 00006671 4839D1                  	cmp rcx, rdx
  9744 00006674 7414                    	je .L_tc_recycle_frame_done_0903
  9745 00006676 4C8B08                  	mov r9, qword [rax]
  9746 00006679 4C890B                  	mov qword [rbx],r9
  9747 0000667C 4883E808                	sub rax,8
  9748 00006680 4883EB08                	sub rbx,8
  9749 00006684 4883C101                	add rcx,1
  9750 00006688 EBE7                    	jmp .L_tc_recycle_frame_loop_0903
  9751                                  	.L_tc_recycle_frame_done_0903:
  9752 0000668A 4883C308                	add rbx,8
  9753 0000668E 4889DC                  	mov rsp,rbx
  9754 00006691 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9755 00006695 EB6C                    	jmp .L_if_end_0568
  9756                                  .L_if_else_04e3:
  9757                                  	; preparing a tail-call
  9758 00006697 6A00                    	push 0	; arg count
  9759 00006699 488B4510                	mov rax, ENV
  9760 0000669D 488B00                  	mov rax, qword [rax + 8 * 0]
  9761 000066A0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9762 000066A3 803804                  	cmp byte [rax], T_closure
  9763 000066A6 0F85DB0D0100            	jne L_error_non_closure
  9764 000066AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9765 000066AF FF7508                  	push qword [rbp + 8 *1]
  9766 000066B2 4989C0                  	mov r8, rax
  9767 000066B5 488B5D18                	mov rbx, COUNT
  9768 000066B9 4883C303                	add rbx,3
  9769 000066BD 48C1E303                	shl rbx,3
  9770 000066C1 4801EB                  	add rbx, rbp
  9771 000066C4 488B6D00                	mov rbp, [rbp]
  9772 000066C8 B900000000              	mov rcx,0
  9773 000066CD BA03000000              	mov rdx, 3
  9774 000066D2 4889D0                  	mov rax, rdx
  9775 000066D5 48FFC8                  	dec rax
  9776 000066D8 48C1E003                	shl rax,3
  9777 000066DC 4801E0                  	add rax, rsp
  9778                                  	.L_tc_recycle_frame_loop_0904:
  9779 000066DF 4839D1                  	cmp rcx, rdx
  9780 000066E2 7414                    	je .L_tc_recycle_frame_done_0904
  9781 000066E4 4C8B08                  	mov r9, qword [rax]
  9782 000066E7 4C890B                  	mov qword [rbx],r9
  9783 000066EA 4883E808                	sub rax,8
  9784 000066EE 4883EB08                	sub rbx,8
  9785 000066F2 4883C101                	add rcx,1
  9786 000066F6 EBE7                    	jmp .L_tc_recycle_frame_loop_0904
  9787                                  	.L_tc_recycle_frame_done_0904:
  9788 000066F8 4883C308                	add rbx,8
  9789 000066FC 4889DC                  	mov rsp,rbx
  9790 000066FF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9791                                  .L_if_end_0568:
  9792                                  .L_if_end_0569:
  9793                                  .L_if_end_056a:
  9794 00006703 E96F030000              	jmp .L_if_end_056f
  9795                                  .L_if_else_04ea:
  9796                                  	; preparing a non-tail-call
  9797 00006708 488B4520                	mov rax, PARAM(0)	; param a
  9798 0000670C 50                      	push rax
  9799 0000670D 6A01                    	push 1	; arg count
  9800 0000670F 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
  9801 00006717 803805                  	cmp byte [rax], T_undefined
  9802 0000671A 0F84E30C0100            	je L_error_fvar_undefined
  9803 00006720 803804                  	cmp byte [rax], T_closure
  9804 00006723 0F855E0D0100            	jne L_error_non_closure
  9805 00006729 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9806 0000672C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9807 0000672F 483D[02000000]          	cmp rax, sob_boolean_false
  9808 00006735 0F84D0020000            	je .L_if_else_04e9
  9809                                  	; preparing a non-tail-call
  9810 0000673B 488B4528                	mov rax, PARAM(1)	; param b
  9811 0000673F 50                      	push rax
  9812 00006740 6A01                    	push 1	; arg count
  9813 00006742 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
  9814 0000674A 803805                  	cmp byte [rax], T_undefined
  9815 0000674D 0F84B00C0100            	je L_error_fvar_undefined
  9816 00006753 803804                  	cmp byte [rax], T_closure
  9817 00006756 0F852B0D0100            	jne L_error_non_closure
  9818 0000675C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9819 0000675F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9820 00006762 483D[02000000]          	cmp rax, sob_boolean_false
  9821 00006768 0F84A5000000            	je .L_if_else_04e8
  9822                                  	; preparing a tail-call
  9823                                  	; preparing a non-tail-call
  9824 0000676E 488B4528                	mov rax, PARAM(1)	; param b
  9825 00006772 50                      	push rax
  9826 00006773 6A01                    	push 1	; arg count
  9827 00006775 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
  9828 0000677D 803805                  	cmp byte [rax], T_undefined
  9829 00006780 0F847D0C0100            	je L_error_fvar_undefined
  9830 00006786 803804                  	cmp byte [rax], T_closure
  9831 00006789 0F85F80C0100            	jne L_error_non_closure
  9832 0000678F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9833 00006792 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9834 00006795 50                      	push rax
  9835 00006796 488B4520                	mov rax, PARAM(0)	; param a
  9836 0000679A 50                      	push rax
  9837 0000679B 6A02                    	push 2	; arg count
  9838 0000679D 488B0425[040F0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9839 000067A5 803805                  	cmp byte [rax], T_undefined
  9840 000067A8 0F84550C0100            	je L_error_fvar_undefined
  9841 000067AE 803804                  	cmp byte [rax], T_closure
  9842 000067B1 0F85D00C0100            	jne L_error_non_closure
  9843 000067B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9844 000067BA FF7508                  	push qword [rbp + 8 *1]
  9845 000067BD 4989C0                  	mov r8, rax
  9846 000067C0 488B5D18                	mov rbx, COUNT
  9847 000067C4 4883C303                	add rbx,3
  9848 000067C8 48C1E303                	shl rbx,3
  9849 000067CC 4801EB                  	add rbx, rbp
  9850 000067CF 488B6D00                	mov rbp, [rbp]
  9851 000067D3 B900000000              	mov rcx,0
  9852 000067D8 BA05000000              	mov rdx, 5
  9853 000067DD 4889D0                  	mov rax, rdx
  9854 000067E0 48FFC8                  	dec rax
  9855 000067E3 48C1E003                	shl rax,3
  9856 000067E7 4801E0                  	add rax, rsp
  9857                                  	.L_tc_recycle_frame_loop_0905:
  9858 000067EA 4839D1                  	cmp rcx, rdx
  9859 000067ED 7414                    	je .L_tc_recycle_frame_done_0905
  9860 000067EF 4C8B08                  	mov r9, qword [rax]
  9861 000067F2 4C890B                  	mov qword [rbx],r9
  9862 000067F5 4883E808                	sub rax,8
  9863 000067F9 4883EB08                	sub rbx,8
  9864 000067FD 4883C101                	add rcx,1
  9865 00006801 EBE7                    	jmp .L_tc_recycle_frame_loop_0905
  9866                                  	.L_tc_recycle_frame_done_0905:
  9867 00006803 4883C308                	add rbx,8
  9868 00006807 4889DC                  	mov rsp,rbx
  9869 0000680A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9870 0000680E E9F6010000              	jmp .L_if_end_056d
  9871                                  .L_if_else_04e8:
  9872                                  	; preparing a non-tail-call
  9873 00006813 488B4528                	mov rax, PARAM(1)	; param b
  9874 00006817 50                      	push rax
  9875 00006818 6A01                    	push 1	; arg count
  9876 0000681A 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
  9877 00006822 803805                  	cmp byte [rax], T_undefined
  9878 00006825 0F84D80B0100            	je L_error_fvar_undefined
  9879 0000682B 803804                  	cmp byte [rax], T_closure
  9880 0000682E 0F85530C0100            	jne L_error_non_closure
  9881 00006834 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9882 00006837 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9883 0000683A 483D[02000000]          	cmp rax, sob_boolean_false
  9884 00006840 0F84A5000000            	je .L_if_else_04e7
  9885                                  	; preparing a tail-call
  9886                                  	; preparing a non-tail-call
  9887 00006846 488B4528                	mov rax, PARAM(1)	; param b
  9888 0000684A 50                      	push rax
  9889 0000684B 6A01                    	push 1	; arg count
  9890 0000684D 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9891 00006855 803805                  	cmp byte [rax], T_undefined
  9892 00006858 0F84A50B0100            	je L_error_fvar_undefined
  9893 0000685E 803804                  	cmp byte [rax], T_closure
  9894 00006861 0F85200C0100            	jne L_error_non_closure
  9895 00006867 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9896 0000686A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9897 0000686D 50                      	push rax
  9898 0000686E 488B4520                	mov rax, PARAM(0)	; param a
  9899 00006872 50                      	push rax
  9900 00006873 6A02                    	push 2	; arg count
  9901 00006875 488B0425[040F0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9902 0000687D 803805                  	cmp byte [rax], T_undefined
  9903 00006880 0F847D0B0100            	je L_error_fvar_undefined
  9904 00006886 803804                  	cmp byte [rax], T_closure
  9905 00006889 0F85F80B0100            	jne L_error_non_closure
  9906 0000688F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9907 00006892 FF7508                  	push qword [rbp + 8 *1]
  9908 00006895 4989C0                  	mov r8, rax
  9909 00006898 488B5D18                	mov rbx, COUNT
  9910 0000689C 4883C303                	add rbx,3
  9911 000068A0 48C1E303                	shl rbx,3
  9912 000068A4 4801EB                  	add rbx, rbp
  9913 000068A7 488B6D00                	mov rbp, [rbp]
  9914 000068AB B900000000              	mov rcx,0
  9915 000068B0 BA05000000              	mov rdx, 5
  9916 000068B5 4889D0                  	mov rax, rdx
  9917 000068B8 48FFC8                  	dec rax
  9918 000068BB 48C1E003                	shl rax,3
  9919 000068BF 4801E0                  	add rax, rsp
  9920                                  	.L_tc_recycle_frame_loop_0906:
  9921 000068C2 4839D1                  	cmp rcx, rdx
  9922 000068C5 7414                    	je .L_tc_recycle_frame_done_0906
  9923 000068C7 4C8B08                  	mov r9, qword [rax]
  9924 000068CA 4C890B                  	mov qword [rbx],r9
  9925 000068CD 4883E808                	sub rax,8
  9926 000068D1 4883EB08                	sub rbx,8
  9927 000068D5 4883C101                	add rcx,1
  9928 000068D9 EBE7                    	jmp .L_tc_recycle_frame_loop_0906
  9929                                  	.L_tc_recycle_frame_done_0906:
  9930 000068DB 4883C308                	add rbx,8
  9931 000068DF 4889DC                  	mov rsp,rbx
  9932 000068E2 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9933 000068E6 E91E010000              	jmp .L_if_end_056c
  9934                                  .L_if_else_04e7:
  9935                                  	; preparing a non-tail-call
  9936 000068EB 488B4528                	mov rax, PARAM(1)	; param b
  9937 000068EF 50                      	push rax
  9938 000068F0 6A01                    	push 1	; arg count
  9939 000068F2 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
  9940 000068FA 803805                  	cmp byte [rax], T_undefined
  9941 000068FD 0F84000B0100            	je L_error_fvar_undefined
  9942 00006903 803804                  	cmp byte [rax], T_closure
  9943 00006906 0F857B0B0100            	jne L_error_non_closure
  9944 0000690C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9945 0000690F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9946 00006912 483D[02000000]          	cmp rax, sob_boolean_false
  9947 00006918 0F847F000000            	je .L_if_else_04e6
  9948                                  	; preparing a tail-call
  9949 0000691E 488B4528                	mov rax, PARAM(1)	; param b
  9950 00006922 50                      	push rax
  9951 00006923 488B4520                	mov rax, PARAM(0)	; param a
  9952 00006927 50                      	push rax
  9953 00006928 6A02                    	push 2	; arg count
  9954 0000692A 488B0425[040F0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9955 00006932 803805                  	cmp byte [rax], T_undefined
  9956 00006935 0F84C80A0100            	je L_error_fvar_undefined
  9957 0000693B 803804                  	cmp byte [rax], T_closure
  9958 0000693E 0F85430B0100            	jne L_error_non_closure
  9959 00006944 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9960 00006947 FF7508                  	push qword [rbp + 8 *1]
  9961 0000694A 4989C0                  	mov r8, rax
  9962 0000694D 488B5D18                	mov rbx, COUNT
  9963 00006951 4883C303                	add rbx,3
  9964 00006955 48C1E303                	shl rbx,3
  9965 00006959 4801EB                  	add rbx, rbp
  9966 0000695C 488B6D00                	mov rbp, [rbp]
  9967 00006960 B900000000              	mov rcx,0
  9968 00006965 BA05000000              	mov rdx, 5
  9969 0000696A 4889D0                  	mov rax, rdx
  9970 0000696D 48FFC8                  	dec rax
  9971 00006970 48C1E003                	shl rax,3
  9972 00006974 4801E0                  	add rax, rsp
  9973                                  	.L_tc_recycle_frame_loop_0907:
  9974 00006977 4839D1                  	cmp rcx, rdx
  9975 0000697A 7414                    	je .L_tc_recycle_frame_done_0907
  9976 0000697C 4C8B08                  	mov r9, qword [rax]
  9977 0000697F 4C890B                  	mov qword [rbx],r9
  9978 00006982 4883E808                	sub rax,8
  9979 00006986 4883EB08                	sub rbx,8
  9980 0000698A 4883C101                	add rcx,1
  9981 0000698E EBE7                    	jmp .L_tc_recycle_frame_loop_0907
  9982                                  	.L_tc_recycle_frame_done_0907:
  9983 00006990 4883C308                	add rbx,8
  9984 00006994 4889DC                  	mov rsp,rbx
  9985 00006997 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
  9986 0000699B EB6C                    	jmp .L_if_end_056b
  9987                                  .L_if_else_04e6:
  9988                                  	; preparing a tail-call
  9989 0000699D 6A00                    	push 0	; arg count
  9990 0000699F 488B4510                	mov rax, ENV
  9991 000069A3 488B00                  	mov rax, qword [rax + 8 * 0]
  9992 000069A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9993 000069A9 803804                  	cmp byte [rax], T_closure
  9994 000069AC 0F85D50A0100            	jne L_error_non_closure
  9995 000069B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9996 000069B5 FF7508                  	push qword [rbp + 8 *1]
  9997 000069B8 4989C0                  	mov r8, rax
  9998 000069BB 488B5D18                	mov rbx, COUNT
  9999 000069BF 4883C303                	add rbx,3
 10000 000069C3 48C1E303                	shl rbx,3
 10001 000069C7 4801EB                  	add rbx, rbp
 10002 000069CA 488B6D00                	mov rbp, [rbp]
 10003 000069CE B900000000              	mov rcx,0
 10004 000069D3 BA03000000              	mov rdx, 3
 10005 000069D8 4889D0                  	mov rax, rdx
 10006 000069DB 48FFC8                  	dec rax
 10007 000069DE 48C1E003                	shl rax,3
 10008 000069E2 4801E0                  	add rax, rsp
 10009                                  	.L_tc_recycle_frame_loop_0908:
 10010 000069E5 4839D1                  	cmp rcx, rdx
 10011 000069E8 7414                    	je .L_tc_recycle_frame_done_0908
 10012 000069EA 4C8B08                  	mov r9, qword [rax]
 10013 000069ED 4C890B                  	mov qword [rbx],r9
 10014 000069F0 4883E808                	sub rax,8
 10015 000069F4 4883EB08                	sub rbx,8
 10016 000069F8 4883C101                	add rcx,1
 10017 000069FC EBE7                    	jmp .L_tc_recycle_frame_loop_0908
 10018                                  	.L_tc_recycle_frame_done_0908:
 10019 000069FE 4883C308                	add rbx,8
 10020 00006A02 4889DC                  	mov rsp,rbx
 10021 00006A05 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10022                                  .L_if_end_056b:
 10023                                  .L_if_end_056c:
 10024                                  .L_if_end_056d:
 10025 00006A09 EB6C                    	jmp .L_if_end_056e
 10026                                  .L_if_else_04e9:
 10027                                  	; preparing a tail-call
 10028 00006A0B 6A00                    	push 0	; arg count
 10029 00006A0D 488B4510                	mov rax, ENV
 10030 00006A11 488B00                  	mov rax, qword [rax + 8 * 0]
 10031 00006A14 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10032 00006A17 803804                  	cmp byte [rax], T_closure
 10033 00006A1A 0F85670A0100            	jne L_error_non_closure
 10034 00006A20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10035 00006A23 FF7508                  	push qword [rbp + 8 *1]
 10036 00006A26 4989C0                  	mov r8, rax
 10037 00006A29 488B5D18                	mov rbx, COUNT
 10038 00006A2D 4883C303                	add rbx,3
 10039 00006A31 48C1E303                	shl rbx,3
 10040 00006A35 4801EB                  	add rbx, rbp
 10041 00006A38 488B6D00                	mov rbp, [rbp]
 10042 00006A3C B900000000              	mov rcx,0
 10043 00006A41 BA03000000              	mov rdx, 3
 10044 00006A46 4889D0                  	mov rax, rdx
 10045 00006A49 48FFC8                  	dec rax
 10046 00006A4C 48C1E003                	shl rax,3
 10047 00006A50 4801E0                  	add rax, rsp
 10048                                  	.L_tc_recycle_frame_loop_0909:
 10049 00006A53 4839D1                  	cmp rcx, rdx
 10050 00006A56 7414                    	je .L_tc_recycle_frame_done_0909
 10051 00006A58 4C8B08                  	mov r9, qword [rax]
 10052 00006A5B 4C890B                  	mov qword [rbx],r9
 10053 00006A5E 4883E808                	sub rax,8
 10054 00006A62 4883EB08                	sub rbx,8
 10055 00006A66 4883C101                	add rcx,1
 10056 00006A6A EBE7                    	jmp .L_tc_recycle_frame_loop_0909
 10057                                  	.L_tc_recycle_frame_done_0909:
 10058 00006A6C 4883C308                	add rbx,8
 10059 00006A70 4889DC                  	mov rsp,rbx
 10060 00006A73 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10061                                  .L_if_end_056e:
 10062                                  .L_if_end_056f:
 10063                                  .L_if_end_0570:
 10064 00006A77 C9                      	leave
 10065 00006A78 C22000                  	ret AND_KILL_FRAME(2)
 10066                                  .L_lambda_simple_end_0729:	; new closure is in rax
 10067 00006A7B 50                      	push rax
 10068 00006A7C 6A01                    	push 1	; arg count
 10069 00006A7E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10070 00006A83 E8A80A0100              	call malloc
 10071 00006A88 50                      	push rax
 10072 00006A89 BF08000000              	mov rdi, 8 * 1	; new rib
 10073 00006A8E E89D0A0100              	call malloc
 10074 00006A93 50                      	push rax
 10075 00006A94 BF10000000              	mov rdi, 8 * 2	; extended env
 10076 00006A99 E8920A0100              	call malloc
 10077 00006A9E 488B7D10                	mov rdi, ENV
 10078 00006AA2 BE00000000              	mov rsi, 0
 10079 00006AA7 BA01000000              	mov rdx, 1
 10080                                  .L_lambda_simple_env_loop_072a:	; ext_env[i + 1] <-- env[i]
 10081 00006AAC 4883FE01                	cmp rsi, 1
 10082 00006AB0 7410                    	je .L_lambda_simple_env_end_072a
 10083 00006AB2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10084 00006AB6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10085 00006ABA 48FFC6                  	inc rsi
 10086 00006ABD 48FFC2                  	inc rdx
 10087 00006AC0 EBEA                    	jmp .L_lambda_simple_env_loop_072a
 10088                                  .L_lambda_simple_env_end_072a:
 10089 00006AC2 5B                      	pop rbx
 10090 00006AC3 BE00000000              	mov rsi, 0
 10091                                  .L_lambda_simple_params_loop_072a:	; copy params
 10092 00006AC8 4883FE01                	cmp rsi, 1
 10093 00006ACC 740E                    	je .L_lambda_simple_params_end_072a
 10094 00006ACE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10095 00006AD3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10096 00006AD7 48FFC6                  	inc rsi
 10097 00006ADA EBEC                    	jmp .L_lambda_simple_params_loop_072a
 10098                                  .L_lambda_simple_params_end_072a:
 10099 00006ADC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10100 00006ADF 4889C3                  	mov rbx, rax
 10101 00006AE2 58                      	pop rax
 10102 00006AE3 C60004                  	mov byte [rax], T_closure
 10103 00006AE6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10104 00006AEA 48C74009[F76A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072a
 10105 00006AF2 E92E020000              	jmp .L_lambda_simple_end_072a
 10106                                  .L_lambda_simple_code_072a:	; lambda-simple body
 10107 00006AF7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10108 00006AFD 740B                    	je .L_lambda_simple_arity_check_ok_080e
 10109 00006AFF FF742410                	push qword [rsp + 8 * 2]
 10110 00006B03 6A01                    	push 1
 10111 00006B05 E9DF090100              	jmp L_error_incorrect_arity_simple
 10112                                  .L_lambda_simple_arity_check_ok_080e:
 10113 00006B0A C8000000                	enter 0, 0
 10114 00006B0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10115 00006B13 E8180A0100              	call malloc
 10116 00006B18 50                      	push rax
 10117 00006B19 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 10118 00006B1D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10119 00006B21 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 10120 00006B26 E8050A0100              	call malloc
 10121 00006B2B 50                      	push rax
 10122 00006B2C BF18000000              	mov rdi, 8 * 3	; extended env
 10123 00006B31 E8FA090100              	call malloc
 10124 00006B36 488B7D10                	mov rdi, ENV
 10125 00006B3A BE00000000              	mov rsi, 0
 10126 00006B3F BA01000000              	mov rdx, 1
 10127                                  .L_lambda_opt_env_loop_00e5:	; ext_env[i + 1] <-- env[i] copy all the array
 10128 00006B44 4883FE02                	cmp rsi, 2
 10129 00006B48 7410                    	je .L_lambda_opt_env_end_00e5
 10130 00006B4A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10131 00006B4E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10132 00006B52 48FFC6                  	inc rsi
 10133 00006B55 48FFC2                  	inc rdx
 10134 00006B58 EBEA                    	jmp .L_lambda_opt_env_loop_00e5
 10135                                  .L_lambda_opt_env_end_00e5:
 10136 00006B5A 5B                      	pop rbx
 10137 00006B5B BE00000000              	mov rsi, 0
 10138                                  .L_lambda_opt_params_loop_02ad:	; copy params
 10139 00006B60 4883FE01                	cmp rsi, 1
 10140 00006B64 740E                    	je .L_lambda_opt_params_end_01c9
 10141 00006B66 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10142 00006B6B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10143 00006B6F 48FFC6                  	inc rsi
 10144 00006B72 EBEC                    	jmp .L_lambda_opt_params_loop_02ad
 10145                                  .L_lambda_opt_params_end_01c9:
 10146 00006B74 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 10147 00006B77 4889C3                  	mov rbx, rax
 10148 00006B7A 58                      	pop rax
 10149 00006B7B C60004                  	mov byte [rax], T_closure
 10150 00006B7E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10151 00006B82 48C74009[8F6B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e5
 10152 00006B8A E992010000              	jmp .L_lambda_opt_end_01c9
 10153                                  .L_lambda_opt_code_00e5:	; lambda-opt body
 10154 00006B8F 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10155 00006B95 7D0B                    	jge .L_lambda_simple_arity_check_ok_080f
 10156 00006B97 FF742410                	push qword [rsp + 8 * 2]
 10157 00006B9B 6A00                    	push 0
 10158 00006B9D E947090100              	jmp L_error_incorrect_arity_simple
 10159                                  .L_lambda_simple_arity_check_ok_080f:
 10160 00006BA2 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 10161 00006BA7 4983E800                	sub r8, 0
 10162 00006BAB 4C89C3                  	mov rbx,r8
 10163 00006BAE 4983F800                	cmp r8, 0
 10164 00006BB2 7535                    	jne .L_lambda_opt_params_loop_02af
 10165 00006BB4 488B542410              	mov rdx, qword [rsp + 8 * 2]
 10166 00006BB9 4883C203                	add rdx , 3
 10167 00006BBD 4883EC08                	sub rsp , 8
 10168 00006BC1 4889E1                  	mov rcx, rsp
 10169                                  .L_lambda_opt_stack_adjusted_02ae: ;pushing down the stack of the current function
 10170 00006BC4 488B5908                	mov rbx, qword [rcx + 8 * 1]
 10171 00006BC8 488919                  	mov qword[rcx] , rbx
 10172 00006BCB 4883C108                	add rcx , 8
 10173 00006BCF 48FFCA                  	dec rdx
 10174 00006BD2 4883FA00                	cmp rdx, 0
 10175 00006BD6 75EC                    	jne .L_lambda_opt_stack_adjusted_02ae
 10176 00006BD8 48FF442410              	inc qword [rsp + 8 * 2]
 10177 00006BDD 48C701[01000000]        	mov qword [rcx], sob_nil 
 10178 00006BE4 E9A2000000              	jmp .L_lambda_opt_end_01ca
 10179                                  	.L_lambda_opt_params_loop_02af:
 10180 00006BE9 488B542410              	mov rdx, qword [rsp + 8*2]
 10181 00006BEE 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 10182 00006BF3 4C89C2                  	mov rdx, r8
 10183 00006BF6 49B9-                   	mov r9, sob_nil
 10183 00006BF8 [0100000000000000] 
 10184                                  	.L_lambda_opt_params_loop_02ae: ;loop for copying the opt into list
 10185 00006C00 BF11000000              	mov rdi, (1 + 8 + 8)
 10186 00006C05 E826090100              	call malloc
 10187 00006C0A C60021                  	mov byte[rax], T_pair
 10188 00006C0D 488B19                  	mov rbx, qword [rcx]
 10189 00006C10 48895801                	mov SOB_PAIR_CAR(rax), rbx
 10190 00006C14 4C894809                	mov SOB_PAIR_CDR(rax), r9
 10191 00006C18 4989C1                  	mov r9, rax
 10192 00006C1B 48FFCA                  	dec rdx
 10193 00006C1E 4883E908                	sub rcx, 8
 10194 00006C22 4883FA00                	cmp rdx, 0
 10195 00006C26 75D8                    	jne .L_lambda_opt_params_loop_02ae
 10196 00006C28 488B542410              	mov rdx, qword [rsp + 8 * 2]
 10197 00006C2D 4889E0                  	mov rax, rsp
 10198 00006C30 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 10199 00006C35 4C89C1                  	mov rcx, r8
 10200 00006C38 48FFC9                  	dec rcx
 10201 00006C3B 4883C203                	add rdx, 3
 10202 00006C3F 4829CA                  	sub rdx,rcx
 10203 00006C42 48C1E103                	shl rcx, 3
 10204                                  	.L_lambda_opt_stack_adjusted_02af:
 10205 00006C46 4883FA00                	cmp rdx, 0
 10206 00006C4A 7419                    	je .L_lambda_opt_params_end_01ca
 10207 00006C4C 4889D8                  	mov rax, rbx
 10208 00006C4F 4829C8                  	sub rax, rcx
 10209 00006C52 488B30                  	mov rsi, qword [rax]
 10210 00006C55 488933                  	mov [rbx], rsi
 10211 00006C58 4883EB08                	sub rbx, 8
 10212 00006C5C 48FFCA                  	dec rdx
 10213 00006C5F 4883FA00                	cmp rdx, 0
 10214 00006C63 75E1                    	jne .L_lambda_opt_stack_adjusted_02af
 10215                                  	.L_lambda_opt_params_end_01ca:
 10216 00006C65 4801CC                  	add rsp,rcx
 10217 00006C68 BB00000000              	mov rbx, 0
 10218 00006C6D 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 10219 00006C72 4883C303                	add rbx,3
 10220 00006C76 4C29C3                  	sub rbx,r8
 10221 00006C79 48C1E303                	shl rbx, 3
 10222 00006C7D 4801E3                  	add rbx, rsp
 10223 00006C80 4C890B                  	mov qword[rbx] , r9
 10224 00006C83 49FFC8                  	dec r8
 10225 00006C86 4C29442410              	sub qword [rsp + 8 * 2], r8
 10226                                  	.L_lambda_opt_end_01ca:
 10227 00006C8B C8000000                	enter 0, 0
 10228                                  	; preparing a tail-call
 10229 00006C8F 488B4520                	mov rax, PARAM(0)	; param s
 10230 00006C93 50                      	push rax
 10231 00006C94 48B8-                   	mov rax, L_constants + 2135
 10231 00006C96 [5708000000000000] 
 10232 00006C9E 50                      	push rax
 10233 00006C9F 488B4510                	mov rax, ENV
 10234 00006CA3 488B00                  	mov rax, qword [rax + 8 * 0]
 10235 00006CA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
 10236 00006CA9 50                      	push rax
 10237 00006CAA 6A03                    	push 3	; arg count
 10238 00006CAC 488B0425[FF130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10239 00006CB4 803805                  	cmp byte [rax], T_undefined
 10240 00006CB7 0F8446070100            	je L_error_fvar_undefined
 10241 00006CBD 803804                  	cmp byte [rax], T_closure
 10242 00006CC0 0F85C1070100            	jne L_error_non_closure
 10243 00006CC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10244 00006CC9 FF7508                  	push qword [rbp + 8 *1]
 10245 00006CCC 4989C0                  	mov r8, rax
 10246 00006CCF 488B5D18                	mov rbx, COUNT
 10247 00006CD3 4883C303                	add rbx,3
 10248 00006CD7 48C1E303                	shl rbx,3
 10249 00006CDB 4801EB                  	add rbx, rbp
 10250 00006CDE 488B6D00                	mov rbp, [rbp]
 10251 00006CE2 B900000000              	mov rcx,0
 10252 00006CE7 BA06000000              	mov rdx, 6
 10253 00006CEC 4889D0                  	mov rax, rdx
 10254 00006CEF 48FFC8                  	dec rax
 10255 00006CF2 48C1E003                	shl rax,3
 10256 00006CF6 4801E0                  	add rax, rsp
 10257                                  	.L_tc_recycle_frame_loop_090a:
 10258 00006CF9 4839D1                  	cmp rcx, rdx
 10259 00006CFC 7414                    	je .L_tc_recycle_frame_done_090a
 10260 00006CFE 4C8B08                  	mov r9, qword [rax]
 10261 00006D01 4C890B                  	mov qword [rbx],r9
 10262 00006D04 4883E808                	sub rax,8
 10263 00006D08 4883EB08                	sub rbx,8
 10264 00006D0C 4883C101                	add rcx,1
 10265 00006D10 EBE7                    	jmp .L_tc_recycle_frame_loop_090a
 10266                                  	.L_tc_recycle_frame_done_090a:
 10267 00006D12 4883C308                	add rbx,8
 10268 00006D16 4889DC                  	mov rsp,rbx
 10269 00006D19 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10270                                  	LEAVE
    49 00006D1D C9                  <1>  leave
 10271 00006D1E C21800                  	ret AND_KILL_FRAME(1)
 10272                                  .L_lambda_opt_end_01c9:
 10273 00006D21 C9                      	leave
 10274 00006D22 C21800                  	ret AND_KILL_FRAME(1)
 10275                                  .L_lambda_simple_end_072a:	; new closure is in rax
 10276 00006D25 803804                  	cmp byte [rax], T_closure
 10277 00006D28 0F8559070100            	jne L_error_non_closure
 10278 00006D2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10279 00006D31 FF7508                  	push qword [rbp + 8 *1]
 10280 00006D34 4989C0                  	mov r8, rax
 10281 00006D37 488B5D18                	mov rbx, COUNT
 10282 00006D3B 4883C303                	add rbx,3
 10283 00006D3F 48C1E303                	shl rbx,3
 10284 00006D43 4801EB                  	add rbx, rbp
 10285 00006D46 488B6D00                	mov rbp, [rbp]
 10286 00006D4A B900000000              	mov rcx,0
 10287 00006D4F BA04000000              	mov rdx, 4
 10288 00006D54 4889D0                  	mov rax, rdx
 10289 00006D57 48FFC8                  	dec rax
 10290 00006D5A 48C1E003                	shl rax,3
 10291 00006D5E 4801E0                  	add rax, rsp
 10292                                  	.L_tc_recycle_frame_loop_08fc:
 10293 00006D61 4839D1                  	cmp rcx, rdx
 10294 00006D64 7414                    	je .L_tc_recycle_frame_done_08fc
 10295 00006D66 4C8B08                  	mov r9, qword [rax]
 10296 00006D69 4C890B                  	mov qword [rbx],r9
 10297 00006D6C 4883E808                	sub rax,8
 10298 00006D70 4883EB08                	sub rbx,8
 10299 00006D74 4883C101                	add rcx,1
 10300 00006D78 EBE7                    	jmp .L_tc_recycle_frame_loop_08fc
 10301                                  	.L_tc_recycle_frame_done_08fc:
 10302 00006D7A 4883C308                	add rbx,8
 10303 00006D7E 4889DC                  	mov rsp,rbx
 10304 00006D81 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10305 00006D85 C9                      	leave
 10306 00006D86 C21800                  	ret AND_KILL_FRAME(1)
 10307                                  .L_lambda_simple_end_0728:	; new closure is in rax
 10308 00006D89 803804                  	cmp byte [rax], T_closure
 10309 00006D8C 0F85F5060100            	jne L_error_non_closure
 10310 00006D92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10311 00006D95 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10312 00006D98 48890425[6B0E0000]      	mov qword [free_var_1], rax
 10313 00006DA0 48B8-                   	mov rax, sob_void
 10313 00006DA2 [0000000000000000] 
 10314                                  
 10315 00006DAA 4889C7                  	mov rdi, rax
 10316 00006DAD E8D3090100              	call print_sexpr_if_not_void
 10317                                  	; preparing a non-tail-call
 10318 00006DB2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10319 00006DB7 E874070100              	call malloc
 10320 00006DBC 50                      	push rax
 10321 00006DBD BF00000000              	mov rdi, 8 * 0	; new rib
 10322 00006DC2 E869070100              	call malloc
 10323 00006DC7 50                      	push rax
 10324 00006DC8 BF08000000              	mov rdi, 8 * 1	; extended env
 10325 00006DCD E85E070100              	call malloc
 10326 00006DD2 488B7D10                	mov rdi, ENV
 10327 00006DD6 BE00000000              	mov rsi, 0
 10328 00006DDB BA01000000              	mov rdx, 1
 10329                                  .L_lambda_simple_env_loop_072b:	; ext_env[i + 1] <-- env[i]
 10330 00006DE0 4883FE00                	cmp rsi, 0
 10331 00006DE4 7410                    	je .L_lambda_simple_env_end_072b
 10332 00006DE6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10333 00006DEA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10334 00006DEE 48FFC6                  	inc rsi
 10335 00006DF1 48FFC2                  	inc rdx
 10336 00006DF4 EBEA                    	jmp .L_lambda_simple_env_loop_072b
 10337                                  .L_lambda_simple_env_end_072b:
 10338 00006DF6 5B                      	pop rbx
 10339 00006DF7 BE00000000              	mov rsi, 0
 10340                                  .L_lambda_simple_params_loop_072b:	; copy params
 10341 00006DFC 4883FE00                	cmp rsi, 0
 10342 00006E00 740E                    	je .L_lambda_simple_params_end_072b
 10343 00006E02 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10344 00006E07 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10345 00006E0B 48FFC6                  	inc rsi
 10346 00006E0E EBEC                    	jmp .L_lambda_simple_params_loop_072b
 10347                                  .L_lambda_simple_params_end_072b:
 10348 00006E10 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10349 00006E13 4889C3                  	mov rbx, rax
 10350 00006E16 58                      	pop rax
 10351 00006E17 C60004                  	mov byte [rax], T_closure
 10352 00006E1A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10353 00006E1E 48C74009[2B6E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072b
 10354 00006E26 E9A4000000              	jmp .L_lambda_simple_end_072b
 10355                                  .L_lambda_simple_code_072b:	; lambda-simple body
 10356 00006E2B 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10357 00006E31 740B                    	je .L_lambda_simple_arity_check_ok_0810
 10358 00006E33 FF742410                	push qword [rsp + 8 * 2]
 10359 00006E37 6A00                    	push 0
 10360 00006E39 E9AB060100              	jmp L_error_incorrect_arity_simple
 10361                                  .L_lambda_simple_arity_check_ok_0810:
 10362 00006E3E C8000000                	enter 0, 0
 10363                                  	; preparing a tail-call
 10364 00006E42 48B8-                   	mov rax, L_constants + 2187
 10364 00006E44 [8B08000000000000] 
 10365 00006E4C 50                      	push rax
 10366 00006E4D 48B8-                   	mov rax, L_constants + 2251
 10366 00006E4F [CB08000000000000] 
 10367 00006E57 50                      	push rax
 10368 00006E58 6A02                    	push 2	; arg count
 10369 00006E5A 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 10370 00006E62 803805                  	cmp byte [rax], T_undefined
 10371 00006E65 0F8498050100            	je L_error_fvar_undefined
 10372 00006E6B 803804                  	cmp byte [rax], T_closure
 10373 00006E6E 0F8513060100            	jne L_error_non_closure
 10374 00006E74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10375 00006E77 FF7508                  	push qword [rbp + 8 *1]
 10376 00006E7A 4989C0                  	mov r8, rax
 10377 00006E7D 488B5D18                	mov rbx, COUNT
 10378 00006E81 4883C303                	add rbx,3
 10379 00006E85 48C1E303                	shl rbx,3
 10380 00006E89 4801EB                  	add rbx, rbp
 10381 00006E8C 488B6D00                	mov rbp, [rbp]
 10382 00006E90 B900000000              	mov rcx,0
 10383 00006E95 BA05000000              	mov rdx, 5
 10384 00006E9A 4889D0                  	mov rax, rdx
 10385 00006E9D 48FFC8                  	dec rax
 10386 00006EA0 48C1E003                	shl rax,3
 10387 00006EA4 4801E0                  	add rax, rsp
 10388                                  	.L_tc_recycle_frame_loop_090b:
 10389 00006EA7 4839D1                  	cmp rcx, rdx
 10390 00006EAA 7414                    	je .L_tc_recycle_frame_done_090b
 10391 00006EAC 4C8B08                  	mov r9, qword [rax]
 10392 00006EAF 4C890B                  	mov qword [rbx],r9
 10393 00006EB2 4883E808                	sub rax,8
 10394 00006EB6 4883EB08                	sub rbx,8
 10395 00006EBA 4883C101                	add rcx,1
 10396 00006EBE EBE7                    	jmp .L_tc_recycle_frame_loop_090b
 10397                                  	.L_tc_recycle_frame_done_090b:
 10398 00006EC0 4883C308                	add rbx,8
 10399 00006EC4 4889DC                  	mov rsp,rbx
 10400 00006EC7 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10401 00006ECB C9                      	leave
 10402 00006ECC C21000                  	ret AND_KILL_FRAME(0)
 10403                                  .L_lambda_simple_end_072b:	; new closure is in rax
 10404 00006ECF 50                      	push rax
 10405 00006ED0 6A01                    	push 1	; arg count
 10406 00006ED2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10407 00006ED7 E854060100              	call malloc
 10408 00006EDC 50                      	push rax
 10409 00006EDD BF00000000              	mov rdi, 8 * 0	; new rib
 10410 00006EE2 E849060100              	call malloc
 10411 00006EE7 50                      	push rax
 10412 00006EE8 BF08000000              	mov rdi, 8 * 1	; extended env
 10413 00006EED E83E060100              	call malloc
 10414 00006EF2 488B7D10                	mov rdi, ENV
 10415 00006EF6 BE00000000              	mov rsi, 0
 10416 00006EFB BA01000000              	mov rdx, 1
 10417                                  .L_lambda_simple_env_loop_072c:	; ext_env[i + 1] <-- env[i]
 10418 00006F00 4883FE00                	cmp rsi, 0
 10419 00006F04 7410                    	je .L_lambda_simple_env_end_072c
 10420 00006F06 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10421 00006F0A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10422 00006F0E 48FFC6                  	inc rsi
 10423 00006F11 48FFC2                  	inc rdx
 10424 00006F14 EBEA                    	jmp .L_lambda_simple_env_loop_072c
 10425                                  .L_lambda_simple_env_end_072c:
 10426 00006F16 5B                      	pop rbx
 10427 00006F17 BE00000000              	mov rsi, 0
 10428                                  .L_lambda_simple_params_loop_072c:	; copy params
 10429 00006F1C 4883FE00                	cmp rsi, 0
 10430 00006F20 740E                    	je .L_lambda_simple_params_end_072c
 10431 00006F22 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10432 00006F27 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10433 00006F2B 48FFC6                  	inc rsi
 10434 00006F2E EBEC                    	jmp .L_lambda_simple_params_loop_072c
 10435                                  .L_lambda_simple_params_end_072c:
 10436 00006F30 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10437 00006F33 4889C3                  	mov rbx, rax
 10438 00006F36 58                      	pop rax
 10439 00006F37 C60004                  	mov byte [rax], T_closure
 10440 00006F3A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10441 00006F3E 48C74009[4B6F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072c
 10442 00006F46 E9120F0000              	jmp .L_lambda_simple_end_072c
 10443                                  .L_lambda_simple_code_072c:	; lambda-simple body
 10444 00006F4B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10445 00006F51 740B                    	je .L_lambda_simple_arity_check_ok_0811
 10446 00006F53 FF742410                	push qword [rsp + 8 * 2]
 10447 00006F57 6A01                    	push 1
 10448 00006F59 E98B050100              	jmp L_error_incorrect_arity_simple
 10449                                  .L_lambda_simple_arity_check_ok_0811:
 10450 00006F5E C8000000                	enter 0, 0
 10451                                  	; preparing a tail-call
 10452 00006F62 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10453 00006F67 E8C4050100              	call malloc
 10454 00006F6C 50                      	push rax
 10455 00006F6D BF08000000              	mov rdi, 8 * 1	; new rib
 10456 00006F72 E8B9050100              	call malloc
 10457 00006F77 50                      	push rax
 10458 00006F78 BF10000000              	mov rdi, 8 * 2	; extended env
 10459 00006F7D E8AE050100              	call malloc
 10460 00006F82 488B7D10                	mov rdi, ENV
 10461 00006F86 BE00000000              	mov rsi, 0
 10462 00006F8B BA01000000              	mov rdx, 1
 10463                                  .L_lambda_simple_env_loop_072d:	; ext_env[i + 1] <-- env[i]
 10464 00006F90 4883FE01                	cmp rsi, 1
 10465 00006F94 7410                    	je .L_lambda_simple_env_end_072d
 10466 00006F96 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10467 00006F9A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10468 00006F9E 48FFC6                  	inc rsi
 10469 00006FA1 48FFC2                  	inc rdx
 10470 00006FA4 EBEA                    	jmp .L_lambda_simple_env_loop_072d
 10471                                  .L_lambda_simple_env_end_072d:
 10472 00006FA6 5B                      	pop rbx
 10473 00006FA7 BE00000000              	mov rsi, 0
 10474                                  .L_lambda_simple_params_loop_072d:	; copy params
 10475 00006FAC 4883FE01                	cmp rsi, 1
 10476 00006FB0 740E                    	je .L_lambda_simple_params_end_072d
 10477 00006FB2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10478 00006FB7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10479 00006FBB 48FFC6                  	inc rsi
 10480 00006FBE EBEC                    	jmp .L_lambda_simple_params_loop_072d
 10481                                  .L_lambda_simple_params_end_072d:
 10482 00006FC0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10483 00006FC3 4889C3                  	mov rbx, rax
 10484 00006FC6 58                      	pop rax
 10485 00006FC7 C60004                  	mov byte [rax], T_closure
 10486 00006FCA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10487 00006FCE 48C74009[DB6F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072d
 10488 00006FD6 E996090000              	jmp .L_lambda_simple_end_072d
 10489                                  .L_lambda_simple_code_072d:	; lambda-simple body
 10490 00006FDB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10491 00006FE1 740B                    	je .L_lambda_simple_arity_check_ok_0812
 10492 00006FE3 FF742410                	push qword [rsp + 8 * 2]
 10493 00006FE7 6A02                    	push 2
 10494 00006FE9 E9FB040100              	jmp L_error_incorrect_arity_simple
 10495                                  .L_lambda_simple_arity_check_ok_0812:
 10496 00006FEE C8000000                	enter 0, 0
 10497                                  	; preparing a non-tail-call
 10498 00006FF2 488B4520                	mov rax, PARAM(0)	; param a
 10499 00006FF6 50                      	push rax
 10500 00006FF7 6A01                    	push 1	; arg count
 10501 00006FF9 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 10502 00007001 803805                  	cmp byte [rax], T_undefined
 10503 00007004 0F84F9030100            	je L_error_fvar_undefined
 10504 0000700A 803804                  	cmp byte [rax], T_closure
 10505 0000700D 0F8574040100            	jne L_error_non_closure
 10506 00007013 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10507 00007016 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10508 00007019 483D[02000000]          	cmp rax, sob_boolean_false
 10509 0000701F 0F84D3020000            	je .L_if_else_04f7
 10510                                  	; preparing a non-tail-call
 10511 00007025 488B4528                	mov rax, PARAM(1)	; param b
 10512 00007029 50                      	push rax
 10513 0000702A 6A01                    	push 1	; arg count
 10514 0000702C 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 10515 00007034 803805                  	cmp byte [rax], T_undefined
 10516 00007037 0F84C6030100            	je L_error_fvar_undefined
 10517 0000703D 803804                  	cmp byte [rax], T_closure
 10518 00007040 0F8541040100            	jne L_error_non_closure
 10519 00007046 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10520 00007049 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10521 0000704C 483D[02000000]          	cmp rax, sob_boolean_false
 10522 00007052 0F8482000000            	je .L_if_else_04ee
 10523                                  	; preparing a tail-call
 10524 00007058 488B4528                	mov rax, PARAM(1)	; param b
 10525 0000705C 50                      	push rax
 10526 0000705D 488B4520                	mov rax, PARAM(0)	; param a
 10527 00007061 50                      	push rax
 10528 00007062 6A02                    	push 2	; arg count
 10529 00007064 488B0425[25100000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10530 0000706C 803805                  	cmp byte [rax], T_undefined
 10531 0000706F 0F848E030100            	je L_error_fvar_undefined
 10532 00007075 803804                  	cmp byte [rax], T_closure
 10533 00007078 0F8509040100            	jne L_error_non_closure
 10534 0000707E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10535 00007081 FF7508                  	push qword [rbp + 8 *1]
 10536 00007084 4989C0                  	mov r8, rax
 10537 00007087 488B5D18                	mov rbx, COUNT
 10538 0000708B 4883C303                	add rbx,3
 10539 0000708F 48C1E303                	shl rbx,3
 10540 00007093 4801EB                  	add rbx, rbp
 10541 00007096 488B6D00                	mov rbp, [rbp]
 10542 0000709A B900000000              	mov rcx,0
 10543 0000709F BA05000000              	mov rdx, 5
 10544 000070A4 4889D0                  	mov rax, rdx
 10545 000070A7 48FFC8                  	dec rax
 10546 000070AA 48C1E003                	shl rax,3
 10547 000070AE 4801E0                  	add rax, rsp
 10548                                  	.L_tc_recycle_frame_loop_090d:
 10549 000070B1 4839D1                  	cmp rcx, rdx
 10550 000070B4 7414                    	je .L_tc_recycle_frame_done_090d
 10551 000070B6 4C8B08                  	mov r9, qword [rax]
 10552 000070B9 4C890B                  	mov qword [rbx],r9
 10553 000070BC 4883E808                	sub rax,8
 10554 000070C0 4883EB08                	sub rbx,8
 10555 000070C4 4883C101                	add rcx,1
 10556 000070C8 EBE7                    	jmp .L_tc_recycle_frame_loop_090d
 10557                                  	.L_tc_recycle_frame_done_090d:
 10558 000070CA 4883C308                	add rbx,8
 10559 000070CE 4889DC                  	mov rsp,rbx
 10560 000070D1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10561 000070D5 E919020000              	jmp .L_if_end_0573
 10562                                  .L_if_else_04ee:
 10563                                  	; preparing a non-tail-call
 10564 000070DA 488B4528                	mov rax, PARAM(1)	; param b
 10565 000070DE 50                      	push rax
 10566 000070DF 6A01                    	push 1	; arg count
 10567 000070E1 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 10568 000070E9 803805                  	cmp byte [rax], T_undefined
 10569 000070EC 0F8411030100            	je L_error_fvar_undefined
 10570 000070F2 803804                  	cmp byte [rax], T_closure
 10571 000070F5 0F858C030100            	jne L_error_non_closure
 10572 000070FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10573 000070FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 10574 00007101 483D[02000000]          	cmp rax, sob_boolean_false
 10575 00007107 0F84A5000000            	je .L_if_else_04ed
 10576                                  	; preparing a tail-call
 10577 0000710D 488B4528                	mov rax, PARAM(1)	; param b
 10578 00007111 50                      	push rax
 10579                                  	; preparing a non-tail-call
 10580 00007112 488B4520                	mov rax, PARAM(0)	; param a
 10581 00007116 50                      	push rax
 10582 00007117 6A01                    	push 1	; arg count
 10583 00007119 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10584 00007121 803805                  	cmp byte [rax], T_undefined
 10585 00007124 0F84D9020100            	je L_error_fvar_undefined
 10586 0000712A 803804                  	cmp byte [rax], T_closure
 10587 0000712D 0F8554030100            	jne L_error_non_closure
 10588 00007133 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10589 00007136 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10590 00007139 50                      	push rax
 10591 0000713A 6A02                    	push 2	; arg count
 10592 0000713C 488B0425[03100000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10593 00007144 803805                  	cmp byte [rax], T_undefined
 10594 00007147 0F84B6020100            	je L_error_fvar_undefined
 10595 0000714D 803804                  	cmp byte [rax], T_closure
 10596 00007150 0F8531030100            	jne L_error_non_closure
 10597 00007156 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10598 00007159 FF7508                  	push qword [rbp + 8 *1]
 10599 0000715C 4989C0                  	mov r8, rax
 10600 0000715F 488B5D18                	mov rbx, COUNT
 10601 00007163 4883C303                	add rbx,3
 10602 00007167 48C1E303                	shl rbx,3
 10603 0000716B 4801EB                  	add rbx, rbp
 10604 0000716E 488B6D00                	mov rbp, [rbp]
 10605 00007172 B900000000              	mov rcx,0
 10606 00007177 BA05000000              	mov rdx, 5
 10607 0000717C 4889D0                  	mov rax, rdx
 10608 0000717F 48FFC8                  	dec rax
 10609 00007182 48C1E003                	shl rax,3
 10610 00007186 4801E0                  	add rax, rsp
 10611                                  	.L_tc_recycle_frame_loop_090e:
 10612 00007189 4839D1                  	cmp rcx, rdx
 10613 0000718C 7414                    	je .L_tc_recycle_frame_done_090e
 10614 0000718E 4C8B08                  	mov r9, qword [rax]
 10615 00007191 4C890B                  	mov qword [rbx],r9
 10616 00007194 4883E808                	sub rax,8
 10617 00007198 4883EB08                	sub rbx,8
 10618 0000719C 4883C101                	add rcx,1
 10619 000071A0 EBE7                    	jmp .L_tc_recycle_frame_loop_090e
 10620                                  	.L_tc_recycle_frame_done_090e:
 10621 000071A2 4883C308                	add rbx,8
 10622 000071A6 4889DC                  	mov rsp,rbx
 10623 000071A9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10624 000071AD E941010000              	jmp .L_if_end_0572
 10625                                  .L_if_else_04ed:
 10626                                  	; preparing a non-tail-call
 10627 000071B2 488B4528                	mov rax, PARAM(1)	; param b
 10628 000071B6 50                      	push rax
 10629 000071B7 6A01                    	push 1	; arg count
 10630 000071B9 488B0425[FD150000]      	mov rax, qword [free_var_115]	; free var real
 10631 000071C1 803805                  	cmp byte [rax], T_undefined
 10632 000071C4 0F8439020100            	je L_error_fvar_undefined
 10633 000071CA 803804                  	cmp byte [rax], T_closure
 10634 000071CD 0F85B4020100            	jne L_error_non_closure
 10635 000071D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10636 000071D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10637 000071D9 483D[02000000]          	cmp rax, sob_boolean_false
 10638 000071DF 0F84A2000000            	je .L_if_else_04ec
 10639                                  	; preparing a tail-call
 10640 000071E5 488B4528                	mov rax, PARAM(1)	; param b
 10641 000071E9 50                      	push rax
 10642                                  	; preparing a non-tail-call
 10643 000071EA 488B4520                	mov rax, PARAM(0)	; param a
 10644 000071EE 50                      	push rax
 10645 000071EF 6A01                    	push 1	; arg count
 10646 000071F1 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 10647 000071F9 803805                  	cmp byte [rax], T_undefined
 10648 000071FC 0F8401020100            	je L_error_fvar_undefined
 10649 00007202 803804                  	cmp byte [rax], T_closure
 10650 00007205 0F857C020100            	jne L_error_non_closure
 10651 0000720B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10652 0000720E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10653 00007211 50                      	push rax
 10654 00007212 6A02                    	push 2	; arg count
 10655 00007214 488B0425[14100000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10656 0000721C 803805                  	cmp byte [rax], T_undefined
 10657 0000721F 0F84DE010100            	je L_error_fvar_undefined
 10658 00007225 803804                  	cmp byte [rax], T_closure
 10659 00007228 0F8559020100            	jne L_error_non_closure
 10660 0000722E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10661 00007231 FF7508                  	push qword [rbp + 8 *1]
 10662 00007234 4989C0                  	mov r8, rax
 10663 00007237 488B5D18                	mov rbx, COUNT
 10664 0000723B 4883C303                	add rbx,3
 10665 0000723F 48C1E303                	shl rbx,3
 10666 00007243 4801EB                  	add rbx, rbp
 10667 00007246 488B6D00                	mov rbp, [rbp]
 10668 0000724A B900000000              	mov rcx,0
 10669 0000724F BA05000000              	mov rdx, 5
 10670 00007254 4889D0                  	mov rax, rdx
 10671 00007257 48FFC8                  	dec rax
 10672 0000725A 48C1E003                	shl rax,3
 10673 0000725E 4801E0                  	add rax, rsp
 10674                                  	.L_tc_recycle_frame_loop_090f:
 10675 00007261 4839D1                  	cmp rcx, rdx
 10676 00007264 7414                    	je .L_tc_recycle_frame_done_090f
 10677 00007266 4C8B08                  	mov r9, qword [rax]
 10678 00007269 4C890B                  	mov qword [rbx],r9
 10679 0000726C 4883E808                	sub rax,8
 10680 00007270 4883EB08                	sub rbx,8
 10681 00007274 4883C101                	add rcx,1
 10682 00007278 EBE7                    	jmp .L_tc_recycle_frame_loop_090f
 10683                                  	.L_tc_recycle_frame_done_090f:
 10684 0000727A 4883C308                	add rbx,8
 10685 0000727E 4889DC                  	mov rsp,rbx
 10686 00007281 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10687 00007285 EB6C                    	jmp .L_if_end_0571
 10688                                  .L_if_else_04ec:
 10689                                  	; preparing a tail-call
 10690 00007287 6A00                    	push 0	; arg count
 10691 00007289 488B4510                	mov rax, ENV
 10692 0000728D 488B00                  	mov rax, qword [rax + 8 * 0]
 10693 00007290 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10694 00007293 803804                  	cmp byte [rax], T_closure
 10695 00007296 0F85EB010100            	jne L_error_non_closure
 10696 0000729C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10697 0000729F FF7508                  	push qword [rbp + 8 *1]
 10698 000072A2 4989C0                  	mov r8, rax
 10699 000072A5 488B5D18                	mov rbx, COUNT
 10700 000072A9 4883C303                	add rbx,3
 10701 000072AD 48C1E303                	shl rbx,3
 10702 000072B1 4801EB                  	add rbx, rbp
 10703 000072B4 488B6D00                	mov rbp, [rbp]
 10704 000072B8 B900000000              	mov rcx,0
 10705 000072BD BA03000000              	mov rdx, 3
 10706 000072C2 4889D0                  	mov rax, rdx
 10707 000072C5 48FFC8                  	dec rax
 10708 000072C8 48C1E003                	shl rax,3
 10709 000072CC 4801E0                  	add rax, rsp
 10710                                  	.L_tc_recycle_frame_loop_0910:
 10711 000072CF 4839D1                  	cmp rcx, rdx
 10712 000072D2 7414                    	je .L_tc_recycle_frame_done_0910
 10713 000072D4 4C8B08                  	mov r9, qword [rax]
 10714 000072D7 4C890B                  	mov qword [rbx],r9
 10715 000072DA 4883E808                	sub rax,8
 10716 000072DE 4883EB08                	sub rbx,8
 10717 000072E2 4883C101                	add rcx,1
 10718 000072E6 EBE7                    	jmp .L_tc_recycle_frame_loop_0910
 10719                                  	.L_tc_recycle_frame_done_0910:
 10720 000072E8 4883C308                	add rbx,8
 10721 000072EC 4889DC                  	mov rsp,rbx
 10722 000072EF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10723                                  .L_if_end_0571:
 10724                                  .L_if_end_0572:
 10725                                  .L_if_end_0573:
 10726 000072F3 E975060000              	jmp .L_if_end_057c
 10727                                  .L_if_else_04f7:
 10728                                  	; preparing a non-tail-call
 10729 000072F8 488B4520                	mov rax, PARAM(0)	; param a
 10730 000072FC 50                      	push rax
 10731 000072FD 6A01                    	push 1	; arg count
 10732 000072FF 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 10733 00007307 803805                  	cmp byte [rax], T_undefined
 10734 0000730A 0F84F3000100            	je L_error_fvar_undefined
 10735 00007310 803804                  	cmp byte [rax], T_closure
 10736 00007313 0F856E010100            	jne L_error_non_closure
 10737 00007319 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10738 0000731C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10739 0000731F 483D[02000000]          	cmp rax, sob_boolean_false
 10740 00007325 0F84D3020000            	je .L_if_else_04f6
 10741                                  	; preparing a non-tail-call
 10742 0000732B 488B4528                	mov rax, PARAM(1)	; param b
 10743 0000732F 50                      	push rax
 10744 00007330 6A01                    	push 1	; arg count
 10745 00007332 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 10746 0000733A 803805                  	cmp byte [rax], T_undefined
 10747 0000733D 0F84C0000100            	je L_error_fvar_undefined
 10748 00007343 803804                  	cmp byte [rax], T_closure
 10749 00007346 0F853B010100            	jne L_error_non_closure
 10750 0000734C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10751 0000734F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10752 00007352 483D[02000000]          	cmp rax, sob_boolean_false
 10753 00007358 0F84A5000000            	je .L_if_else_04f1
 10754                                  	; preparing a tail-call
 10755                                  	; preparing a non-tail-call
 10756 0000735E 488B4528                	mov rax, PARAM(1)	; param b
 10757 00007362 50                      	push rax
 10758 00007363 6A01                    	push 1	; arg count
 10759 00007365 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10760 0000736D 803805                  	cmp byte [rax], T_undefined
 10761 00007370 0F848D000100            	je L_error_fvar_undefined
 10762 00007376 803804                  	cmp byte [rax], T_closure
 10763 00007379 0F8508010100            	jne L_error_non_closure
 10764 0000737F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10765 00007382 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10766 00007385 50                      	push rax
 10767 00007386 488B4520                	mov rax, PARAM(0)	; param a
 10768 0000738A 50                      	push rax
 10769 0000738B 6A02                    	push 2	; arg count
 10770 0000738D 488B0425[03100000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10771 00007395 803805                  	cmp byte [rax], T_undefined
 10772 00007398 0F8465000100            	je L_error_fvar_undefined
 10773 0000739E 803804                  	cmp byte [rax], T_closure
 10774 000073A1 0F85E0000100            	jne L_error_non_closure
 10775 000073A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10776 000073AA FF7508                  	push qword [rbp + 8 *1]
 10777 000073AD 4989C0                  	mov r8, rax
 10778 000073B0 488B5D18                	mov rbx, COUNT
 10779 000073B4 4883C303                	add rbx,3
 10780 000073B8 48C1E303                	shl rbx,3
 10781 000073BC 4801EB                  	add rbx, rbp
 10782 000073BF 488B6D00                	mov rbp, [rbp]
 10783 000073C3 B900000000              	mov rcx,0
 10784 000073C8 BA05000000              	mov rdx, 5
 10785 000073CD 4889D0                  	mov rax, rdx
 10786 000073D0 48FFC8                  	dec rax
 10787 000073D3 48C1E003                	shl rax,3
 10788 000073D7 4801E0                  	add rax, rsp
 10789                                  	.L_tc_recycle_frame_loop_0911:
 10790 000073DA 4839D1                  	cmp rcx, rdx
 10791 000073DD 7414                    	je .L_tc_recycle_frame_done_0911
 10792 000073DF 4C8B08                  	mov r9, qword [rax]
 10793 000073E2 4C890B                  	mov qword [rbx],r9
 10794 000073E5 4883E808                	sub rax,8
 10795 000073E9 4883EB08                	sub rbx,8
 10796 000073ED 4883C101                	add rcx,1
 10797 000073F1 EBE7                    	jmp .L_tc_recycle_frame_loop_0911
 10798                                  	.L_tc_recycle_frame_done_0911:
 10799 000073F3 4883C308                	add rbx,8
 10800 000073F7 4889DC                  	mov rsp,rbx
 10801 000073FA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10802 000073FE E9F6010000              	jmp .L_if_end_0576
 10803                                  .L_if_else_04f1:
 10804                                  	; preparing a non-tail-call
 10805 00007403 488B4528                	mov rax, PARAM(1)	; param b
 10806 00007407 50                      	push rax
 10807 00007408 6A01                    	push 1	; arg count
 10808 0000740A 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 10809 00007412 803805                  	cmp byte [rax], T_undefined
 10810 00007415 0F84E8FF0000            	je L_error_fvar_undefined
 10811 0000741B 803804                  	cmp byte [rax], T_closure
 10812 0000741E 0F8563000100            	jne L_error_non_closure
 10813 00007424 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10814 00007427 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10815 0000742A 483D[02000000]          	cmp rax, sob_boolean_false
 10816 00007430 0F8482000000            	je .L_if_else_04f0
 10817                                  	; preparing a tail-call
 10818 00007436 488B4528                	mov rax, PARAM(1)	; param b
 10819 0000743A 50                      	push rax
 10820 0000743B 488B4520                	mov rax, PARAM(0)	; param a
 10821 0000743F 50                      	push rax
 10822 00007440 6A02                    	push 2	; arg count
 10823 00007442 488B0425[03100000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10824 0000744A 803805                  	cmp byte [rax], T_undefined
 10825 0000744D 0F84B0FF0000            	je L_error_fvar_undefined
 10826 00007453 803804                  	cmp byte [rax], T_closure
 10827 00007456 0F852B000100            	jne L_error_non_closure
 10828 0000745C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10829 0000745F FF7508                  	push qword [rbp + 8 *1]
 10830 00007462 4989C0                  	mov r8, rax
 10831 00007465 488B5D18                	mov rbx, COUNT
 10832 00007469 4883C303                	add rbx,3
 10833 0000746D 48C1E303                	shl rbx,3
 10834 00007471 4801EB                  	add rbx, rbp
 10835 00007474 488B6D00                	mov rbp, [rbp]
 10836 00007478 B900000000              	mov rcx,0
 10837 0000747D BA05000000              	mov rdx, 5
 10838 00007482 4889D0                  	mov rax, rdx
 10839 00007485 48FFC8                  	dec rax
 10840 00007488 48C1E003                	shl rax,3
 10841 0000748C 4801E0                  	add rax, rsp
 10842                                  	.L_tc_recycle_frame_loop_0912:
 10843 0000748F 4839D1                  	cmp rcx, rdx
 10844 00007492 7414                    	je .L_tc_recycle_frame_done_0912
 10845 00007494 4C8B08                  	mov r9, qword [rax]
 10846 00007497 4C890B                  	mov qword [rbx],r9
 10847 0000749A 4883E808                	sub rax,8
 10848 0000749E 4883EB08                	sub rbx,8
 10849 000074A2 4883C101                	add rcx,1
 10850 000074A6 EBE7                    	jmp .L_tc_recycle_frame_loop_0912
 10851                                  	.L_tc_recycle_frame_done_0912:
 10852 000074A8 4883C308                	add rbx,8
 10853 000074AC 4889DC                  	mov rsp,rbx
 10854 000074AF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10855 000074B3 E941010000              	jmp .L_if_end_0575
 10856                                  .L_if_else_04f0:
 10857                                  	; preparing a non-tail-call
 10858 000074B8 488B4528                	mov rax, PARAM(1)	; param b
 10859 000074BC 50                      	push rax
 10860 000074BD 6A01                    	push 1	; arg count
 10861 000074BF 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 10862 000074C7 803805                  	cmp byte [rax], T_undefined
 10863 000074CA 0F8433FF0000            	je L_error_fvar_undefined
 10864 000074D0 803804                  	cmp byte [rax], T_closure
 10865 000074D3 0F85AEFF0000            	jne L_error_non_closure
 10866 000074D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10867 000074DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10868 000074DF 483D[02000000]          	cmp rax, sob_boolean_false
 10869 000074E5 0F84A2000000            	je .L_if_else_04ef
 10870                                  	; preparing a tail-call
 10871 000074EB 488B4528                	mov rax, PARAM(1)	; param b
 10872 000074EF 50                      	push rax
 10873                                  	; preparing a non-tail-call
 10874 000074F0 488B4520                	mov rax, PARAM(0)	; param a
 10875 000074F4 50                      	push rax
 10876 000074F5 6A01                    	push 1	; arg count
 10877 000074F7 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10878 000074FF 803805                  	cmp byte [rax], T_undefined
 10879 00007502 0F84FBFE0000            	je L_error_fvar_undefined
 10880 00007508 803804                  	cmp byte [rax], T_closure
 10881 0000750B 0F8576FF0000            	jne L_error_non_closure
 10882 00007511 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10883 00007514 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10884 00007517 50                      	push rax
 10885 00007518 6A02                    	push 2	; arg count
 10886 0000751A 488B0425[14100000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10887 00007522 803805                  	cmp byte [rax], T_undefined
 10888 00007525 0F84D8FE0000            	je L_error_fvar_undefined
 10889 0000752B 803804                  	cmp byte [rax], T_closure
 10890 0000752E 0F8553FF0000            	jne L_error_non_closure
 10891 00007534 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10892 00007537 FF7508                  	push qword [rbp + 8 *1]
 10893 0000753A 4989C0                  	mov r8, rax
 10894 0000753D 488B5D18                	mov rbx, COUNT
 10895 00007541 4883C303                	add rbx,3
 10896 00007545 48C1E303                	shl rbx,3
 10897 00007549 4801EB                  	add rbx, rbp
 10898 0000754C 488B6D00                	mov rbp, [rbp]
 10899 00007550 B900000000              	mov rcx,0
 10900 00007555 BA05000000              	mov rdx, 5
 10901 0000755A 4889D0                  	mov rax, rdx
 10902 0000755D 48FFC8                  	dec rax
 10903 00007560 48C1E003                	shl rax,3
 10904 00007564 4801E0                  	add rax, rsp
 10905                                  	.L_tc_recycle_frame_loop_0913:
 10906 00007567 4839D1                  	cmp rcx, rdx
 10907 0000756A 7414                    	je .L_tc_recycle_frame_done_0913
 10908 0000756C 4C8B08                  	mov r9, qword [rax]
 10909 0000756F 4C890B                  	mov qword [rbx],r9
 10910 00007572 4883E808                	sub rax,8
 10911 00007576 4883EB08                	sub rbx,8
 10912 0000757A 4883C101                	add rcx,1
 10913 0000757E EBE7                    	jmp .L_tc_recycle_frame_loop_0913
 10914                                  	.L_tc_recycle_frame_done_0913:
 10915 00007580 4883C308                	add rbx,8
 10916 00007584 4889DC                  	mov rsp,rbx
 10917 00007587 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10918 0000758B EB6C                    	jmp .L_if_end_0574
 10919                                  .L_if_else_04ef:
 10920                                  	; preparing a tail-call
 10921 0000758D 6A00                    	push 0	; arg count
 10922 0000758F 488B4510                	mov rax, ENV
 10923 00007593 488B00                  	mov rax, qword [rax + 8 * 0]
 10924 00007596 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10925 00007599 803804                  	cmp byte [rax], T_closure
 10926 0000759C 0F85E5FE0000            	jne L_error_non_closure
 10927 000075A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10928 000075A5 FF7508                  	push qword [rbp + 8 *1]
 10929 000075A8 4989C0                  	mov r8, rax
 10930 000075AB 488B5D18                	mov rbx, COUNT
 10931 000075AF 4883C303                	add rbx,3
 10932 000075B3 48C1E303                	shl rbx,3
 10933 000075B7 4801EB                  	add rbx, rbp
 10934 000075BA 488B6D00                	mov rbp, [rbp]
 10935 000075BE B900000000              	mov rcx,0
 10936 000075C3 BA03000000              	mov rdx, 3
 10937 000075C8 4889D0                  	mov rax, rdx
 10938 000075CB 48FFC8                  	dec rax
 10939 000075CE 48C1E003                	shl rax,3
 10940 000075D2 4801E0                  	add rax, rsp
 10941                                  	.L_tc_recycle_frame_loop_0914:
 10942 000075D5 4839D1                  	cmp rcx, rdx
 10943 000075D8 7414                    	je .L_tc_recycle_frame_done_0914
 10944 000075DA 4C8B08                  	mov r9, qword [rax]
 10945 000075DD 4C890B                  	mov qword [rbx],r9
 10946 000075E0 4883E808                	sub rax,8
 10947 000075E4 4883EB08                	sub rbx,8
 10948 000075E8 4883C101                	add rcx,1
 10949 000075EC EBE7                    	jmp .L_tc_recycle_frame_loop_0914
 10950                                  	.L_tc_recycle_frame_done_0914:
 10951 000075EE 4883C308                	add rbx,8
 10952 000075F2 4889DC                  	mov rsp,rbx
 10953 000075F5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 10954                                  .L_if_end_0574:
 10955                                  .L_if_end_0575:
 10956                                  .L_if_end_0576:
 10957 000075F9 E96F030000              	jmp .L_if_end_057b
 10958                                  .L_if_else_04f6:
 10959                                  	; preparing a non-tail-call
 10960 000075FE 488B4520                	mov rax, PARAM(0)	; param a
 10961 00007602 50                      	push rax
 10962 00007603 6A01                    	push 1	; arg count
 10963 00007605 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 10964 0000760D 803805                  	cmp byte [rax], T_undefined
 10965 00007610 0F84EDFD0000            	je L_error_fvar_undefined
 10966 00007616 803804                  	cmp byte [rax], T_closure
 10967 00007619 0F8568FE0000            	jne L_error_non_closure
 10968 0000761F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10969 00007622 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10970 00007625 483D[02000000]          	cmp rax, sob_boolean_false
 10971 0000762B 0F84D0020000            	je .L_if_else_04f5
 10972                                  	; preparing a non-tail-call
 10973 00007631 488B4528                	mov rax, PARAM(1)	; param b
 10974 00007635 50                      	push rax
 10975 00007636 6A01                    	push 1	; arg count
 10976 00007638 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 10977 00007640 803805                  	cmp byte [rax], T_undefined
 10978 00007643 0F84BAFD0000            	je L_error_fvar_undefined
 10979 00007649 803804                  	cmp byte [rax], T_closure
 10980 0000764C 0F8535FE0000            	jne L_error_non_closure
 10981 00007652 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10982 00007655 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10983 00007658 483D[02000000]          	cmp rax, sob_boolean_false
 10984 0000765E 0F84A5000000            	je .L_if_else_04f4
 10985                                  	; preparing a tail-call
 10986                                  	; preparing a non-tail-call
 10987 00007664 488B4528                	mov rax, PARAM(1)	; param b
 10988 00007668 50                      	push rax
 10989 00007669 6A01                    	push 1	; arg count
 10990 0000766B 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 10991 00007673 803805                  	cmp byte [rax], T_undefined
 10992 00007676 0F8487FD0000            	je L_error_fvar_undefined
 10993 0000767C 803804                  	cmp byte [rax], T_closure
 10994 0000767F 0F8502FE0000            	jne L_error_non_closure
 10995 00007685 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10996 00007688 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10997 0000768B 50                      	push rax
 10998 0000768C 488B4520                	mov rax, PARAM(0)	; param a
 10999 00007690 50                      	push rax
 11000 00007691 6A02                    	push 2	; arg count
 11001 00007693 488B0425[14100000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11002 0000769B 803805                  	cmp byte [rax], T_undefined
 11003 0000769E 0F845FFD0000            	je L_error_fvar_undefined
 11004 000076A4 803804                  	cmp byte [rax], T_closure
 11005 000076A7 0F85DAFD0000            	jne L_error_non_closure
 11006 000076AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11007 000076B0 FF7508                  	push qword [rbp + 8 *1]
 11008 000076B3 4989C0                  	mov r8, rax
 11009 000076B6 488B5D18                	mov rbx, COUNT
 11010 000076BA 4883C303                	add rbx,3
 11011 000076BE 48C1E303                	shl rbx,3
 11012 000076C2 4801EB                  	add rbx, rbp
 11013 000076C5 488B6D00                	mov rbp, [rbp]
 11014 000076C9 B900000000              	mov rcx,0
 11015 000076CE BA05000000              	mov rdx, 5
 11016 000076D3 4889D0                  	mov rax, rdx
 11017 000076D6 48FFC8                  	dec rax
 11018 000076D9 48C1E003                	shl rax,3
 11019 000076DD 4801E0                  	add rax, rsp
 11020                                  	.L_tc_recycle_frame_loop_0915:
 11021 000076E0 4839D1                  	cmp rcx, rdx
 11022 000076E3 7414                    	je .L_tc_recycle_frame_done_0915
 11023 000076E5 4C8B08                  	mov r9, qword [rax]
 11024 000076E8 4C890B                  	mov qword [rbx],r9
 11025 000076EB 4883E808                	sub rax,8
 11026 000076EF 4883EB08                	sub rbx,8
 11027 000076F3 4883C101                	add rcx,1
 11028 000076F7 EBE7                    	jmp .L_tc_recycle_frame_loop_0915
 11029                                  	.L_tc_recycle_frame_done_0915:
 11030 000076F9 4883C308                	add rbx,8
 11031 000076FD 4889DC                  	mov rsp,rbx
 11032 00007700 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11033 00007704 E9F6010000              	jmp .L_if_end_0579
 11034                                  .L_if_else_04f4:
 11035                                  	; preparing a non-tail-call
 11036 00007709 488B4528                	mov rax, PARAM(1)	; param b
 11037 0000770D 50                      	push rax
 11038 0000770E 6A01                    	push 1	; arg count
 11039 00007710 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 11040 00007718 803805                  	cmp byte [rax], T_undefined
 11041 0000771B 0F84E2FC0000            	je L_error_fvar_undefined
 11042 00007721 803804                  	cmp byte [rax], T_closure
 11043 00007724 0F855DFD0000            	jne L_error_non_closure
 11044 0000772A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11045 0000772D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11046 00007730 483D[02000000]          	cmp rax, sob_boolean_false
 11047 00007736 0F84A5000000            	je .L_if_else_04f3
 11048                                  	; preparing a tail-call
 11049                                  	; preparing a non-tail-call
 11050 0000773C 488B4528                	mov rax, PARAM(1)	; param b
 11051 00007740 50                      	push rax
 11052 00007741 6A01                    	push 1	; arg count
 11053 00007743 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11054 0000774B 803805                  	cmp byte [rax], T_undefined
 11055 0000774E 0F84AFFC0000            	je L_error_fvar_undefined
 11056 00007754 803804                  	cmp byte [rax], T_closure
 11057 00007757 0F852AFD0000            	jne L_error_non_closure
 11058 0000775D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11059 00007760 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11060 00007763 50                      	push rax
 11061 00007764 488B4520                	mov rax, PARAM(0)	; param a
 11062 00007768 50                      	push rax
 11063 00007769 6A02                    	push 2	; arg count
 11064 0000776B 488B0425[14100000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11065 00007773 803805                  	cmp byte [rax], T_undefined
 11066 00007776 0F8487FC0000            	je L_error_fvar_undefined
 11067 0000777C 803804                  	cmp byte [rax], T_closure
 11068 0000777F 0F8502FD0000            	jne L_error_non_closure
 11069 00007785 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11070 00007788 FF7508                  	push qword [rbp + 8 *1]
 11071 0000778B 4989C0                  	mov r8, rax
 11072 0000778E 488B5D18                	mov rbx, COUNT
 11073 00007792 4883C303                	add rbx,3
 11074 00007796 48C1E303                	shl rbx,3
 11075 0000779A 4801EB                  	add rbx, rbp
 11076 0000779D 488B6D00                	mov rbp, [rbp]
 11077 000077A1 B900000000              	mov rcx,0
 11078 000077A6 BA05000000              	mov rdx, 5
 11079 000077AB 4889D0                  	mov rax, rdx
 11080 000077AE 48FFC8                  	dec rax
 11081 000077B1 48C1E003                	shl rax,3
 11082 000077B5 4801E0                  	add rax, rsp
 11083                                  	.L_tc_recycle_frame_loop_0916:
 11084 000077B8 4839D1                  	cmp rcx, rdx
 11085 000077BB 7414                    	je .L_tc_recycle_frame_done_0916
 11086 000077BD 4C8B08                  	mov r9, qword [rax]
 11087 000077C0 4C890B                  	mov qword [rbx],r9
 11088 000077C3 4883E808                	sub rax,8
 11089 000077C7 4883EB08                	sub rbx,8
 11090 000077CB 4883C101                	add rcx,1
 11091 000077CF EBE7                    	jmp .L_tc_recycle_frame_loop_0916
 11092                                  	.L_tc_recycle_frame_done_0916:
 11093 000077D1 4883C308                	add rbx,8
 11094 000077D5 4889DC                  	mov rsp,rbx
 11095 000077D8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11096 000077DC E91E010000              	jmp .L_if_end_0578
 11097                                  .L_if_else_04f3:
 11098                                  	; preparing a non-tail-call
 11099 000077E1 488B4528                	mov rax, PARAM(1)	; param b
 11100 000077E5 50                      	push rax
 11101 000077E6 6A01                    	push 1	; arg count
 11102 000077E8 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 11103 000077F0 803805                  	cmp byte [rax], T_undefined
 11104 000077F3 0F840AFC0000            	je L_error_fvar_undefined
 11105 000077F9 803804                  	cmp byte [rax], T_closure
 11106 000077FC 0F8585FC0000            	jne L_error_non_closure
 11107 00007802 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11108 00007805 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11109 00007808 483D[02000000]          	cmp rax, sob_boolean_false
 11110 0000780E 0F847F000000            	je .L_if_else_04f2
 11111                                  	; preparing a tail-call
 11112 00007814 488B4528                	mov rax, PARAM(1)	; param b
 11113 00007818 50                      	push rax
 11114 00007819 488B4520                	mov rax, PARAM(0)	; param a
 11115 0000781D 50                      	push rax
 11116 0000781E 6A02                    	push 2	; arg count
 11117 00007820 488B0425[14100000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11118 00007828 803805                  	cmp byte [rax], T_undefined
 11119 0000782B 0F84D2FB0000            	je L_error_fvar_undefined
 11120 00007831 803804                  	cmp byte [rax], T_closure
 11121 00007834 0F854DFC0000            	jne L_error_non_closure
 11122 0000783A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11123 0000783D FF7508                  	push qword [rbp + 8 *1]
 11124 00007840 4989C0                  	mov r8, rax
 11125 00007843 488B5D18                	mov rbx, COUNT
 11126 00007847 4883C303                	add rbx,3
 11127 0000784B 48C1E303                	shl rbx,3
 11128 0000784F 4801EB                  	add rbx, rbp
 11129 00007852 488B6D00                	mov rbp, [rbp]
 11130 00007856 B900000000              	mov rcx,0
 11131 0000785B BA05000000              	mov rdx, 5
 11132 00007860 4889D0                  	mov rax, rdx
 11133 00007863 48FFC8                  	dec rax
 11134 00007866 48C1E003                	shl rax,3
 11135 0000786A 4801E0                  	add rax, rsp
 11136                                  	.L_tc_recycle_frame_loop_0917:
 11137 0000786D 4839D1                  	cmp rcx, rdx
 11138 00007870 7414                    	je .L_tc_recycle_frame_done_0917
 11139 00007872 4C8B08                  	mov r9, qword [rax]
 11140 00007875 4C890B                  	mov qword [rbx],r9
 11141 00007878 4883E808                	sub rax,8
 11142 0000787C 4883EB08                	sub rbx,8
 11143 00007880 4883C101                	add rcx,1
 11144 00007884 EBE7                    	jmp .L_tc_recycle_frame_loop_0917
 11145                                  	.L_tc_recycle_frame_done_0917:
 11146 00007886 4883C308                	add rbx,8
 11147 0000788A 4889DC                  	mov rsp,rbx
 11148 0000788D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11149 00007891 EB6C                    	jmp .L_if_end_0577
 11150                                  .L_if_else_04f2:
 11151                                  	; preparing a tail-call
 11152 00007893 6A00                    	push 0	; arg count
 11153 00007895 488B4510                	mov rax, ENV
 11154 00007899 488B00                  	mov rax, qword [rax + 8 * 0]
 11155 0000789C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11156 0000789F 803804                  	cmp byte [rax], T_closure
 11157 000078A2 0F85DFFB0000            	jne L_error_non_closure
 11158 000078A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11159 000078AB FF7508                  	push qword [rbp + 8 *1]
 11160 000078AE 4989C0                  	mov r8, rax
 11161 000078B1 488B5D18                	mov rbx, COUNT
 11162 000078B5 4883C303                	add rbx,3
 11163 000078B9 48C1E303                	shl rbx,3
 11164 000078BD 4801EB                  	add rbx, rbp
 11165 000078C0 488B6D00                	mov rbp, [rbp]
 11166 000078C4 B900000000              	mov rcx,0
 11167 000078C9 BA03000000              	mov rdx, 3
 11168 000078CE 4889D0                  	mov rax, rdx
 11169 000078D1 48FFC8                  	dec rax
 11170 000078D4 48C1E003                	shl rax,3
 11171 000078D8 4801E0                  	add rax, rsp
 11172                                  	.L_tc_recycle_frame_loop_0918:
 11173 000078DB 4839D1                  	cmp rcx, rdx
 11174 000078DE 7414                    	je .L_tc_recycle_frame_done_0918
 11175 000078E0 4C8B08                  	mov r9, qword [rax]
 11176 000078E3 4C890B                  	mov qword [rbx],r9
 11177 000078E6 4883E808                	sub rax,8
 11178 000078EA 4883EB08                	sub rbx,8
 11179 000078EE 4883C101                	add rcx,1
 11180 000078F2 EBE7                    	jmp .L_tc_recycle_frame_loop_0918
 11181                                  	.L_tc_recycle_frame_done_0918:
 11182 000078F4 4883C308                	add rbx,8
 11183 000078F8 4889DC                  	mov rsp,rbx
 11184 000078FB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11185                                  .L_if_end_0577:
 11186                                  .L_if_end_0578:
 11187                                  .L_if_end_0579:
 11188 000078FF EB6C                    	jmp .L_if_end_057a
 11189                                  .L_if_else_04f5:
 11190                                  	; preparing a tail-call
 11191 00007901 6A00                    	push 0	; arg count
 11192 00007903 488B4510                	mov rax, ENV
 11193 00007907 488B00                  	mov rax, qword [rax + 8 * 0]
 11194 0000790A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11195 0000790D 803804                  	cmp byte [rax], T_closure
 11196 00007910 0F8571FB0000            	jne L_error_non_closure
 11197 00007916 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11198 00007919 FF7508                  	push qword [rbp + 8 *1]
 11199 0000791C 4989C0                  	mov r8, rax
 11200 0000791F 488B5D18                	mov rbx, COUNT
 11201 00007923 4883C303                	add rbx,3
 11202 00007927 48C1E303                	shl rbx,3
 11203 0000792B 4801EB                  	add rbx, rbp
 11204 0000792E 488B6D00                	mov rbp, [rbp]
 11205 00007932 B900000000              	mov rcx,0
 11206 00007937 BA03000000              	mov rdx, 3
 11207 0000793C 4889D0                  	mov rax, rdx
 11208 0000793F 48FFC8                  	dec rax
 11209 00007942 48C1E003                	shl rax,3
 11210 00007946 4801E0                  	add rax, rsp
 11211                                  	.L_tc_recycle_frame_loop_0919:
 11212 00007949 4839D1                  	cmp rcx, rdx
 11213 0000794C 7414                    	je .L_tc_recycle_frame_done_0919
 11214 0000794E 4C8B08                  	mov r9, qword [rax]
 11215 00007951 4C890B                  	mov qword [rbx],r9
 11216 00007954 4883E808                	sub rax,8
 11217 00007958 4883EB08                	sub rbx,8
 11218 0000795C 4883C101                	add rcx,1
 11219 00007960 EBE7                    	jmp .L_tc_recycle_frame_loop_0919
 11220                                  	.L_tc_recycle_frame_done_0919:
 11221 00007962 4883C308                	add rbx,8
 11222 00007966 4889DC                  	mov rsp,rbx
 11223 00007969 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11224                                  .L_if_end_057a:
 11225                                  .L_if_end_057b:
 11226                                  .L_if_end_057c:
 11227 0000796D C9                      	leave
 11228 0000796E C22000                  	ret AND_KILL_FRAME(2)
 11229                                  .L_lambda_simple_end_072d:	; new closure is in rax
 11230 00007971 50                      	push rax
 11231 00007972 6A01                    	push 1	; arg count
 11232 00007974 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11233 00007979 E8B2FB0000              	call malloc
 11234 0000797E 50                      	push rax
 11235 0000797F BF08000000              	mov rdi, 8 * 1	; new rib
 11236 00007984 E8A7FB0000              	call malloc
 11237 00007989 50                      	push rax
 11238 0000798A BF10000000              	mov rdi, 8 * 2	; extended env
 11239 0000798F E89CFB0000              	call malloc
 11240 00007994 488B7D10                	mov rdi, ENV
 11241 00007998 BE00000000              	mov rsi, 0
 11242 0000799D BA01000000              	mov rdx, 1
 11243                                  .L_lambda_simple_env_loop_072e:	; ext_env[i + 1] <-- env[i]
 11244 000079A2 4883FE01                	cmp rsi, 1
 11245 000079A6 7410                    	je .L_lambda_simple_env_end_072e
 11246 000079A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11247 000079AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11248 000079B0 48FFC6                  	inc rsi
 11249 000079B3 48FFC2                  	inc rdx
 11250 000079B6 EBEA                    	jmp .L_lambda_simple_env_loop_072e
 11251                                  .L_lambda_simple_env_end_072e:
 11252 000079B8 5B                      	pop rbx
 11253 000079B9 BE00000000              	mov rsi, 0
 11254                                  .L_lambda_simple_params_loop_072e:	; copy params
 11255 000079BE 4883FE01                	cmp rsi, 1
 11256 000079C2 740E                    	je .L_lambda_simple_params_end_072e
 11257 000079C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11258 000079C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11259 000079CD 48FFC6                  	inc rsi
 11260 000079D0 EBEC                    	jmp .L_lambda_simple_params_loop_072e
 11261                                  .L_lambda_simple_params_end_072e:
 11262 000079D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11263 000079D5 4889C3                  	mov rbx, rax
 11264 000079D8 58                      	pop rax
 11265 000079D9 C60004                  	mov byte [rax], T_closure
 11266 000079DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11267 000079E0 48C74009[ED790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072e
 11268 000079E8 E90C040000              	jmp .L_lambda_simple_end_072e
 11269                                  .L_lambda_simple_code_072e:	; lambda-simple body
 11270 000079ED 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11271 000079F3 740B                    	je .L_lambda_simple_arity_check_ok_0813
 11272 000079F5 FF742410                	push qword [rsp + 8 * 2]
 11273 000079F9 6A01                    	push 1
 11274 000079FB E9E9FA0000              	jmp L_error_incorrect_arity_simple
 11275                                  .L_lambda_simple_arity_check_ok_0813:
 11276 00007A00 C8000000                	enter 0, 0
 11277 00007A04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11278 00007A09 E822FB0000              	call malloc
 11279 00007A0E 50                      	push rax
 11280 00007A0F 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 11281 00007A13 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11282 00007A17 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 11283 00007A1C E80FFB0000              	call malloc
 11284 00007A21 50                      	push rax
 11285 00007A22 BF18000000              	mov rdi, 8 * 3	; extended env
 11286 00007A27 E804FB0000              	call malloc
 11287 00007A2C 488B7D10                	mov rdi, ENV
 11288 00007A30 BE00000000              	mov rsi, 0
 11289 00007A35 BA01000000              	mov rdx, 1
 11290                                  .L_lambda_opt_env_loop_00e6:	; ext_env[i + 1] <-- env[i] copy all the array
 11291 00007A3A 4883FE02                	cmp rsi, 2
 11292 00007A3E 7410                    	je .L_lambda_opt_env_end_00e6
 11293 00007A40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11294 00007A44 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11295 00007A48 48FFC6                  	inc rsi
 11296 00007A4B 48FFC2                  	inc rdx
 11297 00007A4E EBEA                    	jmp .L_lambda_opt_env_loop_00e6
 11298                                  .L_lambda_opt_env_end_00e6:
 11299 00007A50 5B                      	pop rbx
 11300 00007A51 BE00000000              	mov rsi, 0
 11301                                  .L_lambda_opt_params_loop_02b0:	; copy params
 11302 00007A56 4883FE01                	cmp rsi, 1
 11303 00007A5A 740E                    	je .L_lambda_opt_params_end_01cb
 11304 00007A5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11305 00007A61 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11306 00007A65 48FFC6                  	inc rsi
 11307 00007A68 EBEC                    	jmp .L_lambda_opt_params_loop_02b0
 11308                                  .L_lambda_opt_params_end_01cb:
 11309 00007A6A 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 11310 00007A6D 4889C3                  	mov rbx, rax
 11311 00007A70 58                      	pop rax
 11312 00007A71 C60004                  	mov byte [rax], T_closure
 11313 00007A74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11314 00007A78 48C74009[857A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e6
 11315 00007A80 E970030000              	jmp .L_lambda_opt_end_01cb
 11316                                  .L_lambda_opt_code_00e6:	; lambda-opt body
 11317 00007A85 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11318 00007A8B 7D0B                    	jge .L_lambda_simple_arity_check_ok_0814
 11319 00007A8D FF742410                	push qword [rsp + 8 * 2]
 11320 00007A91 6A01                    	push 1
 11321 00007A93 E951FA0000              	jmp L_error_incorrect_arity_simple
 11322                                  .L_lambda_simple_arity_check_ok_0814:
 11323 00007A98 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 11324 00007A9D 4983E801                	sub r8, 1
 11325 00007AA1 4C89C3                  	mov rbx,r8
 11326 00007AA4 4983F800                	cmp r8, 0
 11327 00007AA8 7535                    	jne .L_lambda_opt_params_loop_02b2
 11328 00007AAA 488B542410              	mov rdx, qword [rsp + 8 * 2]
 11329 00007AAF 4883C203                	add rdx , 3
 11330 00007AB3 4883EC08                	sub rsp , 8
 11331 00007AB7 4889E1                  	mov rcx, rsp
 11332                                  .L_lambda_opt_stack_adjusted_02b1: ;pushing down the stack of the current function
 11333 00007ABA 488B5908                	mov rbx, qword [rcx + 8 * 1]
 11334 00007ABE 488919                  	mov qword[rcx] , rbx
 11335 00007AC1 4883C108                	add rcx , 8
 11336 00007AC5 48FFCA                  	dec rdx
 11337 00007AC8 4883FA00                	cmp rdx, 0
 11338 00007ACC 75EC                    	jne .L_lambda_opt_stack_adjusted_02b1
 11339 00007ACE 48FF442410              	inc qword [rsp + 8 * 2]
 11340 00007AD3 48C701[01000000]        	mov qword [rcx], sob_nil 
 11341 00007ADA E9A2000000              	jmp .L_lambda_opt_end_01cc
 11342                                  	.L_lambda_opt_params_loop_02b2:
 11343 00007ADF 488B542410              	mov rdx, qword [rsp + 8*2]
 11344 00007AE4 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 11345 00007AE9 4C89C2                  	mov rdx, r8
 11346 00007AEC 49B9-                   	mov r9, sob_nil
 11346 00007AEE [0100000000000000] 
 11347                                  	.L_lambda_opt_params_loop_02b1: ;loop for copying the opt into list
 11348 00007AF6 BF11000000              	mov rdi, (1 + 8 + 8)
 11349 00007AFB E830FA0000              	call malloc
 11350 00007B00 C60021                  	mov byte[rax], T_pair
 11351 00007B03 488B19                  	mov rbx, qword [rcx]
 11352 00007B06 48895801                	mov SOB_PAIR_CAR(rax), rbx
 11353 00007B0A 4C894809                	mov SOB_PAIR_CDR(rax), r9
 11354 00007B0E 4989C1                  	mov r9, rax
 11355 00007B11 48FFCA                  	dec rdx
 11356 00007B14 4883E908                	sub rcx, 8
 11357 00007B18 4883FA00                	cmp rdx, 0
 11358 00007B1C 75D8                    	jne .L_lambda_opt_params_loop_02b1
 11359 00007B1E 488B542410              	mov rdx, qword [rsp + 8 * 2]
 11360 00007B23 4889E0                  	mov rax, rsp
 11361 00007B26 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 11362 00007B2B 4C89C1                  	mov rcx, r8
 11363 00007B2E 48FFC9                  	dec rcx
 11364 00007B31 4883C203                	add rdx, 3
 11365 00007B35 4829CA                  	sub rdx,rcx
 11366 00007B38 48C1E103                	shl rcx, 3
 11367                                  	.L_lambda_opt_stack_adjusted_02b2:
 11368 00007B3C 4883FA00                	cmp rdx, 0
 11369 00007B40 7419                    	je .L_lambda_opt_params_end_01cc
 11370 00007B42 4889D8                  	mov rax, rbx
 11371 00007B45 4829C8                  	sub rax, rcx
 11372 00007B48 488B30                  	mov rsi, qword [rax]
 11373 00007B4B 488933                  	mov [rbx], rsi
 11374 00007B4E 4883EB08                	sub rbx, 8
 11375 00007B52 48FFCA                  	dec rdx
 11376 00007B55 4883FA00                	cmp rdx, 0
 11377 00007B59 75E1                    	jne .L_lambda_opt_stack_adjusted_02b2
 11378                                  	.L_lambda_opt_params_end_01cc:
 11379 00007B5B 4801CC                  	add rsp,rcx
 11380 00007B5E BB01000000              	mov rbx, 1
 11381 00007B63 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 11382 00007B68 4883C303                	add rbx,3
 11383 00007B6C 4C29C3                  	sub rbx,r8
 11384 00007B6F 48C1E303                	shl rbx, 3
 11385 00007B73 4801E3                  	add rbx, rsp
 11386 00007B76 4C890B                  	mov qword[rbx] , r9
 11387 00007B79 49FFC8                  	dec r8
 11388 00007B7C 4C29442410              	sub qword [rsp + 8 * 2], r8
 11389                                  	.L_lambda_opt_end_01cc:
 11390 00007B81 C8000000                	enter 0, 0
 11391                                  	; preparing a non-tail-call
 11392 00007B85 488B4528                	mov rax, PARAM(1)	; param s
 11393 00007B89 50                      	push rax
 11394 00007B8A 6A01                    	push 1	; arg count
 11395 00007B8C 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 11396 00007B94 803805                  	cmp byte [rax], T_undefined
 11397 00007B97 0F8466F80000            	je L_error_fvar_undefined
 11398 00007B9D 803804                  	cmp byte [rax], T_closure
 11399 00007BA0 0F85E1F80000            	jne L_error_non_closure
 11400 00007BA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11401 00007BA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11402 00007BAC 483D[02000000]          	cmp rax, sob_boolean_false
 11403 00007BB2 0F8481000000            	je .L_if_else_04f8
 11404                                  	; preparing a tail-call
 11405 00007BB8 488B4520                	mov rax, PARAM(0)	; param a
 11406 00007BBC 50                      	push rax
 11407 00007BBD 48B8-                   	mov rax, L_constants + 2135
 11407 00007BBF [5708000000000000] 
 11408 00007BC7 50                      	push rax
 11409 00007BC8 6A02                    	push 2	; arg count
 11410 00007BCA 488B4510                	mov rax, ENV
 11411 00007BCE 488B00                  	mov rax, qword [rax + 8 * 0]
 11412 00007BD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11413 00007BD4 803804                  	cmp byte [rax], T_closure
 11414 00007BD7 0F85AAF80000            	jne L_error_non_closure
 11415 00007BDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11416 00007BE0 FF7508                  	push qword [rbp + 8 *1]
 11417 00007BE3 4989C0                  	mov r8, rax
 11418 00007BE6 488B5D18                	mov rbx, COUNT
 11419 00007BEA 4883C303                	add rbx,3
 11420 00007BEE 48C1E303                	shl rbx,3
 11421 00007BF2 4801EB                  	add rbx, rbp
 11422 00007BF5 488B6D00                	mov rbp, [rbp]
 11423 00007BF9 B900000000              	mov rcx,0
 11424 00007BFE BA05000000              	mov rdx, 5
 11425 00007C03 4889D0                  	mov rax, rdx
 11426 00007C06 48FFC8                  	dec rax
 11427 00007C09 48C1E003                	shl rax,3
 11428 00007C0D 4801E0                  	add rax, rsp
 11429                                  	.L_tc_recycle_frame_loop_091a:
 11430 00007C10 4839D1                  	cmp rcx, rdx
 11431 00007C13 7414                    	je .L_tc_recycle_frame_done_091a
 11432 00007C15 4C8B08                  	mov r9, qword [rax]
 11433 00007C18 4C890B                  	mov qword [rbx],r9
 11434 00007C1B 4883E808                	sub rax,8
 11435 00007C1F 4883EB08                	sub rbx,8
 11436 00007C23 4883C101                	add rcx,1
 11437 00007C27 EBE7                    	jmp .L_tc_recycle_frame_loop_091a
 11438                                  	.L_tc_recycle_frame_done_091a:
 11439 00007C29 4883C308                	add rbx,8
 11440 00007C2D 4889DC                  	mov rsp,rbx
 11441 00007C30 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11442 00007C34 E9B8010000              	jmp .L_if_end_057d
 11443                                  .L_if_else_04f8:
 11444                                  	; preparing a tail-call
 11445                                  	; preparing a non-tail-call
 11446 00007C39 488B4528                	mov rax, PARAM(1)	; param s
 11447 00007C3D 50                      	push rax
 11448 00007C3E 48B8-                   	mov rax, L_constants + 2135
 11448 00007C40 [5708000000000000] 
 11449 00007C48 50                      	push rax
 11450 00007C49 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 11451 00007C51 803805                  	cmp byte [rax], T_undefined
 11452 00007C54 0F84A9F70000            	je L_error_fvar_undefined
 11453 00007C5A 50                      	push rax
 11454 00007C5B 6A03                    	push 3	; arg count
 11455 00007C5D 488B0425[FF130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11456 00007C65 803805                  	cmp byte [rax], T_undefined
 11457 00007C68 0F8495F70000            	je L_error_fvar_undefined
 11458 00007C6E 803804                  	cmp byte [rax], T_closure
 11459 00007C71 0F8510F80000            	jne L_error_non_closure
 11460 00007C77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11461 00007C7A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11462 00007C7D 50                      	push rax
 11463 00007C7E 6A01                    	push 1	; arg count
 11464 00007C80 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11465 00007C85 E8A6F80000              	call malloc
 11466 00007C8A 50                      	push rax
 11467 00007C8B BF10000000              	mov rdi, 8 * 2	; new rib
 11468 00007C90 E89BF80000              	call malloc
 11469 00007C95 50                      	push rax
 11470 00007C96 BF20000000              	mov rdi, 8 * 4	; extended env
 11471 00007C9B E890F80000              	call malloc
 11472 00007CA0 488B7D10                	mov rdi, ENV
 11473 00007CA4 BE00000000              	mov rsi, 0
 11474 00007CA9 BA01000000              	mov rdx, 1
 11475                                  .L_lambda_simple_env_loop_072f:	; ext_env[i + 1] <-- env[i]
 11476 00007CAE 4883FE03                	cmp rsi, 3
 11477 00007CB2 7410                    	je .L_lambda_simple_env_end_072f
 11478 00007CB4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11479 00007CB8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11480 00007CBC 48FFC6                  	inc rsi
 11481 00007CBF 48FFC2                  	inc rdx
 11482 00007CC2 EBEA                    	jmp .L_lambda_simple_env_loop_072f
 11483                                  .L_lambda_simple_env_end_072f:
 11484 00007CC4 5B                      	pop rbx
 11485 00007CC5 BE00000000              	mov rsi, 0
 11486                                  .L_lambda_simple_params_loop_072f:	; copy params
 11487 00007CCA 4883FE02                	cmp rsi, 2
 11488 00007CCE 740E                    	je .L_lambda_simple_params_end_072f
 11489 00007CD0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11490 00007CD5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11491 00007CD9 48FFC6                  	inc rsi
 11492 00007CDC EBEC                    	jmp .L_lambda_simple_params_loop_072f
 11493                                  .L_lambda_simple_params_end_072f:
 11494 00007CDE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11495 00007CE1 4889C3                  	mov rbx, rax
 11496 00007CE4 58                      	pop rax
 11497 00007CE5 C60004                  	mov byte [rax], T_closure
 11498 00007CE8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11499 00007CEC 48C74009[F97C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_072f
 11500 00007CF4 E998000000              	jmp .L_lambda_simple_end_072f
 11501                                  .L_lambda_simple_code_072f:	; lambda-simple body
 11502 00007CF9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11503 00007CFF 740B                    	je .L_lambda_simple_arity_check_ok_0815
 11504 00007D01 FF742410                	push qword [rsp + 8 * 2]
 11505 00007D05 6A01                    	push 1
 11506 00007D07 E9DDF70000              	jmp L_error_incorrect_arity_simple
 11507                                  .L_lambda_simple_arity_check_ok_0815:
 11508 00007D0C C8000000                	enter 0, 0
 11509                                  	; preparing a tail-call
 11510 00007D10 488B4520                	mov rax, PARAM(0)	; param b
 11511 00007D14 50                      	push rax
 11512 00007D15 488B4510                	mov rax, ENV
 11513 00007D19 488B00                  	mov rax, qword [rax + 8 * 0]
 11514 00007D1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11515 00007D1F 50                      	push rax
 11516 00007D20 6A02                    	push 2	; arg count
 11517 00007D22 488B4510                	mov rax, ENV
 11518 00007D26 488B4008                	mov rax, qword [rax + 8 * 1]
 11519 00007D2A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11520 00007D2D 803804                  	cmp byte [rax], T_closure
 11521 00007D30 0F8551F70000            	jne L_error_non_closure
 11522 00007D36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11523 00007D39 FF7508                  	push qword [rbp + 8 *1]
 11524 00007D3C 4989C0                  	mov r8, rax
 11525 00007D3F 488B5D18                	mov rbx, COUNT
 11526 00007D43 4883C303                	add rbx,3
 11527 00007D47 48C1E303                	shl rbx,3
 11528 00007D4B 4801EB                  	add rbx, rbp
 11529 00007D4E 488B6D00                	mov rbp, [rbp]
 11530 00007D52 B900000000              	mov rcx,0
 11531 00007D57 BA05000000              	mov rdx, 5
 11532 00007D5C 4889D0                  	mov rax, rdx
 11533 00007D5F 48FFC8                  	dec rax
 11534 00007D62 48C1E003                	shl rax,3
 11535 00007D66 4801E0                  	add rax, rsp
 11536                                  	.L_tc_recycle_frame_loop_091c:
 11537 00007D69 4839D1                  	cmp rcx, rdx
 11538 00007D6C 7414                    	je .L_tc_recycle_frame_done_091c
 11539 00007D6E 4C8B08                  	mov r9, qword [rax]
 11540 00007D71 4C890B                  	mov qword [rbx],r9
 11541 00007D74 4883E808                	sub rax,8
 11542 00007D78 4883EB08                	sub rbx,8
 11543 00007D7C 4883C101                	add rcx,1
 11544 00007D80 EBE7                    	jmp .L_tc_recycle_frame_loop_091c
 11545                                  	.L_tc_recycle_frame_done_091c:
 11546 00007D82 4883C308                	add rbx,8
 11547 00007D86 4889DC                  	mov rsp,rbx
 11548 00007D89 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11549 00007D8D C9                      	leave
 11550 00007D8E C21800                  	ret AND_KILL_FRAME(1)
 11551                                  .L_lambda_simple_end_072f:	; new closure is in rax
 11552 00007D91 803804                  	cmp byte [rax], T_closure
 11553 00007D94 0F85EDF60000            	jne L_error_non_closure
 11554 00007D9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11555 00007D9D FF7508                  	push qword [rbp + 8 *1]
 11556 00007DA0 4989C0                  	mov r8, rax
 11557 00007DA3 488B5D18                	mov rbx, COUNT
 11558 00007DA7 4883C303                	add rbx,3
 11559 00007DAB 48C1E303                	shl rbx,3
 11560 00007DAF 4801EB                  	add rbx, rbp
 11561 00007DB2 488B6D00                	mov rbp, [rbp]
 11562 00007DB6 B900000000              	mov rcx,0
 11563 00007DBB BA04000000              	mov rdx, 4
 11564 00007DC0 4889D0                  	mov rax, rdx
 11565 00007DC3 48FFC8                  	dec rax
 11566 00007DC6 48C1E003                	shl rax,3
 11567 00007DCA 4801E0                  	add rax, rsp
 11568                                  	.L_tc_recycle_frame_loop_091b:
 11569 00007DCD 4839D1                  	cmp rcx, rdx
 11570 00007DD0 7414                    	je .L_tc_recycle_frame_done_091b
 11571 00007DD2 4C8B08                  	mov r9, qword [rax]
 11572 00007DD5 4C890B                  	mov qword [rbx],r9
 11573 00007DD8 4883E808                	sub rax,8
 11574 00007DDC 4883EB08                	sub rbx,8
 11575 00007DE0 4883C101                	add rcx,1
 11576 00007DE4 EBE7                    	jmp .L_tc_recycle_frame_loop_091b
 11577                                  	.L_tc_recycle_frame_done_091b:
 11578 00007DE6 4883C308                	add rbx,8
 11579 00007DEA 4889DC                  	mov rsp,rbx
 11580 00007DED 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11581                                  .L_if_end_057d:
 11582                                  	LEAVE
    49 00007DF1 C9                  <1>  leave
 11583 00007DF2 C22000                  	ret AND_KILL_FRAME(2)
 11584                                  .L_lambda_opt_end_01cb:
 11585 00007DF5 C9                      	leave
 11586 00007DF6 C21800                  	ret AND_KILL_FRAME(1)
 11587                                  .L_lambda_simple_end_072e:	; new closure is in rax
 11588 00007DF9 803804                  	cmp byte [rax], T_closure
 11589 00007DFC 0F8585F60000            	jne L_error_non_closure
 11590 00007E02 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11591 00007E05 FF7508                  	push qword [rbp + 8 *1]
 11592 00007E08 4989C0                  	mov r8, rax
 11593 00007E0B 488B5D18                	mov rbx, COUNT
 11594 00007E0F 4883C303                	add rbx,3
 11595 00007E13 48C1E303                	shl rbx,3
 11596 00007E17 4801EB                  	add rbx, rbp
 11597 00007E1A 488B6D00                	mov rbp, [rbp]
 11598 00007E1E B900000000              	mov rcx,0
 11599 00007E23 BA04000000              	mov rdx, 4
 11600 00007E28 4889D0                  	mov rax, rdx
 11601 00007E2B 48FFC8                  	dec rax
 11602 00007E2E 48C1E003                	shl rax,3
 11603 00007E32 4801E0                  	add rax, rsp
 11604                                  	.L_tc_recycle_frame_loop_090c:
 11605 00007E35 4839D1                  	cmp rcx, rdx
 11606 00007E38 7414                    	je .L_tc_recycle_frame_done_090c
 11607 00007E3A 4C8B08                  	mov r9, qword [rax]
 11608 00007E3D 4C890B                  	mov qword [rbx],r9
 11609 00007E40 4883E808                	sub rax,8
 11610 00007E44 4883EB08                	sub rbx,8
 11611 00007E48 4883C101                	add rcx,1
 11612 00007E4C EBE7                    	jmp .L_tc_recycle_frame_loop_090c
 11613                                  	.L_tc_recycle_frame_done_090c:
 11614 00007E4E 4883C308                	add rbx,8
 11615 00007E52 4889DC                  	mov rsp,rbx
 11616 00007E55 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11617 00007E59 C9                      	leave
 11618 00007E5A C21800                  	ret AND_KILL_FRAME(1)
 11619                                  .L_lambda_simple_end_072c:	; new closure is in rax
 11620 00007E5D 803804                  	cmp byte [rax], T_closure
 11621 00007E60 0F8521F60000            	jne L_error_non_closure
 11622 00007E66 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11623 00007E69 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11624 00007E6C 48890425[7C0E0000]      	mov qword [free_var_2], rax
 11625 00007E74 48B8-                   	mov rax, sob_void
 11625 00007E76 [0000000000000000] 
 11626                                  
 11627 00007E7E 4889C7                  	mov rdi, rax
 11628 00007E81 E8FFF80000              	call print_sexpr_if_not_void
 11629                                  	; preparing a non-tail-call
 11630 00007E86 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11631 00007E8B E8A0F60000              	call malloc
 11632 00007E90 50                      	push rax
 11633 00007E91 BF00000000              	mov rdi, 8 * 0	; new rib
 11634 00007E96 E895F60000              	call malloc
 11635 00007E9B 50                      	push rax
 11636 00007E9C BF08000000              	mov rdi, 8 * 1	; extended env
 11637 00007EA1 E88AF60000              	call malloc
 11638 00007EA6 488B7D10                	mov rdi, ENV
 11639 00007EAA BE00000000              	mov rsi, 0
 11640 00007EAF BA01000000              	mov rdx, 1
 11641                                  .L_lambda_simple_env_loop_0730:	; ext_env[i + 1] <-- env[i]
 11642 00007EB4 4883FE00                	cmp rsi, 0
 11643 00007EB8 7410                    	je .L_lambda_simple_env_end_0730
 11644 00007EBA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11645 00007EBE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11646 00007EC2 48FFC6                  	inc rsi
 11647 00007EC5 48FFC2                  	inc rdx
 11648 00007EC8 EBEA                    	jmp .L_lambda_simple_env_loop_0730
 11649                                  .L_lambda_simple_env_end_0730:
 11650 00007ECA 5B                      	pop rbx
 11651 00007ECB BE00000000              	mov rsi, 0
 11652                                  .L_lambda_simple_params_loop_0730:	; copy params
 11653 00007ED0 4883FE00                	cmp rsi, 0
 11654 00007ED4 740E                    	je .L_lambda_simple_params_end_0730
 11655 00007ED6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11656 00007EDB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11657 00007EDF 48FFC6                  	inc rsi
 11658 00007EE2 EBEC                    	jmp .L_lambda_simple_params_loop_0730
 11659                                  .L_lambda_simple_params_end_0730:
 11660 00007EE4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11661 00007EE7 4889C3                  	mov rbx, rax
 11662 00007EEA 58                      	pop rax
 11663 00007EEB C60004                  	mov byte [rax], T_closure
 11664 00007EEE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11665 00007EF2 48C74009[FF7E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0730
 11666 00007EFA E9A4000000              	jmp .L_lambda_simple_end_0730
 11667                                  .L_lambda_simple_code_0730:	; lambda-simple body
 11668 00007EFF 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11669 00007F05 740B                    	je .L_lambda_simple_arity_check_ok_0816
 11670 00007F07 FF742410                	push qword [rsp + 8 * 2]
 11671 00007F0B 6A00                    	push 0
 11672 00007F0D E9D7F50000              	jmp L_error_incorrect_arity_simple
 11673                                  .L_lambda_simple_arity_check_ok_0816:
 11674 00007F12 C8000000                	enter 0, 0
 11675                                  	; preparing a tail-call
 11676 00007F16 48B8-                   	mov rax, L_constants + 2187
 11676 00007F18 [8B08000000000000] 
 11677 00007F20 50                      	push rax
 11678 00007F21 48B8-                   	mov rax, L_constants + 2279
 11678 00007F23 [E708000000000000] 
 11679 00007F2B 50                      	push rax
 11680 00007F2C 6A02                    	push 2	; arg count
 11681 00007F2E 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 11682 00007F36 803805                  	cmp byte [rax], T_undefined
 11683 00007F39 0F84C4F40000            	je L_error_fvar_undefined
 11684 00007F3F 803804                  	cmp byte [rax], T_closure
 11685 00007F42 0F853FF50000            	jne L_error_non_closure
 11686 00007F48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11687 00007F4B FF7508                  	push qword [rbp + 8 *1]
 11688 00007F4E 4989C0                  	mov r8, rax
 11689 00007F51 488B5D18                	mov rbx, COUNT
 11690 00007F55 4883C303                	add rbx,3
 11691 00007F59 48C1E303                	shl rbx,3
 11692 00007F5D 4801EB                  	add rbx, rbp
 11693 00007F60 488B6D00                	mov rbp, [rbp]
 11694 00007F64 B900000000              	mov rcx,0
 11695 00007F69 BA05000000              	mov rdx, 5
 11696 00007F6E 4889D0                  	mov rax, rdx
 11697 00007F71 48FFC8                  	dec rax
 11698 00007F74 48C1E003                	shl rax,3
 11699 00007F78 4801E0                  	add rax, rsp
 11700                                  	.L_tc_recycle_frame_loop_091d:
 11701 00007F7B 4839D1                  	cmp rcx, rdx
 11702 00007F7E 7414                    	je .L_tc_recycle_frame_done_091d
 11703 00007F80 4C8B08                  	mov r9, qword [rax]
 11704 00007F83 4C890B                  	mov qword [rbx],r9
 11705 00007F86 4883E808                	sub rax,8
 11706 00007F8A 4883EB08                	sub rbx,8
 11707 00007F8E 4883C101                	add rcx,1
 11708 00007F92 EBE7                    	jmp .L_tc_recycle_frame_loop_091d
 11709                                  	.L_tc_recycle_frame_done_091d:
 11710 00007F94 4883C308                	add rbx,8
 11711 00007F98 4889DC                  	mov rsp,rbx
 11712 00007F9B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11713 00007F9F C9                      	leave
 11714 00007FA0 C21000                  	ret AND_KILL_FRAME(0)
 11715                                  .L_lambda_simple_end_0730:	; new closure is in rax
 11716 00007FA3 50                      	push rax
 11717 00007FA4 6A01                    	push 1	; arg count
 11718 00007FA6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11719 00007FAB E880F50000              	call malloc
 11720 00007FB0 50                      	push rax
 11721 00007FB1 BF00000000              	mov rdi, 8 * 0	; new rib
 11722 00007FB6 E875F50000              	call malloc
 11723 00007FBB 50                      	push rax
 11724 00007FBC BF08000000              	mov rdi, 8 * 1	; extended env
 11725 00007FC1 E86AF50000              	call malloc
 11726 00007FC6 488B7D10                	mov rdi, ENV
 11727 00007FCA BE00000000              	mov rsi, 0
 11728 00007FCF BA01000000              	mov rdx, 1
 11729                                  .L_lambda_simple_env_loop_0731:	; ext_env[i + 1] <-- env[i]
 11730 00007FD4 4883FE00                	cmp rsi, 0
 11731 00007FD8 7410                    	je .L_lambda_simple_env_end_0731
 11732 00007FDA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11733 00007FDE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11734 00007FE2 48FFC6                  	inc rsi
 11735 00007FE5 48FFC2                  	inc rdx
 11736 00007FE8 EBEA                    	jmp .L_lambda_simple_env_loop_0731
 11737                                  .L_lambda_simple_env_end_0731:
 11738 00007FEA 5B                      	pop rbx
 11739 00007FEB BE00000000              	mov rsi, 0
 11740                                  .L_lambda_simple_params_loop_0731:	; copy params
 11741 00007FF0 4883FE00                	cmp rsi, 0
 11742 00007FF4 740E                    	je .L_lambda_simple_params_end_0731
 11743 00007FF6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11744 00007FFB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11745 00007FFF 48FFC6                  	inc rsi
 11746 00008002 EBEC                    	jmp .L_lambda_simple_params_loop_0731
 11747                                  .L_lambda_simple_params_end_0731:
 11748 00008004 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11749 00008007 4889C3                  	mov rbx, rax
 11750 0000800A 58                      	pop rax
 11751 0000800B C60004                  	mov byte [rax], T_closure
 11752 0000800E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11753 00008012 48C74009[1F800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0731
 11754 0000801A E9340D0000              	jmp .L_lambda_simple_end_0731
 11755                                  .L_lambda_simple_code_0731:	; lambda-simple body
 11756 0000801F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11757 00008025 740B                    	je .L_lambda_simple_arity_check_ok_0817
 11758 00008027 FF742410                	push qword [rsp + 8 * 2]
 11759 0000802B 6A01                    	push 1
 11760 0000802D E9B7F40000              	jmp L_error_incorrect_arity_simple
 11761                                  .L_lambda_simple_arity_check_ok_0817:
 11762 00008032 C8000000                	enter 0, 0
 11763                                  	; preparing a tail-call
 11764 00008036 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11765 0000803B E8F0F40000              	call malloc
 11766 00008040 50                      	push rax
 11767 00008041 BF08000000              	mov rdi, 8 * 1	; new rib
 11768 00008046 E8E5F40000              	call malloc
 11769 0000804B 50                      	push rax
 11770 0000804C BF10000000              	mov rdi, 8 * 2	; extended env
 11771 00008051 E8DAF40000              	call malloc
 11772 00008056 488B7D10                	mov rdi, ENV
 11773 0000805A BE00000000              	mov rsi, 0
 11774 0000805F BA01000000              	mov rdx, 1
 11775                                  .L_lambda_simple_env_loop_0732:	; ext_env[i + 1] <-- env[i]
 11776 00008064 4883FE01                	cmp rsi, 1
 11777 00008068 7410                    	je .L_lambda_simple_env_end_0732
 11778 0000806A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11779 0000806E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11780 00008072 48FFC6                  	inc rsi
 11781 00008075 48FFC2                  	inc rdx
 11782 00008078 EBEA                    	jmp .L_lambda_simple_env_loop_0732
 11783                                  .L_lambda_simple_env_end_0732:
 11784 0000807A 5B                      	pop rbx
 11785 0000807B BE00000000              	mov rsi, 0
 11786                                  .L_lambda_simple_params_loop_0732:	; copy params
 11787 00008080 4883FE01                	cmp rsi, 1
 11788 00008084 740E                    	je .L_lambda_simple_params_end_0732
 11789 00008086 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11790 0000808B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11791 0000808F 48FFC6                  	inc rsi
 11792 00008092 EBEC                    	jmp .L_lambda_simple_params_loop_0732
 11793                                  .L_lambda_simple_params_end_0732:
 11794 00008094 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11795 00008097 4889C3                  	mov rbx, rax
 11796 0000809A 58                      	pop rax
 11797 0000809B C60004                  	mov byte [rax], T_closure
 11798 0000809E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11799 000080A2 48C74009[AF800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0732
 11800 000080AA E996090000              	jmp .L_lambda_simple_end_0732
 11801                                  .L_lambda_simple_code_0732:	; lambda-simple body
 11802 000080AF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11803 000080B5 740B                    	je .L_lambda_simple_arity_check_ok_0818
 11804 000080B7 FF742410                	push qword [rsp + 8 * 2]
 11805 000080BB 6A02                    	push 2
 11806 000080BD E927F40000              	jmp L_error_incorrect_arity_simple
 11807                                  .L_lambda_simple_arity_check_ok_0818:
 11808 000080C2 C8000000                	enter 0, 0
 11809                                  	; preparing a non-tail-call
 11810 000080C6 488B4520                	mov rax, PARAM(0)	; param a
 11811 000080CA 50                      	push rax
 11812 000080CB 6A01                    	push 1	; arg count
 11813 000080CD 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 11814 000080D5 803805                  	cmp byte [rax], T_undefined
 11815 000080D8 0F8425F30000            	je L_error_fvar_undefined
 11816 000080DE 803804                  	cmp byte [rax], T_closure
 11817 000080E1 0F85A0F30000            	jne L_error_non_closure
 11818 000080E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11819 000080EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 11820 000080ED 483D[02000000]          	cmp rax, sob_boolean_false
 11821 000080F3 0F84D3020000            	je .L_if_else_0504
 11822                                  	; preparing a non-tail-call
 11823 000080F9 488B4528                	mov rax, PARAM(1)	; param b
 11824 000080FD 50                      	push rax
 11825 000080FE 6A01                    	push 1	; arg count
 11826 00008100 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 11827 00008108 803805                  	cmp byte [rax], T_undefined
 11828 0000810B 0F84F2F20000            	je L_error_fvar_undefined
 11829 00008111 803804                  	cmp byte [rax], T_closure
 11830 00008114 0F856DF30000            	jne L_error_non_closure
 11831 0000811A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11832 0000811D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11833 00008120 483D[02000000]          	cmp rax, sob_boolean_false
 11834 00008126 0F8482000000            	je .L_if_else_04fb
 11835                                  	; preparing a tail-call
 11836 0000812C 488B4528                	mov rax, PARAM(1)	; param b
 11837 00008130 50                      	push rax
 11838 00008131 488B4520                	mov rax, PARAM(0)	; param a
 11839 00008135 50                      	push rax
 11840 00008136 6A02                    	push 2	; arg count
 11841 00008138 488B0425[F20F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11842 00008140 803805                  	cmp byte [rax], T_undefined
 11843 00008143 0F84BAF20000            	je L_error_fvar_undefined
 11844 00008149 803804                  	cmp byte [rax], T_closure
 11845 0000814C 0F8535F30000            	jne L_error_non_closure
 11846 00008152 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11847 00008155 FF7508                  	push qword [rbp + 8 *1]
 11848 00008158 4989C0                  	mov r8, rax
 11849 0000815B 488B5D18                	mov rbx, COUNT
 11850 0000815F 4883C303                	add rbx,3
 11851 00008163 48C1E303                	shl rbx,3
 11852 00008167 4801EB                  	add rbx, rbp
 11853 0000816A 488B6D00                	mov rbp, [rbp]
 11854 0000816E B900000000              	mov rcx,0
 11855 00008173 BA05000000              	mov rdx, 5
 11856 00008178 4889D0                  	mov rax, rdx
 11857 0000817B 48FFC8                  	dec rax
 11858 0000817E 48C1E003                	shl rax,3
 11859 00008182 4801E0                  	add rax, rsp
 11860                                  	.L_tc_recycle_frame_loop_091f:
 11861 00008185 4839D1                  	cmp rcx, rdx
 11862 00008188 7414                    	je .L_tc_recycle_frame_done_091f
 11863 0000818A 4C8B08                  	mov r9, qword [rax]
 11864 0000818D 4C890B                  	mov qword [rbx],r9
 11865 00008190 4883E808                	sub rax,8
 11866 00008194 4883EB08                	sub rbx,8
 11867 00008198 4883C101                	add rcx,1
 11868 0000819C EBE7                    	jmp .L_tc_recycle_frame_loop_091f
 11869                                  	.L_tc_recycle_frame_done_091f:
 11870 0000819E 4883C308                	add rbx,8
 11871 000081A2 4889DC                  	mov rsp,rbx
 11872 000081A5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11873 000081A9 E919020000              	jmp .L_if_end_0580
 11874                                  .L_if_else_04fb:
 11875                                  	; preparing a non-tail-call
 11876 000081AE 488B4528                	mov rax, PARAM(1)	; param b
 11877 000081B2 50                      	push rax
 11878 000081B3 6A01                    	push 1	; arg count
 11879 000081B5 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 11880 000081BD 803805                  	cmp byte [rax], T_undefined
 11881 000081C0 0F843DF20000            	je L_error_fvar_undefined
 11882 000081C6 803804                  	cmp byte [rax], T_closure
 11883 000081C9 0F85B8F20000            	jne L_error_non_closure
 11884 000081CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11885 000081D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11886 000081D5 483D[02000000]          	cmp rax, sob_boolean_false
 11887 000081DB 0F84A5000000            	je .L_if_else_04fa
 11888                                  	; preparing a tail-call
 11889 000081E1 488B4528                	mov rax, PARAM(1)	; param b
 11890 000081E5 50                      	push rax
 11891                                  	; preparing a non-tail-call
 11892 000081E6 488B4520                	mov rax, PARAM(0)	; param a
 11893 000081EA 50                      	push rax
 11894 000081EB 6A01                    	push 1	; arg count
 11895 000081ED 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11896 000081F5 803805                  	cmp byte [rax], T_undefined
 11897 000081F8 0F8405F20000            	je L_error_fvar_undefined
 11898 000081FE 803804                  	cmp byte [rax], T_closure
 11899 00008201 0F8580F20000            	jne L_error_non_closure
 11900 00008207 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11901 0000820A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11902 0000820D 50                      	push rax
 11903 0000820E 6A02                    	push 2	; arg count
 11904 00008210 488B0425[D00F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11905 00008218 803805                  	cmp byte [rax], T_undefined
 11906 0000821B 0F84E2F10000            	je L_error_fvar_undefined
 11907 00008221 803804                  	cmp byte [rax], T_closure
 11908 00008224 0F855DF20000            	jne L_error_non_closure
 11909 0000822A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11910 0000822D FF7508                  	push qword [rbp + 8 *1]
 11911 00008230 4989C0                  	mov r8, rax
 11912 00008233 488B5D18                	mov rbx, COUNT
 11913 00008237 4883C303                	add rbx,3
 11914 0000823B 48C1E303                	shl rbx,3
 11915 0000823F 4801EB                  	add rbx, rbp
 11916 00008242 488B6D00                	mov rbp, [rbp]
 11917 00008246 B900000000              	mov rcx,0
 11918 0000824B BA05000000              	mov rdx, 5
 11919 00008250 4889D0                  	mov rax, rdx
 11920 00008253 48FFC8                  	dec rax
 11921 00008256 48C1E003                	shl rax,3
 11922 0000825A 4801E0                  	add rax, rsp
 11923                                  	.L_tc_recycle_frame_loop_0920:
 11924 0000825D 4839D1                  	cmp rcx, rdx
 11925 00008260 7414                    	je .L_tc_recycle_frame_done_0920
 11926 00008262 4C8B08                  	mov r9, qword [rax]
 11927 00008265 4C890B                  	mov qword [rbx],r9
 11928 00008268 4883E808                	sub rax,8
 11929 0000826C 4883EB08                	sub rbx,8
 11930 00008270 4883C101                	add rcx,1
 11931 00008274 EBE7                    	jmp .L_tc_recycle_frame_loop_0920
 11932                                  	.L_tc_recycle_frame_done_0920:
 11933 00008276 4883C308                	add rbx,8
 11934 0000827A 4889DC                  	mov rsp,rbx
 11935 0000827D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11936 00008281 E941010000              	jmp .L_if_end_057f
 11937                                  .L_if_else_04fa:
 11938                                  	; preparing a non-tail-call
 11939 00008286 488B4528                	mov rax, PARAM(1)	; param b
 11940 0000828A 50                      	push rax
 11941 0000828B 6A01                    	push 1	; arg count
 11942 0000828D 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 11943 00008295 803805                  	cmp byte [rax], T_undefined
 11944 00008298 0F8465F10000            	je L_error_fvar_undefined
 11945 0000829E 803804                  	cmp byte [rax], T_closure
 11946 000082A1 0F85E0F10000            	jne L_error_non_closure
 11947 000082A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11948 000082AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 11949 000082AD 483D[02000000]          	cmp rax, sob_boolean_false
 11950 000082B3 0F84A2000000            	je .L_if_else_04f9
 11951                                  	; preparing a tail-call
 11952 000082B9 488B4528                	mov rax, PARAM(1)	; param b
 11953 000082BD 50                      	push rax
 11954                                  	; preparing a non-tail-call
 11955 000082BE 488B4520                	mov rax, PARAM(0)	; param a
 11956 000082C2 50                      	push rax
 11957 000082C3 6A01                    	push 1	; arg count
 11958 000082C5 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 11959 000082CD 803805                  	cmp byte [rax], T_undefined
 11960 000082D0 0F842DF10000            	je L_error_fvar_undefined
 11961 000082D6 803804                  	cmp byte [rax], T_closure
 11962 000082D9 0F85A8F10000            	jne L_error_non_closure
 11963 000082DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11964 000082E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11965 000082E5 50                      	push rax
 11966 000082E6 6A02                    	push 2	; arg count
 11967 000082E8 488B0425[E10F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11968 000082F0 803805                  	cmp byte [rax], T_undefined
 11969 000082F3 0F840AF10000            	je L_error_fvar_undefined
 11970 000082F9 803804                  	cmp byte [rax], T_closure
 11971 000082FC 0F8585F10000            	jne L_error_non_closure
 11972 00008302 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11973 00008305 FF7508                  	push qword [rbp + 8 *1]
 11974 00008308 4989C0                  	mov r8, rax
 11975 0000830B 488B5D18                	mov rbx, COUNT
 11976 0000830F 4883C303                	add rbx,3
 11977 00008313 48C1E303                	shl rbx,3
 11978 00008317 4801EB                  	add rbx, rbp
 11979 0000831A 488B6D00                	mov rbp, [rbp]
 11980 0000831E B900000000              	mov rcx,0
 11981 00008323 BA05000000              	mov rdx, 5
 11982 00008328 4889D0                  	mov rax, rdx
 11983 0000832B 48FFC8                  	dec rax
 11984 0000832E 48C1E003                	shl rax,3
 11985 00008332 4801E0                  	add rax, rsp
 11986                                  	.L_tc_recycle_frame_loop_0921:
 11987 00008335 4839D1                  	cmp rcx, rdx
 11988 00008338 7414                    	je .L_tc_recycle_frame_done_0921
 11989 0000833A 4C8B08                  	mov r9, qword [rax]
 11990 0000833D 4C890B                  	mov qword [rbx],r9
 11991 00008340 4883E808                	sub rax,8
 11992 00008344 4883EB08                	sub rbx,8
 11993 00008348 4883C101                	add rcx,1
 11994 0000834C EBE7                    	jmp .L_tc_recycle_frame_loop_0921
 11995                                  	.L_tc_recycle_frame_done_0921:
 11996 0000834E 4883C308                	add rbx,8
 11997 00008352 4889DC                  	mov rsp,rbx
 11998 00008355 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 11999 00008359 EB6C                    	jmp .L_if_end_057e
 12000                                  .L_if_else_04f9:
 12001                                  	; preparing a tail-call
 12002 0000835B 6A00                    	push 0	; arg count
 12003 0000835D 488B4510                	mov rax, ENV
 12004 00008361 488B00                  	mov rax, qword [rax + 8 * 0]
 12005 00008364 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12006 00008367 803804                  	cmp byte [rax], T_closure
 12007 0000836A 0F8517F10000            	jne L_error_non_closure
 12008 00008370 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12009 00008373 FF7508                  	push qword [rbp + 8 *1]
 12010 00008376 4989C0                  	mov r8, rax
 12011 00008379 488B5D18                	mov rbx, COUNT
 12012 0000837D 4883C303                	add rbx,3
 12013 00008381 48C1E303                	shl rbx,3
 12014 00008385 4801EB                  	add rbx, rbp
 12015 00008388 488B6D00                	mov rbp, [rbp]
 12016 0000838C B900000000              	mov rcx,0
 12017 00008391 BA03000000              	mov rdx, 3
 12018 00008396 4889D0                  	mov rax, rdx
 12019 00008399 48FFC8                  	dec rax
 12020 0000839C 48C1E003                	shl rax,3
 12021 000083A0 4801E0                  	add rax, rsp
 12022                                  	.L_tc_recycle_frame_loop_0922:
 12023 000083A3 4839D1                  	cmp rcx, rdx
 12024 000083A6 7414                    	je .L_tc_recycle_frame_done_0922
 12025 000083A8 4C8B08                  	mov r9, qword [rax]
 12026 000083AB 4C890B                  	mov qword [rbx],r9
 12027 000083AE 4883E808                	sub rax,8
 12028 000083B2 4883EB08                	sub rbx,8
 12029 000083B6 4883C101                	add rcx,1
 12030 000083BA EBE7                    	jmp .L_tc_recycle_frame_loop_0922
 12031                                  	.L_tc_recycle_frame_done_0922:
 12032 000083BC 4883C308                	add rbx,8
 12033 000083C0 4889DC                  	mov rsp,rbx
 12034 000083C3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12035                                  .L_if_end_057e:
 12036                                  .L_if_end_057f:
 12037                                  .L_if_end_0580:
 12038 000083C7 E975060000              	jmp .L_if_end_0589
 12039                                  .L_if_else_0504:
 12040                                  	; preparing a non-tail-call
 12041 000083CC 488B4520                	mov rax, PARAM(0)	; param a
 12042 000083D0 50                      	push rax
 12043 000083D1 6A01                    	push 1	; arg count
 12044 000083D3 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 12045 000083DB 803805                  	cmp byte [rax], T_undefined
 12046 000083DE 0F841FF00000            	je L_error_fvar_undefined
 12047 000083E4 803804                  	cmp byte [rax], T_closure
 12048 000083E7 0F859AF00000            	jne L_error_non_closure
 12049 000083ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 12050 000083F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12051 000083F3 483D[02000000]          	cmp rax, sob_boolean_false
 12052 000083F9 0F84D3020000            	je .L_if_else_0503
 12053                                  	; preparing a non-tail-call
 12054 000083FF 488B4528                	mov rax, PARAM(1)	; param b
 12055 00008403 50                      	push rax
 12056 00008404 6A01                    	push 1	; arg count
 12057 00008406 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 12058 0000840E 803805                  	cmp byte [rax], T_undefined
 12059 00008411 0F84ECEF0000            	je L_error_fvar_undefined
 12060 00008417 803804                  	cmp byte [rax], T_closure
 12061 0000841A 0F8567F00000            	jne L_error_non_closure
 12062 00008420 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12063 00008423 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12064 00008426 483D[02000000]          	cmp rax, sob_boolean_false
 12065 0000842C 0F84A5000000            	je .L_if_else_04fe
 12066                                  	; preparing a tail-call
 12067                                  	; preparing a non-tail-call
 12068 00008432 488B4528                	mov rax, PARAM(1)	; param b
 12069 00008436 50                      	push rax
 12070 00008437 6A01                    	push 1	; arg count
 12071 00008439 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12072 00008441 803805                  	cmp byte [rax], T_undefined
 12073 00008444 0F84B9EF0000            	je L_error_fvar_undefined
 12074 0000844A 803804                  	cmp byte [rax], T_closure
 12075 0000844D 0F8534F00000            	jne L_error_non_closure
 12076 00008453 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12077 00008456 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12078 00008459 50                      	push rax
 12079 0000845A 488B4520                	mov rax, PARAM(0)	; param a
 12080 0000845E 50                      	push rax
 12081 0000845F 6A02                    	push 2	; arg count
 12082 00008461 488B0425[D00F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12083 00008469 803805                  	cmp byte [rax], T_undefined
 12084 0000846C 0F8491EF0000            	je L_error_fvar_undefined
 12085 00008472 803804                  	cmp byte [rax], T_closure
 12086 00008475 0F850CF00000            	jne L_error_non_closure
 12087 0000847B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12088 0000847E FF7508                  	push qword [rbp + 8 *1]
 12089 00008481 4989C0                  	mov r8, rax
 12090 00008484 488B5D18                	mov rbx, COUNT
 12091 00008488 4883C303                	add rbx,3
 12092 0000848C 48C1E303                	shl rbx,3
 12093 00008490 4801EB                  	add rbx, rbp
 12094 00008493 488B6D00                	mov rbp, [rbp]
 12095 00008497 B900000000              	mov rcx,0
 12096 0000849C BA05000000              	mov rdx, 5
 12097 000084A1 4889D0                  	mov rax, rdx
 12098 000084A4 48FFC8                  	dec rax
 12099 000084A7 48C1E003                	shl rax,3
 12100 000084AB 4801E0                  	add rax, rsp
 12101                                  	.L_tc_recycle_frame_loop_0923:
 12102 000084AE 4839D1                  	cmp rcx, rdx
 12103 000084B1 7414                    	je .L_tc_recycle_frame_done_0923
 12104 000084B3 4C8B08                  	mov r9, qword [rax]
 12105 000084B6 4C890B                  	mov qword [rbx],r9
 12106 000084B9 4883E808                	sub rax,8
 12107 000084BD 4883EB08                	sub rbx,8
 12108 000084C1 4883C101                	add rcx,1
 12109 000084C5 EBE7                    	jmp .L_tc_recycle_frame_loop_0923
 12110                                  	.L_tc_recycle_frame_done_0923:
 12111 000084C7 4883C308                	add rbx,8
 12112 000084CB 4889DC                  	mov rsp,rbx
 12113 000084CE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12114 000084D2 E9F6010000              	jmp .L_if_end_0583
 12115                                  .L_if_else_04fe:
 12116                                  	; preparing a non-tail-call
 12117 000084D7 488B4528                	mov rax, PARAM(1)	; param b
 12118 000084DB 50                      	push rax
 12119 000084DC 6A01                    	push 1	; arg count
 12120 000084DE 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 12121 000084E6 803805                  	cmp byte [rax], T_undefined
 12122 000084E9 0F8414EF0000            	je L_error_fvar_undefined
 12123 000084EF 803804                  	cmp byte [rax], T_closure
 12124 000084F2 0F858FEF0000            	jne L_error_non_closure
 12125 000084F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12126 000084FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12127 000084FE 483D[02000000]          	cmp rax, sob_boolean_false
 12128 00008504 0F8482000000            	je .L_if_else_04fd
 12129                                  	; preparing a tail-call
 12130 0000850A 488B4528                	mov rax, PARAM(1)	; param b
 12131 0000850E 50                      	push rax
 12132 0000850F 488B4520                	mov rax, PARAM(0)	; param a
 12133 00008513 50                      	push rax
 12134 00008514 6A02                    	push 2	; arg count
 12135 00008516 488B0425[D00F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12136 0000851E 803805                  	cmp byte [rax], T_undefined
 12137 00008521 0F84DCEE0000            	je L_error_fvar_undefined
 12138 00008527 803804                  	cmp byte [rax], T_closure
 12139 0000852A 0F8557EF0000            	jne L_error_non_closure
 12140 00008530 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12141 00008533 FF7508                  	push qword [rbp + 8 *1]
 12142 00008536 4989C0                  	mov r8, rax
 12143 00008539 488B5D18                	mov rbx, COUNT
 12144 0000853D 4883C303                	add rbx,3
 12145 00008541 48C1E303                	shl rbx,3
 12146 00008545 4801EB                  	add rbx, rbp
 12147 00008548 488B6D00                	mov rbp, [rbp]
 12148 0000854C B900000000              	mov rcx,0
 12149 00008551 BA05000000              	mov rdx, 5
 12150 00008556 4889D0                  	mov rax, rdx
 12151 00008559 48FFC8                  	dec rax
 12152 0000855C 48C1E003                	shl rax,3
 12153 00008560 4801E0                  	add rax, rsp
 12154                                  	.L_tc_recycle_frame_loop_0924:
 12155 00008563 4839D1                  	cmp rcx, rdx
 12156 00008566 7414                    	je .L_tc_recycle_frame_done_0924
 12157 00008568 4C8B08                  	mov r9, qword [rax]
 12158 0000856B 4C890B                  	mov qword [rbx],r9
 12159 0000856E 4883E808                	sub rax,8
 12160 00008572 4883EB08                	sub rbx,8
 12161 00008576 4883C101                	add rcx,1
 12162 0000857A EBE7                    	jmp .L_tc_recycle_frame_loop_0924
 12163                                  	.L_tc_recycle_frame_done_0924:
 12164 0000857C 4883C308                	add rbx,8
 12165 00008580 4889DC                  	mov rsp,rbx
 12166 00008583 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12167 00008587 E941010000              	jmp .L_if_end_0582
 12168                                  .L_if_else_04fd:
 12169                                  	; preparing a non-tail-call
 12170 0000858C 488B4528                	mov rax, PARAM(1)	; param b
 12171 00008590 50                      	push rax
 12172 00008591 6A01                    	push 1	; arg count
 12173 00008593 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 12174 0000859B 803805                  	cmp byte [rax], T_undefined
 12175 0000859E 0F845FEE0000            	je L_error_fvar_undefined
 12176 000085A4 803804                  	cmp byte [rax], T_closure
 12177 000085A7 0F85DAEE0000            	jne L_error_non_closure
 12178 000085AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12179 000085B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12180 000085B3 483D[02000000]          	cmp rax, sob_boolean_false
 12181 000085B9 0F84A2000000            	je .L_if_else_04fc
 12182                                  	; preparing a tail-call
 12183 000085BF 488B4528                	mov rax, PARAM(1)	; param b
 12184 000085C3 50                      	push rax
 12185                                  	; preparing a non-tail-call
 12186 000085C4 488B4520                	mov rax, PARAM(0)	; param a
 12187 000085C8 50                      	push rax
 12188 000085C9 6A01                    	push 1	; arg count
 12189 000085CB 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12190 000085D3 803805                  	cmp byte [rax], T_undefined
 12191 000085D6 0F8427EE0000            	je L_error_fvar_undefined
 12192 000085DC 803804                  	cmp byte [rax], T_closure
 12193 000085DF 0F85A2EE0000            	jne L_error_non_closure
 12194 000085E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12195 000085E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12196 000085EB 50                      	push rax
 12197 000085EC 6A02                    	push 2	; arg count
 12198 000085EE 488B0425[E10F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12199 000085F6 803805                  	cmp byte [rax], T_undefined
 12200 000085F9 0F8404EE0000            	je L_error_fvar_undefined
 12201 000085FF 803804                  	cmp byte [rax], T_closure
 12202 00008602 0F857FEE0000            	jne L_error_non_closure
 12203 00008608 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12204 0000860B FF7508                  	push qword [rbp + 8 *1]
 12205 0000860E 4989C0                  	mov r8, rax
 12206 00008611 488B5D18                	mov rbx, COUNT
 12207 00008615 4883C303                	add rbx,3
 12208 00008619 48C1E303                	shl rbx,3
 12209 0000861D 4801EB                  	add rbx, rbp
 12210 00008620 488B6D00                	mov rbp, [rbp]
 12211 00008624 B900000000              	mov rcx,0
 12212 00008629 BA05000000              	mov rdx, 5
 12213 0000862E 4889D0                  	mov rax, rdx
 12214 00008631 48FFC8                  	dec rax
 12215 00008634 48C1E003                	shl rax,3
 12216 00008638 4801E0                  	add rax, rsp
 12217                                  	.L_tc_recycle_frame_loop_0925:
 12218 0000863B 4839D1                  	cmp rcx, rdx
 12219 0000863E 7414                    	je .L_tc_recycle_frame_done_0925
 12220 00008640 4C8B08                  	mov r9, qword [rax]
 12221 00008643 4C890B                  	mov qword [rbx],r9
 12222 00008646 4883E808                	sub rax,8
 12223 0000864A 4883EB08                	sub rbx,8
 12224 0000864E 4883C101                	add rcx,1
 12225 00008652 EBE7                    	jmp .L_tc_recycle_frame_loop_0925
 12226                                  	.L_tc_recycle_frame_done_0925:
 12227 00008654 4883C308                	add rbx,8
 12228 00008658 4889DC                  	mov rsp,rbx
 12229 0000865B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12230 0000865F EB6C                    	jmp .L_if_end_0581
 12231                                  .L_if_else_04fc:
 12232                                  	; preparing a tail-call
 12233 00008661 6A00                    	push 0	; arg count
 12234 00008663 488B4510                	mov rax, ENV
 12235 00008667 488B00                  	mov rax, qword [rax + 8 * 0]
 12236 0000866A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12237 0000866D 803804                  	cmp byte [rax], T_closure
 12238 00008670 0F8511EE0000            	jne L_error_non_closure
 12239 00008676 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12240 00008679 FF7508                  	push qword [rbp + 8 *1]
 12241 0000867C 4989C0                  	mov r8, rax
 12242 0000867F 488B5D18                	mov rbx, COUNT
 12243 00008683 4883C303                	add rbx,3
 12244 00008687 48C1E303                	shl rbx,3
 12245 0000868B 4801EB                  	add rbx, rbp
 12246 0000868E 488B6D00                	mov rbp, [rbp]
 12247 00008692 B900000000              	mov rcx,0
 12248 00008697 BA03000000              	mov rdx, 3
 12249 0000869C 4889D0                  	mov rax, rdx
 12250 0000869F 48FFC8                  	dec rax
 12251 000086A2 48C1E003                	shl rax,3
 12252 000086A6 4801E0                  	add rax, rsp
 12253                                  	.L_tc_recycle_frame_loop_0926:
 12254 000086A9 4839D1                  	cmp rcx, rdx
 12255 000086AC 7414                    	je .L_tc_recycle_frame_done_0926
 12256 000086AE 4C8B08                  	mov r9, qword [rax]
 12257 000086B1 4C890B                  	mov qword [rbx],r9
 12258 000086B4 4883E808                	sub rax,8
 12259 000086B8 4883EB08                	sub rbx,8
 12260 000086BC 4883C101                	add rcx,1
 12261 000086C0 EBE7                    	jmp .L_tc_recycle_frame_loop_0926
 12262                                  	.L_tc_recycle_frame_done_0926:
 12263 000086C2 4883C308                	add rbx,8
 12264 000086C6 4889DC                  	mov rsp,rbx
 12265 000086C9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12266                                  .L_if_end_0581:
 12267                                  .L_if_end_0582:
 12268                                  .L_if_end_0583:
 12269 000086CD E96F030000              	jmp .L_if_end_0588
 12270                                  .L_if_else_0503:
 12271                                  	; preparing a non-tail-call
 12272 000086D2 488B4520                	mov rax, PARAM(0)	; param a
 12273 000086D6 50                      	push rax
 12274 000086D7 6A01                    	push 1	; arg count
 12275 000086D9 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 12276 000086E1 803805                  	cmp byte [rax], T_undefined
 12277 000086E4 0F8419ED0000            	je L_error_fvar_undefined
 12278 000086EA 803804                  	cmp byte [rax], T_closure
 12279 000086ED 0F8594ED0000            	jne L_error_non_closure
 12280 000086F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12281 000086F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12282 000086F9 483D[02000000]          	cmp rax, sob_boolean_false
 12283 000086FF 0F84D0020000            	je .L_if_else_0502
 12284                                  	; preparing a non-tail-call
 12285 00008705 488B4528                	mov rax, PARAM(1)	; param b
 12286 00008709 50                      	push rax
 12287 0000870A 6A01                    	push 1	; arg count
 12288 0000870C 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 12289 00008714 803805                  	cmp byte [rax], T_undefined
 12290 00008717 0F84E6EC0000            	je L_error_fvar_undefined
 12291 0000871D 803804                  	cmp byte [rax], T_closure
 12292 00008720 0F8561ED0000            	jne L_error_non_closure
 12293 00008726 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12294 00008729 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12295 0000872C 483D[02000000]          	cmp rax, sob_boolean_false
 12296 00008732 0F84A5000000            	je .L_if_else_0501
 12297                                  	; preparing a tail-call
 12298                                  	; preparing a non-tail-call
 12299 00008738 488B4528                	mov rax, PARAM(1)	; param b
 12300 0000873C 50                      	push rax
 12301 0000873D 6A01                    	push 1	; arg count
 12302 0000873F 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 12303 00008747 803805                  	cmp byte [rax], T_undefined
 12304 0000874A 0F84B3EC0000            	je L_error_fvar_undefined
 12305 00008750 803804                  	cmp byte [rax], T_closure
 12306 00008753 0F852EED0000            	jne L_error_non_closure
 12307 00008759 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12308 0000875C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12309 0000875F 50                      	push rax
 12310 00008760 488B4520                	mov rax, PARAM(0)	; param a
 12311 00008764 50                      	push rax
 12312 00008765 6A02                    	push 2	; arg count
 12313 00008767 488B0425[E10F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12314 0000876F 803805                  	cmp byte [rax], T_undefined
 12315 00008772 0F848BEC0000            	je L_error_fvar_undefined
 12316 00008778 803804                  	cmp byte [rax], T_closure
 12317 0000877B 0F8506ED0000            	jne L_error_non_closure
 12318 00008781 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12319 00008784 FF7508                  	push qword [rbp + 8 *1]
 12320 00008787 4989C0                  	mov r8, rax
 12321 0000878A 488B5D18                	mov rbx, COUNT
 12322 0000878E 4883C303                	add rbx,3
 12323 00008792 48C1E303                	shl rbx,3
 12324 00008796 4801EB                  	add rbx, rbp
 12325 00008799 488B6D00                	mov rbp, [rbp]
 12326 0000879D B900000000              	mov rcx,0
 12327 000087A2 BA05000000              	mov rdx, 5
 12328 000087A7 4889D0                  	mov rax, rdx
 12329 000087AA 48FFC8                  	dec rax
 12330 000087AD 48C1E003                	shl rax,3
 12331 000087B1 4801E0                  	add rax, rsp
 12332                                  	.L_tc_recycle_frame_loop_0927:
 12333 000087B4 4839D1                  	cmp rcx, rdx
 12334 000087B7 7414                    	je .L_tc_recycle_frame_done_0927
 12335 000087B9 4C8B08                  	mov r9, qword [rax]
 12336 000087BC 4C890B                  	mov qword [rbx],r9
 12337 000087BF 4883E808                	sub rax,8
 12338 000087C3 4883EB08                	sub rbx,8
 12339 000087C7 4883C101                	add rcx,1
 12340 000087CB EBE7                    	jmp .L_tc_recycle_frame_loop_0927
 12341                                  	.L_tc_recycle_frame_done_0927:
 12342 000087CD 4883C308                	add rbx,8
 12343 000087D1 4889DC                  	mov rsp,rbx
 12344 000087D4 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12345 000087D8 E9F6010000              	jmp .L_if_end_0586
 12346                                  .L_if_else_0501:
 12347                                  	; preparing a non-tail-call
 12348 000087DD 488B4528                	mov rax, PARAM(1)	; param b
 12349 000087E1 50                      	push rax
 12350 000087E2 6A01                    	push 1	; arg count
 12351 000087E4 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 12352 000087EC 803805                  	cmp byte [rax], T_undefined
 12353 000087EF 0F840EEC0000            	je L_error_fvar_undefined
 12354 000087F5 803804                  	cmp byte [rax], T_closure
 12355 000087F8 0F8589EC0000            	jne L_error_non_closure
 12356 000087FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12357 00008801 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12358 00008804 483D[02000000]          	cmp rax, sob_boolean_false
 12359 0000880A 0F84A5000000            	je .L_if_else_0500
 12360                                  	; preparing a tail-call
 12361                                  	; preparing a non-tail-call
 12362 00008810 488B4528                	mov rax, PARAM(1)	; param b
 12363 00008814 50                      	push rax
 12364 00008815 6A01                    	push 1	; arg count
 12365 00008817 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12366 0000881F 803805                  	cmp byte [rax], T_undefined
 12367 00008822 0F84DBEB0000            	je L_error_fvar_undefined
 12368 00008828 803804                  	cmp byte [rax], T_closure
 12369 0000882B 0F8556EC0000            	jne L_error_non_closure
 12370 00008831 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12371 00008834 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12372 00008837 50                      	push rax
 12373 00008838 488B4520                	mov rax, PARAM(0)	; param a
 12374 0000883C 50                      	push rax
 12375 0000883D 6A02                    	push 2	; arg count
 12376 0000883F 488B0425[E10F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12377 00008847 803805                  	cmp byte [rax], T_undefined
 12378 0000884A 0F84B3EB0000            	je L_error_fvar_undefined
 12379 00008850 803804                  	cmp byte [rax], T_closure
 12380 00008853 0F852EEC0000            	jne L_error_non_closure
 12381 00008859 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12382 0000885C FF7508                  	push qword [rbp + 8 *1]
 12383 0000885F 4989C0                  	mov r8, rax
 12384 00008862 488B5D18                	mov rbx, COUNT
 12385 00008866 4883C303                	add rbx,3
 12386 0000886A 48C1E303                	shl rbx,3
 12387 0000886E 4801EB                  	add rbx, rbp
 12388 00008871 488B6D00                	mov rbp, [rbp]
 12389 00008875 B900000000              	mov rcx,0
 12390 0000887A BA05000000              	mov rdx, 5
 12391 0000887F 4889D0                  	mov rax, rdx
 12392 00008882 48FFC8                  	dec rax
 12393 00008885 48C1E003                	shl rax,3
 12394 00008889 4801E0                  	add rax, rsp
 12395                                  	.L_tc_recycle_frame_loop_0928:
 12396 0000888C 4839D1                  	cmp rcx, rdx
 12397 0000888F 7414                    	je .L_tc_recycle_frame_done_0928
 12398 00008891 4C8B08                  	mov r9, qword [rax]
 12399 00008894 4C890B                  	mov qword [rbx],r9
 12400 00008897 4883E808                	sub rax,8
 12401 0000889B 4883EB08                	sub rbx,8
 12402 0000889F 4883C101                	add rcx,1
 12403 000088A3 EBE7                    	jmp .L_tc_recycle_frame_loop_0928
 12404                                  	.L_tc_recycle_frame_done_0928:
 12405 000088A5 4883C308                	add rbx,8
 12406 000088A9 4889DC                  	mov rsp,rbx
 12407 000088AC 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12408 000088B0 E91E010000              	jmp .L_if_end_0585
 12409                                  .L_if_else_0500:
 12410                                  	; preparing a non-tail-call
 12411 000088B5 488B4528                	mov rax, PARAM(1)	; param b
 12412 000088B9 50                      	push rax
 12413 000088BA 6A01                    	push 1	; arg count
 12414 000088BC 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 12415 000088C4 803805                  	cmp byte [rax], T_undefined
 12416 000088C7 0F8436EB0000            	je L_error_fvar_undefined
 12417 000088CD 803804                  	cmp byte [rax], T_closure
 12418 000088D0 0F85B1EB0000            	jne L_error_non_closure
 12419 000088D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12420 000088D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12421 000088DC 483D[02000000]          	cmp rax, sob_boolean_false
 12422 000088E2 0F847F000000            	je .L_if_else_04ff
 12423                                  	; preparing a tail-call
 12424 000088E8 488B4528                	mov rax, PARAM(1)	; param b
 12425 000088EC 50                      	push rax
 12426 000088ED 488B4520                	mov rax, PARAM(0)	; param a
 12427 000088F1 50                      	push rax
 12428 000088F2 6A02                    	push 2	; arg count
 12429 000088F4 488B0425[E10F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12430 000088FC 803805                  	cmp byte [rax], T_undefined
 12431 000088FF 0F84FEEA0000            	je L_error_fvar_undefined
 12432 00008905 803804                  	cmp byte [rax], T_closure
 12433 00008908 0F8579EB0000            	jne L_error_non_closure
 12434 0000890E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12435 00008911 FF7508                  	push qword [rbp + 8 *1]
 12436 00008914 4989C0                  	mov r8, rax
 12437 00008917 488B5D18                	mov rbx, COUNT
 12438 0000891B 4883C303                	add rbx,3
 12439 0000891F 48C1E303                	shl rbx,3
 12440 00008923 4801EB                  	add rbx, rbp
 12441 00008926 488B6D00                	mov rbp, [rbp]
 12442 0000892A B900000000              	mov rcx,0
 12443 0000892F BA05000000              	mov rdx, 5
 12444 00008934 4889D0                  	mov rax, rdx
 12445 00008937 48FFC8                  	dec rax
 12446 0000893A 48C1E003                	shl rax,3
 12447 0000893E 4801E0                  	add rax, rsp
 12448                                  	.L_tc_recycle_frame_loop_0929:
 12449 00008941 4839D1                  	cmp rcx, rdx
 12450 00008944 7414                    	je .L_tc_recycle_frame_done_0929
 12451 00008946 4C8B08                  	mov r9, qword [rax]
 12452 00008949 4C890B                  	mov qword [rbx],r9
 12453 0000894C 4883E808                	sub rax,8
 12454 00008950 4883EB08                	sub rbx,8
 12455 00008954 4883C101                	add rcx,1
 12456 00008958 EBE7                    	jmp .L_tc_recycle_frame_loop_0929
 12457                                  	.L_tc_recycle_frame_done_0929:
 12458 0000895A 4883C308                	add rbx,8
 12459 0000895E 4889DC                  	mov rsp,rbx
 12460 00008961 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12461 00008965 EB6C                    	jmp .L_if_end_0584
 12462                                  .L_if_else_04ff:
 12463                                  	; preparing a tail-call
 12464 00008967 6A00                    	push 0	; arg count
 12465 00008969 488B4510                	mov rax, ENV
 12466 0000896D 488B00                  	mov rax, qword [rax + 8 * 0]
 12467 00008970 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12468 00008973 803804                  	cmp byte [rax], T_closure
 12469 00008976 0F850BEB0000            	jne L_error_non_closure
 12470 0000897C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12471 0000897F FF7508                  	push qword [rbp + 8 *1]
 12472 00008982 4989C0                  	mov r8, rax
 12473 00008985 488B5D18                	mov rbx, COUNT
 12474 00008989 4883C303                	add rbx,3
 12475 0000898D 48C1E303                	shl rbx,3
 12476 00008991 4801EB                  	add rbx, rbp
 12477 00008994 488B6D00                	mov rbp, [rbp]
 12478 00008998 B900000000              	mov rcx,0
 12479 0000899D BA03000000              	mov rdx, 3
 12480 000089A2 4889D0                  	mov rax, rdx
 12481 000089A5 48FFC8                  	dec rax
 12482 000089A8 48C1E003                	shl rax,3
 12483 000089AC 4801E0                  	add rax, rsp
 12484                                  	.L_tc_recycle_frame_loop_092a:
 12485 000089AF 4839D1                  	cmp rcx, rdx
 12486 000089B2 7414                    	je .L_tc_recycle_frame_done_092a
 12487 000089B4 4C8B08                  	mov r9, qword [rax]
 12488 000089B7 4C890B                  	mov qword [rbx],r9
 12489 000089BA 4883E808                	sub rax,8
 12490 000089BE 4883EB08                	sub rbx,8
 12491 000089C2 4883C101                	add rcx,1
 12492 000089C6 EBE7                    	jmp .L_tc_recycle_frame_loop_092a
 12493                                  	.L_tc_recycle_frame_done_092a:
 12494 000089C8 4883C308                	add rbx,8
 12495 000089CC 4889DC                  	mov rsp,rbx
 12496 000089CF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12497                                  .L_if_end_0584:
 12498                                  .L_if_end_0585:
 12499                                  .L_if_end_0586:
 12500 000089D3 EB6C                    	jmp .L_if_end_0587
 12501                                  .L_if_else_0502:
 12502                                  	; preparing a tail-call
 12503 000089D5 6A00                    	push 0	; arg count
 12504 000089D7 488B4510                	mov rax, ENV
 12505 000089DB 488B00                  	mov rax, qword [rax + 8 * 0]
 12506 000089DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12507 000089E1 803804                  	cmp byte [rax], T_closure
 12508 000089E4 0F859DEA0000            	jne L_error_non_closure
 12509 000089EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 12510 000089ED FF7508                  	push qword [rbp + 8 *1]
 12511 000089F0 4989C0                  	mov r8, rax
 12512 000089F3 488B5D18                	mov rbx, COUNT
 12513 000089F7 4883C303                	add rbx,3
 12514 000089FB 48C1E303                	shl rbx,3
 12515 000089FF 4801EB                  	add rbx, rbp
 12516 00008A02 488B6D00                	mov rbp, [rbp]
 12517 00008A06 B900000000              	mov rcx,0
 12518 00008A0B BA03000000              	mov rdx, 3
 12519 00008A10 4889D0                  	mov rax, rdx
 12520 00008A13 48FFC8                  	dec rax
 12521 00008A16 48C1E003                	shl rax,3
 12522 00008A1A 4801E0                  	add rax, rsp
 12523                                  	.L_tc_recycle_frame_loop_092b:
 12524 00008A1D 4839D1                  	cmp rcx, rdx
 12525 00008A20 7414                    	je .L_tc_recycle_frame_done_092b
 12526 00008A22 4C8B08                  	mov r9, qword [rax]
 12527 00008A25 4C890B                  	mov qword [rbx],r9
 12528 00008A28 4883E808                	sub rax,8
 12529 00008A2C 4883EB08                	sub rbx,8
 12530 00008A30 4883C101                	add rcx,1
 12531 00008A34 EBE7                    	jmp .L_tc_recycle_frame_loop_092b
 12532                                  	.L_tc_recycle_frame_done_092b:
 12533 00008A36 4883C308                	add rbx,8
 12534 00008A3A 4889DC                  	mov rsp,rbx
 12535 00008A3D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12536                                  .L_if_end_0587:
 12537                                  .L_if_end_0588:
 12538                                  .L_if_end_0589:
 12539 00008A41 C9                      	leave
 12540 00008A42 C22000                  	ret AND_KILL_FRAME(2)
 12541                                  .L_lambda_simple_end_0732:	; new closure is in rax
 12542 00008A45 50                      	push rax
 12543 00008A46 6A01                    	push 1	; arg count
 12544 00008A48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12545 00008A4D E8DEEA0000              	call malloc
 12546 00008A52 50                      	push rax
 12547 00008A53 BF08000000              	mov rdi, 8 * 1	; new rib
 12548 00008A58 E8D3EA0000              	call malloc
 12549 00008A5D 50                      	push rax
 12550 00008A5E BF10000000              	mov rdi, 8 * 2	; extended env
 12551 00008A63 E8C8EA0000              	call malloc
 12552 00008A68 488B7D10                	mov rdi, ENV
 12553 00008A6C BE00000000              	mov rsi, 0
 12554 00008A71 BA01000000              	mov rdx, 1
 12555                                  .L_lambda_simple_env_loop_0733:	; ext_env[i + 1] <-- env[i]
 12556 00008A76 4883FE01                	cmp rsi, 1
 12557 00008A7A 7410                    	je .L_lambda_simple_env_end_0733
 12558 00008A7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12559 00008A80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12560 00008A84 48FFC6                  	inc rsi
 12561 00008A87 48FFC2                  	inc rdx
 12562 00008A8A EBEA                    	jmp .L_lambda_simple_env_loop_0733
 12563                                  .L_lambda_simple_env_end_0733:
 12564 00008A8C 5B                      	pop rbx
 12565 00008A8D BE00000000              	mov rsi, 0
 12566                                  .L_lambda_simple_params_loop_0733:	; copy params
 12567 00008A92 4883FE01                	cmp rsi, 1
 12568 00008A96 740E                    	je .L_lambda_simple_params_end_0733
 12569 00008A98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12570 00008A9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12571 00008AA1 48FFC6                  	inc rsi
 12572 00008AA4 EBEC                    	jmp .L_lambda_simple_params_loop_0733
 12573                                  .L_lambda_simple_params_end_0733:
 12574 00008AA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12575 00008AA9 4889C3                  	mov rbx, rax
 12576 00008AAC 58                      	pop rax
 12577 00008AAD C60004                  	mov byte [rax], T_closure
 12578 00008AB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12579 00008AB4 48C74009[C18A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0733
 12580 00008ABC E92E020000              	jmp .L_lambda_simple_end_0733
 12581                                  .L_lambda_simple_code_0733:	; lambda-simple body
 12582 00008AC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12583 00008AC7 740B                    	je .L_lambda_simple_arity_check_ok_0819
 12584 00008AC9 FF742410                	push qword [rsp + 8 * 2]
 12585 00008ACD 6A01                    	push 1
 12586 00008ACF E915EA0000              	jmp L_error_incorrect_arity_simple
 12587                                  .L_lambda_simple_arity_check_ok_0819:
 12588 00008AD4 C8000000                	enter 0, 0
 12589 00008AD8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12590 00008ADD E84EEA0000              	call malloc
 12591 00008AE2 50                      	push rax
 12592 00008AE3 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 12593 00008AE7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12594 00008AEB BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 12595 00008AF0 E83BEA0000              	call malloc
 12596 00008AF5 50                      	push rax
 12597 00008AF6 BF18000000              	mov rdi, 8 * 3	; extended env
 12598 00008AFB E830EA0000              	call malloc
 12599 00008B00 488B7D10                	mov rdi, ENV
 12600 00008B04 BE00000000              	mov rsi, 0
 12601 00008B09 BA01000000              	mov rdx, 1
 12602                                  .L_lambda_opt_env_loop_00e7:	; ext_env[i + 1] <-- env[i] copy all the array
 12603 00008B0E 4883FE02                	cmp rsi, 2
 12604 00008B12 7410                    	je .L_lambda_opt_env_end_00e7
 12605 00008B14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12606 00008B18 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12607 00008B1C 48FFC6                  	inc rsi
 12608 00008B1F 48FFC2                  	inc rdx
 12609 00008B22 EBEA                    	jmp .L_lambda_opt_env_loop_00e7
 12610                                  .L_lambda_opt_env_end_00e7:
 12611 00008B24 5B                      	pop rbx
 12612 00008B25 BE00000000              	mov rsi, 0
 12613                                  .L_lambda_opt_params_loop_02b3:	; copy params
 12614 00008B2A 4883FE01                	cmp rsi, 1
 12615 00008B2E 740E                    	je .L_lambda_opt_params_end_01cd
 12616 00008B30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12617 00008B35 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12618 00008B39 48FFC6                  	inc rsi
 12619 00008B3C EBEC                    	jmp .L_lambda_opt_params_loop_02b3
 12620                                  .L_lambda_opt_params_end_01cd:
 12621 00008B3E 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 12622 00008B41 4889C3                  	mov rbx, rax
 12623 00008B44 58                      	pop rax
 12624 00008B45 C60004                  	mov byte [rax], T_closure
 12625 00008B48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12626 00008B4C 48C74009[598B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e7
 12627 00008B54 E992010000              	jmp .L_lambda_opt_end_01cd
 12628                                  .L_lambda_opt_code_00e7:	; lambda-opt body
 12629 00008B59 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12630 00008B5F 7D0B                    	jge .L_lambda_simple_arity_check_ok_081a
 12631 00008B61 FF742410                	push qword [rsp + 8 * 2]
 12632 00008B65 6A00                    	push 0
 12633 00008B67 E97DE90000              	jmp L_error_incorrect_arity_simple
 12634                                  .L_lambda_simple_arity_check_ok_081a:
 12635 00008B6C 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 12636 00008B71 4983E800                	sub r8, 0
 12637 00008B75 4C89C3                  	mov rbx,r8
 12638 00008B78 4983F800                	cmp r8, 0
 12639 00008B7C 7535                    	jne .L_lambda_opt_params_loop_02b5
 12640 00008B7E 488B542410              	mov rdx, qword [rsp + 8 * 2]
 12641 00008B83 4883C203                	add rdx , 3
 12642 00008B87 4883EC08                	sub rsp , 8
 12643 00008B8B 4889E1                  	mov rcx, rsp
 12644                                  .L_lambda_opt_stack_adjusted_02b4: ;pushing down the stack of the current function
 12645 00008B8E 488B5908                	mov rbx, qword [rcx + 8 * 1]
 12646 00008B92 488919                  	mov qword[rcx] , rbx
 12647 00008B95 4883C108                	add rcx , 8
 12648 00008B99 48FFCA                  	dec rdx
 12649 00008B9C 4883FA00                	cmp rdx, 0
 12650 00008BA0 75EC                    	jne .L_lambda_opt_stack_adjusted_02b4
 12651 00008BA2 48FF442410              	inc qword [rsp + 8 * 2]
 12652 00008BA7 48C701[01000000]        	mov qword [rcx], sob_nil 
 12653 00008BAE E9A2000000              	jmp .L_lambda_opt_end_01ce
 12654                                  	.L_lambda_opt_params_loop_02b5:
 12655 00008BB3 488B542410              	mov rdx, qword [rsp + 8*2]
 12656 00008BB8 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 12657 00008BBD 4C89C2                  	mov rdx, r8
 12658 00008BC0 49B9-                   	mov r9, sob_nil
 12658 00008BC2 [0100000000000000] 
 12659                                  	.L_lambda_opt_params_loop_02b4: ;loop for copying the opt into list
 12660 00008BCA BF11000000              	mov rdi, (1 + 8 + 8)
 12661 00008BCF E85CE90000              	call malloc
 12662 00008BD4 C60021                  	mov byte[rax], T_pair
 12663 00008BD7 488B19                  	mov rbx, qword [rcx]
 12664 00008BDA 48895801                	mov SOB_PAIR_CAR(rax), rbx
 12665 00008BDE 4C894809                	mov SOB_PAIR_CDR(rax), r9
 12666 00008BE2 4989C1                  	mov r9, rax
 12667 00008BE5 48FFCA                  	dec rdx
 12668 00008BE8 4883E908                	sub rcx, 8
 12669 00008BEC 4883FA00                	cmp rdx, 0
 12670 00008BF0 75D8                    	jne .L_lambda_opt_params_loop_02b4
 12671 00008BF2 488B542410              	mov rdx, qword [rsp + 8 * 2]
 12672 00008BF7 4889E0                  	mov rax, rsp
 12673 00008BFA 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 12674 00008BFF 4C89C1                  	mov rcx, r8
 12675 00008C02 48FFC9                  	dec rcx
 12676 00008C05 4883C203                	add rdx, 3
 12677 00008C09 4829CA                  	sub rdx,rcx
 12678 00008C0C 48C1E103                	shl rcx, 3
 12679                                  	.L_lambda_opt_stack_adjusted_02b5:
 12680 00008C10 4883FA00                	cmp rdx, 0
 12681 00008C14 7419                    	je .L_lambda_opt_params_end_01ce
 12682 00008C16 4889D8                  	mov rax, rbx
 12683 00008C19 4829C8                  	sub rax, rcx
 12684 00008C1C 488B30                  	mov rsi, qword [rax]
 12685 00008C1F 488933                  	mov [rbx], rsi
 12686 00008C22 4883EB08                	sub rbx, 8
 12687 00008C26 48FFCA                  	dec rdx
 12688 00008C29 4883FA00                	cmp rdx, 0
 12689 00008C2D 75E1                    	jne .L_lambda_opt_stack_adjusted_02b5
 12690                                  	.L_lambda_opt_params_end_01ce:
 12691 00008C2F 4801CC                  	add rsp,rcx
 12692 00008C32 BB00000000              	mov rbx, 0
 12693 00008C37 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 12694 00008C3C 4883C303                	add rbx,3
 12695 00008C40 4C29C3                  	sub rbx,r8
 12696 00008C43 48C1E303                	shl rbx, 3
 12697 00008C47 4801E3                  	add rbx, rsp
 12698 00008C4A 4C890B                  	mov qword[rbx] , r9
 12699 00008C4D 49FFC8                  	dec r8
 12700 00008C50 4C29442410              	sub qword [rsp + 8 * 2], r8
 12701                                  	.L_lambda_opt_end_01ce:
 12702 00008C55 C8000000                	enter 0, 0
 12703                                  	; preparing a tail-call
 12704 00008C59 488B4520                	mov rax, PARAM(0)	; param s
 12705 00008C5D 50                      	push rax
 12706 00008C5E 48B8-                   	mov rax, L_constants + 2270
 12706 00008C60 [DE08000000000000] 
 12707 00008C68 50                      	push rax
 12708 00008C69 488B4510                	mov rax, ENV
 12709 00008C6D 488B00                  	mov rax, qword [rax + 8 * 0]
 12710 00008C70 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12711 00008C73 50                      	push rax
 12712 00008C74 6A03                    	push 3	; arg count
 12713 00008C76 488B0425[FF130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12714 00008C7E 803805                  	cmp byte [rax], T_undefined
 12715 00008C81 0F847CE70000            	je L_error_fvar_undefined
 12716 00008C87 803804                  	cmp byte [rax], T_closure
 12717 00008C8A 0F85F7E70000            	jne L_error_non_closure
 12718 00008C90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12719 00008C93 FF7508                  	push qword [rbp + 8 *1]
 12720 00008C96 4989C0                  	mov r8, rax
 12721 00008C99 488B5D18                	mov rbx, COUNT
 12722 00008C9D 4883C303                	add rbx,3
 12723 00008CA1 48C1E303                	shl rbx,3
 12724 00008CA5 4801EB                  	add rbx, rbp
 12725 00008CA8 488B6D00                	mov rbp, [rbp]
 12726 00008CAC B900000000              	mov rcx,0
 12727 00008CB1 BA06000000              	mov rdx, 6
 12728 00008CB6 4889D0                  	mov rax, rdx
 12729 00008CB9 48FFC8                  	dec rax
 12730 00008CBC 48C1E003                	shl rax,3
 12731 00008CC0 4801E0                  	add rax, rsp
 12732                                  	.L_tc_recycle_frame_loop_092c:
 12733 00008CC3 4839D1                  	cmp rcx, rdx
 12734 00008CC6 7414                    	je .L_tc_recycle_frame_done_092c
 12735 00008CC8 4C8B08                  	mov r9, qword [rax]
 12736 00008CCB 4C890B                  	mov qword [rbx],r9
 12737 00008CCE 4883E808                	sub rax,8
 12738 00008CD2 4883EB08                	sub rbx,8
 12739 00008CD6 4883C101                	add rcx,1
 12740 00008CDA EBE7                    	jmp .L_tc_recycle_frame_loop_092c
 12741                                  	.L_tc_recycle_frame_done_092c:
 12742 00008CDC 4883C308                	add rbx,8
 12743 00008CE0 4889DC                  	mov rsp,rbx
 12744 00008CE3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12745                                  	LEAVE
    49 00008CE7 C9                  <1>  leave
 12746 00008CE8 C21800                  	ret AND_KILL_FRAME(1)
 12747                                  .L_lambda_opt_end_01cd:
 12748 00008CEB C9                      	leave
 12749 00008CEC C21800                  	ret AND_KILL_FRAME(1)
 12750                                  .L_lambda_simple_end_0733:	; new closure is in rax
 12751 00008CEF 803804                  	cmp byte [rax], T_closure
 12752 00008CF2 0F858FE70000            	jne L_error_non_closure
 12753 00008CF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12754 00008CFB FF7508                  	push qword [rbp + 8 *1]
 12755 00008CFE 4989C0                  	mov r8, rax
 12756 00008D01 488B5D18                	mov rbx, COUNT
 12757 00008D05 4883C303                	add rbx,3
 12758 00008D09 48C1E303                	shl rbx,3
 12759 00008D0D 4801EB                  	add rbx, rbp
 12760 00008D10 488B6D00                	mov rbp, [rbp]
 12761 00008D14 B900000000              	mov rcx,0
 12762 00008D19 BA04000000              	mov rdx, 4
 12763 00008D1E 4889D0                  	mov rax, rdx
 12764 00008D21 48FFC8                  	dec rax
 12765 00008D24 48C1E003                	shl rax,3
 12766 00008D28 4801E0                  	add rax, rsp
 12767                                  	.L_tc_recycle_frame_loop_091e:
 12768 00008D2B 4839D1                  	cmp rcx, rdx
 12769 00008D2E 7414                    	je .L_tc_recycle_frame_done_091e
 12770 00008D30 4C8B08                  	mov r9, qword [rax]
 12771 00008D33 4C890B                  	mov qword [rbx],r9
 12772 00008D36 4883E808                	sub rax,8
 12773 00008D3A 4883EB08                	sub rbx,8
 12774 00008D3E 4883C101                	add rcx,1
 12775 00008D42 EBE7                    	jmp .L_tc_recycle_frame_loop_091e
 12776                                  	.L_tc_recycle_frame_done_091e:
 12777 00008D44 4883C308                	add rbx,8
 12778 00008D48 4889DC                  	mov rsp,rbx
 12779 00008D4B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12780 00008D4F C9                      	leave
 12781 00008D50 C21800                  	ret AND_KILL_FRAME(1)
 12782                                  .L_lambda_simple_end_0731:	; new closure is in rax
 12783 00008D53 803804                  	cmp byte [rax], T_closure
 12784 00008D56 0F852BE70000            	jne L_error_non_closure
 12785 00008D5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12786 00008D5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12787 00008D62 48890425[5A0E0000]      	mov qword [free_var_0], rax
 12788 00008D6A 48B8-                   	mov rax, sob_void
 12788 00008D6C [0000000000000000] 
 12789                                  
 12790 00008D74 4889C7                  	mov rdi, rax
 12791 00008D77 E809EA0000              	call print_sexpr_if_not_void
 12792                                  	; preparing a non-tail-call
 12793 00008D7C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12794 00008D81 E8AAE70000              	call malloc
 12795 00008D86 50                      	push rax
 12796 00008D87 BF00000000              	mov rdi, 8 * 0	; new rib
 12797 00008D8C E89FE70000              	call malloc
 12798 00008D91 50                      	push rax
 12799 00008D92 BF08000000              	mov rdi, 8 * 1	; extended env
 12800 00008D97 E894E70000              	call malloc
 12801 00008D9C 488B7D10                	mov rdi, ENV
 12802 00008DA0 BE00000000              	mov rsi, 0
 12803 00008DA5 BA01000000              	mov rdx, 1
 12804                                  .L_lambda_simple_env_loop_0734:	; ext_env[i + 1] <-- env[i]
 12805 00008DAA 4883FE00                	cmp rsi, 0
 12806 00008DAE 7410                    	je .L_lambda_simple_env_end_0734
 12807 00008DB0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12808 00008DB4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12809 00008DB8 48FFC6                  	inc rsi
 12810 00008DBB 48FFC2                  	inc rdx
 12811 00008DBE EBEA                    	jmp .L_lambda_simple_env_loop_0734
 12812                                  .L_lambda_simple_env_end_0734:
 12813 00008DC0 5B                      	pop rbx
 12814 00008DC1 BE00000000              	mov rsi, 0
 12815                                  .L_lambda_simple_params_loop_0734:	; copy params
 12816 00008DC6 4883FE00                	cmp rsi, 0
 12817 00008DCA 740E                    	je .L_lambda_simple_params_end_0734
 12818 00008DCC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12819 00008DD1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12820 00008DD5 48FFC6                  	inc rsi
 12821 00008DD8 EBEC                    	jmp .L_lambda_simple_params_loop_0734
 12822                                  .L_lambda_simple_params_end_0734:
 12823 00008DDA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12824 00008DDD 4889C3                  	mov rbx, rax
 12825 00008DE0 58                      	pop rax
 12826 00008DE1 C60004                  	mov byte [rax], T_closure
 12827 00008DE4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12828 00008DE8 48C74009[F58D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0734
 12829 00008DF0 E9A4000000              	jmp .L_lambda_simple_end_0734
 12830                                  .L_lambda_simple_code_0734:	; lambda-simple body
 12831 00008DF5 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12832 00008DFB 740B                    	je .L_lambda_simple_arity_check_ok_081b
 12833 00008DFD FF742410                	push qword [rsp + 8 * 2]
 12834 00008E01 6A00                    	push 0
 12835 00008E03 E9E1E60000              	jmp L_error_incorrect_arity_simple
 12836                                  .L_lambda_simple_arity_check_ok_081b:
 12837 00008E08 C8000000                	enter 0, 0
 12838                                  	; preparing a tail-call
 12839 00008E0C 48B8-                   	mov rax, L_constants + 2187
 12839 00008E0E [8B08000000000000] 
 12840 00008E16 50                      	push rax
 12841 00008E17 48B8-                   	mov rax, L_constants + 2298
 12841 00008E19 [FA08000000000000] 
 12842 00008E21 50                      	push rax
 12843 00008E22 6A02                    	push 2	; arg count
 12844 00008E24 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 12845 00008E2C 803805                  	cmp byte [rax], T_undefined
 12846 00008E2F 0F84CEE50000            	je L_error_fvar_undefined
 12847 00008E35 803804                  	cmp byte [rax], T_closure
 12848 00008E38 0F8549E60000            	jne L_error_non_closure
 12849 00008E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12850 00008E41 FF7508                  	push qword [rbp + 8 *1]
 12851 00008E44 4989C0                  	mov r8, rax
 12852 00008E47 488B5D18                	mov rbx, COUNT
 12853 00008E4B 4883C303                	add rbx,3
 12854 00008E4F 48C1E303                	shl rbx,3
 12855 00008E53 4801EB                  	add rbx, rbp
 12856 00008E56 488B6D00                	mov rbp, [rbp]
 12857 00008E5A B900000000              	mov rcx,0
 12858 00008E5F BA05000000              	mov rdx, 5
 12859 00008E64 4889D0                  	mov rax, rdx
 12860 00008E67 48FFC8                  	dec rax
 12861 00008E6A 48C1E003                	shl rax,3
 12862 00008E6E 4801E0                  	add rax, rsp
 12863                                  	.L_tc_recycle_frame_loop_092d:
 12864 00008E71 4839D1                  	cmp rcx, rdx
 12865 00008E74 7414                    	je .L_tc_recycle_frame_done_092d
 12866 00008E76 4C8B08                  	mov r9, qword [rax]
 12867 00008E79 4C890B                  	mov qword [rbx],r9
 12868 00008E7C 4883E808                	sub rax,8
 12869 00008E80 4883EB08                	sub rbx,8
 12870 00008E84 4883C101                	add rcx,1
 12871 00008E88 EBE7                    	jmp .L_tc_recycle_frame_loop_092d
 12872                                  	.L_tc_recycle_frame_done_092d:
 12873 00008E8A 4883C308                	add rbx,8
 12874 00008E8E 4889DC                  	mov rsp,rbx
 12875 00008E91 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 12876 00008E95 C9                      	leave
 12877 00008E96 C21000                  	ret AND_KILL_FRAME(0)
 12878                                  .L_lambda_simple_end_0734:	; new closure is in rax
 12879 00008E99 50                      	push rax
 12880 00008E9A 6A01                    	push 1	; arg count
 12881 00008E9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12882 00008EA1 E88AE60000              	call malloc
 12883 00008EA6 50                      	push rax
 12884 00008EA7 BF00000000              	mov rdi, 8 * 0	; new rib
 12885 00008EAC E87FE60000              	call malloc
 12886 00008EB1 50                      	push rax
 12887 00008EB2 BF08000000              	mov rdi, 8 * 1	; extended env
 12888 00008EB7 E874E60000              	call malloc
 12889 00008EBC 488B7D10                	mov rdi, ENV
 12890 00008EC0 BE00000000              	mov rsi, 0
 12891 00008EC5 BA01000000              	mov rdx, 1
 12892                                  .L_lambda_simple_env_loop_0735:	; ext_env[i + 1] <-- env[i]
 12893 00008ECA 4883FE00                	cmp rsi, 0
 12894 00008ECE 7410                    	je .L_lambda_simple_env_end_0735
 12895 00008ED0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12896 00008ED4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12897 00008ED8 48FFC6                  	inc rsi
 12898 00008EDB 48FFC2                  	inc rdx
 12899 00008EDE EBEA                    	jmp .L_lambda_simple_env_loop_0735
 12900                                  .L_lambda_simple_env_end_0735:
 12901 00008EE0 5B                      	pop rbx
 12902 00008EE1 BE00000000              	mov rsi, 0
 12903                                  .L_lambda_simple_params_loop_0735:	; copy params
 12904 00008EE6 4883FE00                	cmp rsi, 0
 12905 00008EEA 740E                    	je .L_lambda_simple_params_end_0735
 12906 00008EEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12907 00008EF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12908 00008EF5 48FFC6                  	inc rsi
 12909 00008EF8 EBEC                    	jmp .L_lambda_simple_params_loop_0735
 12910                                  .L_lambda_simple_params_end_0735:
 12911 00008EFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12912 00008EFD 4889C3                  	mov rbx, rax
 12913 00008F00 58                      	pop rax
 12914 00008F01 C60004                  	mov byte [rax], T_closure
 12915 00008F04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12916 00008F08 48C74009[158F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0735
 12917 00008F10 E9120F0000              	jmp .L_lambda_simple_end_0735
 12918                                  .L_lambda_simple_code_0735:	; lambda-simple body
 12919 00008F15 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12920 00008F1B 740B                    	je .L_lambda_simple_arity_check_ok_081c
 12921 00008F1D FF742410                	push qword [rsp + 8 * 2]
 12922 00008F21 6A01                    	push 1
 12923 00008F23 E9C1E50000              	jmp L_error_incorrect_arity_simple
 12924                                  .L_lambda_simple_arity_check_ok_081c:
 12925 00008F28 C8000000                	enter 0, 0
 12926                                  	; preparing a tail-call
 12927 00008F2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12928 00008F31 E8FAE50000              	call malloc
 12929 00008F36 50                      	push rax
 12930 00008F37 BF08000000              	mov rdi, 8 * 1	; new rib
 12931 00008F3C E8EFE50000              	call malloc
 12932 00008F41 50                      	push rax
 12933 00008F42 BF10000000              	mov rdi, 8 * 2	; extended env
 12934 00008F47 E8E4E50000              	call malloc
 12935 00008F4C 488B7D10                	mov rdi, ENV
 12936 00008F50 BE00000000              	mov rsi, 0
 12937 00008F55 BA01000000              	mov rdx, 1
 12938                                  .L_lambda_simple_env_loop_0736:	; ext_env[i + 1] <-- env[i]
 12939 00008F5A 4883FE01                	cmp rsi, 1
 12940 00008F5E 7410                    	je .L_lambda_simple_env_end_0736
 12941 00008F60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12942 00008F64 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12943 00008F68 48FFC6                  	inc rsi
 12944 00008F6B 48FFC2                  	inc rdx
 12945 00008F6E EBEA                    	jmp .L_lambda_simple_env_loop_0736
 12946                                  .L_lambda_simple_env_end_0736:
 12947 00008F70 5B                      	pop rbx
 12948 00008F71 BE00000000              	mov rsi, 0
 12949                                  .L_lambda_simple_params_loop_0736:	; copy params
 12950 00008F76 4883FE01                	cmp rsi, 1
 12951 00008F7A 740E                    	je .L_lambda_simple_params_end_0736
 12952 00008F7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12953 00008F81 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12954 00008F85 48FFC6                  	inc rsi
 12955 00008F88 EBEC                    	jmp .L_lambda_simple_params_loop_0736
 12956                                  .L_lambda_simple_params_end_0736:
 12957 00008F8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12958 00008F8D 4889C3                  	mov rbx, rax
 12959 00008F90 58                      	pop rax
 12960 00008F91 C60004                  	mov byte [rax], T_closure
 12961 00008F94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12962 00008F98 48C74009[A58F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0736
 12963 00008FA0 E996090000              	jmp .L_lambda_simple_end_0736
 12964                                  .L_lambda_simple_code_0736:	; lambda-simple body
 12965 00008FA5 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12966 00008FAB 740B                    	je .L_lambda_simple_arity_check_ok_081d
 12967 00008FAD FF742410                	push qword [rsp + 8 * 2]
 12968 00008FB1 6A02                    	push 2
 12969 00008FB3 E931E50000              	jmp L_error_incorrect_arity_simple
 12970                                  .L_lambda_simple_arity_check_ok_081d:
 12971 00008FB8 C8000000                	enter 0, 0
 12972                                  	; preparing a non-tail-call
 12973 00008FBC 488B4520                	mov rax, PARAM(0)	; param a
 12974 00008FC0 50                      	push rax
 12975 00008FC1 6A01                    	push 1	; arg count
 12976 00008FC3 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 12977 00008FCB 803805                  	cmp byte [rax], T_undefined
 12978 00008FCE 0F842FE40000            	je L_error_fvar_undefined
 12979 00008FD4 803804                  	cmp byte [rax], T_closure
 12980 00008FD7 0F85AAE40000            	jne L_error_non_closure
 12981 00008FDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12982 00008FE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12983 00008FE3 483D[02000000]          	cmp rax, sob_boolean_false
 12984 00008FE9 0F84D3020000            	je .L_if_else_0510
 12985                                  	; preparing a non-tail-call
 12986 00008FEF 488B4528                	mov rax, PARAM(1)	; param b
 12987 00008FF3 50                      	push rax
 12988 00008FF4 6A01                    	push 1	; arg count
 12989 00008FF6 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 12990 00008FFE 803805                  	cmp byte [rax], T_undefined
 12991 00009001 0F84FCE30000            	je L_error_fvar_undefined
 12992 00009007 803804                  	cmp byte [rax], T_closure
 12993 0000900A 0F8577E40000            	jne L_error_non_closure
 12994 00009010 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12995 00009013 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12996 00009016 483D[02000000]          	cmp rax, sob_boolean_false
 12997 0000901C 0F8482000000            	je .L_if_else_0507
 12998                                  	; preparing a tail-call
 12999 00009022 488B4528                	mov rax, PARAM(1)	; param b
 13000 00009026 50                      	push rax
 13001 00009027 488B4520                	mov rax, PARAM(0)	; param a
 13002 0000902B 50                      	push rax
 13003 0000902C 6A02                    	push 2	; arg count
 13004 0000902E 488B0425[590F0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 13005 00009036 803805                  	cmp byte [rax], T_undefined
 13006 00009039 0F84C4E30000            	je L_error_fvar_undefined
 13007 0000903F 803804                  	cmp byte [rax], T_closure
 13008 00009042 0F853FE40000            	jne L_error_non_closure
 13009 00009048 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13010 0000904B FF7508                  	push qword [rbp + 8 *1]
 13011 0000904E 4989C0                  	mov r8, rax
 13012 00009051 488B5D18                	mov rbx, COUNT
 13013 00009055 4883C303                	add rbx,3
 13014 00009059 48C1E303                	shl rbx,3
 13015 0000905D 4801EB                  	add rbx, rbp
 13016 00009060 488B6D00                	mov rbp, [rbp]
 13017 00009064 B900000000              	mov rcx,0
 13018 00009069 BA05000000              	mov rdx, 5
 13019 0000906E 4889D0                  	mov rax, rdx
 13020 00009071 48FFC8                  	dec rax
 13021 00009074 48C1E003                	shl rax,3
 13022 00009078 4801E0                  	add rax, rsp
 13023                                  	.L_tc_recycle_frame_loop_092f:
 13024 0000907B 4839D1                  	cmp rcx, rdx
 13025 0000907E 7414                    	je .L_tc_recycle_frame_done_092f
 13026 00009080 4C8B08                  	mov r9, qword [rax]
 13027 00009083 4C890B                  	mov qword [rbx],r9
 13028 00009086 4883E808                	sub rax,8
 13029 0000908A 4883EB08                	sub rbx,8
 13030 0000908E 4883C101                	add rcx,1
 13031 00009092 EBE7                    	jmp .L_tc_recycle_frame_loop_092f
 13032                                  	.L_tc_recycle_frame_done_092f:
 13033 00009094 4883C308                	add rbx,8
 13034 00009098 4889DC                  	mov rsp,rbx
 13035 0000909B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13036 0000909F E919020000              	jmp .L_if_end_058c
 13037                                  .L_if_else_0507:
 13038                                  	; preparing a non-tail-call
 13039 000090A4 488B4528                	mov rax, PARAM(1)	; param b
 13040 000090A8 50                      	push rax
 13041 000090A9 6A01                    	push 1	; arg count
 13042 000090AB 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 13043 000090B3 803805                  	cmp byte [rax], T_undefined
 13044 000090B6 0F8447E30000            	je L_error_fvar_undefined
 13045 000090BC 803804                  	cmp byte [rax], T_closure
 13046 000090BF 0F85C2E30000            	jne L_error_non_closure
 13047 000090C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13048 000090C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13049 000090CB 483D[02000000]          	cmp rax, sob_boolean_false
 13050 000090D1 0F84A5000000            	je .L_if_else_0506
 13051                                  	; preparing a tail-call
 13052 000090D7 488B4528                	mov rax, PARAM(1)	; param b
 13053 000090DB 50                      	push rax
 13054                                  	; preparing a non-tail-call
 13055 000090DC 488B4520                	mov rax, PARAM(0)	; param a
 13056 000090E0 50                      	push rax
 13057 000090E1 6A01                    	push 1	; arg count
 13058 000090E3 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13059 000090EB 803805                  	cmp byte [rax], T_undefined
 13060 000090EE 0F840FE30000            	je L_error_fvar_undefined
 13061 000090F4 803804                  	cmp byte [rax], T_closure
 13062 000090F7 0F858AE30000            	jne L_error_non_closure
 13063 000090FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 13064 00009100 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13065 00009103 50                      	push rax
 13066 00009104 6A02                    	push 2	; arg count
 13067 00009106 488B0425[370F0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13068 0000910E 803805                  	cmp byte [rax], T_undefined
 13069 00009111 0F84ECE20000            	je L_error_fvar_undefined
 13070 00009117 803804                  	cmp byte [rax], T_closure
 13071 0000911A 0F8567E30000            	jne L_error_non_closure
 13072 00009120 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13073 00009123 FF7508                  	push qword [rbp + 8 *1]
 13074 00009126 4989C0                  	mov r8, rax
 13075 00009129 488B5D18                	mov rbx, COUNT
 13076 0000912D 4883C303                	add rbx,3
 13077 00009131 48C1E303                	shl rbx,3
 13078 00009135 4801EB                  	add rbx, rbp
 13079 00009138 488B6D00                	mov rbp, [rbp]
 13080 0000913C B900000000              	mov rcx,0
 13081 00009141 BA05000000              	mov rdx, 5
 13082 00009146 4889D0                  	mov rax, rdx
 13083 00009149 48FFC8                  	dec rax
 13084 0000914C 48C1E003                	shl rax,3
 13085 00009150 4801E0                  	add rax, rsp
 13086                                  	.L_tc_recycle_frame_loop_0930:
 13087 00009153 4839D1                  	cmp rcx, rdx
 13088 00009156 7414                    	je .L_tc_recycle_frame_done_0930
 13089 00009158 4C8B08                  	mov r9, qword [rax]
 13090 0000915B 4C890B                  	mov qword [rbx],r9
 13091 0000915E 4883E808                	sub rax,8
 13092 00009162 4883EB08                	sub rbx,8
 13093 00009166 4883C101                	add rcx,1
 13094 0000916A EBE7                    	jmp .L_tc_recycle_frame_loop_0930
 13095                                  	.L_tc_recycle_frame_done_0930:
 13096 0000916C 4883C308                	add rbx,8
 13097 00009170 4889DC                  	mov rsp,rbx
 13098 00009173 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13099 00009177 E941010000              	jmp .L_if_end_058b
 13100                                  .L_if_else_0506:
 13101                                  	; preparing a non-tail-call
 13102 0000917C 488B4528                	mov rax, PARAM(1)	; param b
 13103 00009180 50                      	push rax
 13104 00009181 6A01                    	push 1	; arg count
 13105 00009183 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 13106 0000918B 803805                  	cmp byte [rax], T_undefined
 13107 0000918E 0F846FE20000            	je L_error_fvar_undefined
 13108 00009194 803804                  	cmp byte [rax], T_closure
 13109 00009197 0F85EAE20000            	jne L_error_non_closure
 13110 0000919D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13111 000091A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13112 000091A3 483D[02000000]          	cmp rax, sob_boolean_false
 13113 000091A9 0F84A2000000            	je .L_if_else_0505
 13114                                  	; preparing a tail-call
 13115 000091AF 488B4528                	mov rax, PARAM(1)	; param b
 13116 000091B3 50                      	push rax
 13117                                  	; preparing a non-tail-call
 13118 000091B4 488B4520                	mov rax, PARAM(0)	; param a
 13119 000091B8 50                      	push rax
 13120 000091B9 6A01                    	push 1	; arg count
 13121 000091BB 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 13122 000091C3 803805                  	cmp byte [rax], T_undefined
 13123 000091C6 0F8437E20000            	je L_error_fvar_undefined
 13124 000091CC 803804                  	cmp byte [rax], T_closure
 13125 000091CF 0F85B2E20000            	jne L_error_non_closure
 13126 000091D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13127 000091D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13128 000091DB 50                      	push rax
 13129 000091DC 6A02                    	push 2	; arg count
 13130 000091DE 488B0425[480F0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13131 000091E6 803805                  	cmp byte [rax], T_undefined
 13132 000091E9 0F8414E20000            	je L_error_fvar_undefined
 13133 000091EF 803804                  	cmp byte [rax], T_closure
 13134 000091F2 0F858FE20000            	jne L_error_non_closure
 13135 000091F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13136 000091FB FF7508                  	push qword [rbp + 8 *1]
 13137 000091FE 4989C0                  	mov r8, rax
 13138 00009201 488B5D18                	mov rbx, COUNT
 13139 00009205 4883C303                	add rbx,3
 13140 00009209 48C1E303                	shl rbx,3
 13141 0000920D 4801EB                  	add rbx, rbp
 13142 00009210 488B6D00                	mov rbp, [rbp]
 13143 00009214 B900000000              	mov rcx,0
 13144 00009219 BA05000000              	mov rdx, 5
 13145 0000921E 4889D0                  	mov rax, rdx
 13146 00009221 48FFC8                  	dec rax
 13147 00009224 48C1E003                	shl rax,3
 13148 00009228 4801E0                  	add rax, rsp
 13149                                  	.L_tc_recycle_frame_loop_0931:
 13150 0000922B 4839D1                  	cmp rcx, rdx
 13151 0000922E 7414                    	je .L_tc_recycle_frame_done_0931
 13152 00009230 4C8B08                  	mov r9, qword [rax]
 13153 00009233 4C890B                  	mov qword [rbx],r9
 13154 00009236 4883E808                	sub rax,8
 13155 0000923A 4883EB08                	sub rbx,8
 13156 0000923E 4883C101                	add rcx,1
 13157 00009242 EBE7                    	jmp .L_tc_recycle_frame_loop_0931
 13158                                  	.L_tc_recycle_frame_done_0931:
 13159 00009244 4883C308                	add rbx,8
 13160 00009248 4889DC                  	mov rsp,rbx
 13161 0000924B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13162 0000924F EB6C                    	jmp .L_if_end_058a
 13163                                  .L_if_else_0505:
 13164                                  	; preparing a tail-call
 13165 00009251 6A00                    	push 0	; arg count
 13166 00009253 488B4510                	mov rax, ENV
 13167 00009257 488B00                  	mov rax, qword [rax + 8 * 0]
 13168 0000925A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13169 0000925D 803804                  	cmp byte [rax], T_closure
 13170 00009260 0F8521E20000            	jne L_error_non_closure
 13171 00009266 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13172 00009269 FF7508                  	push qword [rbp + 8 *1]
 13173 0000926C 4989C0                  	mov r8, rax
 13174 0000926F 488B5D18                	mov rbx, COUNT
 13175 00009273 4883C303                	add rbx,3
 13176 00009277 48C1E303                	shl rbx,3
 13177 0000927B 4801EB                  	add rbx, rbp
 13178 0000927E 488B6D00                	mov rbp, [rbp]
 13179 00009282 B900000000              	mov rcx,0
 13180 00009287 BA03000000              	mov rdx, 3
 13181 0000928C 4889D0                  	mov rax, rdx
 13182 0000928F 48FFC8                  	dec rax
 13183 00009292 48C1E003                	shl rax,3
 13184 00009296 4801E0                  	add rax, rsp
 13185                                  	.L_tc_recycle_frame_loop_0932:
 13186 00009299 4839D1                  	cmp rcx, rdx
 13187 0000929C 7414                    	je .L_tc_recycle_frame_done_0932
 13188 0000929E 4C8B08                  	mov r9, qword [rax]
 13189 000092A1 4C890B                  	mov qword [rbx],r9
 13190 000092A4 4883E808                	sub rax,8
 13191 000092A8 4883EB08                	sub rbx,8
 13192 000092AC 4883C101                	add rcx,1
 13193 000092B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0932
 13194                                  	.L_tc_recycle_frame_done_0932:
 13195 000092B2 4883C308                	add rbx,8
 13196 000092B6 4889DC                  	mov rsp,rbx
 13197 000092B9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13198                                  .L_if_end_058a:
 13199                                  .L_if_end_058b:
 13200                                  .L_if_end_058c:
 13201 000092BD E975060000              	jmp .L_if_end_0595
 13202                                  .L_if_else_0510:
 13203                                  	; preparing a non-tail-call
 13204 000092C2 488B4520                	mov rax, PARAM(0)	; param a
 13205 000092C6 50                      	push rax
 13206 000092C7 6A01                    	push 1	; arg count
 13207 000092C9 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 13208 000092D1 803805                  	cmp byte [rax], T_undefined
 13209 000092D4 0F8429E10000            	je L_error_fvar_undefined
 13210 000092DA 803804                  	cmp byte [rax], T_closure
 13211 000092DD 0F85A4E10000            	jne L_error_non_closure
 13212 000092E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13213 000092E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13214 000092E9 483D[02000000]          	cmp rax, sob_boolean_false
 13215 000092EF 0F84D3020000            	je .L_if_else_050f
 13216                                  	; preparing a non-tail-call
 13217 000092F5 488B4528                	mov rax, PARAM(1)	; param b
 13218 000092F9 50                      	push rax
 13219 000092FA 6A01                    	push 1	; arg count
 13220 000092FC 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 13221 00009304 803805                  	cmp byte [rax], T_undefined
 13222 00009307 0F84F6E00000            	je L_error_fvar_undefined
 13223 0000930D 803804                  	cmp byte [rax], T_closure
 13224 00009310 0F8571E10000            	jne L_error_non_closure
 13225 00009316 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13226 00009319 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13227 0000931C 483D[02000000]          	cmp rax, sob_boolean_false
 13228 00009322 0F84A5000000            	je .L_if_else_050a
 13229                                  	; preparing a tail-call
 13230                                  	; preparing a non-tail-call
 13231 00009328 488B4528                	mov rax, PARAM(1)	; param b
 13232 0000932C 50                      	push rax
 13233 0000932D 6A01                    	push 1	; arg count
 13234 0000932F 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13235 00009337 803805                  	cmp byte [rax], T_undefined
 13236 0000933A 0F84C3E00000            	je L_error_fvar_undefined
 13237 00009340 803804                  	cmp byte [rax], T_closure
 13238 00009343 0F853EE10000            	jne L_error_non_closure
 13239 00009349 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13240 0000934C FF5009                  	call SOB_CLOSURE_CODE(rax)
 13241 0000934F 50                      	push rax
 13242 00009350 488B4520                	mov rax, PARAM(0)	; param a
 13243 00009354 50                      	push rax
 13244 00009355 6A02                    	push 2	; arg count
 13245 00009357 488B0425[370F0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13246 0000935F 803805                  	cmp byte [rax], T_undefined
 13247 00009362 0F849BE00000            	je L_error_fvar_undefined
 13248 00009368 803804                  	cmp byte [rax], T_closure
 13249 0000936B 0F8516E10000            	jne L_error_non_closure
 13250 00009371 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13251 00009374 FF7508                  	push qword [rbp + 8 *1]
 13252 00009377 4989C0                  	mov r8, rax
 13253 0000937A 488B5D18                	mov rbx, COUNT
 13254 0000937E 4883C303                	add rbx,3
 13255 00009382 48C1E303                	shl rbx,3
 13256 00009386 4801EB                  	add rbx, rbp
 13257 00009389 488B6D00                	mov rbp, [rbp]
 13258 0000938D B900000000              	mov rcx,0
 13259 00009392 BA05000000              	mov rdx, 5
 13260 00009397 4889D0                  	mov rax, rdx
 13261 0000939A 48FFC8                  	dec rax
 13262 0000939D 48C1E003                	shl rax,3
 13263 000093A1 4801E0                  	add rax, rsp
 13264                                  	.L_tc_recycle_frame_loop_0933:
 13265 000093A4 4839D1                  	cmp rcx, rdx
 13266 000093A7 7414                    	je .L_tc_recycle_frame_done_0933
 13267 000093A9 4C8B08                  	mov r9, qword [rax]
 13268 000093AC 4C890B                  	mov qword [rbx],r9
 13269 000093AF 4883E808                	sub rax,8
 13270 000093B3 4883EB08                	sub rbx,8
 13271 000093B7 4883C101                	add rcx,1
 13272 000093BB EBE7                    	jmp .L_tc_recycle_frame_loop_0933
 13273                                  	.L_tc_recycle_frame_done_0933:
 13274 000093BD 4883C308                	add rbx,8
 13275 000093C1 4889DC                  	mov rsp,rbx
 13276 000093C4 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13277 000093C8 E9F6010000              	jmp .L_if_end_058f
 13278                                  .L_if_else_050a:
 13279                                  	; preparing a non-tail-call
 13280 000093CD 488B4528                	mov rax, PARAM(1)	; param b
 13281 000093D1 50                      	push rax
 13282 000093D2 6A01                    	push 1	; arg count
 13283 000093D4 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 13284 000093DC 803805                  	cmp byte [rax], T_undefined
 13285 000093DF 0F841EE00000            	je L_error_fvar_undefined
 13286 000093E5 803804                  	cmp byte [rax], T_closure
 13287 000093E8 0F8599E00000            	jne L_error_non_closure
 13288 000093EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 13289 000093F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13290 000093F4 483D[02000000]          	cmp rax, sob_boolean_false
 13291 000093FA 0F8482000000            	je .L_if_else_0509
 13292                                  	; preparing a tail-call
 13293 00009400 488B4528                	mov rax, PARAM(1)	; param b
 13294 00009404 50                      	push rax
 13295 00009405 488B4520                	mov rax, PARAM(0)	; param a
 13296 00009409 50                      	push rax
 13297 0000940A 6A02                    	push 2	; arg count
 13298 0000940C 488B0425[370F0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13299 00009414 803805                  	cmp byte [rax], T_undefined
 13300 00009417 0F84E6DF0000            	je L_error_fvar_undefined
 13301 0000941D 803804                  	cmp byte [rax], T_closure
 13302 00009420 0F8561E00000            	jne L_error_non_closure
 13303 00009426 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13304 00009429 FF7508                  	push qword [rbp + 8 *1]
 13305 0000942C 4989C0                  	mov r8, rax
 13306 0000942F 488B5D18                	mov rbx, COUNT
 13307 00009433 4883C303                	add rbx,3
 13308 00009437 48C1E303                	shl rbx,3
 13309 0000943B 4801EB                  	add rbx, rbp
 13310 0000943E 488B6D00                	mov rbp, [rbp]
 13311 00009442 B900000000              	mov rcx,0
 13312 00009447 BA05000000              	mov rdx, 5
 13313 0000944C 4889D0                  	mov rax, rdx
 13314 0000944F 48FFC8                  	dec rax
 13315 00009452 48C1E003                	shl rax,3
 13316 00009456 4801E0                  	add rax, rsp
 13317                                  	.L_tc_recycle_frame_loop_0934:
 13318 00009459 4839D1                  	cmp rcx, rdx
 13319 0000945C 7414                    	je .L_tc_recycle_frame_done_0934
 13320 0000945E 4C8B08                  	mov r9, qword [rax]
 13321 00009461 4C890B                  	mov qword [rbx],r9
 13322 00009464 4883E808                	sub rax,8
 13323 00009468 4883EB08                	sub rbx,8
 13324 0000946C 4883C101                	add rcx,1
 13325 00009470 EBE7                    	jmp .L_tc_recycle_frame_loop_0934
 13326                                  	.L_tc_recycle_frame_done_0934:
 13327 00009472 4883C308                	add rbx,8
 13328 00009476 4889DC                  	mov rsp,rbx
 13329 00009479 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13330 0000947D E941010000              	jmp .L_if_end_058e
 13331                                  .L_if_else_0509:
 13332                                  	; preparing a non-tail-call
 13333 00009482 488B4528                	mov rax, PARAM(1)	; param b
 13334 00009486 50                      	push rax
 13335 00009487 6A01                    	push 1	; arg count
 13336 00009489 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 13337 00009491 803805                  	cmp byte [rax], T_undefined
 13338 00009494 0F8469DF0000            	je L_error_fvar_undefined
 13339 0000949A 803804                  	cmp byte [rax], T_closure
 13340 0000949D 0F85E4DF0000            	jne L_error_non_closure
 13341 000094A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13342 000094A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13343 000094A9 483D[02000000]          	cmp rax, sob_boolean_false
 13344 000094AF 0F84A2000000            	je .L_if_else_0508
 13345                                  	; preparing a tail-call
 13346 000094B5 488B4528                	mov rax, PARAM(1)	; param b
 13347 000094B9 50                      	push rax
 13348                                  	; preparing a non-tail-call
 13349 000094BA 488B4520                	mov rax, PARAM(0)	; param a
 13350 000094BE 50                      	push rax
 13351 000094BF 6A01                    	push 1	; arg count
 13352 000094C1 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13353 000094C9 803805                  	cmp byte [rax], T_undefined
 13354 000094CC 0F8431DF0000            	je L_error_fvar_undefined
 13355 000094D2 803804                  	cmp byte [rax], T_closure
 13356 000094D5 0F85ACDF0000            	jne L_error_non_closure
 13357 000094DB FF7001                  	push SOB_CLOSURE_ENV(rax)
 13358 000094DE FF5009                  	call SOB_CLOSURE_CODE(rax)
 13359 000094E1 50                      	push rax
 13360 000094E2 6A02                    	push 2	; arg count
 13361 000094E4 488B0425[480F0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13362 000094EC 803805                  	cmp byte [rax], T_undefined
 13363 000094EF 0F840EDF0000            	je L_error_fvar_undefined
 13364 000094F5 803804                  	cmp byte [rax], T_closure
 13365 000094F8 0F8589DF0000            	jne L_error_non_closure
 13366 000094FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 13367 00009501 FF7508                  	push qword [rbp + 8 *1]
 13368 00009504 4989C0                  	mov r8, rax
 13369 00009507 488B5D18                	mov rbx, COUNT
 13370 0000950B 4883C303                	add rbx,3
 13371 0000950F 48C1E303                	shl rbx,3
 13372 00009513 4801EB                  	add rbx, rbp
 13373 00009516 488B6D00                	mov rbp, [rbp]
 13374 0000951A B900000000              	mov rcx,0
 13375 0000951F BA05000000              	mov rdx, 5
 13376 00009524 4889D0                  	mov rax, rdx
 13377 00009527 48FFC8                  	dec rax
 13378 0000952A 48C1E003                	shl rax,3
 13379 0000952E 4801E0                  	add rax, rsp
 13380                                  	.L_tc_recycle_frame_loop_0935:
 13381 00009531 4839D1                  	cmp rcx, rdx
 13382 00009534 7414                    	je .L_tc_recycle_frame_done_0935
 13383 00009536 4C8B08                  	mov r9, qword [rax]
 13384 00009539 4C890B                  	mov qword [rbx],r9
 13385 0000953C 4883E808                	sub rax,8
 13386 00009540 4883EB08                	sub rbx,8
 13387 00009544 4883C101                	add rcx,1
 13388 00009548 EBE7                    	jmp .L_tc_recycle_frame_loop_0935
 13389                                  	.L_tc_recycle_frame_done_0935:
 13390 0000954A 4883C308                	add rbx,8
 13391 0000954E 4889DC                  	mov rsp,rbx
 13392 00009551 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13393 00009555 EB6C                    	jmp .L_if_end_058d
 13394                                  .L_if_else_0508:
 13395                                  	; preparing a tail-call
 13396 00009557 6A00                    	push 0	; arg count
 13397 00009559 488B4510                	mov rax, ENV
 13398 0000955D 488B00                  	mov rax, qword [rax + 8 * 0]
 13399 00009560 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13400 00009563 803804                  	cmp byte [rax], T_closure
 13401 00009566 0F851BDF0000            	jne L_error_non_closure
 13402 0000956C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13403 0000956F FF7508                  	push qword [rbp + 8 *1]
 13404 00009572 4989C0                  	mov r8, rax
 13405 00009575 488B5D18                	mov rbx, COUNT
 13406 00009579 4883C303                	add rbx,3
 13407 0000957D 48C1E303                	shl rbx,3
 13408 00009581 4801EB                  	add rbx, rbp
 13409 00009584 488B6D00                	mov rbp, [rbp]
 13410 00009588 B900000000              	mov rcx,0
 13411 0000958D BA03000000              	mov rdx, 3
 13412 00009592 4889D0                  	mov rax, rdx
 13413 00009595 48FFC8                  	dec rax
 13414 00009598 48C1E003                	shl rax,3
 13415 0000959C 4801E0                  	add rax, rsp
 13416                                  	.L_tc_recycle_frame_loop_0936:
 13417 0000959F 4839D1                  	cmp rcx, rdx
 13418 000095A2 7414                    	je .L_tc_recycle_frame_done_0936
 13419 000095A4 4C8B08                  	mov r9, qword [rax]
 13420 000095A7 4C890B                  	mov qword [rbx],r9
 13421 000095AA 4883E808                	sub rax,8
 13422 000095AE 4883EB08                	sub rbx,8
 13423 000095B2 4883C101                	add rcx,1
 13424 000095B6 EBE7                    	jmp .L_tc_recycle_frame_loop_0936
 13425                                  	.L_tc_recycle_frame_done_0936:
 13426 000095B8 4883C308                	add rbx,8
 13427 000095BC 4889DC                  	mov rsp,rbx
 13428 000095BF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13429                                  .L_if_end_058d:
 13430                                  .L_if_end_058e:
 13431                                  .L_if_end_058f:
 13432 000095C3 E96F030000              	jmp .L_if_end_0594
 13433                                  .L_if_else_050f:
 13434                                  	; preparing a non-tail-call
 13435 000095C8 488B4520                	mov rax, PARAM(0)	; param a
 13436 000095CC 50                      	push rax
 13437 000095CD 6A01                    	push 1	; arg count
 13438 000095CF 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 13439 000095D7 803805                  	cmp byte [rax], T_undefined
 13440 000095DA 0F8423DE0000            	je L_error_fvar_undefined
 13441 000095E0 803804                  	cmp byte [rax], T_closure
 13442 000095E3 0F859EDE0000            	jne L_error_non_closure
 13443 000095E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13444 000095EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13445 000095EF 483D[02000000]          	cmp rax, sob_boolean_false
 13446 000095F5 0F84D0020000            	je .L_if_else_050e
 13447                                  	; preparing a non-tail-call
 13448 000095FB 488B4528                	mov rax, PARAM(1)	; param b
 13449 000095FF 50                      	push rax
 13450 00009600 6A01                    	push 1	; arg count
 13451 00009602 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 13452 0000960A 803805                  	cmp byte [rax], T_undefined
 13453 0000960D 0F84F0DD0000            	je L_error_fvar_undefined
 13454 00009613 803804                  	cmp byte [rax], T_closure
 13455 00009616 0F856BDE0000            	jne L_error_non_closure
 13456 0000961C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13457 0000961F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13458 00009622 483D[02000000]          	cmp rax, sob_boolean_false
 13459 00009628 0F84A5000000            	je .L_if_else_050d
 13460                                  	; preparing a tail-call
 13461                                  	; preparing a non-tail-call
 13462 0000962E 488B4528                	mov rax, PARAM(1)	; param b
 13463 00009632 50                      	push rax
 13464 00009633 6A01                    	push 1	; arg count
 13465 00009635 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 13466 0000963D 803805                  	cmp byte [rax], T_undefined
 13467 00009640 0F84BDDD0000            	je L_error_fvar_undefined
 13468 00009646 803804                  	cmp byte [rax], T_closure
 13469 00009649 0F8538DE0000            	jne L_error_non_closure
 13470 0000964F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13471 00009652 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13472 00009655 50                      	push rax
 13473 00009656 488B4520                	mov rax, PARAM(0)	; param a
 13474 0000965A 50                      	push rax
 13475 0000965B 6A02                    	push 2	; arg count
 13476 0000965D 488B0425[480F0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13477 00009665 803805                  	cmp byte [rax], T_undefined
 13478 00009668 0F8495DD0000            	je L_error_fvar_undefined
 13479 0000966E 803804                  	cmp byte [rax], T_closure
 13480 00009671 0F8510DE0000            	jne L_error_non_closure
 13481 00009677 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13482 0000967A FF7508                  	push qword [rbp + 8 *1]
 13483 0000967D 4989C0                  	mov r8, rax
 13484 00009680 488B5D18                	mov rbx, COUNT
 13485 00009684 4883C303                	add rbx,3
 13486 00009688 48C1E303                	shl rbx,3
 13487 0000968C 4801EB                  	add rbx, rbp
 13488 0000968F 488B6D00                	mov rbp, [rbp]
 13489 00009693 B900000000              	mov rcx,0
 13490 00009698 BA05000000              	mov rdx, 5
 13491 0000969D 4889D0                  	mov rax, rdx
 13492 000096A0 48FFC8                  	dec rax
 13493 000096A3 48C1E003                	shl rax,3
 13494 000096A7 4801E0                  	add rax, rsp
 13495                                  	.L_tc_recycle_frame_loop_0937:
 13496 000096AA 4839D1                  	cmp rcx, rdx
 13497 000096AD 7414                    	je .L_tc_recycle_frame_done_0937
 13498 000096AF 4C8B08                  	mov r9, qword [rax]
 13499 000096B2 4C890B                  	mov qword [rbx],r9
 13500 000096B5 4883E808                	sub rax,8
 13501 000096B9 4883EB08                	sub rbx,8
 13502 000096BD 4883C101                	add rcx,1
 13503 000096C1 EBE7                    	jmp .L_tc_recycle_frame_loop_0937
 13504                                  	.L_tc_recycle_frame_done_0937:
 13505 000096C3 4883C308                	add rbx,8
 13506 000096C7 4889DC                  	mov rsp,rbx
 13507 000096CA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13508 000096CE E9F6010000              	jmp .L_if_end_0592
 13509                                  .L_if_else_050d:
 13510                                  	; preparing a non-tail-call
 13511 000096D3 488B4528                	mov rax, PARAM(1)	; param b
 13512 000096D7 50                      	push rax
 13513 000096D8 6A01                    	push 1	; arg count
 13514 000096DA 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 13515 000096E2 803805                  	cmp byte [rax], T_undefined
 13516 000096E5 0F8418DD0000            	je L_error_fvar_undefined
 13517 000096EB 803804                  	cmp byte [rax], T_closure
 13518 000096EE 0F8593DD0000            	jne L_error_non_closure
 13519 000096F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13520 000096F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13521 000096FA 483D[02000000]          	cmp rax, sob_boolean_false
 13522 00009700 0F84A5000000            	je .L_if_else_050c
 13523                                  	; preparing a tail-call
 13524                                  	; preparing a non-tail-call
 13525 00009706 488B4528                	mov rax, PARAM(1)	; param b
 13526 0000970A 50                      	push rax
 13527 0000970B 6A01                    	push 1	; arg count
 13528 0000970D 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13529 00009715 803805                  	cmp byte [rax], T_undefined
 13530 00009718 0F84E5DC0000            	je L_error_fvar_undefined
 13531 0000971E 803804                  	cmp byte [rax], T_closure
 13532 00009721 0F8560DD0000            	jne L_error_non_closure
 13533 00009727 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13534 0000972A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13535 0000972D 50                      	push rax
 13536 0000972E 488B4520                	mov rax, PARAM(0)	; param a
 13537 00009732 50                      	push rax
 13538 00009733 6A02                    	push 2	; arg count
 13539 00009735 488B0425[480F0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13540 0000973D 803805                  	cmp byte [rax], T_undefined
 13541 00009740 0F84BDDC0000            	je L_error_fvar_undefined
 13542 00009746 803804                  	cmp byte [rax], T_closure
 13543 00009749 0F8538DD0000            	jne L_error_non_closure
 13544 0000974F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13545 00009752 FF7508                  	push qword [rbp + 8 *1]
 13546 00009755 4989C0                  	mov r8, rax
 13547 00009758 488B5D18                	mov rbx, COUNT
 13548 0000975C 4883C303                	add rbx,3
 13549 00009760 48C1E303                	shl rbx,3
 13550 00009764 4801EB                  	add rbx, rbp
 13551 00009767 488B6D00                	mov rbp, [rbp]
 13552 0000976B B900000000              	mov rcx,0
 13553 00009770 BA05000000              	mov rdx, 5
 13554 00009775 4889D0                  	mov rax, rdx
 13555 00009778 48FFC8                  	dec rax
 13556 0000977B 48C1E003                	shl rax,3
 13557 0000977F 4801E0                  	add rax, rsp
 13558                                  	.L_tc_recycle_frame_loop_0938:
 13559 00009782 4839D1                  	cmp rcx, rdx
 13560 00009785 7414                    	je .L_tc_recycle_frame_done_0938
 13561 00009787 4C8B08                  	mov r9, qword [rax]
 13562 0000978A 4C890B                  	mov qword [rbx],r9
 13563 0000978D 4883E808                	sub rax,8
 13564 00009791 4883EB08                	sub rbx,8
 13565 00009795 4883C101                	add rcx,1
 13566 00009799 EBE7                    	jmp .L_tc_recycle_frame_loop_0938
 13567                                  	.L_tc_recycle_frame_done_0938:
 13568 0000979B 4883C308                	add rbx,8
 13569 0000979F 4889DC                  	mov rsp,rbx
 13570 000097A2 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13571 000097A6 E91E010000              	jmp .L_if_end_0591
 13572                                  .L_if_else_050c:
 13573                                  	; preparing a non-tail-call
 13574 000097AB 488B4528                	mov rax, PARAM(1)	; param b
 13575 000097AF 50                      	push rax
 13576 000097B0 6A01                    	push 1	; arg count
 13577 000097B2 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 13578 000097BA 803805                  	cmp byte [rax], T_undefined
 13579 000097BD 0F8440DC0000            	je L_error_fvar_undefined
 13580 000097C3 803804                  	cmp byte [rax], T_closure
 13581 000097C6 0F85BBDC0000            	jne L_error_non_closure
 13582 000097CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13583 000097CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13584 000097D2 483D[02000000]          	cmp rax, sob_boolean_false
 13585 000097D8 0F847F000000            	je .L_if_else_050b
 13586                                  	; preparing a tail-call
 13587 000097DE 488B4528                	mov rax, PARAM(1)	; param b
 13588 000097E2 50                      	push rax
 13589 000097E3 488B4520                	mov rax, PARAM(0)	; param a
 13590 000097E7 50                      	push rax
 13591 000097E8 6A02                    	push 2	; arg count
 13592 000097EA 488B0425[480F0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13593 000097F2 803805                  	cmp byte [rax], T_undefined
 13594 000097F5 0F8408DC0000            	je L_error_fvar_undefined
 13595 000097FB 803804                  	cmp byte [rax], T_closure
 13596 000097FE 0F8583DC0000            	jne L_error_non_closure
 13597 00009804 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13598 00009807 FF7508                  	push qword [rbp + 8 *1]
 13599 0000980A 4989C0                  	mov r8, rax
 13600 0000980D 488B5D18                	mov rbx, COUNT
 13601 00009811 4883C303                	add rbx,3
 13602 00009815 48C1E303                	shl rbx,3
 13603 00009819 4801EB                  	add rbx, rbp
 13604 0000981C 488B6D00                	mov rbp, [rbp]
 13605 00009820 B900000000              	mov rcx,0
 13606 00009825 BA05000000              	mov rdx, 5
 13607 0000982A 4889D0                  	mov rax, rdx
 13608 0000982D 48FFC8                  	dec rax
 13609 00009830 48C1E003                	shl rax,3
 13610 00009834 4801E0                  	add rax, rsp
 13611                                  	.L_tc_recycle_frame_loop_0939:
 13612 00009837 4839D1                  	cmp rcx, rdx
 13613 0000983A 7414                    	je .L_tc_recycle_frame_done_0939
 13614 0000983C 4C8B08                  	mov r9, qword [rax]
 13615 0000983F 4C890B                  	mov qword [rbx],r9
 13616 00009842 4883E808                	sub rax,8
 13617 00009846 4883EB08                	sub rbx,8
 13618 0000984A 4883C101                	add rcx,1
 13619 0000984E EBE7                    	jmp .L_tc_recycle_frame_loop_0939
 13620                                  	.L_tc_recycle_frame_done_0939:
 13621 00009850 4883C308                	add rbx,8
 13622 00009854 4889DC                  	mov rsp,rbx
 13623 00009857 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13624 0000985B EB6C                    	jmp .L_if_end_0590
 13625                                  .L_if_else_050b:
 13626                                  	; preparing a tail-call
 13627 0000985D 6A00                    	push 0	; arg count
 13628 0000985F 488B4510                	mov rax, ENV
 13629 00009863 488B00                  	mov rax, qword [rax + 8 * 0]
 13630 00009866 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13631 00009869 803804                  	cmp byte [rax], T_closure
 13632 0000986C 0F8515DC0000            	jne L_error_non_closure
 13633 00009872 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13634 00009875 FF7508                  	push qword [rbp + 8 *1]
 13635 00009878 4989C0                  	mov r8, rax
 13636 0000987B 488B5D18                	mov rbx, COUNT
 13637 0000987F 4883C303                	add rbx,3
 13638 00009883 48C1E303                	shl rbx,3
 13639 00009887 4801EB                  	add rbx, rbp
 13640 0000988A 488B6D00                	mov rbp, [rbp]
 13641 0000988E B900000000              	mov rcx,0
 13642 00009893 BA03000000              	mov rdx, 3
 13643 00009898 4889D0                  	mov rax, rdx
 13644 0000989B 48FFC8                  	dec rax
 13645 0000989E 48C1E003                	shl rax,3
 13646 000098A2 4801E0                  	add rax, rsp
 13647                                  	.L_tc_recycle_frame_loop_093a:
 13648 000098A5 4839D1                  	cmp rcx, rdx
 13649 000098A8 7414                    	je .L_tc_recycle_frame_done_093a
 13650 000098AA 4C8B08                  	mov r9, qword [rax]
 13651 000098AD 4C890B                  	mov qword [rbx],r9
 13652 000098B0 4883E808                	sub rax,8
 13653 000098B4 4883EB08                	sub rbx,8
 13654 000098B8 4883C101                	add rcx,1
 13655 000098BC EBE7                    	jmp .L_tc_recycle_frame_loop_093a
 13656                                  	.L_tc_recycle_frame_done_093a:
 13657 000098BE 4883C308                	add rbx,8
 13658 000098C2 4889DC                  	mov rsp,rbx
 13659 000098C5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13660                                  .L_if_end_0590:
 13661                                  .L_if_end_0591:
 13662                                  .L_if_end_0592:
 13663 000098C9 EB6C                    	jmp .L_if_end_0593
 13664                                  .L_if_else_050e:
 13665                                  	; preparing a tail-call
 13666 000098CB 6A00                    	push 0	; arg count
 13667 000098CD 488B4510                	mov rax, ENV
 13668 000098D1 488B00                  	mov rax, qword [rax + 8 * 0]
 13669 000098D4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13670 000098D7 803804                  	cmp byte [rax], T_closure
 13671 000098DA 0F85A7DB0000            	jne L_error_non_closure
 13672 000098E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13673 000098E3 FF7508                  	push qword [rbp + 8 *1]
 13674 000098E6 4989C0                  	mov r8, rax
 13675 000098E9 488B5D18                	mov rbx, COUNT
 13676 000098ED 4883C303                	add rbx,3
 13677 000098F1 48C1E303                	shl rbx,3
 13678 000098F5 4801EB                  	add rbx, rbp
 13679 000098F8 488B6D00                	mov rbp, [rbp]
 13680 000098FC B900000000              	mov rcx,0
 13681 00009901 BA03000000              	mov rdx, 3
 13682 00009906 4889D0                  	mov rax, rdx
 13683 00009909 48FFC8                  	dec rax
 13684 0000990C 48C1E003                	shl rax,3
 13685 00009910 4801E0                  	add rax, rsp
 13686                                  	.L_tc_recycle_frame_loop_093b:
 13687 00009913 4839D1                  	cmp rcx, rdx
 13688 00009916 7414                    	je .L_tc_recycle_frame_done_093b
 13689 00009918 4C8B08                  	mov r9, qword [rax]
 13690 0000991B 4C890B                  	mov qword [rbx],r9
 13691 0000991E 4883E808                	sub rax,8
 13692 00009922 4883EB08                	sub rbx,8
 13693 00009926 4883C101                	add rcx,1
 13694 0000992A EBE7                    	jmp .L_tc_recycle_frame_loop_093b
 13695                                  	.L_tc_recycle_frame_done_093b:
 13696 0000992C 4883C308                	add rbx,8
 13697 00009930 4889DC                  	mov rsp,rbx
 13698 00009933 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13699                                  .L_if_end_0593:
 13700                                  .L_if_end_0594:
 13701                                  .L_if_end_0595:
 13702 00009937 C9                      	leave
 13703 00009938 C22000                  	ret AND_KILL_FRAME(2)
 13704                                  .L_lambda_simple_end_0736:	; new closure is in rax
 13705 0000993B 50                      	push rax
 13706 0000993C 6A01                    	push 1	; arg count
 13707 0000993E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13708 00009943 E8E8DB0000              	call malloc
 13709 00009948 50                      	push rax
 13710 00009949 BF08000000              	mov rdi, 8 * 1	; new rib
 13711 0000994E E8DDDB0000              	call malloc
 13712 00009953 50                      	push rax
 13713 00009954 BF10000000              	mov rdi, 8 * 2	; extended env
 13714 00009959 E8D2DB0000              	call malloc
 13715 0000995E 488B7D10                	mov rdi, ENV
 13716 00009962 BE00000000              	mov rsi, 0
 13717 00009967 BA01000000              	mov rdx, 1
 13718                                  .L_lambda_simple_env_loop_0737:	; ext_env[i + 1] <-- env[i]
 13719 0000996C 4883FE01                	cmp rsi, 1
 13720 00009970 7410                    	je .L_lambda_simple_env_end_0737
 13721 00009972 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13722 00009976 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13723 0000997A 48FFC6                  	inc rsi
 13724 0000997D 48FFC2                  	inc rdx
 13725 00009980 EBEA                    	jmp .L_lambda_simple_env_loop_0737
 13726                                  .L_lambda_simple_env_end_0737:
 13727 00009982 5B                      	pop rbx
 13728 00009983 BE00000000              	mov rsi, 0
 13729                                  .L_lambda_simple_params_loop_0737:	; copy params
 13730 00009988 4883FE01                	cmp rsi, 1
 13731 0000998C 740E                    	je .L_lambda_simple_params_end_0737
 13732 0000998E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13733 00009993 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13734 00009997 48FFC6                  	inc rsi
 13735 0000999A EBEC                    	jmp .L_lambda_simple_params_loop_0737
 13736                                  .L_lambda_simple_params_end_0737:
 13737 0000999C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13738 0000999F 4889C3                  	mov rbx, rax
 13739 000099A2 58                      	pop rax
 13740 000099A3 C60004                  	mov byte [rax], T_closure
 13741 000099A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13742 000099AA 48C74009[B7990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0737
 13743 000099B2 E90C040000              	jmp .L_lambda_simple_end_0737
 13744                                  .L_lambda_simple_code_0737:	; lambda-simple body
 13745 000099B7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13746 000099BD 740B                    	je .L_lambda_simple_arity_check_ok_081e
 13747 000099BF FF742410                	push qword [rsp + 8 * 2]
 13748 000099C3 6A01                    	push 1
 13749 000099C5 E91FDB0000              	jmp L_error_incorrect_arity_simple
 13750                                  .L_lambda_simple_arity_check_ok_081e:
 13751 000099CA C8000000                	enter 0, 0
 13752 000099CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13753 000099D3 E858DB0000              	call malloc
 13754 000099D8 50                      	push rax
 13755 000099D9 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 13756 000099DD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13757 000099E1 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 13758 000099E6 E845DB0000              	call malloc
 13759 000099EB 50                      	push rax
 13760 000099EC BF18000000              	mov rdi, 8 * 3	; extended env
 13761 000099F1 E83ADB0000              	call malloc
 13762 000099F6 488B7D10                	mov rdi, ENV
 13763 000099FA BE00000000              	mov rsi, 0
 13764 000099FF BA01000000              	mov rdx, 1
 13765                                  .L_lambda_opt_env_loop_00e8:	; ext_env[i + 1] <-- env[i] copy all the array
 13766 00009A04 4883FE02                	cmp rsi, 2
 13767 00009A08 7410                    	je .L_lambda_opt_env_end_00e8
 13768 00009A0A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13769 00009A0E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13770 00009A12 48FFC6                  	inc rsi
 13771 00009A15 48FFC2                  	inc rdx
 13772 00009A18 EBEA                    	jmp .L_lambda_opt_env_loop_00e8
 13773                                  .L_lambda_opt_env_end_00e8:
 13774 00009A1A 5B                      	pop rbx
 13775 00009A1B BE00000000              	mov rsi, 0
 13776                                  .L_lambda_opt_params_loop_02b6:	; copy params
 13777 00009A20 4883FE01                	cmp rsi, 1
 13778 00009A24 740E                    	je .L_lambda_opt_params_end_01cf
 13779 00009A26 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13780 00009A2B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13781 00009A2F 48FFC6                  	inc rsi
 13782 00009A32 EBEC                    	jmp .L_lambda_opt_params_loop_02b6
 13783                                  .L_lambda_opt_params_end_01cf:
 13784 00009A34 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 13785 00009A37 4889C3                  	mov rbx, rax
 13786 00009A3A 58                      	pop rax
 13787 00009A3B C60004                  	mov byte [rax], T_closure
 13788 00009A3E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13789 00009A42 48C74009[4F9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e8
 13790 00009A4A E970030000              	jmp .L_lambda_opt_end_01cf
 13791                                  .L_lambda_opt_code_00e8:	; lambda-opt body
 13792 00009A4F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13793 00009A55 7D0B                    	jge .L_lambda_simple_arity_check_ok_081f
 13794 00009A57 FF742410                	push qword [rsp + 8 * 2]
 13795 00009A5B 6A01                    	push 1
 13796 00009A5D E987DA0000              	jmp L_error_incorrect_arity_simple
 13797                                  .L_lambda_simple_arity_check_ok_081f:
 13798 00009A62 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 13799 00009A67 4983E801                	sub r8, 1
 13800 00009A6B 4C89C3                  	mov rbx,r8
 13801 00009A6E 4983F800                	cmp r8, 0
 13802 00009A72 7535                    	jne .L_lambda_opt_params_loop_02b8
 13803 00009A74 488B542410              	mov rdx, qword [rsp + 8 * 2]
 13804 00009A79 4883C203                	add rdx , 3
 13805 00009A7D 4883EC08                	sub rsp , 8
 13806 00009A81 4889E1                  	mov rcx, rsp
 13807                                  .L_lambda_opt_stack_adjusted_02b7: ;pushing down the stack of the current function
 13808 00009A84 488B5908                	mov rbx, qword [rcx + 8 * 1]
 13809 00009A88 488919                  	mov qword[rcx] , rbx
 13810 00009A8B 4883C108                	add rcx , 8
 13811 00009A8F 48FFCA                  	dec rdx
 13812 00009A92 4883FA00                	cmp rdx, 0
 13813 00009A96 75EC                    	jne .L_lambda_opt_stack_adjusted_02b7
 13814 00009A98 48FF442410              	inc qword [rsp + 8 * 2]
 13815 00009A9D 48C701[01000000]        	mov qword [rcx], sob_nil 
 13816 00009AA4 E9A2000000              	jmp .L_lambda_opt_end_01d0
 13817                                  	.L_lambda_opt_params_loop_02b8:
 13818 00009AA9 488B542410              	mov rdx, qword [rsp + 8*2]
 13819 00009AAE 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 13820 00009AB3 4C89C2                  	mov rdx, r8
 13821 00009AB6 49B9-                   	mov r9, sob_nil
 13821 00009AB8 [0100000000000000] 
 13822                                  	.L_lambda_opt_params_loop_02b7: ;loop for copying the opt into list
 13823 00009AC0 BF11000000              	mov rdi, (1 + 8 + 8)
 13824 00009AC5 E866DA0000              	call malloc
 13825 00009ACA C60021                  	mov byte[rax], T_pair
 13826 00009ACD 488B19                  	mov rbx, qword [rcx]
 13827 00009AD0 48895801                	mov SOB_PAIR_CAR(rax), rbx
 13828 00009AD4 4C894809                	mov SOB_PAIR_CDR(rax), r9
 13829 00009AD8 4989C1                  	mov r9, rax
 13830 00009ADB 48FFCA                  	dec rdx
 13831 00009ADE 4883E908                	sub rcx, 8
 13832 00009AE2 4883FA00                	cmp rdx, 0
 13833 00009AE6 75D8                    	jne .L_lambda_opt_params_loop_02b7
 13834 00009AE8 488B542410              	mov rdx, qword [rsp + 8 * 2]
 13835 00009AED 4889E0                  	mov rax, rsp
 13836 00009AF0 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 13837 00009AF5 4C89C1                  	mov rcx, r8
 13838 00009AF8 48FFC9                  	dec rcx
 13839 00009AFB 4883C203                	add rdx, 3
 13840 00009AFF 4829CA                  	sub rdx,rcx
 13841 00009B02 48C1E103                	shl rcx, 3
 13842                                  	.L_lambda_opt_stack_adjusted_02b8:
 13843 00009B06 4883FA00                	cmp rdx, 0
 13844 00009B0A 7419                    	je .L_lambda_opt_params_end_01d0
 13845 00009B0C 4889D8                  	mov rax, rbx
 13846 00009B0F 4829C8                  	sub rax, rcx
 13847 00009B12 488B30                  	mov rsi, qword [rax]
 13848 00009B15 488933                  	mov [rbx], rsi
 13849 00009B18 4883EB08                	sub rbx, 8
 13850 00009B1C 48FFCA                  	dec rdx
 13851 00009B1F 4883FA00                	cmp rdx, 0
 13852 00009B23 75E1                    	jne .L_lambda_opt_stack_adjusted_02b8
 13853                                  	.L_lambda_opt_params_end_01d0:
 13854 00009B25 4801CC                  	add rsp,rcx
 13855 00009B28 BB01000000              	mov rbx, 1
 13856 00009B2D 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 13857 00009B32 4883C303                	add rbx,3
 13858 00009B36 4C29C3                  	sub rbx,r8
 13859 00009B39 48C1E303                	shl rbx, 3
 13860 00009B3D 4801E3                  	add rbx, rsp
 13861 00009B40 4C890B                  	mov qword[rbx] , r9
 13862 00009B43 49FFC8                  	dec r8
 13863 00009B46 4C29442410              	sub qword [rsp + 8 * 2], r8
 13864                                  	.L_lambda_opt_end_01d0:
 13865 00009B4B C8000000                	enter 0, 0
 13866                                  	; preparing a non-tail-call
 13867 00009B4F 488B4528                	mov rax, PARAM(1)	; param s
 13868 00009B53 50                      	push rax
 13869 00009B54 6A01                    	push 1	; arg count
 13870 00009B56 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 13871 00009B5E 803805                  	cmp byte [rax], T_undefined
 13872 00009B61 0F849CD80000            	je L_error_fvar_undefined
 13873 00009B67 803804                  	cmp byte [rax], T_closure
 13874 00009B6A 0F8517D90000            	jne L_error_non_closure
 13875 00009B70 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13876 00009B73 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13877 00009B76 483D[02000000]          	cmp rax, sob_boolean_false
 13878 00009B7C 0F8481000000            	je .L_if_else_0511
 13879                                  	; preparing a tail-call
 13880 00009B82 488B4520                	mov rax, PARAM(0)	; param a
 13881 00009B86 50                      	push rax
 13882 00009B87 48B8-                   	mov rax, L_constants + 2270
 13882 00009B89 [DE08000000000000] 
 13883 00009B91 50                      	push rax
 13884 00009B92 6A02                    	push 2	; arg count
 13885 00009B94 488B4510                	mov rax, ENV
 13886 00009B98 488B00                  	mov rax, qword [rax + 8 * 0]
 13887 00009B9B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13888 00009B9E 803804                  	cmp byte [rax], T_closure
 13889 00009BA1 0F85E0D80000            	jne L_error_non_closure
 13890 00009BA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13891 00009BAA FF7508                  	push qword [rbp + 8 *1]
 13892 00009BAD 4989C0                  	mov r8, rax
 13893 00009BB0 488B5D18                	mov rbx, COUNT
 13894 00009BB4 4883C303                	add rbx,3
 13895 00009BB8 48C1E303                	shl rbx,3
 13896 00009BBC 4801EB                  	add rbx, rbp
 13897 00009BBF 488B6D00                	mov rbp, [rbp]
 13898 00009BC3 B900000000              	mov rcx,0
 13899 00009BC8 BA05000000              	mov rdx, 5
 13900 00009BCD 4889D0                  	mov rax, rdx
 13901 00009BD0 48FFC8                  	dec rax
 13902 00009BD3 48C1E003                	shl rax,3
 13903 00009BD7 4801E0                  	add rax, rsp
 13904                                  	.L_tc_recycle_frame_loop_093c:
 13905 00009BDA 4839D1                  	cmp rcx, rdx
 13906 00009BDD 7414                    	je .L_tc_recycle_frame_done_093c
 13907 00009BDF 4C8B08                  	mov r9, qword [rax]
 13908 00009BE2 4C890B                  	mov qword [rbx],r9
 13909 00009BE5 4883E808                	sub rax,8
 13910 00009BE9 4883EB08                	sub rbx,8
 13911 00009BED 4883C101                	add rcx,1
 13912 00009BF1 EBE7                    	jmp .L_tc_recycle_frame_loop_093c
 13913                                  	.L_tc_recycle_frame_done_093c:
 13914 00009BF3 4883C308                	add rbx,8
 13915 00009BF7 4889DC                  	mov rsp,rbx
 13916 00009BFA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 13917 00009BFE E9B8010000              	jmp .L_if_end_0596
 13918                                  .L_if_else_0511:
 13919                                  	; preparing a tail-call
 13920                                  	; preparing a non-tail-call
 13921 00009C03 488B4528                	mov rax, PARAM(1)	; param s
 13922 00009C07 50                      	push rax
 13923 00009C08 48B8-                   	mov rax, L_constants + 2270
 13923 00009C0A [DE08000000000000] 
 13924 00009C12 50                      	push rax
 13925 00009C13 488B0425[5A0E0000]      	mov rax, qword [free_var_0]	; free var *
 13926 00009C1B 803805                  	cmp byte [rax], T_undefined
 13927 00009C1E 0F84DFD70000            	je L_error_fvar_undefined
 13928 00009C24 50                      	push rax
 13929 00009C25 6A03                    	push 3	; arg count
 13930 00009C27 488B0425[FF130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13931 00009C2F 803805                  	cmp byte [rax], T_undefined
 13932 00009C32 0F84CBD70000            	je L_error_fvar_undefined
 13933 00009C38 803804                  	cmp byte [rax], T_closure
 13934 00009C3B 0F8546D80000            	jne L_error_non_closure
 13935 00009C41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13936 00009C44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13937 00009C47 50                      	push rax
 13938 00009C48 6A01                    	push 1	; arg count
 13939 00009C4A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13940 00009C4F E8DCD80000              	call malloc
 13941 00009C54 50                      	push rax
 13942 00009C55 BF10000000              	mov rdi, 8 * 2	; new rib
 13943 00009C5A E8D1D80000              	call malloc
 13944 00009C5F 50                      	push rax
 13945 00009C60 BF20000000              	mov rdi, 8 * 4	; extended env
 13946 00009C65 E8C6D80000              	call malloc
 13947 00009C6A 488B7D10                	mov rdi, ENV
 13948 00009C6E BE00000000              	mov rsi, 0
 13949 00009C73 BA01000000              	mov rdx, 1
 13950                                  .L_lambda_simple_env_loop_0738:	; ext_env[i + 1] <-- env[i]
 13951 00009C78 4883FE03                	cmp rsi, 3
 13952 00009C7C 7410                    	je .L_lambda_simple_env_end_0738
 13953 00009C7E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13954 00009C82 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13955 00009C86 48FFC6                  	inc rsi
 13956 00009C89 48FFC2                  	inc rdx
 13957 00009C8C EBEA                    	jmp .L_lambda_simple_env_loop_0738
 13958                                  .L_lambda_simple_env_end_0738:
 13959 00009C8E 5B                      	pop rbx
 13960 00009C8F BE00000000              	mov rsi, 0
 13961                                  .L_lambda_simple_params_loop_0738:	; copy params
 13962 00009C94 4883FE02                	cmp rsi, 2
 13963 00009C98 740E                    	je .L_lambda_simple_params_end_0738
 13964 00009C9A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13965 00009C9F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13966 00009CA3 48FFC6                  	inc rsi
 13967 00009CA6 EBEC                    	jmp .L_lambda_simple_params_loop_0738
 13968                                  .L_lambda_simple_params_end_0738:
 13969 00009CA8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13970 00009CAB 4889C3                  	mov rbx, rax
 13971 00009CAE 58                      	pop rax
 13972 00009CAF C60004                  	mov byte [rax], T_closure
 13973 00009CB2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13974 00009CB6 48C74009[C39C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0738
 13975 00009CBE E998000000              	jmp .L_lambda_simple_end_0738
 13976                                  .L_lambda_simple_code_0738:	; lambda-simple body
 13977 00009CC3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13978 00009CC9 740B                    	je .L_lambda_simple_arity_check_ok_0820
 13979 00009CCB FF742410                	push qword [rsp + 8 * 2]
 13980 00009CCF 6A01                    	push 1
 13981 00009CD1 E913D80000              	jmp L_error_incorrect_arity_simple
 13982                                  .L_lambda_simple_arity_check_ok_0820:
 13983 00009CD6 C8000000                	enter 0, 0
 13984                                  	; preparing a tail-call
 13985 00009CDA 488B4520                	mov rax, PARAM(0)	; param b
 13986 00009CDE 50                      	push rax
 13987 00009CDF 488B4510                	mov rax, ENV
 13988 00009CE3 488B00                  	mov rax, qword [rax + 8 * 0]
 13989 00009CE6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13990 00009CE9 50                      	push rax
 13991 00009CEA 6A02                    	push 2	; arg count
 13992 00009CEC 488B4510                	mov rax, ENV
 13993 00009CF0 488B4008                	mov rax, qword [rax + 8 * 1]
 13994 00009CF4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13995 00009CF7 803804                  	cmp byte [rax], T_closure
 13996 00009CFA 0F8587D70000            	jne L_error_non_closure
 13997 00009D00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13998 00009D03 FF7508                  	push qword [rbp + 8 *1]
 13999 00009D06 4989C0                  	mov r8, rax
 14000 00009D09 488B5D18                	mov rbx, COUNT
 14001 00009D0D 4883C303                	add rbx,3
 14002 00009D11 48C1E303                	shl rbx,3
 14003 00009D15 4801EB                  	add rbx, rbp
 14004 00009D18 488B6D00                	mov rbp, [rbp]
 14005 00009D1C B900000000              	mov rcx,0
 14006 00009D21 BA05000000              	mov rdx, 5
 14007 00009D26 4889D0                  	mov rax, rdx
 14008 00009D29 48FFC8                  	dec rax
 14009 00009D2C 48C1E003                	shl rax,3
 14010 00009D30 4801E0                  	add rax, rsp
 14011                                  	.L_tc_recycle_frame_loop_093e:
 14012 00009D33 4839D1                  	cmp rcx, rdx
 14013 00009D36 7414                    	je .L_tc_recycle_frame_done_093e
 14014 00009D38 4C8B08                  	mov r9, qword [rax]
 14015 00009D3B 4C890B                  	mov qword [rbx],r9
 14016 00009D3E 4883E808                	sub rax,8
 14017 00009D42 4883EB08                	sub rbx,8
 14018 00009D46 4883C101                	add rcx,1
 14019 00009D4A EBE7                    	jmp .L_tc_recycle_frame_loop_093e
 14020                                  	.L_tc_recycle_frame_done_093e:
 14021 00009D4C 4883C308                	add rbx,8
 14022 00009D50 4889DC                  	mov rsp,rbx
 14023 00009D53 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14024 00009D57 C9                      	leave
 14025 00009D58 C21800                  	ret AND_KILL_FRAME(1)
 14026                                  .L_lambda_simple_end_0738:	; new closure is in rax
 14027 00009D5B 803804                  	cmp byte [rax], T_closure
 14028 00009D5E 0F8523D70000            	jne L_error_non_closure
 14029 00009D64 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14030 00009D67 FF7508                  	push qword [rbp + 8 *1]
 14031 00009D6A 4989C0                  	mov r8, rax
 14032 00009D6D 488B5D18                	mov rbx, COUNT
 14033 00009D71 4883C303                	add rbx,3
 14034 00009D75 48C1E303                	shl rbx,3
 14035 00009D79 4801EB                  	add rbx, rbp
 14036 00009D7C 488B6D00                	mov rbp, [rbp]
 14037 00009D80 B900000000              	mov rcx,0
 14038 00009D85 BA04000000              	mov rdx, 4
 14039 00009D8A 4889D0                  	mov rax, rdx
 14040 00009D8D 48FFC8                  	dec rax
 14041 00009D90 48C1E003                	shl rax,3
 14042 00009D94 4801E0                  	add rax, rsp
 14043                                  	.L_tc_recycle_frame_loop_093d:
 14044 00009D97 4839D1                  	cmp rcx, rdx
 14045 00009D9A 7414                    	je .L_tc_recycle_frame_done_093d
 14046 00009D9C 4C8B08                  	mov r9, qword [rax]
 14047 00009D9F 4C890B                  	mov qword [rbx],r9
 14048 00009DA2 4883E808                	sub rax,8
 14049 00009DA6 4883EB08                	sub rbx,8
 14050 00009DAA 4883C101                	add rcx,1
 14051 00009DAE EBE7                    	jmp .L_tc_recycle_frame_loop_093d
 14052                                  	.L_tc_recycle_frame_done_093d:
 14053 00009DB0 4883C308                	add rbx,8
 14054 00009DB4 4889DC                  	mov rsp,rbx
 14055 00009DB7 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14056                                  .L_if_end_0596:
 14057                                  	LEAVE
    49 00009DBB C9                  <1>  leave
 14058 00009DBC C22000                  	ret AND_KILL_FRAME(2)
 14059                                  .L_lambda_opt_end_01cf:
 14060 00009DBF C9                      	leave
 14061 00009DC0 C21800                  	ret AND_KILL_FRAME(1)
 14062                                  .L_lambda_simple_end_0737:	; new closure is in rax
 14063 00009DC3 803804                  	cmp byte [rax], T_closure
 14064 00009DC6 0F85BBD60000            	jne L_error_non_closure
 14065 00009DCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 14066 00009DCF FF7508                  	push qword [rbp + 8 *1]
 14067 00009DD2 4989C0                  	mov r8, rax
 14068 00009DD5 488B5D18                	mov rbx, COUNT
 14069 00009DD9 4883C303                	add rbx,3
 14070 00009DDD 48C1E303                	shl rbx,3
 14071 00009DE1 4801EB                  	add rbx, rbp
 14072 00009DE4 488B6D00                	mov rbp, [rbp]
 14073 00009DE8 B900000000              	mov rcx,0
 14074 00009DED BA04000000              	mov rdx, 4
 14075 00009DF2 4889D0                  	mov rax, rdx
 14076 00009DF5 48FFC8                  	dec rax
 14077 00009DF8 48C1E003                	shl rax,3
 14078 00009DFC 4801E0                  	add rax, rsp
 14079                                  	.L_tc_recycle_frame_loop_092e:
 14080 00009DFF 4839D1                  	cmp rcx, rdx
 14081 00009E02 7414                    	je .L_tc_recycle_frame_done_092e
 14082 00009E04 4C8B08                  	mov r9, qword [rax]
 14083 00009E07 4C890B                  	mov qword [rbx],r9
 14084 00009E0A 4883E808                	sub rax,8
 14085 00009E0E 4883EB08                	sub rbx,8
 14086 00009E12 4883C101                	add rcx,1
 14087 00009E16 EBE7                    	jmp .L_tc_recycle_frame_loop_092e
 14088                                  	.L_tc_recycle_frame_done_092e:
 14089 00009E18 4883C308                	add rbx,8
 14090 00009E1C 4889DC                  	mov rsp,rbx
 14091 00009E1F 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14092 00009E23 C9                      	leave
 14093 00009E24 C21800                  	ret AND_KILL_FRAME(1)
 14094                                  .L_lambda_simple_end_0735:	; new closure is in rax
 14095 00009E27 803804                  	cmp byte [rax], T_closure
 14096 00009E2A 0F8557D60000            	jne L_error_non_closure
 14097 00009E30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14098 00009E33 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14099 00009E36 48890425[8D0E0000]      	mov qword [free_var_3], rax
 14100 00009E3E 48B8-                   	mov rax, sob_void
 14100 00009E40 [0000000000000000] 
 14101                                  
 14102 00009E48 4889C7                  	mov rdi, rax
 14103 00009E4B E835D90000              	call print_sexpr_if_not_void
 14104 00009E50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14105 00009E55 E8D6D60000              	call malloc
 14106 00009E5A 50                      	push rax
 14107 00009E5B BF00000000              	mov rdi, 8 * 0	; new rib
 14108 00009E60 E8CBD60000              	call malloc
 14109 00009E65 50                      	push rax
 14110 00009E66 BF08000000              	mov rdi, 8 * 1	; extended env
 14111 00009E6B E8C0D60000              	call malloc
 14112 00009E70 488B7D10                	mov rdi, ENV
 14113 00009E74 BE00000000              	mov rsi, 0
 14114 00009E79 BA01000000              	mov rdx, 1
 14115                                  .L_lambda_simple_env_loop_0739:	; ext_env[i + 1] <-- env[i]
 14116 00009E7E 4883FE00                	cmp rsi, 0
 14117 00009E82 7410                    	je .L_lambda_simple_env_end_0739
 14118 00009E84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14119 00009E88 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14120 00009E8C 48FFC6                  	inc rsi
 14121 00009E8F 48FFC2                  	inc rdx
 14122 00009E92 EBEA                    	jmp .L_lambda_simple_env_loop_0739
 14123                                  .L_lambda_simple_env_end_0739:
 14124 00009E94 5B                      	pop rbx
 14125 00009E95 BE00000000              	mov rsi, 0
 14126                                  .L_lambda_simple_params_loop_0739:	; copy params
 14127 00009E9A 4883FE00                	cmp rsi, 0
 14128 00009E9E 740E                    	je .L_lambda_simple_params_end_0739
 14129 00009EA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14130 00009EA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14131 00009EA9 48FFC6                  	inc rsi
 14132 00009EAC EBEC                    	jmp .L_lambda_simple_params_loop_0739
 14133                                  .L_lambda_simple_params_end_0739:
 14134 00009EAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14135 00009EB1 4889C3                  	mov rbx, rax
 14136 00009EB4 58                      	pop rax
 14137 00009EB5 C60004                  	mov byte [rax], T_closure
 14138 00009EB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14139 00009EBC 48C74009[C99E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0739
 14140 00009EC4 E927010000              	jmp .L_lambda_simple_end_0739
 14141                                  .L_lambda_simple_code_0739:	; lambda-simple body
 14142 00009EC9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14143 00009ECF 740B                    	je .L_lambda_simple_arity_check_ok_0821
 14144 00009ED1 FF742410                	push qword [rsp + 8 * 2]
 14145 00009ED5 6A01                    	push 1
 14146 00009ED7 E90DD60000              	jmp L_error_incorrect_arity_simple
 14147                                  .L_lambda_simple_arity_check_ok_0821:
 14148 00009EDC C8000000                	enter 0, 0
 14149                                  	; preparing a non-tail-call
 14150 00009EE0 488B4520                	mov rax, PARAM(0)	; param n
 14151 00009EE4 50                      	push rax
 14152 00009EE5 6A01                    	push 1	; arg count
 14153 00009EE7 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 14154 00009EEF 803805                  	cmp byte [rax], T_undefined
 14155 00009EF2 0F840BD50000            	je L_error_fvar_undefined
 14156 00009EF8 803804                  	cmp byte [rax], T_closure
 14157 00009EFB 0F8586D50000            	jne L_error_non_closure
 14158 00009F01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14159 00009F04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14160 00009F07 483D[02000000]          	cmp rax, sob_boolean_false
 14161 00009F0D 740F                    	je .L_if_else_0512
 14162 00009F0F 48B8-                   	mov rax, L_constants + 2270
 14162 00009F11 [DE08000000000000] 
 14163 00009F19 E9CE000000              	jmp .L_if_end_0597
 14164                                  .L_if_else_0512:
 14165                                  	; preparing a tail-call
 14166                                  	; preparing a non-tail-call
 14167                                  	; preparing a non-tail-call
 14168 00009F1E 48B8-                   	mov rax, L_constants + 2270
 14168 00009F20 [DE08000000000000] 
 14169 00009F28 50                      	push rax
 14170 00009F29 488B4520                	mov rax, PARAM(0)	; param n
 14171 00009F2D 50                      	push rax
 14172 00009F2E 6A02                    	push 2	; arg count
 14173 00009F30 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 14174 00009F38 803805                  	cmp byte [rax], T_undefined
 14175 00009F3B 0F84C2D40000            	je L_error_fvar_undefined
 14176 00009F41 803804                  	cmp byte [rax], T_closure
 14177 00009F44 0F853DD50000            	jne L_error_non_closure
 14178 00009F4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14179 00009F4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14180 00009F50 50                      	push rax
 14181 00009F51 6A01                    	push 1	; arg count
 14182 00009F53 488B0425[EE130000]      	mov rax, qword [free_var_84]	; free var fact
 14183 00009F5B 803805                  	cmp byte [rax], T_undefined
 14184 00009F5E 0F849FD40000            	je L_error_fvar_undefined
 14185 00009F64 803804                  	cmp byte [rax], T_closure
 14186 00009F67 0F851AD50000            	jne L_error_non_closure
 14187 00009F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14188 00009F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14189 00009F73 50                      	push rax
 14190 00009F74 488B4520                	mov rax, PARAM(0)	; param n
 14191 00009F78 50                      	push rax
 14192 00009F79 6A02                    	push 2	; arg count
 14193 00009F7B 488B0425[5A0E0000]      	mov rax, qword [free_var_0]	; free var *
 14194 00009F83 803805                  	cmp byte [rax], T_undefined
 14195 00009F86 0F8477D40000            	je L_error_fvar_undefined
 14196 00009F8C 803804                  	cmp byte [rax], T_closure
 14197 00009F8F 0F85F2D40000            	jne L_error_non_closure
 14198 00009F95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14199 00009F98 FF7508                  	push qword [rbp + 8 *1]
 14200 00009F9B 4989C0                  	mov r8, rax
 14201 00009F9E 488B5D18                	mov rbx, COUNT
 14202 00009FA2 4883C303                	add rbx,3
 14203 00009FA6 48C1E303                	shl rbx,3
 14204 00009FAA 4801EB                  	add rbx, rbp
 14205 00009FAD 488B6D00                	mov rbp, [rbp]
 14206 00009FB1 B900000000              	mov rcx,0
 14207 00009FB6 BA05000000              	mov rdx, 5
 14208 00009FBB 4889D0                  	mov rax, rdx
 14209 00009FBE 48FFC8                  	dec rax
 14210 00009FC1 48C1E003                	shl rax,3
 14211 00009FC5 4801E0                  	add rax, rsp
 14212                                  	.L_tc_recycle_frame_loop_093f:
 14213 00009FC8 4839D1                  	cmp rcx, rdx
 14214 00009FCB 7414                    	je .L_tc_recycle_frame_done_093f
 14215 00009FCD 4C8B08                  	mov r9, qword [rax]
 14216 00009FD0 4C890B                  	mov qword [rbx],r9
 14217 00009FD3 4883E808                	sub rax,8
 14218 00009FD7 4883EB08                	sub rbx,8
 14219 00009FDB 4883C101                	add rcx,1
 14220 00009FDF EBE7                    	jmp .L_tc_recycle_frame_loop_093f
 14221                                  	.L_tc_recycle_frame_done_093f:
 14222 00009FE1 4883C308                	add rbx,8
 14223 00009FE5 4889DC                  	mov rsp,rbx
 14224 00009FE8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14225                                  .L_if_end_0597:
 14226 00009FEC C9                      	leave
 14227 00009FED C21800                  	ret AND_KILL_FRAME(1)
 14228                                  .L_lambda_simple_end_0739:	; new closure is in rax
 14229 00009FF0 48890425[EE130000]      	mov qword [free_var_84], rax
 14230 00009FF8 48B8-                   	mov rax, sob_void
 14230 00009FFA [0000000000000000] 
 14231                                  
 14232 0000A002 4889C7                  	mov rdi, rax
 14233 0000A005 E87BD70000              	call print_sexpr_if_not_void
 14234 0000A00A 48B8-                   	mov rax, L_constants + 0
 14234 0000A00C [0000000000000000] 
 14235 0000A014 48890425[9E0E0000]      	mov qword [free_var_4], rax
 14236 0000A01C 48B8-                   	mov rax, sob_void
 14236 0000A01E [0000000000000000] 
 14237                                  
 14238 0000A026 4889C7                  	mov rdi, rax
 14239 0000A029 E857D70000              	call print_sexpr_if_not_void
 14240 0000A02E 48B8-                   	mov rax, L_constants + 0
 14240 0000A030 [0000000000000000] 
 14241 0000A038 48890425[AF0E0000]      	mov qword [free_var_5], rax
 14242 0000A040 48B8-                   	mov rax, sob_void
 14242 0000A042 [0000000000000000] 
 14243                                  
 14244 0000A04A 4889C7                  	mov rdi, rax
 14245 0000A04D E833D70000              	call print_sexpr_if_not_void
 14246 0000A052 48B8-                   	mov rax, L_constants + 0
 14246 0000A054 [0000000000000000] 
 14247 0000A05C 48890425[D10E0000]      	mov qword [free_var_7], rax
 14248 0000A064 48B8-                   	mov rax, sob_void
 14248 0000A066 [0000000000000000] 
 14249                                  
 14250 0000A06E 4889C7                  	mov rdi, rax
 14251 0000A071 E80FD70000              	call print_sexpr_if_not_void
 14252 0000A076 48B8-                   	mov rax, L_constants + 0
 14252 0000A078 [0000000000000000] 
 14253 0000A080 48890425[E20E0000]      	mov qword [free_var_8], rax
 14254 0000A088 48B8-                   	mov rax, sob_void
 14254 0000A08A [0000000000000000] 
 14255                                  
 14256 0000A092 4889C7                  	mov rdi, rax
 14257 0000A095 E8EBD60000              	call print_sexpr_if_not_void
 14258 0000A09A 48B8-                   	mov rax, L_constants + 0
 14258 0000A09C [0000000000000000] 
 14259 0000A0A4 48890425[C00E0000]      	mov qword [free_var_6], rax
 14260 0000A0AC 48B8-                   	mov rax, sob_void
 14260 0000A0AE [0000000000000000] 
 14261                                  
 14262 0000A0B6 4889C7                  	mov rdi, rax
 14263 0000A0B9 E8C7D60000              	call print_sexpr_if_not_void
 14264                                  	; preparing a non-tail-call
 14265 0000A0BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14266 0000A0C3 E868D40000              	call malloc
 14267 0000A0C8 50                      	push rax
 14268 0000A0C9 BF00000000              	mov rdi, 8 * 0	; new rib
 14269 0000A0CE E85DD40000              	call malloc
 14270 0000A0D3 50                      	push rax
 14271 0000A0D4 BF08000000              	mov rdi, 8 * 1	; extended env
 14272 0000A0D9 E852D40000              	call malloc
 14273 0000A0DE 488B7D10                	mov rdi, ENV
 14274 0000A0E2 BE00000000              	mov rsi, 0
 14275 0000A0E7 BA01000000              	mov rdx, 1
 14276                                  .L_lambda_simple_env_loop_073a:	; ext_env[i + 1] <-- env[i]
 14277 0000A0EC 4883FE00                	cmp rsi, 0
 14278 0000A0F0 7410                    	je .L_lambda_simple_env_end_073a
 14279 0000A0F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14280 0000A0F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14281 0000A0FA 48FFC6                  	inc rsi
 14282 0000A0FD 48FFC2                  	inc rdx
 14283 0000A100 EBEA                    	jmp .L_lambda_simple_env_loop_073a
 14284                                  .L_lambda_simple_env_end_073a:
 14285 0000A102 5B                      	pop rbx
 14286 0000A103 BE00000000              	mov rsi, 0
 14287                                  .L_lambda_simple_params_loop_073a:	; copy params
 14288 0000A108 4883FE00                	cmp rsi, 0
 14289 0000A10C 740E                    	je .L_lambda_simple_params_end_073a
 14290 0000A10E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14291 0000A113 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14292 0000A117 48FFC6                  	inc rsi
 14293 0000A11A EBEC                    	jmp .L_lambda_simple_params_loop_073a
 14294                                  .L_lambda_simple_params_end_073a:
 14295 0000A11C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14296 0000A11F 4889C3                  	mov rbx, rax
 14297 0000A122 58                      	pop rax
 14298 0000A123 C60004                  	mov byte [rax], T_closure
 14299 0000A126 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14300 0000A12A 48C74009[37A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073a
 14301 0000A132 E9A4000000              	jmp .L_lambda_simple_end_073a
 14302                                  .L_lambda_simple_code_073a:	; lambda-simple body
 14303 0000A137 48837C241000            	cmp qword [rsp + 8 * 2], 0
 14304 0000A13D 740B                    	je .L_lambda_simple_arity_check_ok_0822
 14305 0000A13F FF742410                	push qword [rsp + 8 * 2]
 14306 0000A143 6A00                    	push 0
 14307 0000A145 E99FD30000              	jmp L_error_incorrect_arity_simple
 14308                                  .L_lambda_simple_arity_check_ok_0822:
 14309 0000A14A C8000000                	enter 0, 0
 14310                                  	; preparing a tail-call
 14311 0000A14E 48B8-                   	mov rax, L_constants + 2408
 14311 0000A150 [6809000000000000] 
 14312 0000A158 50                      	push rax
 14313 0000A159 48B8-                   	mov rax, L_constants + 2399
 14313 0000A15B [5F09000000000000] 
 14314 0000A163 50                      	push rax
 14315 0000A164 6A02                    	push 2	; arg count
 14316 0000A166 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 14317 0000A16E 803805                  	cmp byte [rax], T_undefined
 14318 0000A171 0F848CD20000            	je L_error_fvar_undefined
 14319 0000A177 803804                  	cmp byte [rax], T_closure
 14320 0000A17A 0F8507D30000            	jne L_error_non_closure
 14321 0000A180 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14322 0000A183 FF7508                  	push qword [rbp + 8 *1]
 14323 0000A186 4989C0                  	mov r8, rax
 14324 0000A189 488B5D18                	mov rbx, COUNT
 14325 0000A18D 4883C303                	add rbx,3
 14326 0000A191 48C1E303                	shl rbx,3
 14327 0000A195 4801EB                  	add rbx, rbp
 14328 0000A198 488B6D00                	mov rbp, [rbp]
 14329 0000A19C B900000000              	mov rcx,0
 14330 0000A1A1 BA05000000              	mov rdx, 5
 14331 0000A1A6 4889D0                  	mov rax, rdx
 14332 0000A1A9 48FFC8                  	dec rax
 14333 0000A1AC 48C1E003                	shl rax,3
 14334 0000A1B0 4801E0                  	add rax, rsp
 14335                                  	.L_tc_recycle_frame_loop_0940:
 14336 0000A1B3 4839D1                  	cmp rcx, rdx
 14337 0000A1B6 7414                    	je .L_tc_recycle_frame_done_0940
 14338 0000A1B8 4C8B08                  	mov r9, qword [rax]
 14339 0000A1BB 4C890B                  	mov qword [rbx],r9
 14340 0000A1BE 4883E808                	sub rax,8
 14341 0000A1C2 4883EB08                	sub rbx,8
 14342 0000A1C6 4883C101                	add rcx,1
 14343 0000A1CA EBE7                    	jmp .L_tc_recycle_frame_loop_0940
 14344                                  	.L_tc_recycle_frame_done_0940:
 14345 0000A1CC 4883C308                	add rbx,8
 14346 0000A1D0 4889DC                  	mov rsp,rbx
 14347 0000A1D3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14348 0000A1D7 C9                      	leave
 14349 0000A1D8 C21000                  	ret AND_KILL_FRAME(0)
 14350                                  .L_lambda_simple_end_073a:	; new closure is in rax
 14351 0000A1DB 50                      	push rax
 14352 0000A1DC 6A01                    	push 1	; arg count
 14353 0000A1DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14354 0000A1E3 E848D30000              	call malloc
 14355 0000A1E8 50                      	push rax
 14356 0000A1E9 BF00000000              	mov rdi, 8 * 0	; new rib
 14357 0000A1EE E83DD30000              	call malloc
 14358 0000A1F3 50                      	push rax
 14359 0000A1F4 BF08000000              	mov rdi, 8 * 1	; extended env
 14360 0000A1F9 E832D30000              	call malloc
 14361 0000A1FE 488B7D10                	mov rdi, ENV
 14362 0000A202 BE00000000              	mov rsi, 0
 14363 0000A207 BA01000000              	mov rdx, 1
 14364                                  .L_lambda_simple_env_loop_073b:	; ext_env[i + 1] <-- env[i]
 14365 0000A20C 4883FE00                	cmp rsi, 0
 14366 0000A210 7410                    	je .L_lambda_simple_env_end_073b
 14367 0000A212 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14368 0000A216 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14369 0000A21A 48FFC6                  	inc rsi
 14370 0000A21D 48FFC2                  	inc rdx
 14371 0000A220 EBEA                    	jmp .L_lambda_simple_env_loop_073b
 14372                                  .L_lambda_simple_env_end_073b:
 14373 0000A222 5B                      	pop rbx
 14374 0000A223 BE00000000              	mov rsi, 0
 14375                                  .L_lambda_simple_params_loop_073b:	; copy params
 14376 0000A228 4883FE00                	cmp rsi, 0
 14377 0000A22C 740E                    	je .L_lambda_simple_params_end_073b
 14378 0000A22E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14379 0000A233 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14380 0000A237 48FFC6                  	inc rsi
 14381 0000A23A EBEC                    	jmp .L_lambda_simple_params_loop_073b
 14382                                  .L_lambda_simple_params_end_073b:
 14383 0000A23C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14384 0000A23F 4889C3                  	mov rbx, rax
 14385 0000A242 58                      	pop rax
 14386 0000A243 C60004                  	mov byte [rax], T_closure
 14387 0000A246 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14388 0000A24A 48C74009[57A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073b
 14389 0000A252 E9F61B0000              	jmp .L_lambda_simple_end_073b
 14390                                  .L_lambda_simple_code_073b:	; lambda-simple body
 14391 0000A257 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14392 0000A25D 740B                    	je .L_lambda_simple_arity_check_ok_0823
 14393 0000A25F FF742410                	push qword [rsp + 8 * 2]
 14394 0000A263 6A01                    	push 1
 14395 0000A265 E97FD20000              	jmp L_error_incorrect_arity_simple
 14396                                  .L_lambda_simple_arity_check_ok_0823:
 14397 0000A26A C8000000                	enter 0, 0
 14398                                  	; preparing a tail-call
 14399 0000A26E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14400 0000A273 E8B8D20000              	call malloc
 14401 0000A278 50                      	push rax
 14402 0000A279 BF08000000              	mov rdi, 8 * 1	; new rib
 14403 0000A27E E8ADD20000              	call malloc
 14404 0000A283 50                      	push rax
 14405 0000A284 BF10000000              	mov rdi, 8 * 2	; extended env
 14406 0000A289 E8A2D20000              	call malloc
 14407 0000A28E 488B7D10                	mov rdi, ENV
 14408 0000A292 BE00000000              	mov rsi, 0
 14409 0000A297 BA01000000              	mov rdx, 1
 14410                                  .L_lambda_simple_env_loop_073c:	; ext_env[i + 1] <-- env[i]
 14411 0000A29C 4883FE01                	cmp rsi, 1
 14412 0000A2A0 7410                    	je .L_lambda_simple_env_end_073c
 14413 0000A2A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14414 0000A2A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14415 0000A2AA 48FFC6                  	inc rsi
 14416 0000A2AD 48FFC2                  	inc rdx
 14417 0000A2B0 EBEA                    	jmp .L_lambda_simple_env_loop_073c
 14418                                  .L_lambda_simple_env_end_073c:
 14419 0000A2B2 5B                      	pop rbx
 14420 0000A2B3 BE00000000              	mov rsi, 0
 14421                                  .L_lambda_simple_params_loop_073c:	; copy params
 14422 0000A2B8 4883FE01                	cmp rsi, 1
 14423 0000A2BC 740E                    	je .L_lambda_simple_params_end_073c
 14424 0000A2BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14425 0000A2C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14426 0000A2C7 48FFC6                  	inc rsi
 14427 0000A2CA EBEC                    	jmp .L_lambda_simple_params_loop_073c
 14428                                  .L_lambda_simple_params_end_073c:
 14429 0000A2CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14430 0000A2CF 4889C3                  	mov rbx, rax
 14431 0000A2D2 58                      	pop rax
 14432 0000A2D3 C60004                  	mov byte [rax], T_closure
 14433 0000A2D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14434 0000A2DA 48C74009[E7A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073c
 14435 0000A2E2 E9EF090000              	jmp .L_lambda_simple_end_073c
 14436                                  .L_lambda_simple_code_073c:	; lambda-simple body
 14437 0000A2E7 48837C241003            	cmp qword [rsp + 8 * 2], 3
 14438 0000A2ED 740B                    	je .L_lambda_simple_arity_check_ok_0824
 14439 0000A2EF FF742410                	push qword [rsp + 8 * 2]
 14440 0000A2F3 6A03                    	push 3
 14441 0000A2F5 E9EFD10000              	jmp L_error_incorrect_arity_simple
 14442                                  .L_lambda_simple_arity_check_ok_0824:
 14443 0000A2FA C8000000                	enter 0, 0
 14444 0000A2FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14445 0000A303 E828D20000              	call malloc
 14446 0000A308 50                      	push rax
 14447 0000A309 BF18000000              	mov rdi, 8 * 3	; new rib
 14448 0000A30E E81DD20000              	call malloc
 14449 0000A313 50                      	push rax
 14450 0000A314 BF18000000              	mov rdi, 8 * 3	; extended env
 14451 0000A319 E812D20000              	call malloc
 14452 0000A31E 488B7D10                	mov rdi, ENV
 14453 0000A322 BE00000000              	mov rsi, 0
 14454 0000A327 BA01000000              	mov rdx, 1
 14455                                  .L_lambda_simple_env_loop_073d:	; ext_env[i + 1] <-- env[i]
 14456 0000A32C 4883FE02                	cmp rsi, 2
 14457 0000A330 7410                    	je .L_lambda_simple_env_end_073d
 14458 0000A332 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14459 0000A336 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14460 0000A33A 48FFC6                  	inc rsi
 14461 0000A33D 48FFC2                  	inc rdx
 14462 0000A340 EBEA                    	jmp .L_lambda_simple_env_loop_073d
 14463                                  .L_lambda_simple_env_end_073d:
 14464 0000A342 5B                      	pop rbx
 14465 0000A343 BE00000000              	mov rsi, 0
 14466                                  .L_lambda_simple_params_loop_073d:	; copy params
 14467 0000A348 4883FE03                	cmp rsi, 3
 14468 0000A34C 740E                    	je .L_lambda_simple_params_end_073d
 14469 0000A34E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14470 0000A353 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14471 0000A357 48FFC6                  	inc rsi
 14472 0000A35A EBEC                    	jmp .L_lambda_simple_params_loop_073d
 14473                                  .L_lambda_simple_params_end_073d:
 14474 0000A35C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14475 0000A35F 4889C3                  	mov rbx, rax
 14476 0000A362 58                      	pop rax
 14477 0000A363 C60004                  	mov byte [rax], T_closure
 14478 0000A366 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14479 0000A36A 48C74009[77A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073d
 14480 0000A372 E95B090000              	jmp .L_lambda_simple_end_073d
 14481                                  .L_lambda_simple_code_073d:	; lambda-simple body
 14482 0000A377 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14483 0000A37D 740B                    	je .L_lambda_simple_arity_check_ok_0825
 14484 0000A37F FF742410                	push qword [rsp + 8 * 2]
 14485 0000A383 6A02                    	push 2
 14486 0000A385 E95FD10000              	jmp L_error_incorrect_arity_simple
 14487                                  .L_lambda_simple_arity_check_ok_0825:
 14488 0000A38A C8000000                	enter 0, 0
 14489                                  	; preparing a non-tail-call
 14490 0000A38E 488B4520                	mov rax, PARAM(0)	; param a
 14491 0000A392 50                      	push rax
 14492 0000A393 6A01                    	push 1	; arg count
 14493 0000A395 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 14494 0000A39D 803805                  	cmp byte [rax], T_undefined
 14495 0000A3A0 0F845DD00000            	je L_error_fvar_undefined
 14496 0000A3A6 803804                  	cmp byte [rax], T_closure
 14497 0000A3A9 0F85D8D00000            	jne L_error_non_closure
 14498 0000A3AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14499 0000A3B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14500 0000A3B5 483D[02000000]          	cmp rax, sob_boolean_false
 14501 0000A3BB 0F84BD020000            	je .L_if_else_051e
 14502                                  	; preparing a non-tail-call
 14503 0000A3C1 488B4528                	mov rax, PARAM(1)	; param b
 14504 0000A3C5 50                      	push rax
 14505 0000A3C6 6A01                    	push 1	; arg count
 14506 0000A3C8 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 14507 0000A3D0 803805                  	cmp byte [rax], T_undefined
 14508 0000A3D3 0F842AD00000            	je L_error_fvar_undefined
 14509 0000A3D9 803804                  	cmp byte [rax], T_closure
 14510 0000A3DC 0F85A5D00000            	jne L_error_non_closure
 14511 0000A3E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14512 0000A3E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14513 0000A3E8 483D[02000000]          	cmp rax, sob_boolean_false
 14514 0000A3EE 747B                    	je .L_if_else_0515
 14515                                  	; preparing a tail-call
 14516 0000A3F0 488B4528                	mov rax, PARAM(1)	; param b
 14517 0000A3F4 50                      	push rax
 14518 0000A3F5 488B4520                	mov rax, PARAM(0)	; param a
 14519 0000A3F9 50                      	push rax
 14520 0000A3FA 6A02                    	push 2	; arg count
 14521 0000A3FC 488B4510                	mov rax, ENV
 14522 0000A400 488B00                  	mov rax, qword [rax + 8 * 0]
 14523 0000A403 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14524 0000A406 803804                  	cmp byte [rax], T_closure
 14525 0000A409 0F8578D00000            	jne L_error_non_closure
 14526 0000A40F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14527 0000A412 FF7508                  	push qword [rbp + 8 *1]
 14528 0000A415 4989C0                  	mov r8, rax
 14529 0000A418 488B5D18                	mov rbx, COUNT
 14530 0000A41C 4883C303                	add rbx,3
 14531 0000A420 48C1E303                	shl rbx,3
 14532 0000A424 4801EB                  	add rbx, rbp
 14533 0000A427 488B6D00                	mov rbp, [rbp]
 14534 0000A42B B900000000              	mov rcx,0
 14535 0000A430 BA05000000              	mov rdx, 5
 14536 0000A435 4889D0                  	mov rax, rdx
 14537 0000A438 48FFC8                  	dec rax
 14538 0000A43B 48C1E003                	shl rax,3
 14539 0000A43F 4801E0                  	add rax, rsp
 14540                                  	.L_tc_recycle_frame_loop_0942:
 14541 0000A442 4839D1                  	cmp rcx, rdx
 14542 0000A445 7414                    	je .L_tc_recycle_frame_done_0942
 14543 0000A447 4C8B08                  	mov r9, qword [rax]
 14544 0000A44A 4C890B                  	mov qword [rbx],r9
 14545 0000A44D 4883E808                	sub rax,8
 14546 0000A451 4883EB08                	sub rbx,8
 14547 0000A455 4883C101                	add rcx,1
 14548 0000A459 EBE7                    	jmp .L_tc_recycle_frame_loop_0942
 14549                                  	.L_tc_recycle_frame_done_0942:
 14550 0000A45B 4883C308                	add rbx,8
 14551 0000A45F 4889DC                  	mov rsp,rbx
 14552 0000A462 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14553 0000A466 E90E020000              	jmp .L_if_end_059a
 14554                                  .L_if_else_0515:
 14555                                  	; preparing a non-tail-call
 14556 0000A46B 488B4528                	mov rax, PARAM(1)	; param b
 14557 0000A46F 50                      	push rax
 14558 0000A470 6A01                    	push 1	; arg count
 14559 0000A472 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 14560 0000A47A 803805                  	cmp byte [rax], T_undefined
 14561 0000A47D 0F8480CF0000            	je L_error_fvar_undefined
 14562 0000A483 803804                  	cmp byte [rax], T_closure
 14563 0000A486 0F85FBCF0000            	jne L_error_non_closure
 14564 0000A48C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14565 0000A48F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14566 0000A492 483D[02000000]          	cmp rax, sob_boolean_false
 14567 0000A498 0F849F000000            	je .L_if_else_0514
 14568                                  	; preparing a tail-call
 14569 0000A49E 488B4528                	mov rax, PARAM(1)	; param b
 14570 0000A4A2 50                      	push rax
 14571                                  	; preparing a non-tail-call
 14572 0000A4A3 488B4520                	mov rax, PARAM(0)	; param a
 14573 0000A4A7 50                      	push rax
 14574 0000A4A8 6A01                    	push 1	; arg count
 14575 0000A4AA 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14576 0000A4B2 803805                  	cmp byte [rax], T_undefined
 14577 0000A4B5 0F8448CF0000            	je L_error_fvar_undefined
 14578 0000A4BB 803804                  	cmp byte [rax], T_closure
 14579 0000A4BE 0F85C3CF0000            	jne L_error_non_closure
 14580 0000A4C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14581 0000A4C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14582 0000A4CA 50                      	push rax
 14583 0000A4CB 6A02                    	push 2	; arg count
 14584 0000A4CD 488B4510                	mov rax, ENV
 14585 0000A4D1 488B00                  	mov rax, qword [rax + 8 * 0]
 14586 0000A4D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14587 0000A4D8 803804                  	cmp byte [rax], T_closure
 14588 0000A4DB 0F85A6CF0000            	jne L_error_non_closure
 14589 0000A4E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14590 0000A4E4 FF7508                  	push qword [rbp + 8 *1]
 14591 0000A4E7 4989C0                  	mov r8, rax
 14592 0000A4EA 488B5D18                	mov rbx, COUNT
 14593 0000A4EE 4883C303                	add rbx,3
 14594 0000A4F2 48C1E303                	shl rbx,3
 14595 0000A4F6 4801EB                  	add rbx, rbp
 14596 0000A4F9 488B6D00                	mov rbp, [rbp]
 14597 0000A4FD B900000000              	mov rcx,0
 14598 0000A502 BA05000000              	mov rdx, 5
 14599 0000A507 4889D0                  	mov rax, rdx
 14600 0000A50A 48FFC8                  	dec rax
 14601 0000A50D 48C1E003                	shl rax,3
 14602 0000A511 4801E0                  	add rax, rsp
 14603                                  	.L_tc_recycle_frame_loop_0943:
 14604 0000A514 4839D1                  	cmp rcx, rdx
 14605 0000A517 7414                    	je .L_tc_recycle_frame_done_0943
 14606 0000A519 4C8B08                  	mov r9, qword [rax]
 14607 0000A51C 4C890B                  	mov qword [rbx],r9
 14608 0000A51F 4883E808                	sub rax,8
 14609 0000A523 4883EB08                	sub rbx,8
 14610 0000A527 4883C101                	add rcx,1
 14611 0000A52B EBE7                    	jmp .L_tc_recycle_frame_loop_0943
 14612                                  	.L_tc_recycle_frame_done_0943:
 14613 0000A52D 4883C308                	add rbx,8
 14614 0000A531 4889DC                  	mov rsp,rbx
 14615 0000A534 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14616 0000A538 E93C010000              	jmp .L_if_end_0599
 14617                                  .L_if_else_0514:
 14618                                  	; preparing a non-tail-call
 14619 0000A53D 488B4528                	mov rax, PARAM(1)	; param b
 14620 0000A541 50                      	push rax
 14621 0000A542 6A01                    	push 1	; arg count
 14622 0000A544 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 14623 0000A54C 803805                  	cmp byte [rax], T_undefined
 14624 0000A54F 0F84AECE0000            	je L_error_fvar_undefined
 14625 0000A555 803804                  	cmp byte [rax], T_closure
 14626 0000A558 0F8529CF0000            	jne L_error_non_closure
 14627 0000A55E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14628 0000A561 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14629 0000A564 483D[02000000]          	cmp rax, sob_boolean_false
 14630 0000A56A 0F849C000000            	je .L_if_else_0513
 14631                                  	; preparing a tail-call
 14632 0000A570 488B4528                	mov rax, PARAM(1)	; param b
 14633 0000A574 50                      	push rax
 14634                                  	; preparing a non-tail-call
 14635 0000A575 488B4520                	mov rax, PARAM(0)	; param a
 14636 0000A579 50                      	push rax
 14637 0000A57A 6A01                    	push 1	; arg count
 14638 0000A57C 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 14639 0000A584 803805                  	cmp byte [rax], T_undefined
 14640 0000A587 0F8476CE0000            	je L_error_fvar_undefined
 14641 0000A58D 803804                  	cmp byte [rax], T_closure
 14642 0000A590 0F85F1CE0000            	jne L_error_non_closure
 14643 0000A596 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14644 0000A599 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14645 0000A59C 50                      	push rax
 14646 0000A59D 6A02                    	push 2	; arg count
 14647 0000A59F 488B4510                	mov rax, ENV
 14648 0000A5A3 488B00                  	mov rax, qword [rax + 8 * 0]
 14649 0000A5A6 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14650 0000A5AA 803804                  	cmp byte [rax], T_closure
 14651 0000A5AD 0F85D4CE0000            	jne L_error_non_closure
 14652 0000A5B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14653 0000A5B6 FF7508                  	push qword [rbp + 8 *1]
 14654 0000A5B9 4989C0                  	mov r8, rax
 14655 0000A5BC 488B5D18                	mov rbx, COUNT
 14656 0000A5C0 4883C303                	add rbx,3
 14657 0000A5C4 48C1E303                	shl rbx,3
 14658 0000A5C8 4801EB                  	add rbx, rbp
 14659 0000A5CB 488B6D00                	mov rbp, [rbp]
 14660 0000A5CF B900000000              	mov rcx,0
 14661 0000A5D4 BA05000000              	mov rdx, 5
 14662 0000A5D9 4889D0                  	mov rax, rdx
 14663 0000A5DC 48FFC8                  	dec rax
 14664 0000A5DF 48C1E003                	shl rax,3
 14665 0000A5E3 4801E0                  	add rax, rsp
 14666                                  	.L_tc_recycle_frame_loop_0944:
 14667 0000A5E6 4839D1                  	cmp rcx, rdx
 14668 0000A5E9 7414                    	je .L_tc_recycle_frame_done_0944
 14669 0000A5EB 4C8B08                  	mov r9, qword [rax]
 14670 0000A5EE 4C890B                  	mov qword [rbx],r9
 14671 0000A5F1 4883E808                	sub rax,8
 14672 0000A5F5 4883EB08                	sub rbx,8
 14673 0000A5F9 4883C101                	add rcx,1
 14674 0000A5FD EBE7                    	jmp .L_tc_recycle_frame_loop_0944
 14675                                  	.L_tc_recycle_frame_done_0944:
 14676 0000A5FF 4883C308                	add rbx,8
 14677 0000A603 4889DC                  	mov rsp,rbx
 14678 0000A606 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14679 0000A60A EB6D                    	jmp .L_if_end_0598
 14680                                  .L_if_else_0513:
 14681                                  	; preparing a tail-call
 14682 0000A60C 6A00                    	push 0	; arg count
 14683 0000A60E 488B4510                	mov rax, ENV
 14684 0000A612 488B4008                	mov rax, qword [rax + 8 * 1]
 14685 0000A616 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14686 0000A619 803804                  	cmp byte [rax], T_closure
 14687 0000A61C 0F8565CE0000            	jne L_error_non_closure
 14688 0000A622 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14689 0000A625 FF7508                  	push qword [rbp + 8 *1]
 14690 0000A628 4989C0                  	mov r8, rax
 14691 0000A62B 488B5D18                	mov rbx, COUNT
 14692 0000A62F 4883C303                	add rbx,3
 14693 0000A633 48C1E303                	shl rbx,3
 14694 0000A637 4801EB                  	add rbx, rbp
 14695 0000A63A 488B6D00                	mov rbp, [rbp]
 14696 0000A63E B900000000              	mov rcx,0
 14697 0000A643 BA03000000              	mov rdx, 3
 14698 0000A648 4889D0                  	mov rax, rdx
 14699 0000A64B 48FFC8                  	dec rax
 14700 0000A64E 48C1E003                	shl rax,3
 14701 0000A652 4801E0                  	add rax, rsp
 14702                                  	.L_tc_recycle_frame_loop_0945:
 14703 0000A655 4839D1                  	cmp rcx, rdx
 14704 0000A658 7414                    	je .L_tc_recycle_frame_done_0945
 14705 0000A65A 4C8B08                  	mov r9, qword [rax]
 14706 0000A65D 4C890B                  	mov qword [rbx],r9
 14707 0000A660 4883E808                	sub rax,8
 14708 0000A664 4883EB08                	sub rbx,8
 14709 0000A668 4883C101                	add rcx,1
 14710 0000A66C EBE7                    	jmp .L_tc_recycle_frame_loop_0945
 14711                                  	.L_tc_recycle_frame_done_0945:
 14712 0000A66E 4883C308                	add rbx,8
 14713 0000A672 4889DC                  	mov rsp,rbx
 14714 0000A675 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14715                                  .L_if_end_0598:
 14716                                  .L_if_end_0599:
 14717                                  .L_if_end_059a:
 14718 0000A679 E950060000              	jmp .L_if_end_05a3
 14719                                  .L_if_else_051e:
 14720                                  	; preparing a non-tail-call
 14721 0000A67E 488B4520                	mov rax, PARAM(0)	; param a
 14722 0000A682 50                      	push rax
 14723 0000A683 6A01                    	push 1	; arg count
 14724 0000A685 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 14725 0000A68D 803805                  	cmp byte [rax], T_undefined
 14726 0000A690 0F846DCD0000            	je L_error_fvar_undefined
 14727 0000A696 803804                  	cmp byte [rax], T_closure
 14728 0000A699 0F85E8CD0000            	jne L_error_non_closure
 14729 0000A69F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14730 0000A6A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14731 0000A6A5 483D[02000000]          	cmp rax, sob_boolean_false
 14732 0000A6AB 0F84C2020000            	je .L_if_else_051d
 14733                                  	; preparing a non-tail-call
 14734 0000A6B1 488B4528                	mov rax, PARAM(1)	; param b
 14735 0000A6B5 50                      	push rax
 14736 0000A6B6 6A01                    	push 1	; arg count
 14737 0000A6B8 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 14738 0000A6C0 803805                  	cmp byte [rax], T_undefined
 14739 0000A6C3 0F843ACD0000            	je L_error_fvar_undefined
 14740 0000A6C9 803804                  	cmp byte [rax], T_closure
 14741 0000A6CC 0F85B5CD0000            	jne L_error_non_closure
 14742 0000A6D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14743 0000A6D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14744 0000A6D8 483D[02000000]          	cmp rax, sob_boolean_false
 14745 0000A6DE 0F849F000000            	je .L_if_else_0518
 14746                                  	; preparing a tail-call
 14747                                  	; preparing a non-tail-call
 14748 0000A6E4 488B4528                	mov rax, PARAM(1)	; param b
 14749 0000A6E8 50                      	push rax
 14750 0000A6E9 6A01                    	push 1	; arg count
 14751 0000A6EB 488B0425[47100000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14752 0000A6F3 803805                  	cmp byte [rax], T_undefined
 14753 0000A6F6 0F8407CD0000            	je L_error_fvar_undefined
 14754 0000A6FC 803804                  	cmp byte [rax], T_closure
 14755 0000A6FF 0F8582CD0000            	jne L_error_non_closure
 14756 0000A705 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14757 0000A708 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14758 0000A70B 50                      	push rax
 14759 0000A70C 488B4520                	mov rax, PARAM(0)	; param a
 14760 0000A710 50                      	push rax
 14761 0000A711 6A02                    	push 2	; arg count
 14762 0000A713 488B4510                	mov rax, ENV
 14763 0000A717 488B00                  	mov rax, qword [rax + 8 * 0]
 14764 0000A71A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14765 0000A71E 803804                  	cmp byte [rax], T_closure
 14766 0000A721 0F8560CD0000            	jne L_error_non_closure
 14767 0000A727 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14768 0000A72A FF7508                  	push qword [rbp + 8 *1]
 14769 0000A72D 4989C0                  	mov r8, rax
 14770 0000A730 488B5D18                	mov rbx, COUNT
 14771 0000A734 4883C303                	add rbx,3
 14772 0000A738 48C1E303                	shl rbx,3
 14773 0000A73C 4801EB                  	add rbx, rbp
 14774 0000A73F 488B6D00                	mov rbp, [rbp]
 14775 0000A743 B900000000              	mov rcx,0
 14776 0000A748 BA05000000              	mov rdx, 5
 14777 0000A74D 4889D0                  	mov rax, rdx
 14778 0000A750 48FFC8                  	dec rax
 14779 0000A753 48C1E003                	shl rax,3
 14780 0000A757 4801E0                  	add rax, rsp
 14781                                  	.L_tc_recycle_frame_loop_0946:
 14782 0000A75A 4839D1                  	cmp rcx, rdx
 14783 0000A75D 7414                    	je .L_tc_recycle_frame_done_0946
 14784 0000A75F 4C8B08                  	mov r9, qword [rax]
 14785 0000A762 4C890B                  	mov qword [rbx],r9
 14786 0000A765 4883E808                	sub rax,8
 14787 0000A769 4883EB08                	sub rbx,8
 14788 0000A76D 4883C101                	add rcx,1
 14789 0000A771 EBE7                    	jmp .L_tc_recycle_frame_loop_0946
 14790                                  	.L_tc_recycle_frame_done_0946:
 14791 0000A773 4883C308                	add rbx,8
 14792 0000A777 4889DC                  	mov rsp,rbx
 14793 0000A77A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14794 0000A77E E9EB010000              	jmp .L_if_end_059d
 14795                                  .L_if_else_0518:
 14796                                  	; preparing a non-tail-call
 14797 0000A783 488B4528                	mov rax, PARAM(1)	; param b
 14798 0000A787 50                      	push rax
 14799 0000A788 6A01                    	push 1	; arg count
 14800 0000A78A 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 14801 0000A792 803805                  	cmp byte [rax], T_undefined
 14802 0000A795 0F8468CC0000            	je L_error_fvar_undefined
 14803 0000A79B 803804                  	cmp byte [rax], T_closure
 14804 0000A79E 0F85E3CC0000            	jne L_error_non_closure
 14805 0000A7A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14806 0000A7A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14807 0000A7AA 483D[02000000]          	cmp rax, sob_boolean_false
 14808 0000A7B0 0F847C000000            	je .L_if_else_0517
 14809                                  	; preparing a tail-call
 14810 0000A7B6 488B4528                	mov rax, PARAM(1)	; param b
 14811 0000A7BA 50                      	push rax
 14812 0000A7BB 488B4520                	mov rax, PARAM(0)	; param a
 14813 0000A7BF 50                      	push rax
 14814 0000A7C0 6A02                    	push 2	; arg count
 14815 0000A7C2 488B4510                	mov rax, ENV
 14816 0000A7C6 488B00                  	mov rax, qword [rax + 8 * 0]
 14817 0000A7C9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14818 0000A7CD 803804                  	cmp byte [rax], T_closure
 14819 0000A7D0 0F85B1CC0000            	jne L_error_non_closure
 14820 0000A7D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14821 0000A7D9 FF7508                  	push qword [rbp + 8 *1]
 14822 0000A7DC 4989C0                  	mov r8, rax
 14823 0000A7DF 488B5D18                	mov rbx, COUNT
 14824 0000A7E3 4883C303                	add rbx,3
 14825 0000A7E7 48C1E303                	shl rbx,3
 14826 0000A7EB 4801EB                  	add rbx, rbp
 14827 0000A7EE 488B6D00                	mov rbp, [rbp]
 14828 0000A7F2 B900000000              	mov rcx,0
 14829 0000A7F7 BA05000000              	mov rdx, 5
 14830 0000A7FC 4889D0                  	mov rax, rdx
 14831 0000A7FF 48FFC8                  	dec rax
 14832 0000A802 48C1E003                	shl rax,3
 14833 0000A806 4801E0                  	add rax, rsp
 14834                                  	.L_tc_recycle_frame_loop_0947:
 14835 0000A809 4839D1                  	cmp rcx, rdx
 14836 0000A80C 7414                    	je .L_tc_recycle_frame_done_0947
 14837 0000A80E 4C8B08                  	mov r9, qword [rax]
 14838 0000A811 4C890B                  	mov qword [rbx],r9
 14839 0000A814 4883E808                	sub rax,8
 14840 0000A818 4883EB08                	sub rbx,8
 14841 0000A81C 4883C101                	add rcx,1
 14842 0000A820 EBE7                    	jmp .L_tc_recycle_frame_loop_0947
 14843                                  	.L_tc_recycle_frame_done_0947:
 14844 0000A822 4883C308                	add rbx,8
 14845 0000A826 4889DC                  	mov rsp,rbx
 14846 0000A829 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14847 0000A82D E93C010000              	jmp .L_if_end_059c
 14848                                  .L_if_else_0517:
 14849                                  	; preparing a non-tail-call
 14850 0000A832 488B4528                	mov rax, PARAM(1)	; param b
 14851 0000A836 50                      	push rax
 14852 0000A837 6A01                    	push 1	; arg count
 14853 0000A839 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 14854 0000A841 803805                  	cmp byte [rax], T_undefined
 14855 0000A844 0F84B9CB0000            	je L_error_fvar_undefined
 14856 0000A84A 803804                  	cmp byte [rax], T_closure
 14857 0000A84D 0F8534CC0000            	jne L_error_non_closure
 14858 0000A853 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14859 0000A856 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14860 0000A859 483D[02000000]          	cmp rax, sob_boolean_false
 14861 0000A85F 0F849C000000            	je .L_if_else_0516
 14862                                  	; preparing a tail-call
 14863 0000A865 488B4528                	mov rax, PARAM(1)	; param b
 14864 0000A869 50                      	push rax
 14865                                  	; preparing a non-tail-call
 14866 0000A86A 488B4520                	mov rax, PARAM(0)	; param a
 14867 0000A86E 50                      	push rax
 14868 0000A86F 6A01                    	push 1	; arg count
 14869 0000A871 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14870 0000A879 803805                  	cmp byte [rax], T_undefined
 14871 0000A87C 0F8481CB0000            	je L_error_fvar_undefined
 14872 0000A882 803804                  	cmp byte [rax], T_closure
 14873 0000A885 0F85FCCB0000            	jne L_error_non_closure
 14874 0000A88B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14875 0000A88E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14876 0000A891 50                      	push rax
 14877 0000A892 6A02                    	push 2	; arg count
 14878 0000A894 488B4510                	mov rax, ENV
 14879 0000A898 488B00                  	mov rax, qword [rax + 8 * 0]
 14880 0000A89B 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14881 0000A89F 803804                  	cmp byte [rax], T_closure
 14882 0000A8A2 0F85DFCB0000            	jne L_error_non_closure
 14883 0000A8A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14884 0000A8AB FF7508                  	push qword [rbp + 8 *1]
 14885 0000A8AE 4989C0                  	mov r8, rax
 14886 0000A8B1 488B5D18                	mov rbx, COUNT
 14887 0000A8B5 4883C303                	add rbx,3
 14888 0000A8B9 48C1E303                	shl rbx,3
 14889 0000A8BD 4801EB                  	add rbx, rbp
 14890 0000A8C0 488B6D00                	mov rbp, [rbp]
 14891 0000A8C4 B900000000              	mov rcx,0
 14892 0000A8C9 BA05000000              	mov rdx, 5
 14893 0000A8CE 4889D0                  	mov rax, rdx
 14894 0000A8D1 48FFC8                  	dec rax
 14895 0000A8D4 48C1E003                	shl rax,3
 14896 0000A8D8 4801E0                  	add rax, rsp
 14897                                  	.L_tc_recycle_frame_loop_0948:
 14898 0000A8DB 4839D1                  	cmp rcx, rdx
 14899 0000A8DE 7414                    	je .L_tc_recycle_frame_done_0948
 14900 0000A8E0 4C8B08                  	mov r9, qword [rax]
 14901 0000A8E3 4C890B                  	mov qword [rbx],r9
 14902 0000A8E6 4883E808                	sub rax,8
 14903 0000A8EA 4883EB08                	sub rbx,8
 14904 0000A8EE 4883C101                	add rcx,1
 14905 0000A8F2 EBE7                    	jmp .L_tc_recycle_frame_loop_0948
 14906                                  	.L_tc_recycle_frame_done_0948:
 14907 0000A8F4 4883C308                	add rbx,8
 14908 0000A8F8 4889DC                  	mov rsp,rbx
 14909 0000A8FB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14910 0000A8FF EB6D                    	jmp .L_if_end_059b
 14911                                  .L_if_else_0516:
 14912                                  	; preparing a tail-call
 14913 0000A901 6A00                    	push 0	; arg count
 14914 0000A903 488B4510                	mov rax, ENV
 14915 0000A907 488B4008                	mov rax, qword [rax + 8 * 1]
 14916 0000A90B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14917 0000A90E 803804                  	cmp byte [rax], T_closure
 14918 0000A911 0F8570CB0000            	jne L_error_non_closure
 14919 0000A917 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14920 0000A91A FF7508                  	push qword [rbp + 8 *1]
 14921 0000A91D 4989C0                  	mov r8, rax
 14922 0000A920 488B5D18                	mov rbx, COUNT
 14923 0000A924 4883C303                	add rbx,3
 14924 0000A928 48C1E303                	shl rbx,3
 14925 0000A92C 4801EB                  	add rbx, rbp
 14926 0000A92F 488B6D00                	mov rbp, [rbp]
 14927 0000A933 B900000000              	mov rcx,0
 14928 0000A938 BA03000000              	mov rdx, 3
 14929 0000A93D 4889D0                  	mov rax, rdx
 14930 0000A940 48FFC8                  	dec rax
 14931 0000A943 48C1E003                	shl rax,3
 14932 0000A947 4801E0                  	add rax, rsp
 14933                                  	.L_tc_recycle_frame_loop_0949:
 14934 0000A94A 4839D1                  	cmp rcx, rdx
 14935 0000A94D 7414                    	je .L_tc_recycle_frame_done_0949
 14936 0000A94F 4C8B08                  	mov r9, qword [rax]
 14937 0000A952 4C890B                  	mov qword [rbx],r9
 14938 0000A955 4883E808                	sub rax,8
 14939 0000A959 4883EB08                	sub rbx,8
 14940 0000A95D 4883C101                	add rcx,1
 14941 0000A961 EBE7                    	jmp .L_tc_recycle_frame_loop_0949
 14942                                  	.L_tc_recycle_frame_done_0949:
 14943 0000A963 4883C308                	add rbx,8
 14944 0000A967 4889DC                  	mov rsp,rbx
 14945 0000A96A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 14946                                  .L_if_end_059b:
 14947                                  .L_if_end_059c:
 14948                                  .L_if_end_059d:
 14949 0000A96E E95B030000              	jmp .L_if_end_05a2
 14950                                  .L_if_else_051d:
 14951                                  	; preparing a non-tail-call
 14952 0000A973 488B4520                	mov rax, PARAM(0)	; param a
 14953 0000A977 50                      	push rax
 14954 0000A978 6A01                    	push 1	; arg count
 14955 0000A97A 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 14956 0000A982 803805                  	cmp byte [rax], T_undefined
 14957 0000A985 0F8478CA0000            	je L_error_fvar_undefined
 14958 0000A98B 803804                  	cmp byte [rax], T_closure
 14959 0000A98E 0F85F3CA0000            	jne L_error_non_closure
 14960 0000A994 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14961 0000A997 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14962 0000A99A 483D[02000000]          	cmp rax, sob_boolean_false
 14963 0000A9A0 0F84BB020000            	je .L_if_else_051c
 14964                                  	; preparing a non-tail-call
 14965 0000A9A6 488B4528                	mov rax, PARAM(1)	; param b
 14966 0000A9AA 50                      	push rax
 14967 0000A9AB 6A01                    	push 1	; arg count
 14968 0000A9AD 488B0425[65140000]      	mov rax, qword [free_var_91]	; free var integer?
 14969 0000A9B5 803805                  	cmp byte [rax], T_undefined
 14970 0000A9B8 0F8445CA0000            	je L_error_fvar_undefined
 14971 0000A9BE 803804                  	cmp byte [rax], T_closure
 14972 0000A9C1 0F85C0CA0000            	jne L_error_non_closure
 14973 0000A9C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14974 0000A9CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 14975 0000A9CD 483D[02000000]          	cmp rax, sob_boolean_false
 14976 0000A9D3 0F849F000000            	je .L_if_else_051b
 14977                                  	; preparing a tail-call
 14978                                  	; preparing a non-tail-call
 14979 0000A9D9 488B4528                	mov rax, PARAM(1)	; param b
 14980 0000A9DD 50                      	push rax
 14981 0000A9DE 6A01                    	push 1	; arg count
 14982 0000A9E0 488B0425[54140000]      	mov rax, qword [free_var_90]	; free var integer->real
 14983 0000A9E8 803805                  	cmp byte [rax], T_undefined
 14984 0000A9EB 0F8412CA0000            	je L_error_fvar_undefined
 14985 0000A9F1 803804                  	cmp byte [rax], T_closure
 14986 0000A9F4 0F858DCA0000            	jne L_error_non_closure
 14987 0000A9FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14988 0000A9FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 14989 0000AA00 50                      	push rax
 14990 0000AA01 488B4520                	mov rax, PARAM(0)	; param a
 14991 0000AA05 50                      	push rax
 14992 0000AA06 6A02                    	push 2	; arg count
 14993 0000AA08 488B4510                	mov rax, ENV
 14994 0000AA0C 488B00                  	mov rax, qword [rax + 8 * 0]
 14995 0000AA0F 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14996 0000AA13 803804                  	cmp byte [rax], T_closure
 14997 0000AA16 0F856BCA0000            	jne L_error_non_closure
 14998 0000AA1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14999 0000AA1F FF7508                  	push qword [rbp + 8 *1]
 15000 0000AA22 4989C0                  	mov r8, rax
 15001 0000AA25 488B5D18                	mov rbx, COUNT
 15002 0000AA29 4883C303                	add rbx,3
 15003 0000AA2D 48C1E303                	shl rbx,3
 15004 0000AA31 4801EB                  	add rbx, rbp
 15005 0000AA34 488B6D00                	mov rbp, [rbp]
 15006 0000AA38 B900000000              	mov rcx,0
 15007 0000AA3D BA05000000              	mov rdx, 5
 15008 0000AA42 4889D0                  	mov rax, rdx
 15009 0000AA45 48FFC8                  	dec rax
 15010 0000AA48 48C1E003                	shl rax,3
 15011 0000AA4C 4801E0                  	add rax, rsp
 15012                                  	.L_tc_recycle_frame_loop_094a:
 15013 0000AA4F 4839D1                  	cmp rcx, rdx
 15014 0000AA52 7414                    	je .L_tc_recycle_frame_done_094a
 15015 0000AA54 4C8B08                  	mov r9, qword [rax]
 15016 0000AA57 4C890B                  	mov qword [rbx],r9
 15017 0000AA5A 4883E808                	sub rax,8
 15018 0000AA5E 4883EB08                	sub rbx,8
 15019 0000AA62 4883C101                	add rcx,1
 15020 0000AA66 EBE7                    	jmp .L_tc_recycle_frame_loop_094a
 15021                                  	.L_tc_recycle_frame_done_094a:
 15022 0000AA68 4883C308                	add rbx,8
 15023 0000AA6C 4889DC                  	mov rsp,rbx
 15024 0000AA6F 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15025 0000AA73 E9E7010000              	jmp .L_if_end_05a0
 15026                                  .L_if_else_051b:
 15027                                  	; preparing a non-tail-call
 15028 0000AA78 488B4528                	mov rax, PARAM(1)	; param b
 15029 0000AA7C 50                      	push rax
 15030 0000AA7D 6A01                    	push 1	; arg count
 15031 0000AA7F 488B0425[32140000]      	mov rax, qword [free_var_88]	; free var fraction?
 15032 0000AA87 803805                  	cmp byte [rax], T_undefined
 15033 0000AA8A 0F8473C90000            	je L_error_fvar_undefined
 15034 0000AA90 803804                  	cmp byte [rax], T_closure
 15035 0000AA93 0F85EEC90000            	jne L_error_non_closure
 15036 0000AA99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15037 0000AA9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15038 0000AA9F 483D[02000000]          	cmp rax, sob_boolean_false
 15039 0000AAA5 0F849F000000            	je .L_if_else_051a
 15040                                  	; preparing a tail-call
 15041                                  	; preparing a non-tail-call
 15042 0000AAAB 488B4528                	mov rax, PARAM(1)	; param b
 15043 0000AAAF 50                      	push rax
 15044 0000AAB0 6A01                    	push 1	; arg count
 15045 0000AAB2 488B0425[21140000]      	mov rax, qword [free_var_87]	; free var fraction->real
 15046 0000AABA 803805                  	cmp byte [rax], T_undefined
 15047 0000AABD 0F8440C90000            	je L_error_fvar_undefined
 15048 0000AAC3 803804                  	cmp byte [rax], T_closure
 15049 0000AAC6 0F85BBC90000            	jne L_error_non_closure
 15050 0000AACC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15051 0000AACF FF5009                  	call SOB_CLOSURE_CODE(rax)
 15052 0000AAD2 50                      	push rax
 15053 0000AAD3 488B4520                	mov rax, PARAM(0)	; param a
 15054 0000AAD7 50                      	push rax
 15055 0000AAD8 6A02                    	push 2	; arg count
 15056 0000AADA 488B4510                	mov rax, ENV
 15057 0000AADE 488B00                  	mov rax, qword [rax + 8 * 0]
 15058 0000AAE1 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 15059 0000AAE5 803804                  	cmp byte [rax], T_closure
 15060 0000AAE8 0F8599C90000            	jne L_error_non_closure
 15061 0000AAEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15062 0000AAF1 FF7508                  	push qword [rbp + 8 *1]
 15063 0000AAF4 4989C0                  	mov r8, rax
 15064 0000AAF7 488B5D18                	mov rbx, COUNT
 15065 0000AAFB 4883C303                	add rbx,3
 15066 0000AAFF 48C1E303                	shl rbx,3
 15067 0000AB03 4801EB                  	add rbx, rbp
 15068 0000AB06 488B6D00                	mov rbp, [rbp]
 15069 0000AB0A B900000000              	mov rcx,0
 15070 0000AB0F BA05000000              	mov rdx, 5
 15071 0000AB14 4889D0                  	mov rax, rdx
 15072 0000AB17 48FFC8                  	dec rax
 15073 0000AB1A 48C1E003                	shl rax,3
 15074 0000AB1E 4801E0                  	add rax, rsp
 15075                                  	.L_tc_recycle_frame_loop_094b:
 15076 0000AB21 4839D1                  	cmp rcx, rdx
 15077 0000AB24 7414                    	je .L_tc_recycle_frame_done_094b
 15078 0000AB26 4C8B08                  	mov r9, qword [rax]
 15079 0000AB29 4C890B                  	mov qword [rbx],r9
 15080 0000AB2C 4883E808                	sub rax,8
 15081 0000AB30 4883EB08                	sub rbx,8
 15082 0000AB34 4883C101                	add rcx,1
 15083 0000AB38 EBE7                    	jmp .L_tc_recycle_frame_loop_094b
 15084                                  	.L_tc_recycle_frame_done_094b:
 15085 0000AB3A 4883C308                	add rbx,8
 15086 0000AB3E 4889DC                  	mov rsp,rbx
 15087 0000AB41 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15088 0000AB45 E915010000              	jmp .L_if_end_059f
 15089                                  .L_if_else_051a:
 15090                                  	; preparing a non-tail-call
 15091 0000AB4A 488B4528                	mov rax, PARAM(1)	; param b
 15092 0000AB4E 50                      	push rax
 15093 0000AB4F 6A01                    	push 1	; arg count
 15094 0000AB51 488B0425[0E160000]      	mov rax, qword [free_var_116]	; free var real?
 15095 0000AB59 803805                  	cmp byte [rax], T_undefined
 15096 0000AB5C 0F84A1C80000            	je L_error_fvar_undefined
 15097 0000AB62 803804                  	cmp byte [rax], T_closure
 15098 0000AB65 0F851CC90000            	jne L_error_non_closure
 15099 0000AB6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15100 0000AB6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15101 0000AB71 483D[02000000]          	cmp rax, sob_boolean_false
 15102 0000AB77 7479                    	je .L_if_else_0519
 15103                                  	; preparing a tail-call
 15104 0000AB79 488B4528                	mov rax, PARAM(1)	; param b
 15105 0000AB7D 50                      	push rax
 15106 0000AB7E 488B4520                	mov rax, PARAM(0)	; param a
 15107 0000AB82 50                      	push rax
 15108 0000AB83 6A02                    	push 2	; arg count
 15109 0000AB85 488B4510                	mov rax, ENV
 15110 0000AB89 488B00                  	mov rax, qword [rax + 8 * 0]
 15111 0000AB8C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 15112 0000AB90 803804                  	cmp byte [rax], T_closure
 15113 0000AB93 0F85EEC80000            	jne L_error_non_closure
 15114 0000AB99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15115 0000AB9C FF7508                  	push qword [rbp + 8 *1]
 15116 0000AB9F 4989C0                  	mov r8, rax
 15117 0000ABA2 488B5D18                	mov rbx, COUNT
 15118 0000ABA6 4883C303                	add rbx,3
 15119 0000ABAA 48C1E303                	shl rbx,3
 15120 0000ABAE 4801EB                  	add rbx, rbp
 15121 0000ABB1 488B6D00                	mov rbp, [rbp]
 15122 0000ABB5 B900000000              	mov rcx,0
 15123 0000ABBA BA05000000              	mov rdx, 5
 15124 0000ABBF 4889D0                  	mov rax, rdx
 15125 0000ABC2 48FFC8                  	dec rax
 15126 0000ABC5 48C1E003                	shl rax,3
 15127 0000ABC9 4801E0                  	add rax, rsp
 15128                                  	.L_tc_recycle_frame_loop_094c:
 15129 0000ABCC 4839D1                  	cmp rcx, rdx
 15130 0000ABCF 7414                    	je .L_tc_recycle_frame_done_094c
 15131 0000ABD1 4C8B08                  	mov r9, qword [rax]
 15132 0000ABD4 4C890B                  	mov qword [rbx],r9
 15133 0000ABD7 4883E808                	sub rax,8
 15134 0000ABDB 4883EB08                	sub rbx,8
 15135 0000ABDF 4883C101                	add rcx,1
 15136 0000ABE3 EBE7                    	jmp .L_tc_recycle_frame_loop_094c
 15137                                  	.L_tc_recycle_frame_done_094c:
 15138 0000ABE5 4883C308                	add rbx,8
 15139 0000ABE9 4889DC                  	mov rsp,rbx
 15140 0000ABEC 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15141 0000ABF0 EB6D                    	jmp .L_if_end_059e
 15142                                  .L_if_else_0519:
 15143                                  	; preparing a tail-call
 15144 0000ABF2 6A00                    	push 0	; arg count
 15145 0000ABF4 488B4510                	mov rax, ENV
 15146 0000ABF8 488B4008                	mov rax, qword [rax + 8 * 1]
 15147 0000ABFC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15148 0000ABFF 803804                  	cmp byte [rax], T_closure
 15149 0000AC02 0F857FC80000            	jne L_error_non_closure
 15150 0000AC08 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15151 0000AC0B FF7508                  	push qword [rbp + 8 *1]
 15152 0000AC0E 4989C0                  	mov r8, rax
 15153 0000AC11 488B5D18                	mov rbx, COUNT
 15154 0000AC15 4883C303                	add rbx,3
 15155 0000AC19 48C1E303                	shl rbx,3
 15156 0000AC1D 4801EB                  	add rbx, rbp
 15157 0000AC20 488B6D00                	mov rbp, [rbp]
 15158 0000AC24 B900000000              	mov rcx,0
 15159 0000AC29 BA03000000              	mov rdx, 3
 15160 0000AC2E 4889D0                  	mov rax, rdx
 15161 0000AC31 48FFC8                  	dec rax
 15162 0000AC34 48C1E003                	shl rax,3
 15163 0000AC38 4801E0                  	add rax, rsp
 15164                                  	.L_tc_recycle_frame_loop_094d:
 15165 0000AC3B 4839D1                  	cmp rcx, rdx
 15166 0000AC3E 7414                    	je .L_tc_recycle_frame_done_094d
 15167 0000AC40 4C8B08                  	mov r9, qword [rax]
 15168 0000AC43 4C890B                  	mov qword [rbx],r9
 15169 0000AC46 4883E808                	sub rax,8
 15170 0000AC4A 4883EB08                	sub rbx,8
 15171 0000AC4E 4883C101                	add rcx,1
 15172 0000AC52 EBE7                    	jmp .L_tc_recycle_frame_loop_094d
 15173                                  	.L_tc_recycle_frame_done_094d:
 15174 0000AC54 4883C308                	add rbx,8
 15175 0000AC58 4889DC                  	mov rsp,rbx
 15176 0000AC5B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15177                                  .L_if_end_059e:
 15178                                  .L_if_end_059f:
 15179                                  .L_if_end_05a0:
 15180 0000AC5F EB6D                    	jmp .L_if_end_05a1
 15181                                  .L_if_else_051c:
 15182                                  	; preparing a tail-call
 15183 0000AC61 6A00                    	push 0	; arg count
 15184 0000AC63 488B4510                	mov rax, ENV
 15185 0000AC67 488B4008                	mov rax, qword [rax + 8 * 1]
 15186 0000AC6B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15187 0000AC6E 803804                  	cmp byte [rax], T_closure
 15188 0000AC71 0F8510C80000            	jne L_error_non_closure
 15189 0000AC77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15190 0000AC7A FF7508                  	push qword [rbp + 8 *1]
 15191 0000AC7D 4989C0                  	mov r8, rax
 15192 0000AC80 488B5D18                	mov rbx, COUNT
 15193 0000AC84 4883C303                	add rbx,3
 15194 0000AC88 48C1E303                	shl rbx,3
 15195 0000AC8C 4801EB                  	add rbx, rbp
 15196 0000AC8F 488B6D00                	mov rbp, [rbp]
 15197 0000AC93 B900000000              	mov rcx,0
 15198 0000AC98 BA03000000              	mov rdx, 3
 15199 0000AC9D 4889D0                  	mov rax, rdx
 15200 0000ACA0 48FFC8                  	dec rax
 15201 0000ACA3 48C1E003                	shl rax,3
 15202 0000ACA7 4801E0                  	add rax, rsp
 15203                                  	.L_tc_recycle_frame_loop_094e:
 15204 0000ACAA 4839D1                  	cmp rcx, rdx
 15205 0000ACAD 7414                    	je .L_tc_recycle_frame_done_094e
 15206 0000ACAF 4C8B08                  	mov r9, qword [rax]
 15207 0000ACB2 4C890B                  	mov qword [rbx],r9
 15208 0000ACB5 4883E808                	sub rax,8
 15209 0000ACB9 4883EB08                	sub rbx,8
 15210 0000ACBD 4883C101                	add rcx,1
 15211 0000ACC1 EBE7                    	jmp .L_tc_recycle_frame_loop_094e
 15212                                  	.L_tc_recycle_frame_done_094e:
 15213 0000ACC3 4883C308                	add rbx,8
 15214 0000ACC7 4889DC                  	mov rsp,rbx
 15215 0000ACCA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15216                                  .L_if_end_05a1:
 15217                                  .L_if_end_05a2:
 15218                                  .L_if_end_05a3:
 15219 0000ACCE C9                      	leave
 15220 0000ACCF C22000                  	ret AND_KILL_FRAME(2)
 15221                                  .L_lambda_simple_end_073d:	; new closure is in rax
 15222 0000ACD2 C9                      	leave
 15223 0000ACD3 C22800                  	ret AND_KILL_FRAME(3)
 15224                                  .L_lambda_simple_end_073c:	; new closure is in rax
 15225 0000ACD6 50                      	push rax
 15226 0000ACD7 6A01                    	push 1	; arg count
 15227 0000ACD9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15228 0000ACDE E84DC80000              	call malloc
 15229 0000ACE3 50                      	push rax
 15230 0000ACE4 BF08000000              	mov rdi, 8 * 1	; new rib
 15231 0000ACE9 E842C80000              	call malloc
 15232 0000ACEE 50                      	push rax
 15233 0000ACEF BF10000000              	mov rdi, 8 * 2	; extended env
 15234 0000ACF4 E837C80000              	call malloc
 15235 0000ACF9 488B7D10                	mov rdi, ENV
 15236 0000ACFD BE00000000              	mov rsi, 0
 15237 0000AD02 BA01000000              	mov rdx, 1
 15238                                  .L_lambda_simple_env_loop_073e:	; ext_env[i + 1] <-- env[i]
 15239 0000AD07 4883FE01                	cmp rsi, 1
 15240 0000AD0B 7410                    	je .L_lambda_simple_env_end_073e
 15241 0000AD0D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15242 0000AD11 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15243 0000AD15 48FFC6                  	inc rsi
 15244 0000AD18 48FFC2                  	inc rdx
 15245 0000AD1B EBEA                    	jmp .L_lambda_simple_env_loop_073e
 15246                                  .L_lambda_simple_env_end_073e:
 15247 0000AD1D 5B                      	pop rbx
 15248 0000AD1E BE00000000              	mov rsi, 0
 15249                                  .L_lambda_simple_params_loop_073e:	; copy params
 15250 0000AD23 4883FE01                	cmp rsi, 1
 15251 0000AD27 740E                    	je .L_lambda_simple_params_end_073e
 15252 0000AD29 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15253 0000AD2E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15254 0000AD32 48FFC6                  	inc rsi
 15255 0000AD35 EBEC                    	jmp .L_lambda_simple_params_loop_073e
 15256                                  .L_lambda_simple_params_end_073e:
 15257 0000AD37 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15258 0000AD3A 4889C3                  	mov rbx, rax
 15259 0000AD3D 58                      	pop rax
 15260 0000AD3E C60004                  	mov byte [rax], T_closure
 15261 0000AD41 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15262 0000AD45 48C74009[52AD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073e
 15263 0000AD4D E997100000              	jmp .L_lambda_simple_end_073e
 15264                                  .L_lambda_simple_code_073e:	; lambda-simple body
 15265 0000AD52 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15266 0000AD58 740B                    	je .L_lambda_simple_arity_check_ok_0826
 15267 0000AD5A FF742410                	push qword [rsp + 8 * 2]
 15268 0000AD5E 6A01                    	push 1
 15269 0000AD60 E984C70000              	jmp L_error_incorrect_arity_simple
 15270                                  .L_lambda_simple_arity_check_ok_0826:
 15271 0000AD65 C8000000                	enter 0, 0
 15272                                  	; preparing a tail-call
 15273                                  	; preparing a non-tail-call
 15274 0000AD69 488B0425[AE0F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 15275 0000AD71 803805                  	cmp byte [rax], T_undefined
 15276 0000AD74 0F8489C60000            	je L_error_fvar_undefined
 15277 0000AD7A 50                      	push rax
 15278 0000AD7B 488B0425[9D0F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 15279 0000AD83 803805                  	cmp byte [rax], T_undefined
 15280 0000AD86 0F8477C60000            	je L_error_fvar_undefined
 15281 0000AD8C 50                      	push rax
 15282 0000AD8D 488B0425[BF0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 15283 0000AD95 803805                  	cmp byte [rax], T_undefined
 15284 0000AD98 0F8465C60000            	je L_error_fvar_undefined
 15285 0000AD9E 50                      	push rax
 15286 0000AD9F 6A03                    	push 3	; arg count
 15287 0000ADA1 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 15288 0000ADA5 803804                  	cmp byte [rax], T_closure
 15289 0000ADA8 0F85D9C60000            	jne L_error_non_closure
 15290 0000ADAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15291 0000ADB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15292 0000ADB4 50                      	push rax
 15293 0000ADB5 6A01                    	push 1	; arg count
 15294 0000ADB7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15295 0000ADBC E86FC70000              	call malloc
 15296 0000ADC1 50                      	push rax
 15297 0000ADC2 BF08000000              	mov rdi, 8 * 1	; new rib
 15298 0000ADC7 E864C70000              	call malloc
 15299 0000ADCC 50                      	push rax
 15300 0000ADCD BF18000000              	mov rdi, 8 * 3	; extended env
 15301 0000ADD2 E859C70000              	call malloc
 15302 0000ADD7 488B7D10                	mov rdi, ENV
 15303 0000ADDB BE00000000              	mov rsi, 0
 15304 0000ADE0 BA01000000              	mov rdx, 1
 15305                                  .L_lambda_simple_env_loop_073f:	; ext_env[i + 1] <-- env[i]
 15306 0000ADE5 4883FE02                	cmp rsi, 2
 15307 0000ADE9 7410                    	je .L_lambda_simple_env_end_073f
 15308 0000ADEB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15309 0000ADEF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15310 0000ADF3 48FFC6                  	inc rsi
 15311 0000ADF6 48FFC2                  	inc rdx
 15312 0000ADF9 EBEA                    	jmp .L_lambda_simple_env_loop_073f
 15313                                  .L_lambda_simple_env_end_073f:
 15314 0000ADFB 5B                      	pop rbx
 15315 0000ADFC BE00000000              	mov rsi, 0
 15316                                  .L_lambda_simple_params_loop_073f:	; copy params
 15317 0000AE01 4883FE01                	cmp rsi, 1
 15318 0000AE05 740E                    	je .L_lambda_simple_params_end_073f
 15319 0000AE07 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15320 0000AE0C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15321 0000AE10 48FFC6                  	inc rsi
 15322 0000AE13 EBEC                    	jmp .L_lambda_simple_params_loop_073f
 15323                                  .L_lambda_simple_params_end_073f:
 15324 0000AE15 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15325 0000AE18 4889C3                  	mov rbx, rax
 15326 0000AE1B 58                      	pop rax
 15327 0000AE1C C60004                  	mov byte [rax], T_closure
 15328 0000AE1F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15329 0000AE23 48C74009[30AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_073f
 15330 0000AE2B E9550F0000              	jmp .L_lambda_simple_end_073f
 15331                                  .L_lambda_simple_code_073f:	; lambda-simple body
 15332 0000AE30 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15333 0000AE36 740B                    	je .L_lambda_simple_arity_check_ok_0827
 15334 0000AE38 FF742410                	push qword [rsp + 8 * 2]
 15335 0000AE3C 6A01                    	push 1
 15336 0000AE3E E9A6C60000              	jmp L_error_incorrect_arity_simple
 15337                                  .L_lambda_simple_arity_check_ok_0827:
 15338 0000AE43 C8000000                	enter 0, 0
 15339                                  	; preparing a tail-call
 15340                                  	; preparing a non-tail-call
 15341 0000AE47 488B0425[7B0F0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 15342 0000AE4F 803805                  	cmp byte [rax], T_undefined
 15343 0000AE52 0F84ABC50000            	je L_error_fvar_undefined
 15344 0000AE58 50                      	push rax
 15345 0000AE59 488B0425[6A0F0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 15346 0000AE61 803805                  	cmp byte [rax], T_undefined
 15347 0000AE64 0F8499C50000            	je L_error_fvar_undefined
 15348 0000AE6A 50                      	push rax
 15349 0000AE6B 488B0425[8C0F0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 15350 0000AE73 803805                  	cmp byte [rax], T_undefined
 15351 0000AE76 0F8487C50000            	je L_error_fvar_undefined
 15352 0000AE7C 50                      	push rax
 15353 0000AE7D 6A03                    	push 3	; arg count
 15354 0000AE7F 488B4510                	mov rax, ENV
 15355 0000AE83 488B00                  	mov rax, qword [rax + 8 * 0]
 15356 0000AE86 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 15357 0000AE89 803804                  	cmp byte [rax], T_closure
 15358 0000AE8C 0F85F5C50000            	jne L_error_non_closure
 15359 0000AE92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15360 0000AE95 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15361 0000AE98 50                      	push rax
 15362 0000AE99 6A01                    	push 1	; arg count
 15363 0000AE9B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15364 0000AEA0 E88BC60000              	call malloc
 15365 0000AEA5 50                      	push rax
 15366 0000AEA6 BF08000000              	mov rdi, 8 * 1	; new rib
 15367 0000AEAB E880C60000              	call malloc
 15368 0000AEB0 50                      	push rax
 15369 0000AEB1 BF20000000              	mov rdi, 8 * 4	; extended env
 15370 0000AEB6 E875C60000              	call malloc
 15371 0000AEBB 488B7D10                	mov rdi, ENV
 15372 0000AEBF BE00000000              	mov rsi, 0
 15373 0000AEC4 BA01000000              	mov rdx, 1
 15374                                  .L_lambda_simple_env_loop_0740:	; ext_env[i + 1] <-- env[i]
 15375 0000AEC9 4883FE03                	cmp rsi, 3
 15376 0000AECD 7410                    	je .L_lambda_simple_env_end_0740
 15377 0000AECF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15378 0000AED3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15379 0000AED7 48FFC6                  	inc rsi
 15380 0000AEDA 48FFC2                  	inc rdx
 15381 0000AEDD EBEA                    	jmp .L_lambda_simple_env_loop_0740
 15382                                  .L_lambda_simple_env_end_0740:
 15383 0000AEDF 5B                      	pop rbx
 15384 0000AEE0 BE00000000              	mov rsi, 0
 15385                                  .L_lambda_simple_params_loop_0740:	; copy params
 15386 0000AEE5 4883FE01                	cmp rsi, 1
 15387 0000AEE9 740E                    	je .L_lambda_simple_params_end_0740
 15388 0000AEEB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15389 0000AEF0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15390 0000AEF4 48FFC6                  	inc rsi
 15391 0000AEF7 EBEC                    	jmp .L_lambda_simple_params_loop_0740
 15392                                  .L_lambda_simple_params_end_0740:
 15393 0000AEF9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15394 0000AEFC 4889C3                  	mov rbx, rax
 15395 0000AEFF 58                      	pop rax
 15396 0000AF00 C60004                  	mov byte [rax], T_closure
 15397 0000AF03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15398 0000AF07 48C74009[14AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0740
 15399 0000AF0F E90D0E0000              	jmp .L_lambda_simple_end_0740
 15400                                  .L_lambda_simple_code_0740:	; lambda-simple body
 15401 0000AF14 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15402 0000AF1A 740B                    	je .L_lambda_simple_arity_check_ok_0828
 15403 0000AF1C FF742410                	push qword [rsp + 8 * 2]
 15404 0000AF20 6A01                    	push 1
 15405 0000AF22 E9C2C50000              	jmp L_error_incorrect_arity_simple
 15406                                  .L_lambda_simple_arity_check_ok_0828:
 15407 0000AF27 C8000000                	enter 0, 0
 15408                                  	; preparing a tail-call
 15409 0000AF2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15410 0000AF30 E8FBC50000              	call malloc
 15411 0000AF35 50                      	push rax
 15412 0000AF36 BF08000000              	mov rdi, 8 * 1	; new rib
 15413 0000AF3B E8F0C50000              	call malloc
 15414 0000AF40 50                      	push rax
 15415 0000AF41 BF28000000              	mov rdi, 8 * 5	; extended env
 15416 0000AF46 E8E5C50000              	call malloc
 15417 0000AF4B 488B7D10                	mov rdi, ENV
 15418 0000AF4F BE00000000              	mov rsi, 0
 15419 0000AF54 BA01000000              	mov rdx, 1
 15420                                  .L_lambda_simple_env_loop_0741:	; ext_env[i + 1] <-- env[i]
 15421 0000AF59 4883FE04                	cmp rsi, 4
 15422 0000AF5D 7410                    	je .L_lambda_simple_env_end_0741
 15423 0000AF5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15424 0000AF63 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15425 0000AF67 48FFC6                  	inc rsi
 15426 0000AF6A 48FFC2                  	inc rdx
 15427 0000AF6D EBEA                    	jmp .L_lambda_simple_env_loop_0741
 15428                                  .L_lambda_simple_env_end_0741:
 15429 0000AF6F 5B                      	pop rbx
 15430 0000AF70 BE00000000              	mov rsi, 0
 15431                                  .L_lambda_simple_params_loop_0741:	; copy params
 15432 0000AF75 4883FE01                	cmp rsi, 1
 15433 0000AF79 740E                    	je .L_lambda_simple_params_end_0741
 15434 0000AF7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15435 0000AF80 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15436 0000AF84 48FFC6                  	inc rsi
 15437 0000AF87 EBEC                    	jmp .L_lambda_simple_params_loop_0741
 15438                                  .L_lambda_simple_params_end_0741:
 15439 0000AF89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15440 0000AF8C 4889C3                  	mov rbx, rax
 15441 0000AF8F 58                      	pop rax
 15442 0000AF90 C60004                  	mov byte [rax], T_closure
 15443 0000AF93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15444 0000AF97 48C74009[A4AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0741
 15445 0000AF9F E9B5000000              	jmp .L_lambda_simple_end_0741
 15446                                  .L_lambda_simple_code_0741:	; lambda-simple body
 15447 0000AFA4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15448 0000AFAA 740B                    	je .L_lambda_simple_arity_check_ok_0829
 15449 0000AFAC FF742410                	push qword [rsp + 8 * 2]
 15450 0000AFB0 6A02                    	push 2
 15451 0000AFB2 E932C50000              	jmp L_error_incorrect_arity_simple
 15452                                  .L_lambda_simple_arity_check_ok_0829:
 15453 0000AFB7 C8000000                	enter 0, 0
 15454                                  	; preparing a tail-call
 15455                                  	; preparing a non-tail-call
 15456 0000AFBB 488B4528                	mov rax, PARAM(1)	; param b
 15457 0000AFBF 50                      	push rax
 15458 0000AFC0 488B4520                	mov rax, PARAM(0)	; param a
 15459 0000AFC4 50                      	push rax
 15460 0000AFC5 6A02                    	push 2	; arg count
 15461 0000AFC7 488B4510                	mov rax, ENV
 15462 0000AFCB 488B4008                	mov rax, qword [rax + 8 * 1]
 15463 0000AFCF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15464 0000AFD2 803804                  	cmp byte [rax], T_closure
 15465 0000AFD5 0F85ACC40000            	jne L_error_non_closure
 15466 0000AFDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15467 0000AFDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 15468 0000AFE1 50                      	push rax
 15469 0000AFE2 6A01                    	push 1	; arg count
 15470 0000AFE4 488B0425[64150000]      	mov rax, qword [free_var_106]	; free var not
 15471 0000AFEC 803805                  	cmp byte [rax], T_undefined
 15472 0000AFEF 0F840EC40000            	je L_error_fvar_undefined
 15473 0000AFF5 803804                  	cmp byte [rax], T_closure
 15474 0000AFF8 0F8589C40000            	jne L_error_non_closure
 15475 0000AFFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15476 0000B001 FF7508                  	push qword [rbp + 8 *1]
 15477 0000B004 4989C0                  	mov r8, rax
 15478 0000B007 488B5D18                	mov rbx, COUNT
 15479 0000B00B 4883C303                	add rbx,3
 15480 0000B00F 48C1E303                	shl rbx,3
 15481 0000B013 4801EB                  	add rbx, rbp
 15482 0000B016 488B6D00                	mov rbp, [rbp]
 15483 0000B01A B900000000              	mov rcx,0
 15484 0000B01F BA04000000              	mov rdx, 4
 15485 0000B024 4889D0                  	mov rax, rdx
 15486 0000B027 48FFC8                  	dec rax
 15487 0000B02A 48C1E003                	shl rax,3
 15488 0000B02E 4801E0                  	add rax, rsp
 15489                                  	.L_tc_recycle_frame_loop_0952:
 15490 0000B031 4839D1                  	cmp rcx, rdx
 15491 0000B034 7414                    	je .L_tc_recycle_frame_done_0952
 15492 0000B036 4C8B08                  	mov r9, qword [rax]
 15493 0000B039 4C890B                  	mov qword [rbx],r9
 15494 0000B03C 4883E808                	sub rax,8
 15495 0000B040 4883EB08                	sub rbx,8
 15496 0000B044 4883C101                	add rcx,1
 15497 0000B048 EBE7                    	jmp .L_tc_recycle_frame_loop_0952
 15498                                  	.L_tc_recycle_frame_done_0952:
 15499 0000B04A 4883C308                	add rbx,8
 15500 0000B04E 4889DC                  	mov rsp,rbx
 15501 0000B051 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15502 0000B055 C9                      	leave
 15503 0000B056 C22000                  	ret AND_KILL_FRAME(2)
 15504                                  .L_lambda_simple_end_0741:	; new closure is in rax
 15505 0000B059 50                      	push rax
 15506 0000B05A 6A01                    	push 1	; arg count
 15507 0000B05C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15508 0000B061 E8CAC40000              	call malloc
 15509 0000B066 50                      	push rax
 15510 0000B067 BF08000000              	mov rdi, 8 * 1	; new rib
 15511 0000B06C E8BFC40000              	call malloc
 15512 0000B071 50                      	push rax
 15513 0000B072 BF28000000              	mov rdi, 8 * 5	; extended env
 15514 0000B077 E8B4C40000              	call malloc
 15515 0000B07C 488B7D10                	mov rdi, ENV
 15516 0000B080 BE00000000              	mov rsi, 0
 15517 0000B085 BA01000000              	mov rdx, 1
 15518                                  .L_lambda_simple_env_loop_0742:	; ext_env[i + 1] <-- env[i]
 15519 0000B08A 4883FE04                	cmp rsi, 4
 15520 0000B08E 7410                    	je .L_lambda_simple_env_end_0742
 15521 0000B090 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15522 0000B094 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15523 0000B098 48FFC6                  	inc rsi
 15524 0000B09B 48FFC2                  	inc rdx
 15525 0000B09E EBEA                    	jmp .L_lambda_simple_env_loop_0742
 15526                                  .L_lambda_simple_env_end_0742:
 15527 0000B0A0 5B                      	pop rbx
 15528 0000B0A1 BE00000000              	mov rsi, 0
 15529                                  .L_lambda_simple_params_loop_0742:	; copy params
 15530 0000B0A6 4883FE01                	cmp rsi, 1
 15531 0000B0AA 740E                    	je .L_lambda_simple_params_end_0742
 15532 0000B0AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15533 0000B0B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15534 0000B0B5 48FFC6                  	inc rsi
 15535 0000B0B8 EBEC                    	jmp .L_lambda_simple_params_loop_0742
 15536                                  .L_lambda_simple_params_end_0742:
 15537 0000B0BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15538 0000B0BD 4889C3                  	mov rbx, rax
 15539 0000B0C0 58                      	pop rax
 15540 0000B0C1 C60004                  	mov byte [rax], T_closure
 15541 0000B0C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15542 0000B0C8 48C74009[D5B00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0742
 15543 0000B0D0 E9E80B0000              	jmp .L_lambda_simple_end_0742
 15544                                  .L_lambda_simple_code_0742:	; lambda-simple body
 15545 0000B0D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15546 0000B0DB 740B                    	je .L_lambda_simple_arity_check_ok_082a
 15547 0000B0DD FF742410                	push qword [rsp + 8 * 2]
 15548 0000B0E1 6A01                    	push 1
 15549 0000B0E3 E901C40000              	jmp L_error_incorrect_arity_simple
 15550                                  .L_lambda_simple_arity_check_ok_082a:
 15551 0000B0E8 C8000000                	enter 0, 0
 15552                                  	; preparing a tail-call
 15553 0000B0EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15554 0000B0F1 E83AC40000              	call malloc
 15555 0000B0F6 50                      	push rax
 15556 0000B0F7 BF08000000              	mov rdi, 8 * 1	; new rib
 15557 0000B0FC E82FC40000              	call malloc
 15558 0000B101 50                      	push rax
 15559 0000B102 BF30000000              	mov rdi, 8 * 6	; extended env
 15560 0000B107 E824C40000              	call malloc
 15561 0000B10C 488B7D10                	mov rdi, ENV
 15562 0000B110 BE00000000              	mov rsi, 0
 15563 0000B115 BA01000000              	mov rdx, 1
 15564                                  .L_lambda_simple_env_loop_0743:	; ext_env[i + 1] <-- env[i]
 15565 0000B11A 4883FE05                	cmp rsi, 5
 15566 0000B11E 7410                    	je .L_lambda_simple_env_end_0743
 15567 0000B120 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15568 0000B124 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15569 0000B128 48FFC6                  	inc rsi
 15570 0000B12B 48FFC2                  	inc rdx
 15571 0000B12E EBEA                    	jmp .L_lambda_simple_env_loop_0743
 15572                                  .L_lambda_simple_env_end_0743:
 15573 0000B130 5B                      	pop rbx
 15574 0000B131 BE00000000              	mov rsi, 0
 15575                                  .L_lambda_simple_params_loop_0743:	; copy params
 15576 0000B136 4883FE01                	cmp rsi, 1
 15577 0000B13A 740E                    	je .L_lambda_simple_params_end_0743
 15578 0000B13C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15579 0000B141 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15580 0000B145 48FFC6                  	inc rsi
 15581 0000B148 EBEC                    	jmp .L_lambda_simple_params_loop_0743
 15582                                  .L_lambda_simple_params_end_0743:
 15583 0000B14A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15584 0000B14D 4889C3                  	mov rbx, rax
 15585 0000B150 58                      	pop rax
 15586 0000B151 C60004                  	mov byte [rax], T_closure
 15587 0000B154 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15588 0000B158 48C74009[65B10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0743
 15589 0000B160 E992000000              	jmp .L_lambda_simple_end_0743
 15590                                  .L_lambda_simple_code_0743:	; lambda-simple body
 15591 0000B165 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15592 0000B16B 740B                    	je .L_lambda_simple_arity_check_ok_082b
 15593 0000B16D FF742410                	push qword [rsp + 8 * 2]
 15594 0000B171 6A02                    	push 2
 15595 0000B173 E971C30000              	jmp L_error_incorrect_arity_simple
 15596                                  .L_lambda_simple_arity_check_ok_082b:
 15597 0000B178 C8000000                	enter 0, 0
 15598                                  	; preparing a tail-call
 15599 0000B17C 488B4520                	mov rax, PARAM(0)	; param a
 15600 0000B180 50                      	push rax
 15601 0000B181 488B4528                	mov rax, PARAM(1)	; param b
 15602 0000B185 50                      	push rax
 15603 0000B186 6A02                    	push 2	; arg count
 15604 0000B188 488B4510                	mov rax, ENV
 15605 0000B18C 488B4010                	mov rax, qword [rax + 8 * 2]
 15606 0000B190 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15607 0000B193 803804                  	cmp byte [rax], T_closure
 15608 0000B196 0F85EBC20000            	jne L_error_non_closure
 15609 0000B19C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15610 0000B19F FF7508                  	push qword [rbp + 8 *1]
 15611 0000B1A2 4989C0                  	mov r8, rax
 15612 0000B1A5 488B5D18                	mov rbx, COUNT
 15613 0000B1A9 4883C303                	add rbx,3
 15614 0000B1AD 48C1E303                	shl rbx,3
 15615 0000B1B1 4801EB                  	add rbx, rbp
 15616 0000B1B4 488B6D00                	mov rbp, [rbp]
 15617 0000B1B8 B900000000              	mov rcx,0
 15618 0000B1BD BA05000000              	mov rdx, 5
 15619 0000B1C2 4889D0                  	mov rax, rdx
 15620 0000B1C5 48FFC8                  	dec rax
 15621 0000B1C8 48C1E003                	shl rax,3
 15622 0000B1CC 4801E0                  	add rax, rsp
 15623                                  	.L_tc_recycle_frame_loop_0954:
 15624 0000B1CF 4839D1                  	cmp rcx, rdx
 15625 0000B1D2 7414                    	je .L_tc_recycle_frame_done_0954
 15626 0000B1D4 4C8B08                  	mov r9, qword [rax]
 15627 0000B1D7 4C890B                  	mov qword [rbx],r9
 15628 0000B1DA 4883E808                	sub rax,8
 15629 0000B1DE 4883EB08                	sub rbx,8
 15630 0000B1E2 4883C101                	add rcx,1
 15631 0000B1E6 EBE7                    	jmp .L_tc_recycle_frame_loop_0954
 15632                                  	.L_tc_recycle_frame_done_0954:
 15633 0000B1E8 4883C308                	add rbx,8
 15634 0000B1EC 4889DC                  	mov rsp,rbx
 15635 0000B1EF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15636 0000B1F3 C9                      	leave
 15637 0000B1F4 C22000                  	ret AND_KILL_FRAME(2)
 15638                                  .L_lambda_simple_end_0743:	; new closure is in rax
 15639 0000B1F7 50                      	push rax
 15640 0000B1F8 6A01                    	push 1	; arg count
 15641 0000B1FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15642 0000B1FF E82CC30000              	call malloc
 15643 0000B204 50                      	push rax
 15644 0000B205 BF08000000              	mov rdi, 8 * 1	; new rib
 15645 0000B20A E821C30000              	call malloc
 15646 0000B20F 50                      	push rax
 15647 0000B210 BF30000000              	mov rdi, 8 * 6	; extended env
 15648 0000B215 E816C30000              	call malloc
 15649 0000B21A 488B7D10                	mov rdi, ENV
 15650 0000B21E BE00000000              	mov rsi, 0
 15651 0000B223 BA01000000              	mov rdx, 1
 15652                                  .L_lambda_simple_env_loop_0744:	; ext_env[i + 1] <-- env[i]
 15653 0000B228 4883FE05                	cmp rsi, 5
 15654 0000B22C 7410                    	je .L_lambda_simple_env_end_0744
 15655 0000B22E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15656 0000B232 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15657 0000B236 48FFC6                  	inc rsi
 15658 0000B239 48FFC2                  	inc rdx
 15659 0000B23C EBEA                    	jmp .L_lambda_simple_env_loop_0744
 15660                                  .L_lambda_simple_env_end_0744:
 15661 0000B23E 5B                      	pop rbx
 15662 0000B23F BE00000000              	mov rsi, 0
 15663                                  .L_lambda_simple_params_loop_0744:	; copy params
 15664 0000B244 4883FE01                	cmp rsi, 1
 15665 0000B248 740E                    	je .L_lambda_simple_params_end_0744
 15666 0000B24A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15667 0000B24F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15668 0000B253 48FFC6                  	inc rsi
 15669 0000B256 EBEC                    	jmp .L_lambda_simple_params_loop_0744
 15670                                  .L_lambda_simple_params_end_0744:
 15671 0000B258 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15672 0000B25B 4889C3                  	mov rbx, rax
 15673 0000B25E 58                      	pop rax
 15674 0000B25F C60004                  	mov byte [rax], T_closure
 15675 0000B262 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15676 0000B266 48C74009[73B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0744
 15677 0000B26E E9E6090000              	jmp .L_lambda_simple_end_0744
 15678                                  .L_lambda_simple_code_0744:	; lambda-simple body
 15679 0000B273 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15680 0000B279 740B                    	je .L_lambda_simple_arity_check_ok_082c
 15681 0000B27B FF742410                	push qword [rsp + 8 * 2]
 15682 0000B27F 6A01                    	push 1
 15683 0000B281 E963C20000              	jmp L_error_incorrect_arity_simple
 15684                                  .L_lambda_simple_arity_check_ok_082c:
 15685 0000B286 C8000000                	enter 0, 0
 15686                                  	; preparing a tail-call
 15687 0000B28A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15688 0000B28F E89CC20000              	call malloc
 15689 0000B294 50                      	push rax
 15690 0000B295 BF08000000              	mov rdi, 8 * 1	; new rib
 15691 0000B29A E891C20000              	call malloc
 15692 0000B29F 50                      	push rax
 15693 0000B2A0 BF38000000              	mov rdi, 8 * 7	; extended env
 15694 0000B2A5 E886C20000              	call malloc
 15695 0000B2AA 488B7D10                	mov rdi, ENV
 15696 0000B2AE BE00000000              	mov rsi, 0
 15697 0000B2B3 BA01000000              	mov rdx, 1
 15698                                  .L_lambda_simple_env_loop_0745:	; ext_env[i + 1] <-- env[i]
 15699 0000B2B8 4883FE06                	cmp rsi, 6
 15700 0000B2BC 7410                    	je .L_lambda_simple_env_end_0745
 15701 0000B2BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15702 0000B2C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15703 0000B2C6 48FFC6                  	inc rsi
 15704 0000B2C9 48FFC2                  	inc rdx
 15705 0000B2CC EBEA                    	jmp .L_lambda_simple_env_loop_0745
 15706                                  .L_lambda_simple_env_end_0745:
 15707 0000B2CE 5B                      	pop rbx
 15708 0000B2CF BE00000000              	mov rsi, 0
 15709                                  .L_lambda_simple_params_loop_0745:	; copy params
 15710 0000B2D4 4883FE01                	cmp rsi, 1
 15711 0000B2D8 740E                    	je .L_lambda_simple_params_end_0745
 15712 0000B2DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15713 0000B2DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15714 0000B2E3 48FFC6                  	inc rsi
 15715 0000B2E6 EBEC                    	jmp .L_lambda_simple_params_loop_0745
 15716                                  .L_lambda_simple_params_end_0745:
 15717 0000B2E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15718 0000B2EB 4889C3                  	mov rbx, rax
 15719 0000B2EE 58                      	pop rax
 15720 0000B2EF C60004                  	mov byte [rax], T_closure
 15721 0000B2F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15722 0000B2F6 48C74009[03B30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0745
 15723 0000B2FE E9B4000000              	jmp .L_lambda_simple_end_0745
 15724                                  .L_lambda_simple_code_0745:	; lambda-simple body
 15725 0000B303 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15726 0000B309 740B                    	je .L_lambda_simple_arity_check_ok_082d
 15727 0000B30B FF742410                	push qword [rsp + 8 * 2]
 15728 0000B30F 6A02                    	push 2
 15729 0000B311 E9D3C10000              	jmp L_error_incorrect_arity_simple
 15730                                  .L_lambda_simple_arity_check_ok_082d:
 15731 0000B316 C8000000                	enter 0, 0
 15732                                  	; preparing a tail-call
 15733                                  	; preparing a non-tail-call
 15734 0000B31A 488B4528                	mov rax, PARAM(1)	; param b
 15735 0000B31E 50                      	push rax
 15736 0000B31F 488B4520                	mov rax, PARAM(0)	; param a
 15737 0000B323 50                      	push rax
 15738 0000B324 6A02                    	push 2	; arg count
 15739 0000B326 488B4510                	mov rax, ENV
 15740 0000B32A 488B00                  	mov rax, qword [rax + 8 * 0]
 15741 0000B32D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15742 0000B330 803804                  	cmp byte [rax], T_closure
 15743 0000B333 0F854EC10000            	jne L_error_non_closure
 15744 0000B339 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15745 0000B33C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15746 0000B33F 50                      	push rax
 15747 0000B340 6A01                    	push 1	; arg count
 15748 0000B342 488B0425[64150000]      	mov rax, qword [free_var_106]	; free var not
 15749 0000B34A 803805                  	cmp byte [rax], T_undefined
 15750 0000B34D 0F84B0C00000            	je L_error_fvar_undefined
 15751 0000B353 803804                  	cmp byte [rax], T_closure
 15752 0000B356 0F852BC10000            	jne L_error_non_closure
 15753 0000B35C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15754 0000B35F FF7508                  	push qword [rbp + 8 *1]
 15755 0000B362 4989C0                  	mov r8, rax
 15756 0000B365 488B5D18                	mov rbx, COUNT
 15757 0000B369 4883C303                	add rbx,3
 15758 0000B36D 48C1E303                	shl rbx,3
 15759 0000B371 4801EB                  	add rbx, rbp
 15760 0000B374 488B6D00                	mov rbp, [rbp]
 15761 0000B378 B900000000              	mov rcx,0
 15762 0000B37D BA04000000              	mov rdx, 4
 15763 0000B382 4889D0                  	mov rax, rdx
 15764 0000B385 48FFC8                  	dec rax
 15765 0000B388 48C1E003                	shl rax,3
 15766 0000B38C 4801E0                  	add rax, rsp
 15767                                  	.L_tc_recycle_frame_loop_0956:
 15768 0000B38F 4839D1                  	cmp rcx, rdx
 15769 0000B392 7414                    	je .L_tc_recycle_frame_done_0956
 15770 0000B394 4C8B08                  	mov r9, qword [rax]
 15771 0000B397 4C890B                  	mov qword [rbx],r9
 15772 0000B39A 4883E808                	sub rax,8
 15773 0000B39E 4883EB08                	sub rbx,8
 15774 0000B3A2 4883C101                	add rcx,1
 15775 0000B3A6 EBE7                    	jmp .L_tc_recycle_frame_loop_0956
 15776                                  	.L_tc_recycle_frame_done_0956:
 15777 0000B3A8 4883C308                	add rbx,8
 15778 0000B3AC 4889DC                  	mov rsp,rbx
 15779 0000B3AF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 15780 0000B3B3 C9                      	leave
 15781 0000B3B4 C22000                  	ret AND_KILL_FRAME(2)
 15782                                  .L_lambda_simple_end_0745:	; new closure is in rax
 15783 0000B3B7 50                      	push rax
 15784 0000B3B8 6A01                    	push 1	; arg count
 15785 0000B3BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15786 0000B3BF E86CC10000              	call malloc
 15787 0000B3C4 50                      	push rax
 15788 0000B3C5 BF08000000              	mov rdi, 8 * 1	; new rib
 15789 0000B3CA E861C10000              	call malloc
 15790 0000B3CF 50                      	push rax
 15791 0000B3D0 BF38000000              	mov rdi, 8 * 7	; extended env
 15792 0000B3D5 E856C10000              	call malloc
 15793 0000B3DA 488B7D10                	mov rdi, ENV
 15794 0000B3DE BE00000000              	mov rsi, 0
 15795 0000B3E3 BA01000000              	mov rdx, 1
 15796                                  .L_lambda_simple_env_loop_0746:	; ext_env[i + 1] <-- env[i]
 15797 0000B3E8 4883FE06                	cmp rsi, 6
 15798 0000B3EC 7410                    	je .L_lambda_simple_env_end_0746
 15799 0000B3EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15800 0000B3F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15801 0000B3F6 48FFC6                  	inc rsi
 15802 0000B3F9 48FFC2                  	inc rdx
 15803 0000B3FC EBEA                    	jmp .L_lambda_simple_env_loop_0746
 15804                                  .L_lambda_simple_env_end_0746:
 15805 0000B3FE 5B                      	pop rbx
 15806 0000B3FF BE00000000              	mov rsi, 0
 15807                                  .L_lambda_simple_params_loop_0746:	; copy params
 15808 0000B404 4883FE01                	cmp rsi, 1
 15809 0000B408 740E                    	je .L_lambda_simple_params_end_0746
 15810 0000B40A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15811 0000B40F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15812 0000B413 48FFC6                  	inc rsi
 15813 0000B416 EBEC                    	jmp .L_lambda_simple_params_loop_0746
 15814                                  .L_lambda_simple_params_end_0746:
 15815 0000B418 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15816 0000B41B 4889C3                  	mov rbx, rax
 15817 0000B41E 58                      	pop rax
 15818 0000B41F C60004                  	mov byte [rax], T_closure
 15819 0000B422 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15820 0000B426 48C74009[33B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0746
 15821 0000B42E E9C2070000              	jmp .L_lambda_simple_end_0746
 15822                                  .L_lambda_simple_code_0746:	; lambda-simple body
 15823 0000B433 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15824 0000B439 740B                    	je .L_lambda_simple_arity_check_ok_082e
 15825 0000B43B FF742410                	push qword [rsp + 8 * 2]
 15826 0000B43F 6A01                    	push 1
 15827 0000B441 E9A3C00000              	jmp L_error_incorrect_arity_simple
 15828                                  .L_lambda_simple_arity_check_ok_082e:
 15829 0000B446 C8000000                	enter 0, 0
 15830                                  	; preparing a tail-call
 15831 0000B44A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15832 0000B44F E8DCC00000              	call malloc
 15833 0000B454 50                      	push rax
 15834 0000B455 BF08000000              	mov rdi, 8 * 1	; new rib
 15835 0000B45A E8D1C00000              	call malloc
 15836 0000B45F 50                      	push rax
 15837 0000B460 BF40000000              	mov rdi, 8 * 8	; extended env
 15838 0000B465 E8C6C00000              	call malloc
 15839 0000B46A 488B7D10                	mov rdi, ENV
 15840 0000B46E BE00000000              	mov rsi, 0
 15841 0000B473 BA01000000              	mov rdx, 1
 15842                                  .L_lambda_simple_env_loop_0747:	; ext_env[i + 1] <-- env[i]
 15843 0000B478 4883FE07                	cmp rsi, 7
 15844 0000B47C 7410                    	je .L_lambda_simple_env_end_0747
 15845 0000B47E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15846 0000B482 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15847 0000B486 48FFC6                  	inc rsi
 15848 0000B489 48FFC2                  	inc rdx
 15849 0000B48C EBEA                    	jmp .L_lambda_simple_env_loop_0747
 15850                                  .L_lambda_simple_env_end_0747:
 15851 0000B48E 5B                      	pop rbx
 15852 0000B48F BE00000000              	mov rsi, 0
 15853                                  .L_lambda_simple_params_loop_0747:	; copy params
 15854 0000B494 4883FE01                	cmp rsi, 1
 15855 0000B498 740E                    	je .L_lambda_simple_params_end_0747
 15856 0000B49A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15857 0000B49F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15858 0000B4A3 48FFC6                  	inc rsi
 15859 0000B4A6 EBEC                    	jmp .L_lambda_simple_params_loop_0747
 15860                                  .L_lambda_simple_params_end_0747:
 15861 0000B4A8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15862 0000B4AB 4889C3                  	mov rbx, rax
 15863 0000B4AE 58                      	pop rax
 15864 0000B4AF C60004                  	mov byte [rax], T_closure
 15865 0000B4B2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15866 0000B4B6 48C74009[C3B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0747
 15867 0000B4BE E939050000              	jmp .L_lambda_simple_end_0747
 15868                                  .L_lambda_simple_code_0747:	; lambda-simple body
 15869 0000B4C3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15870 0000B4C9 740B                    	je .L_lambda_simple_arity_check_ok_082f
 15871 0000B4CB FF742410                	push qword [rsp + 8 * 2]
 15872 0000B4CF 6A01                    	push 1
 15873 0000B4D1 E913C00000              	jmp L_error_incorrect_arity_simple
 15874                                  .L_lambda_simple_arity_check_ok_082f:
 15875 0000B4D6 C8000000                	enter 0, 0
 15876                                  	; preparing a tail-call
 15877 0000B4DA 48B8-                   	mov rax, L_constants + 1993
 15877 0000B4DC [C907000000000000] 
 15878 0000B4E4 50                      	push rax
 15879 0000B4E5 6A01                    	push 1	; arg count
 15880 0000B4E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15881 0000B4EC E83FC00000              	call malloc
 15882 0000B4F1 50                      	push rax
 15883 0000B4F2 BF08000000              	mov rdi, 8 * 1	; new rib
 15884 0000B4F7 E834C00000              	call malloc
 15885 0000B4FC 50                      	push rax
 15886 0000B4FD BF48000000              	mov rdi, 8 * 9	; extended env
 15887 0000B502 E829C00000              	call malloc
 15888 0000B507 488B7D10                	mov rdi, ENV
 15889 0000B50B BE00000000              	mov rsi, 0
 15890 0000B510 BA01000000              	mov rdx, 1
 15891                                  .L_lambda_simple_env_loop_0748:	; ext_env[i + 1] <-- env[i]
 15892 0000B515 4883FE08                	cmp rsi, 8
 15893 0000B519 7410                    	je .L_lambda_simple_env_end_0748
 15894 0000B51B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15895 0000B51F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15896 0000B523 48FFC6                  	inc rsi
 15897 0000B526 48FFC2                  	inc rdx
 15898 0000B529 EBEA                    	jmp .L_lambda_simple_env_loop_0748
 15899                                  .L_lambda_simple_env_end_0748:
 15900 0000B52B 5B                      	pop rbx
 15901 0000B52C BE00000000              	mov rsi, 0
 15902                                  .L_lambda_simple_params_loop_0748:	; copy params
 15903 0000B531 4883FE01                	cmp rsi, 1
 15904 0000B535 740E                    	je .L_lambda_simple_params_end_0748
 15905 0000B537 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15906 0000B53C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15907 0000B540 48FFC6                  	inc rsi
 15908 0000B543 EBEC                    	jmp .L_lambda_simple_params_loop_0748
 15909                                  .L_lambda_simple_params_end_0748:
 15910 0000B545 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15911 0000B548 4889C3                  	mov rbx, rax
 15912 0000B54B 58                      	pop rax
 15913 0000B54C C60004                  	mov byte [rax], T_closure
 15914 0000B54F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15915 0000B553 48C74009[60B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0748
 15916 0000B55B E938040000              	jmp .L_lambda_simple_end_0748
 15917                                  .L_lambda_simple_code_0748:	; lambda-simple body
 15918 0000B560 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15919 0000B566 740B                    	je .L_lambda_simple_arity_check_ok_0830
 15920 0000B568 FF742410                	push qword [rsp + 8 * 2]
 15921 0000B56C 6A01                    	push 1
 15922 0000B56E E976BF0000              	jmp L_error_incorrect_arity_simple
 15923                                  .L_lambda_simple_arity_check_ok_0830:
 15924 0000B573 C8000000                	enter 0, 0
 15925 0000B577 BF08000000              	mov rdi, 8
 15926 0000B57C E8AFBF0000              	call malloc
 15927 0000B581 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 15928 0000B585 488918                  	mov qword [rax], rbx
 15929 0000B588 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 15930 0000B58C 48B8-                   	mov rax, sob_void
 15930 0000B58E [0000000000000000] 
 15931                                  
 15932 0000B596 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15933 0000B59B E890BF0000              	call malloc
 15934 0000B5A0 50                      	push rax
 15935 0000B5A1 BF08000000              	mov rdi, 8 * 1	; new rib
 15936 0000B5A6 E885BF0000              	call malloc
 15937 0000B5AB 50                      	push rax
 15938 0000B5AC BF50000000              	mov rdi, 8 * 10	; extended env
 15939 0000B5B1 E87ABF0000              	call malloc
 15940 0000B5B6 488B7D10                	mov rdi, ENV
 15941 0000B5BA BE00000000              	mov rsi, 0
 15942 0000B5BF BA01000000              	mov rdx, 1
 15943                                  .L_lambda_simple_env_loop_0749:	; ext_env[i + 1] <-- env[i]
 15944 0000B5C4 4883FE09                	cmp rsi, 9
 15945 0000B5C8 7410                    	je .L_lambda_simple_env_end_0749
 15946 0000B5CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15947 0000B5CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15948 0000B5D2 48FFC6                  	inc rsi
 15949 0000B5D5 48FFC2                  	inc rdx
 15950 0000B5D8 EBEA                    	jmp .L_lambda_simple_env_loop_0749
 15951                                  .L_lambda_simple_env_end_0749:
 15952 0000B5DA 5B                      	pop rbx
 15953 0000B5DB BE00000000              	mov rsi, 0
 15954                                  .L_lambda_simple_params_loop_0749:	; copy params
 15955 0000B5E0 4883FE01                	cmp rsi, 1
 15956 0000B5E4 740E                    	je .L_lambda_simple_params_end_0749
 15957 0000B5E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15958 0000B5EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15959 0000B5EF 48FFC6                  	inc rsi
 15960 0000B5F2 EBEC                    	jmp .L_lambda_simple_params_loop_0749
 15961                                  .L_lambda_simple_params_end_0749:
 15962 0000B5F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15963 0000B5F7 4889C3                  	mov rbx, rax
 15964 0000B5FA 58                      	pop rax
 15965 0000B5FB C60004                  	mov byte [rax], T_closure
 15966 0000B5FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15967 0000B602 48C74009[0FB60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0749
 15968 0000B60A E976010000              	jmp .L_lambda_simple_end_0749
 15969                                  .L_lambda_simple_code_0749:	; lambda-simple body
 15970 0000B60F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15971 0000B615 740B                    	je .L_lambda_simple_arity_check_ok_0831
 15972 0000B617 FF742410                	push qword [rsp + 8 * 2]
 15973 0000B61B 6A02                    	push 2
 15974 0000B61D E9C7BE0000              	jmp L_error_incorrect_arity_simple
 15975                                  .L_lambda_simple_arity_check_ok_0831:
 15976 0000B622 C8000000                	enter 0, 0
 15977                                  	; preparing a non-tail-call
 15978 0000B626 488B4528                	mov rax, PARAM(1)	; param s
 15979 0000B62A 50                      	push rax
 15980 0000B62B 6A01                    	push 1	; arg count
 15981 0000B62D 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 15982 0000B635 803805                  	cmp byte [rax], T_undefined
 15983 0000B638 0F84C5BD0000            	je L_error_fvar_undefined
 15984 0000B63E 803804                  	cmp byte [rax], T_closure
 15985 0000B641 0F8540BE0000            	jne L_error_non_closure
 15986 0000B647 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15987 0000B64A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15988 0000B64D 483D[02000000]          	cmp rax, sob_boolean_false
 15989 0000B653 0F8528010000            	jne .L_if_end_05a4
 15990                                  	; preparing a non-tail-call
 15991                                  	; preparing a non-tail-call
 15992 0000B659 488B4528                	mov rax, PARAM(1)	; param s
 15993 0000B65D 50                      	push rax
 15994 0000B65E 6A01                    	push 1	; arg count
 15995 0000B660 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 15996 0000B668 803805                  	cmp byte [rax], T_undefined
 15997 0000B66B 0F8492BD0000            	je L_error_fvar_undefined
 15998 0000B671 803804                  	cmp byte [rax], T_closure
 15999 0000B674 0F850DBE0000            	jne L_error_non_closure
 16000 0000B67A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16001 0000B67D FF5009                  	call SOB_CLOSURE_CODE(rax)
 16002 0000B680 50                      	push rax
 16003 0000B681 488B4520                	mov rax, PARAM(0)	; param a
 16004 0000B685 50                      	push rax
 16005 0000B686 6A02                    	push 2	; arg count
 16006 0000B688 488B4510                	mov rax, ENV
 16007 0000B68C 488B4008                	mov rax, qword [rax + 8 * 1]
 16008 0000B690 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 16009 0000B693 803804                  	cmp byte [rax], T_closure
 16010 0000B696 0F85EBBD0000            	jne L_error_non_closure
 16011 0000B69C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16012 0000B69F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16013 0000B6A2 483D[02000000]          	cmp rax, sob_boolean_false
 16014 0000B6A8 0F84C1000000            	je .L_if_else_051f
 16015                                  	; preparing a tail-call
 16016                                  	; preparing a non-tail-call
 16017 0000B6AE 488B4528                	mov rax, PARAM(1)	; param s
 16018 0000B6B2 50                      	push rax
 16019 0000B6B3 6A01                    	push 1	; arg count
 16020 0000B6B5 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 16021 0000B6BD 803805                  	cmp byte [rax], T_undefined
 16022 0000B6C0 0F843DBD0000            	je L_error_fvar_undefined
 16023 0000B6C6 803804                  	cmp byte [rax], T_closure
 16024 0000B6C9 0F85B8BD0000            	jne L_error_non_closure
 16025 0000B6CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 16026 0000B6D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16027 0000B6D5 50                      	push rax
 16028                                  	; preparing a non-tail-call
 16029 0000B6D6 488B4528                	mov rax, PARAM(1)	; param s
 16030 0000B6DA 50                      	push rax
 16031 0000B6DB 6A01                    	push 1	; arg count
 16032 0000B6DD 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 16033 0000B6E5 803805                  	cmp byte [rax], T_undefined
 16034 0000B6E8 0F8415BD0000            	je L_error_fvar_undefined
 16035 0000B6EE 803804                  	cmp byte [rax], T_closure
 16036 0000B6F1 0F8590BD0000            	jne L_error_non_closure
 16037 0000B6F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16038 0000B6FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16039 0000B6FD 50                      	push rax
 16040 0000B6FE 6A02                    	push 2	; arg count
 16041 0000B700 488B4510                	mov rax, ENV
 16042 0000B704 488B00                  	mov rax, qword [rax + 8 * 0]
 16043 0000B707 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16044 0000B70A 488B00                  	mov rax, qword [rax]
 16045 0000B70D 803804                  	cmp byte [rax], T_closure
 16046 0000B710 0F8571BD0000            	jne L_error_non_closure
 16047 0000B716 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16048 0000B719 FF7508                  	push qword [rbp + 8 *1]
 16049 0000B71C 4989C0                  	mov r8, rax
 16050 0000B71F 488B5D18                	mov rbx, COUNT
 16051 0000B723 4883C303                	add rbx,3
 16052 0000B727 48C1E303                	shl rbx,3
 16053 0000B72B 4801EB                  	add rbx, rbp
 16054 0000B72E 488B6D00                	mov rbp, [rbp]
 16055 0000B732 B900000000              	mov rcx,0
 16056 0000B737 BA05000000              	mov rdx, 5
 16057 0000B73C 4889D0                  	mov rax, rdx
 16058 0000B73F 48FFC8                  	dec rax
 16059 0000B742 48C1E003                	shl rax,3
 16060 0000B746 4801E0                  	add rax, rsp
 16061                                  	.L_tc_recycle_frame_loop_0959:
 16062 0000B749 4839D1                  	cmp rcx, rdx
 16063 0000B74C 7414                    	je .L_tc_recycle_frame_done_0959
 16064 0000B74E 4C8B08                  	mov r9, qword [rax]
 16065 0000B751 4C890B                  	mov qword [rbx],r9
 16066 0000B754 4883E808                	sub rax,8
 16067 0000B758 4883EB08                	sub rbx,8
 16068 0000B75C 4883C101                	add rcx,1
 16069 0000B760 EBE7                    	jmp .L_tc_recycle_frame_loop_0959
 16070                                  	.L_tc_recycle_frame_done_0959:
 16071 0000B762 4883C308                	add rbx,8
 16072 0000B766 4889DC                  	mov rsp,rbx
 16073 0000B769 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16074 0000B76D EB0A                    	jmp .L_if_end_05a5
 16075                                  .L_if_else_051f:
 16076 0000B76F 48B8-                   	mov rax, L_constants + 2
 16076 0000B771 [0200000000000000] 
 16077                                  .L_if_end_05a5:
 16078 0000B779 483D[02000000]          	cmp rax, sob_boolean_false
 16079 0000B77F 7500                    	jne .L_if_end_05a4
 16080                                  .L_if_end_05a4:
 16081 0000B781 C9                      	leave
 16082 0000B782 C22000                  	ret AND_KILL_FRAME(2)
 16083                                  .L_lambda_simple_end_0749:	; new closure is in rax
 16084 0000B785 50                      	push rax
 16085 0000B786 488B4520                	mov rax, PARAM(0)	; param run
 16086 0000B78A 8F00                    	pop qword [rax]
 16087 0000B78C 48B8-                   	mov rax, sob_void
 16087 0000B78E [0000000000000000] 
 16088                                  
 16089 0000B796 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16090 0000B79B E890BD0000              	call malloc
 16091 0000B7A0 50                      	push rax
 16092 0000B7A1 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 16093 0000B7A5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16094 0000B7A9 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 16095 0000B7AE E87DBD0000              	call malloc
 16096 0000B7B3 50                      	push rax
 16097 0000B7B4 BF50000000              	mov rdi, 8 * 10	; extended env
 16098 0000B7B9 E872BD0000              	call malloc
 16099 0000B7BE 488B7D10                	mov rdi, ENV
 16100 0000B7C2 BE00000000              	mov rsi, 0
 16101 0000B7C7 BA01000000              	mov rdx, 1
 16102                                  .L_lambda_opt_env_loop_00e9:	; ext_env[i + 1] <-- env[i] copy all the array
 16103 0000B7CC 4883FE09                	cmp rsi, 9
 16104 0000B7D0 7410                    	je .L_lambda_opt_env_end_00e9
 16105 0000B7D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16106 0000B7D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16107 0000B7DA 48FFC6                  	inc rsi
 16108 0000B7DD 48FFC2                  	inc rdx
 16109 0000B7E0 EBEA                    	jmp .L_lambda_opt_env_loop_00e9
 16110                                  .L_lambda_opt_env_end_00e9:
 16111 0000B7E2 5B                      	pop rbx
 16112 0000B7E3 BE00000000              	mov rsi, 0
 16113                                  .L_lambda_opt_params_loop_02b9:	; copy params
 16114 0000B7E8 4883FE01                	cmp rsi, 1
 16115 0000B7EC 740E                    	je .L_lambda_opt_params_end_01d1
 16116 0000B7EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16117 0000B7F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16118 0000B7F7 48FFC6                  	inc rsi
 16119 0000B7FA EBEC                    	jmp .L_lambda_opt_params_loop_02b9
 16120                                  .L_lambda_opt_params_end_01d1:
 16121 0000B7FC 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 16122 0000B7FF 4889C3                  	mov rbx, rax
 16123 0000B802 58                      	pop rax
 16124 0000B803 C60004                  	mov byte [rax], T_closure
 16125 0000B806 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16126 0000B80A 48C74009[17B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00e9
 16127 0000B812 E97D010000              	jmp .L_lambda_opt_end_01d1
 16128                                  .L_lambda_opt_code_00e9:	; lambda-opt body
 16129 0000B817 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16130 0000B81D 7D0B                    	jge .L_lambda_simple_arity_check_ok_0832
 16131 0000B81F FF742410                	push qword [rsp + 8 * 2]
 16132 0000B823 6A01                    	push 1
 16133 0000B825 E9BFBC0000              	jmp L_error_incorrect_arity_simple
 16134                                  .L_lambda_simple_arity_check_ok_0832:
 16135 0000B82A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16136 0000B82F 4983E801                	sub r8, 1
 16137 0000B833 4C89C3                  	mov rbx,r8
 16138 0000B836 4983F800                	cmp r8, 0
 16139 0000B83A 7535                    	jne .L_lambda_opt_params_loop_02bb
 16140 0000B83C 488B542410              	mov rdx, qword [rsp + 8 * 2]
 16141 0000B841 4883C203                	add rdx , 3
 16142 0000B845 4883EC08                	sub rsp , 8
 16143 0000B849 4889E1                  	mov rcx, rsp
 16144                                  .L_lambda_opt_stack_adjusted_02ba: ;pushing down the stack of the current function
 16145 0000B84C 488B5908                	mov rbx, qword [rcx + 8 * 1]
 16146 0000B850 488919                  	mov qword[rcx] , rbx
 16147 0000B853 4883C108                	add rcx , 8
 16148 0000B857 48FFCA                  	dec rdx
 16149 0000B85A 4883FA00                	cmp rdx, 0
 16150 0000B85E 75EC                    	jne .L_lambda_opt_stack_adjusted_02ba
 16151 0000B860 48FF442410              	inc qword [rsp + 8 * 2]
 16152 0000B865 48C701[01000000]        	mov qword [rcx], sob_nil 
 16153 0000B86C E9A2000000              	jmp .L_lambda_opt_end_01d2
 16154                                  	.L_lambda_opt_params_loop_02bb:
 16155 0000B871 488B542410              	mov rdx, qword [rsp + 8*2]
 16156 0000B876 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 16157 0000B87B 4C89C2                  	mov rdx, r8
 16158 0000B87E 49B9-                   	mov r9, sob_nil
 16158 0000B880 [0100000000000000] 
 16159                                  	.L_lambda_opt_params_loop_02ba: ;loop for copying the opt into list
 16160 0000B888 BF11000000              	mov rdi, (1 + 8 + 8)
 16161 0000B88D E89EBC0000              	call malloc
 16162 0000B892 C60021                  	mov byte[rax], T_pair
 16163 0000B895 488B19                  	mov rbx, qword [rcx]
 16164 0000B898 48895801                	mov SOB_PAIR_CAR(rax), rbx
 16165 0000B89C 4C894809                	mov SOB_PAIR_CDR(rax), r9
 16166 0000B8A0 4989C1                  	mov r9, rax
 16167 0000B8A3 48FFCA                  	dec rdx
 16168 0000B8A6 4883E908                	sub rcx, 8
 16169 0000B8AA 4883FA00                	cmp rdx, 0
 16170 0000B8AE 75D8                    	jne .L_lambda_opt_params_loop_02ba
 16171 0000B8B0 488B542410              	mov rdx, qword [rsp + 8 * 2]
 16172 0000B8B5 4889E0                  	mov rax, rsp
 16173 0000B8B8 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 16174 0000B8BD 4C89C1                  	mov rcx, r8
 16175 0000B8C0 48FFC9                  	dec rcx
 16176 0000B8C3 4883C203                	add rdx, 3
 16177 0000B8C7 4829CA                  	sub rdx,rcx
 16178 0000B8CA 48C1E103                	shl rcx, 3
 16179                                  	.L_lambda_opt_stack_adjusted_02bb:
 16180 0000B8CE 4883FA00                	cmp rdx, 0
 16181 0000B8D2 7419                    	je .L_lambda_opt_params_end_01d2
 16182 0000B8D4 4889D8                  	mov rax, rbx
 16183 0000B8D7 4829C8                  	sub rax, rcx
 16184 0000B8DA 488B30                  	mov rsi, qword [rax]
 16185 0000B8DD 488933                  	mov [rbx], rsi
 16186 0000B8E0 4883EB08                	sub rbx, 8
 16187 0000B8E4 48FFCA                  	dec rdx
 16188 0000B8E7 4883FA00                	cmp rdx, 0
 16189 0000B8EB 75E1                    	jne .L_lambda_opt_stack_adjusted_02bb
 16190                                  	.L_lambda_opt_params_end_01d2:
 16191 0000B8ED 4801CC                  	add rsp,rcx
 16192 0000B8F0 BB01000000              	mov rbx, 1
 16193 0000B8F5 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 16194 0000B8FA 4883C303                	add rbx,3
 16195 0000B8FE 4C29C3                  	sub rbx,r8
 16196 0000B901 48C1E303                	shl rbx, 3
 16197 0000B905 4801E3                  	add rbx, rsp
 16198 0000B908 4C890B                  	mov qword[rbx] , r9
 16199 0000B90B 49FFC8                  	dec r8
 16200 0000B90E 4C29442410              	sub qword [rsp + 8 * 2], r8
 16201                                  	.L_lambda_opt_end_01d2:
 16202 0000B913 C8000000                	enter 0, 0
 16203                                  	; preparing a tail-call
 16204 0000B917 488B4528                	mov rax, PARAM(1)	; param s
 16205 0000B91B 50                      	push rax
 16206 0000B91C 488B4520                	mov rax, PARAM(0)	; param a
 16207 0000B920 50                      	push rax
 16208 0000B921 6A02                    	push 2	; arg count
 16209 0000B923 488B4510                	mov rax, ENV
 16210 0000B927 488B00                  	mov rax, qword [rax + 8 * 0]
 16211 0000B92A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16212 0000B92D 488B00                  	mov rax, qword [rax]
 16213 0000B930 803804                  	cmp byte [rax], T_closure
 16214 0000B933 0F854EBB0000            	jne L_error_non_closure
 16215 0000B939 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16216 0000B93C FF7508                  	push qword [rbp + 8 *1]
 16217 0000B93F 4989C0                  	mov r8, rax
 16218 0000B942 488B5D18                	mov rbx, COUNT
 16219 0000B946 4883C303                	add rbx,3
 16220 0000B94A 48C1E303                	shl rbx,3
 16221 0000B94E 4801EB                  	add rbx, rbp
 16222 0000B951 488B6D00                	mov rbp, [rbp]
 16223 0000B955 B900000000              	mov rcx,0
 16224 0000B95A BA05000000              	mov rdx, 5
 16225 0000B95F 4889D0                  	mov rax, rdx
 16226 0000B962 48FFC8                  	dec rax
 16227 0000B965 48C1E003                	shl rax,3
 16228 0000B969 4801E0                  	add rax, rsp
 16229                                  	.L_tc_recycle_frame_loop_095a:
 16230 0000B96C 4839D1                  	cmp rcx, rdx
 16231 0000B96F 7414                    	je .L_tc_recycle_frame_done_095a
 16232 0000B971 4C8B08                  	mov r9, qword [rax]
 16233 0000B974 4C890B                  	mov qword [rbx],r9
 16234 0000B977 4883E808                	sub rax,8
 16235 0000B97B 4883EB08                	sub rbx,8
 16236 0000B97F 4883C101                	add rcx,1
 16237 0000B983 EBE7                    	jmp .L_tc_recycle_frame_loop_095a
 16238                                  	.L_tc_recycle_frame_done_095a:
 16239 0000B985 4883C308                	add rbx,8
 16240 0000B989 4889DC                  	mov rsp,rbx
 16241 0000B98C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16242                                  	LEAVE
    49 0000B990 C9                  <1>  leave
 16243 0000B991 C22000                  	ret AND_KILL_FRAME(2)
 16244                                  .L_lambda_opt_end_01d1:
 16245 0000B994 C9                      	leave
 16246 0000B995 C21800                  	ret AND_KILL_FRAME(1)
 16247                                  .L_lambda_simple_end_0748:	; new closure is in rax
 16248 0000B998 803804                  	cmp byte [rax], T_closure
 16249 0000B99B 0F85E6BA0000            	jne L_error_non_closure
 16250 0000B9A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16251 0000B9A4 FF7508                  	push qword [rbp + 8 *1]
 16252 0000B9A7 4989C0                  	mov r8, rax
 16253 0000B9AA 488B5D18                	mov rbx, COUNT
 16254 0000B9AE 4883C303                	add rbx,3
 16255 0000B9B2 48C1E303                	shl rbx,3
 16256 0000B9B6 4801EB                  	add rbx, rbp
 16257 0000B9B9 488B6D00                	mov rbp, [rbp]
 16258 0000B9BD B900000000              	mov rcx,0
 16259 0000B9C2 BA04000000              	mov rdx, 4
 16260 0000B9C7 4889D0                  	mov rax, rdx
 16261 0000B9CA 48FFC8                  	dec rax
 16262 0000B9CD 48C1E003                	shl rax,3
 16263 0000B9D1 4801E0                  	add rax, rsp
 16264                                  	.L_tc_recycle_frame_loop_0958:
 16265 0000B9D4 4839D1                  	cmp rcx, rdx
 16266 0000B9D7 7414                    	je .L_tc_recycle_frame_done_0958
 16267 0000B9D9 4C8B08                  	mov r9, qword [rax]
 16268 0000B9DC 4C890B                  	mov qword [rbx],r9
 16269 0000B9DF 4883E808                	sub rax,8
 16270 0000B9E3 4883EB08                	sub rbx,8
 16271 0000B9E7 4883C101                	add rcx,1
 16272 0000B9EB EBE7                    	jmp .L_tc_recycle_frame_loop_0958
 16273                                  	.L_tc_recycle_frame_done_0958:
 16274 0000B9ED 4883C308                	add rbx,8
 16275 0000B9F1 4889DC                  	mov rsp,rbx
 16276 0000B9F4 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16277 0000B9F8 C9                      	leave
 16278 0000B9F9 C21800                  	ret AND_KILL_FRAME(1)
 16279                                  .L_lambda_simple_end_0747:	; new closure is in rax
 16280 0000B9FC 50                      	push rax
 16281 0000B9FD 6A01                    	push 1	; arg count
 16282 0000B9FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16283 0000BA04 E827BB0000              	call malloc
 16284 0000BA09 50                      	push rax
 16285 0000BA0A BF08000000              	mov rdi, 8 * 1	; new rib
 16286 0000BA0F E81CBB0000              	call malloc
 16287 0000BA14 50                      	push rax
 16288 0000BA15 BF40000000              	mov rdi, 8 * 8	; extended env
 16289 0000BA1A E811BB0000              	call malloc
 16290 0000BA1F 488B7D10                	mov rdi, ENV
 16291 0000BA23 BE00000000              	mov rsi, 0
 16292 0000BA28 BA01000000              	mov rdx, 1
 16293                                  .L_lambda_simple_env_loop_074a:	; ext_env[i + 1] <-- env[i]
 16294 0000BA2D 4883FE07                	cmp rsi, 7
 16295 0000BA31 7410                    	je .L_lambda_simple_env_end_074a
 16296 0000BA33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16297 0000BA37 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16298 0000BA3B 48FFC6                  	inc rsi
 16299 0000BA3E 48FFC2                  	inc rdx
 16300 0000BA41 EBEA                    	jmp .L_lambda_simple_env_loop_074a
 16301                                  .L_lambda_simple_env_end_074a:
 16302 0000BA43 5B                      	pop rbx
 16303 0000BA44 BE00000000              	mov rsi, 0
 16304                                  .L_lambda_simple_params_loop_074a:	; copy params
 16305 0000BA49 4883FE01                	cmp rsi, 1
 16306 0000BA4D 740E                    	je .L_lambda_simple_params_end_074a
 16307 0000BA4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16308 0000BA54 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16309 0000BA58 48FFC6                  	inc rsi
 16310 0000BA5B EBEC                    	jmp .L_lambda_simple_params_loop_074a
 16311                                  .L_lambda_simple_params_end_074a:
 16312 0000BA5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16313 0000BA60 4889C3                  	mov rbx, rax
 16314 0000BA63 58                      	pop rax
 16315 0000BA64 C60004                  	mov byte [rax], T_closure
 16316 0000BA67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16317 0000BA6B 48C74009[78BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074a
 16318 0000BA73 E919010000              	jmp .L_lambda_simple_end_074a
 16319                                  .L_lambda_simple_code_074a:	; lambda-simple body
 16320 0000BA78 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16321 0000BA7E 740B                    	je .L_lambda_simple_arity_check_ok_0833
 16322 0000BA80 FF742410                	push qword [rsp + 8 * 2]
 16323 0000BA84 6A01                    	push 1
 16324 0000BA86 E95EBA0000              	jmp L_error_incorrect_arity_simple
 16325                                  .L_lambda_simple_arity_check_ok_0833:
 16326 0000BA8B C8000000                	enter 0, 0
 16327                                  	; preparing a non-tail-call
 16328 0000BA8F 488B4510                	mov rax, ENV
 16329 0000BA93 488B4020                	mov rax, qword [rax + 8 * 4]
 16330 0000BA97 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 16331 0000BA9A 50                      	push rax
 16332 0000BA9B 6A01                    	push 1	; arg count
 16333 0000BA9D 488B4520                	mov rax, PARAM(0)	; param make-run
 16334 0000BAA1 803804                  	cmp byte [rax], T_closure
 16335 0000BAA4 0F85DDB90000            	jne L_error_non_closure
 16336 0000BAAA FF7001                  	push SOB_CLOSURE_ENV(rax)
 16337 0000BAAD FF5009                  	call SOB_CLOSURE_CODE(rax)
 16338 0000BAB0 48890425[9E0E0000]      	mov qword [free_var_4], rax
 16339 0000BAB8 48B8-                   	mov rax, sob_void
 16339 0000BABA [0000000000000000] 
 16340                                  
 16341                                  	; preparing a non-tail-call
 16342 0000BAC2 488B4510                	mov rax, ENV
 16343 0000BAC6 488B00                  	mov rax, qword [rax + 8 * 0]
 16344 0000BAC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 16345 0000BACC 50                      	push rax
 16346 0000BACD 6A01                    	push 1	; arg count
 16347 0000BACF 488B4520                	mov rax, PARAM(0)	; param make-run
 16348 0000BAD3 803804                  	cmp byte [rax], T_closure
 16349 0000BAD6 0F85ABB90000            	jne L_error_non_closure
 16350 0000BADC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16351 0000BADF FF5009                  	call SOB_CLOSURE_CODE(rax)
 16352 0000BAE2 48890425[AF0E0000]      	mov qword [free_var_5], rax
 16353 0000BAEA 48B8-                   	mov rax, sob_void
 16353 0000BAEC [0000000000000000] 
 16354                                  
 16355                                  	; preparing a non-tail-call
 16356 0000BAF4 488B4510                	mov rax, ENV
 16357 0000BAF8 488B4008                	mov rax, qword [rax + 8 * 1]
 16358 0000BAFC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 16359 0000BAFF 50                      	push rax
 16360 0000BB00 6A01                    	push 1	; arg count
 16361 0000BB02 488B4520                	mov rax, PARAM(0)	; param make-run
 16362 0000BB06 803804                  	cmp byte [rax], T_closure
 16363 0000BB09 0F8578B90000            	jne L_error_non_closure
 16364 0000BB0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16365 0000BB12 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16366 0000BB15 48890425[D10E0000]      	mov qword [free_var_7], rax
 16367 0000BB1D 48B8-                   	mov rax, sob_void
 16367 0000BB1F [0000000000000000] 
 16368                                  
 16369                                  	; preparing a non-tail-call
 16370 0000BB27 488B4510                	mov rax, ENV
 16371 0000BB2B 488B4010                	mov rax, qword [rax + 8 * 2]
 16372 0000BB2F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 16373 0000BB32 50                      	push rax
 16374 0000BB33 6A01                    	push 1	; arg count
 16375 0000BB35 488B4520                	mov rax, PARAM(0)	; param make-run
 16376 0000BB39 803804                  	cmp byte [rax], T_closure
 16377 0000BB3C 0F8545B90000            	jne L_error_non_closure
 16378 0000BB42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16379 0000BB45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16380 0000BB48 48890425[E20E0000]      	mov qword [free_var_8], rax
 16381 0000BB50 48B8-                   	mov rax, sob_void
 16381 0000BB52 [0000000000000000] 
 16382                                  
 16383                                  	; preparing a non-tail-call
 16384 0000BB5A 488B4510                	mov rax, ENV
 16385 0000BB5E 488B4018                	mov rax, qword [rax + 8 * 3]
 16386 0000BB62 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 16387 0000BB65 50                      	push rax
 16388 0000BB66 6A01                    	push 1	; arg count
 16389 0000BB68 488B4520                	mov rax, PARAM(0)	; param make-run
 16390 0000BB6C 803804                  	cmp byte [rax], T_closure
 16391 0000BB6F 0F8512B90000            	jne L_error_non_closure
 16392 0000BB75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16393 0000BB78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16394 0000BB7B 48890425[C00E0000]      	mov qword [free_var_6], rax
 16395 0000BB83 48B8-                   	mov rax, sob_void
 16395 0000BB85 [0000000000000000] 
 16396 0000BB8D C9                      	leave
 16397 0000BB8E C21800                  	ret AND_KILL_FRAME(1)
 16398                                  .L_lambda_simple_end_074a:	; new closure is in rax
 16399 0000BB91 803804                  	cmp byte [rax], T_closure
 16400 0000BB94 0F85EDB80000            	jne L_error_non_closure
 16401 0000BB9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16402 0000BB9D FF7508                  	push qword [rbp + 8 *1]
 16403 0000BBA0 4989C0                  	mov r8, rax
 16404 0000BBA3 488B5D18                	mov rbx, COUNT
 16405 0000BBA7 4883C303                	add rbx,3
 16406 0000BBAB 48C1E303                	shl rbx,3
 16407 0000BBAF 4801EB                  	add rbx, rbp
 16408 0000BBB2 488B6D00                	mov rbp, [rbp]
 16409 0000BBB6 B900000000              	mov rcx,0
 16410 0000BBBB BA04000000              	mov rdx, 4
 16411 0000BBC0 4889D0                  	mov rax, rdx
 16412 0000BBC3 48FFC8                  	dec rax
 16413 0000BBC6 48C1E003                	shl rax,3
 16414 0000BBCA 4801E0                  	add rax, rsp
 16415                                  	.L_tc_recycle_frame_loop_0957:
 16416 0000BBCD 4839D1                  	cmp rcx, rdx
 16417 0000BBD0 7414                    	je .L_tc_recycle_frame_done_0957
 16418 0000BBD2 4C8B08                  	mov r9, qword [rax]
 16419 0000BBD5 4C890B                  	mov qword [rbx],r9
 16420 0000BBD8 4883E808                	sub rax,8
 16421 0000BBDC 4883EB08                	sub rbx,8
 16422 0000BBE0 4883C101                	add rcx,1
 16423 0000BBE4 EBE7                    	jmp .L_tc_recycle_frame_loop_0957
 16424                                  	.L_tc_recycle_frame_done_0957:
 16425 0000BBE6 4883C308                	add rbx,8
 16426 0000BBEA 4889DC                  	mov rsp,rbx
 16427 0000BBED 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16428 0000BBF1 C9                      	leave
 16429 0000BBF2 C21800                  	ret AND_KILL_FRAME(1)
 16430                                  .L_lambda_simple_end_0746:	; new closure is in rax
 16431 0000BBF5 803804                  	cmp byte [rax], T_closure
 16432 0000BBF8 0F8589B80000            	jne L_error_non_closure
 16433 0000BBFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16434 0000BC01 FF7508                  	push qword [rbp + 8 *1]
 16435 0000BC04 4989C0                  	mov r8, rax
 16436 0000BC07 488B5D18                	mov rbx, COUNT
 16437 0000BC0B 4883C303                	add rbx,3
 16438 0000BC0F 48C1E303                	shl rbx,3
 16439 0000BC13 4801EB                  	add rbx, rbp
 16440 0000BC16 488B6D00                	mov rbp, [rbp]
 16441 0000BC1A B900000000              	mov rcx,0
 16442 0000BC1F BA04000000              	mov rdx, 4
 16443 0000BC24 4889D0                  	mov rax, rdx
 16444 0000BC27 48FFC8                  	dec rax
 16445 0000BC2A 48C1E003                	shl rax,3
 16446 0000BC2E 4801E0                  	add rax, rsp
 16447                                  	.L_tc_recycle_frame_loop_0955:
 16448 0000BC31 4839D1                  	cmp rcx, rdx
 16449 0000BC34 7414                    	je .L_tc_recycle_frame_done_0955
 16450 0000BC36 4C8B08                  	mov r9, qword [rax]
 16451 0000BC39 4C890B                  	mov qword [rbx],r9
 16452 0000BC3C 4883E808                	sub rax,8
 16453 0000BC40 4883EB08                	sub rbx,8
 16454 0000BC44 4883C101                	add rcx,1
 16455 0000BC48 EBE7                    	jmp .L_tc_recycle_frame_loop_0955
 16456                                  	.L_tc_recycle_frame_done_0955:
 16457 0000BC4A 4883C308                	add rbx,8
 16458 0000BC4E 4889DC                  	mov rsp,rbx
 16459 0000BC51 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16460 0000BC55 C9                      	leave
 16461 0000BC56 C21800                  	ret AND_KILL_FRAME(1)
 16462                                  .L_lambda_simple_end_0744:	; new closure is in rax
 16463 0000BC59 803804                  	cmp byte [rax], T_closure
 16464 0000BC5C 0F8525B80000            	jne L_error_non_closure
 16465 0000BC62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16466 0000BC65 FF7508                  	push qword [rbp + 8 *1]
 16467 0000BC68 4989C0                  	mov r8, rax
 16468 0000BC6B 488B5D18                	mov rbx, COUNT
 16469 0000BC6F 4883C303                	add rbx,3
 16470 0000BC73 48C1E303                	shl rbx,3
 16471 0000BC77 4801EB                  	add rbx, rbp
 16472 0000BC7A 488B6D00                	mov rbp, [rbp]
 16473 0000BC7E B900000000              	mov rcx,0
 16474 0000BC83 BA04000000              	mov rdx, 4
 16475 0000BC88 4889D0                  	mov rax, rdx
 16476 0000BC8B 48FFC8                  	dec rax
 16477 0000BC8E 48C1E003                	shl rax,3
 16478 0000BC92 4801E0                  	add rax, rsp
 16479                                  	.L_tc_recycle_frame_loop_0953:
 16480 0000BC95 4839D1                  	cmp rcx, rdx
 16481 0000BC98 7414                    	je .L_tc_recycle_frame_done_0953
 16482 0000BC9A 4C8B08                  	mov r9, qword [rax]
 16483 0000BC9D 4C890B                  	mov qword [rbx],r9
 16484 0000BCA0 4883E808                	sub rax,8
 16485 0000BCA4 4883EB08                	sub rbx,8
 16486 0000BCA8 4883C101                	add rcx,1
 16487 0000BCAC EBE7                    	jmp .L_tc_recycle_frame_loop_0953
 16488                                  	.L_tc_recycle_frame_done_0953:
 16489 0000BCAE 4883C308                	add rbx,8
 16490 0000BCB2 4889DC                  	mov rsp,rbx
 16491 0000BCB5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16492 0000BCB9 C9                      	leave
 16493 0000BCBA C21800                  	ret AND_KILL_FRAME(1)
 16494                                  .L_lambda_simple_end_0742:	; new closure is in rax
 16495 0000BCBD 803804                  	cmp byte [rax], T_closure
 16496 0000BCC0 0F85C1B70000            	jne L_error_non_closure
 16497 0000BCC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16498 0000BCC9 FF7508                  	push qword [rbp + 8 *1]
 16499 0000BCCC 4989C0                  	mov r8, rax
 16500 0000BCCF 488B5D18                	mov rbx, COUNT
 16501 0000BCD3 4883C303                	add rbx,3
 16502 0000BCD7 48C1E303                	shl rbx,3
 16503 0000BCDB 4801EB                  	add rbx, rbp
 16504 0000BCDE 488B6D00                	mov rbp, [rbp]
 16505 0000BCE2 B900000000              	mov rcx,0
 16506 0000BCE7 BA04000000              	mov rdx, 4
 16507 0000BCEC 4889D0                  	mov rax, rdx
 16508 0000BCEF 48FFC8                  	dec rax
 16509 0000BCF2 48C1E003                	shl rax,3
 16510 0000BCF6 4801E0                  	add rax, rsp
 16511                                  	.L_tc_recycle_frame_loop_0951:
 16512 0000BCF9 4839D1                  	cmp rcx, rdx
 16513 0000BCFC 7414                    	je .L_tc_recycle_frame_done_0951
 16514 0000BCFE 4C8B08                  	mov r9, qword [rax]
 16515 0000BD01 4C890B                  	mov qword [rbx],r9
 16516 0000BD04 4883E808                	sub rax,8
 16517 0000BD08 4883EB08                	sub rbx,8
 16518 0000BD0C 4883C101                	add rcx,1
 16519 0000BD10 EBE7                    	jmp .L_tc_recycle_frame_loop_0951
 16520                                  	.L_tc_recycle_frame_done_0951:
 16521 0000BD12 4883C308                	add rbx,8
 16522 0000BD16 4889DC                  	mov rsp,rbx
 16523 0000BD19 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16524 0000BD1D C9                      	leave
 16525 0000BD1E C21800                  	ret AND_KILL_FRAME(1)
 16526                                  .L_lambda_simple_end_0740:	; new closure is in rax
 16527 0000BD21 803804                  	cmp byte [rax], T_closure
 16528 0000BD24 0F855DB70000            	jne L_error_non_closure
 16529 0000BD2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16530 0000BD2D FF7508                  	push qword [rbp + 8 *1]
 16531 0000BD30 4989C0                  	mov r8, rax
 16532 0000BD33 488B5D18                	mov rbx, COUNT
 16533 0000BD37 4883C303                	add rbx,3
 16534 0000BD3B 48C1E303                	shl rbx,3
 16535 0000BD3F 4801EB                  	add rbx, rbp
 16536 0000BD42 488B6D00                	mov rbp, [rbp]
 16537 0000BD46 B900000000              	mov rcx,0
 16538 0000BD4B BA04000000              	mov rdx, 4
 16539 0000BD50 4889D0                  	mov rax, rdx
 16540 0000BD53 48FFC8                  	dec rax
 16541 0000BD56 48C1E003                	shl rax,3
 16542 0000BD5A 4801E0                  	add rax, rsp
 16543                                  	.L_tc_recycle_frame_loop_0950:
 16544 0000BD5D 4839D1                  	cmp rcx, rdx
 16545 0000BD60 7414                    	je .L_tc_recycle_frame_done_0950
 16546 0000BD62 4C8B08                  	mov r9, qword [rax]
 16547 0000BD65 4C890B                  	mov qword [rbx],r9
 16548 0000BD68 4883E808                	sub rax,8
 16549 0000BD6C 4883EB08                	sub rbx,8
 16550 0000BD70 4883C101                	add rcx,1
 16551 0000BD74 EBE7                    	jmp .L_tc_recycle_frame_loop_0950
 16552                                  	.L_tc_recycle_frame_done_0950:
 16553 0000BD76 4883C308                	add rbx,8
 16554 0000BD7A 4889DC                  	mov rsp,rbx
 16555 0000BD7D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16556 0000BD81 C9                      	leave
 16557 0000BD82 C21800                  	ret AND_KILL_FRAME(1)
 16558                                  .L_lambda_simple_end_073f:	; new closure is in rax
 16559 0000BD85 803804                  	cmp byte [rax], T_closure
 16560 0000BD88 0F85F9B60000            	jne L_error_non_closure
 16561 0000BD8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16562 0000BD91 FF7508                  	push qword [rbp + 8 *1]
 16563 0000BD94 4989C0                  	mov r8, rax
 16564 0000BD97 488B5D18                	mov rbx, COUNT
 16565 0000BD9B 4883C303                	add rbx,3
 16566 0000BD9F 48C1E303                	shl rbx,3
 16567 0000BDA3 4801EB                  	add rbx, rbp
 16568 0000BDA6 488B6D00                	mov rbp, [rbp]
 16569 0000BDAA B900000000              	mov rcx,0
 16570 0000BDAF BA04000000              	mov rdx, 4
 16571 0000BDB4 4889D0                  	mov rax, rdx
 16572 0000BDB7 48FFC8                  	dec rax
 16573 0000BDBA 48C1E003                	shl rax,3
 16574 0000BDBE 4801E0                  	add rax, rsp
 16575                                  	.L_tc_recycle_frame_loop_094f:
 16576 0000BDC1 4839D1                  	cmp rcx, rdx
 16577 0000BDC4 7414                    	je .L_tc_recycle_frame_done_094f
 16578 0000BDC6 4C8B08                  	mov r9, qword [rax]
 16579 0000BDC9 4C890B                  	mov qword [rbx],r9
 16580 0000BDCC 4883E808                	sub rax,8
 16581 0000BDD0 4883EB08                	sub rbx,8
 16582 0000BDD4 4883C101                	add rcx,1
 16583 0000BDD8 EBE7                    	jmp .L_tc_recycle_frame_loop_094f
 16584                                  	.L_tc_recycle_frame_done_094f:
 16585 0000BDDA 4883C308                	add rbx,8
 16586 0000BDDE 4889DC                  	mov rsp,rbx
 16587 0000BDE1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16588 0000BDE5 C9                      	leave
 16589 0000BDE6 C21800                  	ret AND_KILL_FRAME(1)
 16590                                  .L_lambda_simple_end_073e:	; new closure is in rax
 16591 0000BDE9 803804                  	cmp byte [rax], T_closure
 16592 0000BDEC 0F8595B60000            	jne L_error_non_closure
 16593 0000BDF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16594 0000BDF5 FF7508                  	push qword [rbp + 8 *1]
 16595 0000BDF8 4989C0                  	mov r8, rax
 16596 0000BDFB 488B5D18                	mov rbx, COUNT
 16597 0000BDFF 4883C303                	add rbx,3
 16598 0000BE03 48C1E303                	shl rbx,3
 16599 0000BE07 4801EB                  	add rbx, rbp
 16600 0000BE0A 488B6D00                	mov rbp, [rbp]
 16601 0000BE0E B900000000              	mov rcx,0
 16602 0000BE13 BA04000000              	mov rdx, 4
 16603 0000BE18 4889D0                  	mov rax, rdx
 16604 0000BE1B 48FFC8                  	dec rax
 16605 0000BE1E 48C1E003                	shl rax,3
 16606 0000BE22 4801E0                  	add rax, rsp
 16607                                  	.L_tc_recycle_frame_loop_0941:
 16608 0000BE25 4839D1                  	cmp rcx, rdx
 16609 0000BE28 7414                    	je .L_tc_recycle_frame_done_0941
 16610 0000BE2A 4C8B08                  	mov r9, qword [rax]
 16611 0000BE2D 4C890B                  	mov qword [rbx],r9
 16612 0000BE30 4883E808                	sub rax,8
 16613 0000BE34 4883EB08                	sub rbx,8
 16614 0000BE38 4883C101                	add rcx,1
 16615 0000BE3C EBE7                    	jmp .L_tc_recycle_frame_loop_0941
 16616                                  	.L_tc_recycle_frame_done_0941:
 16617 0000BE3E 4883C308                	add rbx,8
 16618 0000BE42 4889DC                  	mov rsp,rbx
 16619 0000BE45 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16620 0000BE49 C9                      	leave
 16621 0000BE4A C21800                  	ret AND_KILL_FRAME(1)
 16622                                  .L_lambda_simple_end_073b:	; new closure is in rax
 16623 0000BE4D 803804                  	cmp byte [rax], T_closure
 16624 0000BE50 0F8531B60000            	jne L_error_non_closure
 16625 0000BE56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16626 0000BE59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16627                                  
 16628 0000BE5C 4889C7                  	mov rdi, rax
 16629 0000BE5F E821B90000              	call print_sexpr_if_not_void
 16630 0000BE64 48B8-                   	mov rax, L_constants + 0
 16630 0000BE66 [0000000000000000] 
 16631 0000BE6E 48890425[44130000]      	mov qword [free_var_74], rax
 16632 0000BE76 48B8-                   	mov rax, sob_void
 16632 0000BE78 [0000000000000000] 
 16633                                  
 16634 0000BE80 4889C7                  	mov rdi, rax
 16635 0000BE83 E8FDB80000              	call print_sexpr_if_not_void
 16636 0000BE88 48B8-                   	mov rax, L_constants + 0
 16636 0000BE8A [0000000000000000] 
 16637 0000BE92 48890425[33130000]      	mov qword [free_var_73], rax
 16638 0000BE9A 48B8-                   	mov rax, sob_void
 16638 0000BE9C [0000000000000000] 
 16639                                  
 16640 0000BEA4 4889C7                  	mov rdi, rax
 16641 0000BEA7 E8D9B80000              	call print_sexpr_if_not_void
 16642 0000BEAC 48B8-                   	mov rax, L_constants + 0
 16642 0000BEAE [0000000000000000] 
 16643 0000BEB6 48890425[55130000]      	mov qword [free_var_75], rax
 16644 0000BEBE 48B8-                   	mov rax, sob_void
 16644 0000BEC0 [0000000000000000] 
 16645                                  
 16646 0000BEC8 4889C7                  	mov rdi, rax
 16647 0000BECB E8B5B80000              	call print_sexpr_if_not_void
 16648 0000BED0 48B8-                   	mov rax, L_constants + 0
 16648 0000BED2 [0000000000000000] 
 16649 0000BEDA 48890425[77130000]      	mov qword [free_var_77], rax
 16650 0000BEE2 48B8-                   	mov rax, sob_void
 16650 0000BEE4 [0000000000000000] 
 16651                                  
 16652 0000BEEC 4889C7                  	mov rdi, rax
 16653 0000BEEF E891B80000              	call print_sexpr_if_not_void
 16654 0000BEF4 48B8-                   	mov rax, L_constants + 0
 16654 0000BEF6 [0000000000000000] 
 16655 0000BEFE 48890425[66130000]      	mov qword [free_var_76], rax
 16656 0000BF06 48B8-                   	mov rax, sob_void
 16656 0000BF08 [0000000000000000] 
 16657                                  
 16658 0000BF10 4889C7                  	mov rdi, rax
 16659 0000BF13 E86DB80000              	call print_sexpr_if_not_void
 16660                                  	; preparing a non-tail-call
 16661 0000BF18 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16662 0000BF1D E80EB60000              	call malloc
 16663 0000BF22 50                      	push rax
 16664 0000BF23 BF00000000              	mov rdi, 8 * 0	; new rib
 16665 0000BF28 E803B60000              	call malloc
 16666 0000BF2D 50                      	push rax
 16667 0000BF2E BF08000000              	mov rdi, 8 * 1	; extended env
 16668 0000BF33 E8F8B50000              	call malloc
 16669 0000BF38 488B7D10                	mov rdi, ENV
 16670 0000BF3C BE00000000              	mov rsi, 0
 16671 0000BF41 BA01000000              	mov rdx, 1
 16672                                  .L_lambda_simple_env_loop_074b:	; ext_env[i + 1] <-- env[i]
 16673 0000BF46 4883FE00                	cmp rsi, 0
 16674 0000BF4A 7410                    	je .L_lambda_simple_env_end_074b
 16675 0000BF4C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16676 0000BF50 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16677 0000BF54 48FFC6                  	inc rsi
 16678 0000BF57 48FFC2                  	inc rdx
 16679 0000BF5A EBEA                    	jmp .L_lambda_simple_env_loop_074b
 16680                                  .L_lambda_simple_env_end_074b:
 16681 0000BF5C 5B                      	pop rbx
 16682 0000BF5D BE00000000              	mov rsi, 0
 16683                                  .L_lambda_simple_params_loop_074b:	; copy params
 16684 0000BF62 4883FE00                	cmp rsi, 0
 16685 0000BF66 740E                    	je .L_lambda_simple_params_end_074b
 16686 0000BF68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16687 0000BF6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16688 0000BF71 48FFC6                  	inc rsi
 16689 0000BF74 EBEC                    	jmp .L_lambda_simple_params_loop_074b
 16690                                  .L_lambda_simple_params_end_074b:
 16691 0000BF76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16692 0000BF79 4889C3                  	mov rbx, rax
 16693 0000BF7C 58                      	pop rax
 16694 0000BF7D C60004                  	mov byte [rax], T_closure
 16695 0000BF80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16696 0000BF84 48C74009[91BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074b
 16697 0000BF8C E958020000              	jmp .L_lambda_simple_end_074b
 16698                                  .L_lambda_simple_code_074b:	; lambda-simple body
 16699 0000BF91 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16700 0000BF97 740B                    	je .L_lambda_simple_arity_check_ok_0834
 16701 0000BF99 FF742410                	push qword [rsp + 8 * 2]
 16702 0000BF9D 6A01                    	push 1
 16703 0000BF9F E945B50000              	jmp L_error_incorrect_arity_simple
 16704                                  .L_lambda_simple_arity_check_ok_0834:
 16705 0000BFA4 C8000000                	enter 0, 0
 16706 0000BFA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16707 0000BFAD E87EB50000              	call malloc
 16708 0000BFB2 50                      	push rax
 16709 0000BFB3 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 16710 0000BFB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16711 0000BFBB BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 16712 0000BFC0 E86BB50000              	call malloc
 16713 0000BFC5 50                      	push rax
 16714 0000BFC6 BF10000000              	mov rdi, 8 * 2	; extended env
 16715 0000BFCB E860B50000              	call malloc
 16716 0000BFD0 488B7D10                	mov rdi, ENV
 16717 0000BFD4 BE00000000              	mov rsi, 0
 16718 0000BFD9 BA01000000              	mov rdx, 1
 16719                                  .L_lambda_opt_env_loop_00ea:	; ext_env[i + 1] <-- env[i] copy all the array
 16720 0000BFDE 4883FE01                	cmp rsi, 1
 16721 0000BFE2 7410                    	je .L_lambda_opt_env_end_00ea
 16722 0000BFE4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16723 0000BFE8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16724 0000BFEC 48FFC6                  	inc rsi
 16725 0000BFEF 48FFC2                  	inc rdx
 16726 0000BFF2 EBEA                    	jmp .L_lambda_opt_env_loop_00ea
 16727                                  .L_lambda_opt_env_end_00ea:
 16728 0000BFF4 5B                      	pop rbx
 16729 0000BFF5 BE00000000              	mov rsi, 0
 16730                                  .L_lambda_opt_params_loop_02bc:	; copy params
 16731 0000BFFA 4883FE01                	cmp rsi, 1
 16732 0000BFFE 740E                    	je .L_lambda_opt_params_end_01d3
 16733 0000C000 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16734 0000C005 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16735 0000C009 48FFC6                  	inc rsi
 16736 0000C00C EBEC                    	jmp .L_lambda_opt_params_loop_02bc
 16737                                  .L_lambda_opt_params_end_01d3:
 16738 0000C00E 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 16739 0000C011 4889C3                  	mov rbx, rax
 16740 0000C014 58                      	pop rax
 16741 0000C015 C60004                  	mov byte [rax], T_closure
 16742 0000C018 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16743 0000C01C 48C74009[29C00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00ea
 16744 0000C024 E9BC010000              	jmp .L_lambda_opt_end_01d3
 16745                                  .L_lambda_opt_code_00ea:	; lambda-opt body
 16746 0000C029 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16747 0000C02F 7D0B                    	jge .L_lambda_simple_arity_check_ok_0835
 16748 0000C031 FF742410                	push qword [rsp + 8 * 2]
 16749 0000C035 6A00                    	push 0
 16750 0000C037 E9ADB40000              	jmp L_error_incorrect_arity_simple
 16751                                  .L_lambda_simple_arity_check_ok_0835:
 16752 0000C03C 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16753 0000C041 4983E800                	sub r8, 0
 16754 0000C045 4C89C3                  	mov rbx,r8
 16755 0000C048 4983F800                	cmp r8, 0
 16756 0000C04C 7535                    	jne .L_lambda_opt_params_loop_02be
 16757 0000C04E 488B542410              	mov rdx, qword [rsp + 8 * 2]
 16758 0000C053 4883C203                	add rdx , 3
 16759 0000C057 4883EC08                	sub rsp , 8
 16760 0000C05B 4889E1                  	mov rcx, rsp
 16761                                  .L_lambda_opt_stack_adjusted_02bd: ;pushing down the stack of the current function
 16762 0000C05E 488B5908                	mov rbx, qword [rcx + 8 * 1]
 16763 0000C062 488919                  	mov qword[rcx] , rbx
 16764 0000C065 4883C108                	add rcx , 8
 16765 0000C069 48FFCA                  	dec rdx
 16766 0000C06C 4883FA00                	cmp rdx, 0
 16767 0000C070 75EC                    	jne .L_lambda_opt_stack_adjusted_02bd
 16768 0000C072 48FF442410              	inc qword [rsp + 8 * 2]
 16769 0000C077 48C701[01000000]        	mov qword [rcx], sob_nil 
 16770 0000C07E E9A2000000              	jmp .L_lambda_opt_end_01d4
 16771                                  	.L_lambda_opt_params_loop_02be:
 16772 0000C083 488B542410              	mov rdx, qword [rsp + 8*2]
 16773 0000C088 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 16774 0000C08D 4C89C2                  	mov rdx, r8
 16775 0000C090 49B9-                   	mov r9, sob_nil
 16775 0000C092 [0100000000000000] 
 16776                                  	.L_lambda_opt_params_loop_02bd: ;loop for copying the opt into list
 16777 0000C09A BF11000000              	mov rdi, (1 + 8 + 8)
 16778 0000C09F E88CB40000              	call malloc
 16779 0000C0A4 C60021                  	mov byte[rax], T_pair
 16780 0000C0A7 488B19                  	mov rbx, qword [rcx]
 16781 0000C0AA 48895801                	mov SOB_PAIR_CAR(rax), rbx
 16782 0000C0AE 4C894809                	mov SOB_PAIR_CDR(rax), r9
 16783 0000C0B2 4989C1                  	mov r9, rax
 16784 0000C0B5 48FFCA                  	dec rdx
 16785 0000C0B8 4883E908                	sub rcx, 8
 16786 0000C0BC 4883FA00                	cmp rdx, 0
 16787 0000C0C0 75D8                    	jne .L_lambda_opt_params_loop_02bd
 16788 0000C0C2 488B542410              	mov rdx, qword [rsp + 8 * 2]
 16789 0000C0C7 4889E0                  	mov rax, rsp
 16790 0000C0CA 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 16791 0000C0CF 4C89C1                  	mov rcx, r8
 16792 0000C0D2 48FFC9                  	dec rcx
 16793 0000C0D5 4883C203                	add rdx, 3
 16794 0000C0D9 4829CA                  	sub rdx,rcx
 16795 0000C0DC 48C1E103                	shl rcx, 3
 16796                                  	.L_lambda_opt_stack_adjusted_02be:
 16797 0000C0E0 4883FA00                	cmp rdx, 0
 16798 0000C0E4 7419                    	je .L_lambda_opt_params_end_01d4
 16799 0000C0E6 4889D8                  	mov rax, rbx
 16800 0000C0E9 4829C8                  	sub rax, rcx
 16801 0000C0EC 488B30                  	mov rsi, qword [rax]
 16802 0000C0EF 488933                  	mov [rbx], rsi
 16803 0000C0F2 4883EB08                	sub rbx, 8
 16804 0000C0F6 48FFCA                  	dec rdx
 16805 0000C0F9 4883FA00                	cmp rdx, 0
 16806 0000C0FD 75E1                    	jne .L_lambda_opt_stack_adjusted_02be
 16807                                  	.L_lambda_opt_params_end_01d4:
 16808 0000C0FF 4801CC                  	add rsp,rcx
 16809 0000C102 BB00000000              	mov rbx, 0
 16810 0000C107 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 16811 0000C10C 4883C303                	add rbx,3
 16812 0000C110 4C29C3                  	sub rbx,r8
 16813 0000C113 48C1E303                	shl rbx, 3
 16814 0000C117 4801E3                  	add rbx, rsp
 16815 0000C11A 4C890B                  	mov qword[rbx] , r9
 16816 0000C11D 49FFC8                  	dec r8
 16817 0000C120 4C29442410              	sub qword [rsp + 8 * 2], r8
 16818                                  	.L_lambda_opt_end_01d4:
 16819 0000C125 C8000000                	enter 0, 0
 16820                                  	; preparing a tail-call
 16821                                  	; preparing a non-tail-call
 16822 0000C129 488B4520                	mov rax, PARAM(0)	; param s
 16823 0000C12D 50                      	push rax
 16824 0000C12E 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16825 0000C136 803805                  	cmp byte [rax], T_undefined
 16826 0000C139 0F84C4B20000            	je L_error_fvar_undefined
 16827 0000C13F 50                      	push rax
 16828 0000C140 6A02                    	push 2	; arg count
 16829 0000C142 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
 16830 0000C14A 803805                  	cmp byte [rax], T_undefined
 16831 0000C14D 0F84B0B20000            	je L_error_fvar_undefined
 16832 0000C153 803804                  	cmp byte [rax], T_closure
 16833 0000C156 0F852BB30000            	jne L_error_non_closure
 16834 0000C15C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16835 0000C15F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16836 0000C162 50                      	push rax
 16837 0000C163 488B4510                	mov rax, ENV
 16838 0000C167 488B00                  	mov rax, qword [rax + 8 * 0]
 16839 0000C16A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16840 0000C16D 50                      	push rax
 16841 0000C16E 6A02                    	push 2	; arg count
 16842 0000C170 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
 16843 0000C178 803805                  	cmp byte [rax], T_undefined
 16844 0000C17B 0F8482B20000            	je L_error_fvar_undefined
 16845 0000C181 803804                  	cmp byte [rax], T_closure
 16846 0000C184 0F85FDB20000            	jne L_error_non_closure
 16847 0000C18A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16848 0000C18D FF7508                  	push qword [rbp + 8 *1]
 16849 0000C190 4989C0                  	mov r8, rax
 16850 0000C193 488B5D18                	mov rbx, COUNT
 16851 0000C197 4883C303                	add rbx,3
 16852 0000C19B 48C1E303                	shl rbx,3
 16853 0000C19F 4801EB                  	add rbx, rbp
 16854 0000C1A2 488B6D00                	mov rbp, [rbp]
 16855 0000C1A6 B900000000              	mov rcx,0
 16856 0000C1AB BA05000000              	mov rdx, 5
 16857 0000C1B0 4889D0                  	mov rax, rdx
 16858 0000C1B3 48FFC8                  	dec rax
 16859 0000C1B6 48C1E003                	shl rax,3
 16860 0000C1BA 4801E0                  	add rax, rsp
 16861                                  	.L_tc_recycle_frame_loop_095b:
 16862 0000C1BD 4839D1                  	cmp rcx, rdx
 16863 0000C1C0 7414                    	je .L_tc_recycle_frame_done_095b
 16864 0000C1C2 4C8B08                  	mov r9, qword [rax]
 16865 0000C1C5 4C890B                  	mov qword [rbx],r9
 16866 0000C1C8 4883E808                	sub rax,8
 16867 0000C1CC 4883EB08                	sub rbx,8
 16868 0000C1D0 4883C101                	add rcx,1
 16869 0000C1D4 EBE7                    	jmp .L_tc_recycle_frame_loop_095b
 16870                                  	.L_tc_recycle_frame_done_095b:
 16871 0000C1D6 4883C308                	add rbx,8
 16872 0000C1DA 4889DC                  	mov rsp,rbx
 16873 0000C1DD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 16874                                  	LEAVE
    49 0000C1E1 C9                  <1>  leave
 16875 0000C1E2 C21800                  	ret AND_KILL_FRAME(1)
 16876                                  .L_lambda_opt_end_01d3:
 16877 0000C1E5 C9                      	leave
 16878 0000C1E6 C21800                  	ret AND_KILL_FRAME(1)
 16879                                  .L_lambda_simple_end_074b:	; new closure is in rax
 16880 0000C1E9 50                      	push rax
 16881 0000C1EA 6A01                    	push 1	; arg count
 16882 0000C1EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16883 0000C1F1 E83AB30000              	call malloc
 16884 0000C1F6 50                      	push rax
 16885 0000C1F7 BF00000000              	mov rdi, 8 * 0	; new rib
 16886 0000C1FC E82FB30000              	call malloc
 16887 0000C201 50                      	push rax
 16888 0000C202 BF08000000              	mov rdi, 8 * 1	; extended env
 16889 0000C207 E824B30000              	call malloc
 16890 0000C20C 488B7D10                	mov rdi, ENV
 16891 0000C210 BE00000000              	mov rsi, 0
 16892 0000C215 BA01000000              	mov rdx, 1
 16893                                  .L_lambda_simple_env_loop_074c:	; ext_env[i + 1] <-- env[i]
 16894 0000C21A 4883FE00                	cmp rsi, 0
 16895 0000C21E 7410                    	je .L_lambda_simple_env_end_074c
 16896 0000C220 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16897 0000C224 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16898 0000C228 48FFC6                  	inc rsi
 16899 0000C22B 48FFC2                  	inc rdx
 16900 0000C22E EBEA                    	jmp .L_lambda_simple_env_loop_074c
 16901                                  .L_lambda_simple_env_end_074c:
 16902 0000C230 5B                      	pop rbx
 16903 0000C231 BE00000000              	mov rsi, 0
 16904                                  .L_lambda_simple_params_loop_074c:	; copy params
 16905 0000C236 4883FE00                	cmp rsi, 0
 16906 0000C23A 740E                    	je .L_lambda_simple_params_end_074c
 16907 0000C23C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16908 0000C241 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16909 0000C245 48FFC6                  	inc rsi
 16910 0000C248 EBEC                    	jmp .L_lambda_simple_params_loop_074c
 16911                                  .L_lambda_simple_params_end_074c:
 16912 0000C24A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16913 0000C24D 4889C3                  	mov rbx, rax
 16914 0000C250 58                      	pop rax
 16915 0000C251 C60004                  	mov byte [rax], T_closure
 16916 0000C254 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16917 0000C258 48C74009[65C20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074c
 16918 0000C260 E938010000              	jmp .L_lambda_simple_end_074c
 16919                                  .L_lambda_simple_code_074c:	; lambda-simple body
 16920 0000C265 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16921 0000C26B 740B                    	je .L_lambda_simple_arity_check_ok_0836
 16922 0000C26D FF742410                	push qword [rsp + 8 * 2]
 16923 0000C271 6A01                    	push 1
 16924 0000C273 E971B20000              	jmp L_error_incorrect_arity_simple
 16925                                  .L_lambda_simple_arity_check_ok_0836:
 16926 0000C278 C8000000                	enter 0, 0
 16927                                  	; preparing a non-tail-call
 16928 0000C27C 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 16929 0000C284 803805                  	cmp byte [rax], T_undefined
 16930 0000C287 0F8476B10000            	je L_error_fvar_undefined
 16931 0000C28D 50                      	push rax
 16932 0000C28E 6A01                    	push 1	; arg count
 16933 0000C290 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16934 0000C294 803804                  	cmp byte [rax], T_closure
 16935 0000C297 0F85EAB10000            	jne L_error_non_closure
 16936 0000C29D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16937 0000C2A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16938 0000C2A3 48890425[44130000]      	mov qword [free_var_74], rax
 16939 0000C2AB 48B8-                   	mov rax, sob_void
 16939 0000C2AD [0000000000000000] 
 16940                                  
 16941                                  	; preparing a non-tail-call
 16942 0000C2B5 488B0425[AF0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16943 0000C2BD 803805                  	cmp byte [rax], T_undefined
 16944 0000C2C0 0F843DB10000            	je L_error_fvar_undefined
 16945 0000C2C6 50                      	push rax
 16946 0000C2C7 6A01                    	push 1	; arg count
 16947 0000C2C9 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16948 0000C2CD 803804                  	cmp byte [rax], T_closure
 16949 0000C2D0 0F85B1B10000            	jne L_error_non_closure
 16950 0000C2D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16951 0000C2D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16952 0000C2DC 48890425[33130000]      	mov qword [free_var_73], rax
 16953 0000C2E4 48B8-                   	mov rax, sob_void
 16953 0000C2E6 [0000000000000000] 
 16954                                  
 16955                                  	; preparing a non-tail-call
 16956 0000C2EE 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 16957 0000C2F6 803805                  	cmp byte [rax], T_undefined
 16958 0000C2F9 0F8404B10000            	je L_error_fvar_undefined
 16959 0000C2FF 50                      	push rax
 16960 0000C300 6A01                    	push 1	; arg count
 16961 0000C302 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16962 0000C306 803804                  	cmp byte [rax], T_closure
 16963 0000C309 0F8578B10000            	jne L_error_non_closure
 16964 0000C30F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16965 0000C312 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16966 0000C315 48890425[55130000]      	mov qword [free_var_75], rax
 16967 0000C31D 48B8-                   	mov rax, sob_void
 16967 0000C31F [0000000000000000] 
 16968                                  
 16969                                  	; preparing a non-tail-call
 16970 0000C327 488B0425[D10E0000]      	mov rax, qword [free_var_7]	; free var >
 16971 0000C32F 803805                  	cmp byte [rax], T_undefined
 16972 0000C332 0F84CBB00000            	je L_error_fvar_undefined
 16973 0000C338 50                      	push rax
 16974 0000C339 6A01                    	push 1	; arg count
 16975 0000C33B 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16976 0000C33F 803804                  	cmp byte [rax], T_closure
 16977 0000C342 0F853FB10000            	jne L_error_non_closure
 16978 0000C348 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16979 0000C34B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16980 0000C34E 48890425[77130000]      	mov qword [free_var_77], rax
 16981 0000C356 48B8-                   	mov rax, sob_void
 16981 0000C358 [0000000000000000] 
 16982                                  
 16983                                  	; preparing a non-tail-call
 16984 0000C360 488B0425[E20E0000]      	mov rax, qword [free_var_8]	; free var >=
 16985 0000C368 803805                  	cmp byte [rax], T_undefined
 16986 0000C36B 0F8492B00000            	je L_error_fvar_undefined
 16987 0000C371 50                      	push rax
 16988 0000C372 6A01                    	push 1	; arg count
 16989 0000C374 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16990 0000C378 803804                  	cmp byte [rax], T_closure
 16991 0000C37B 0F8506B10000            	jne L_error_non_closure
 16992 0000C381 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16993 0000C384 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16994 0000C387 48890425[66130000]      	mov qword [free_var_76], rax
 16995 0000C38F 48B8-                   	mov rax, sob_void
 16995 0000C391 [0000000000000000] 
 16996 0000C399 C9                      	leave
 16997 0000C39A C21800                  	ret AND_KILL_FRAME(1)
 16998                                  .L_lambda_simple_end_074c:	; new closure is in rax
 16999 0000C39D 803804                  	cmp byte [rax], T_closure
 17000 0000C3A0 0F85E1B00000            	jne L_error_non_closure
 17001 0000C3A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17002 0000C3A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17003                                  
 17004 0000C3AC 4889C7                  	mov rdi, rax
 17005 0000C3AF E8D1B30000              	call print_sexpr_if_not_void
 17006 0000C3B4 48B8-                   	mov rax, L_constants + 0
 17006 0000C3B6 [0000000000000000] 
 17007 0000C3BE 48890425[11130000]      	mov qword [free_var_71], rax
 17008 0000C3C6 48B8-                   	mov rax, sob_void
 17008 0000C3C8 [0000000000000000] 
 17009                                  
 17010 0000C3D0 4889C7                  	mov rdi, rax
 17011 0000C3D3 E8ADB30000              	call print_sexpr_if_not_void
 17012 0000C3D8 48B8-                   	mov rax, L_constants + 0
 17012 0000C3DA [0000000000000000] 
 17013 0000C3E2 48890425[22130000]      	mov qword [free_var_72], rax
 17014 0000C3EA 48B8-                   	mov rax, sob_void
 17014 0000C3EC [0000000000000000] 
 17015                                  
 17016 0000C3F4 4889C7                  	mov rdi, rax
 17017 0000C3F7 E889B30000              	call print_sexpr_if_not_void
 17018                                  	; preparing a non-tail-call
 17019                                  	; preparing a non-tail-call
 17020                                  	; preparing a non-tail-call
 17021 0000C3FC 48B8-                   	mov rax, L_constants + 2569
 17021 0000C3FE [090A000000000000] 
 17022 0000C406 50                      	push rax
 17023 0000C407 6A01                    	push 1	; arg count
 17024 0000C409 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17025 0000C411 803805                  	cmp byte [rax], T_undefined
 17026 0000C414 0F84E9AF0000            	je L_error_fvar_undefined
 17027 0000C41A 803804                  	cmp byte [rax], T_closure
 17028 0000C41D 0F8564B00000            	jne L_error_non_closure
 17029 0000C423 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17030 0000C426 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17031 0000C429 50                      	push rax
 17032                                  	; preparing a non-tail-call
 17033 0000C42A 48B8-                   	mov rax, L_constants + 2573
 17033 0000C42C [0D0A000000000000] 
 17034 0000C434 50                      	push rax
 17035 0000C435 6A01                    	push 1	; arg count
 17036 0000C437 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17037 0000C43F 803805                  	cmp byte [rax], T_undefined
 17038 0000C442 0F84BBAF0000            	je L_error_fvar_undefined
 17039 0000C448 803804                  	cmp byte [rax], T_closure
 17040 0000C44B 0F8536B00000            	jne L_error_non_closure
 17041 0000C451 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17042 0000C454 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17043 0000C457 50                      	push rax
 17044 0000C458 6A02                    	push 2	; arg count
 17045 0000C45A 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 17046 0000C462 803805                  	cmp byte [rax], T_undefined
 17047 0000C465 0F8498AF0000            	je L_error_fvar_undefined
 17048 0000C46B 803804                  	cmp byte [rax], T_closure
 17049 0000C46E 0F8513B00000            	jne L_error_non_closure
 17050 0000C474 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17051 0000C477 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17052 0000C47A 50                      	push rax
 17053 0000C47B 6A01                    	push 1	; arg count
 17054 0000C47D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17055 0000C482 E8A9B00000              	call malloc
 17056 0000C487 50                      	push rax
 17057 0000C488 BF00000000              	mov rdi, 8 * 0	; new rib
 17058 0000C48D E89EB00000              	call malloc
 17059 0000C492 50                      	push rax
 17060 0000C493 BF08000000              	mov rdi, 8 * 1	; extended env
 17061 0000C498 E893B00000              	call malloc
 17062 0000C49D 488B7D10                	mov rdi, ENV
 17063 0000C4A1 BE00000000              	mov rsi, 0
 17064 0000C4A6 BA01000000              	mov rdx, 1
 17065                                  .L_lambda_simple_env_loop_074d:	; ext_env[i + 1] <-- env[i]
 17066 0000C4AB 4883FE00                	cmp rsi, 0
 17067 0000C4AF 7410                    	je .L_lambda_simple_env_end_074d
 17068 0000C4B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17069 0000C4B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17070 0000C4B9 48FFC6                  	inc rsi
 17071 0000C4BC 48FFC2                  	inc rdx
 17072 0000C4BF EBEA                    	jmp .L_lambda_simple_env_loop_074d
 17073                                  .L_lambda_simple_env_end_074d:
 17074 0000C4C1 5B                      	pop rbx
 17075 0000C4C2 BE00000000              	mov rsi, 0
 17076                                  .L_lambda_simple_params_loop_074d:	; copy params
 17077 0000C4C7 4883FE00                	cmp rsi, 0
 17078 0000C4CB 740E                    	je .L_lambda_simple_params_end_074d
 17079 0000C4CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17080 0000C4D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17081 0000C4D6 48FFC6                  	inc rsi
 17082 0000C4D9 EBEC                    	jmp .L_lambda_simple_params_loop_074d
 17083                                  .L_lambda_simple_params_end_074d:
 17084 0000C4DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17085 0000C4DE 4889C3                  	mov rbx, rax
 17086 0000C4E1 58                      	pop rax
 17087 0000C4E2 C60004                  	mov byte [rax], T_closure
 17088 0000C4E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17089 0000C4E9 48C74009[F6C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074d
 17090 0000C4F1 E997030000              	jmp .L_lambda_simple_end_074d
 17091                                  .L_lambda_simple_code_074d:	; lambda-simple body
 17092 0000C4F6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17093 0000C4FC 740B                    	je .L_lambda_simple_arity_check_ok_0837
 17094 0000C4FE FF742410                	push qword [rsp + 8 * 2]
 17095 0000C502 6A01                    	push 1
 17096 0000C504 E9E0AF0000              	jmp L_error_incorrect_arity_simple
 17097                                  .L_lambda_simple_arity_check_ok_0837:
 17098 0000C509 C8000000                	enter 0, 0
 17099 0000C50D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17100 0000C512 E819B00000              	call malloc
 17101 0000C517 50                      	push rax
 17102 0000C518 BF08000000              	mov rdi, 8 * 1	; new rib
 17103 0000C51D E80EB00000              	call malloc
 17104 0000C522 50                      	push rax
 17105 0000C523 BF10000000              	mov rdi, 8 * 2	; extended env
 17106 0000C528 E803B00000              	call malloc
 17107 0000C52D 488B7D10                	mov rdi, ENV
 17108 0000C531 BE00000000              	mov rsi, 0
 17109 0000C536 BA01000000              	mov rdx, 1
 17110                                  .L_lambda_simple_env_loop_074e:	; ext_env[i + 1] <-- env[i]
 17111 0000C53B 4883FE01                	cmp rsi, 1
 17112 0000C53F 7410                    	je .L_lambda_simple_env_end_074e
 17113 0000C541 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17114 0000C545 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17115 0000C549 48FFC6                  	inc rsi
 17116 0000C54C 48FFC2                  	inc rdx
 17117 0000C54F EBEA                    	jmp .L_lambda_simple_env_loop_074e
 17118                                  .L_lambda_simple_env_end_074e:
 17119 0000C551 5B                      	pop rbx
 17120 0000C552 BE00000000              	mov rsi, 0
 17121                                  .L_lambda_simple_params_loop_074e:	; copy params
 17122 0000C557 4883FE01                	cmp rsi, 1
 17123 0000C55B 740E                    	je .L_lambda_simple_params_end_074e
 17124 0000C55D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17125 0000C562 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17126 0000C566 48FFC6                  	inc rsi
 17127 0000C569 EBEC                    	jmp .L_lambda_simple_params_loop_074e
 17128                                  .L_lambda_simple_params_end_074e:
 17129 0000C56B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17130 0000C56E 4889C3                  	mov rbx, rax
 17131 0000C571 58                      	pop rax
 17132 0000C572 C60004                  	mov byte [rax], T_closure
 17133 0000C575 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17134 0000C579 48C74009[86C50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074e
 17135 0000C581 E933010000              	jmp .L_lambda_simple_end_074e
 17136                                  .L_lambda_simple_code_074e:	; lambda-simple body
 17137 0000C586 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17138 0000C58C 740B                    	je .L_lambda_simple_arity_check_ok_0838
 17139 0000C58E FF742410                	push qword [rsp + 8 * 2]
 17140 0000C592 6A01                    	push 1
 17141 0000C594 E950AF0000              	jmp L_error_incorrect_arity_simple
 17142                                  .L_lambda_simple_arity_check_ok_0838:
 17143 0000C599 C8000000                	enter 0, 0
 17144                                  	; preparing a non-tail-call
 17145 0000C59D 48B8-                   	mov rax, L_constants + 2571
 17145 0000C59F [0B0A000000000000] 
 17146 0000C5A7 50                      	push rax
 17147 0000C5A8 488B4520                	mov rax, PARAM(0)	; param ch
 17148 0000C5AC 50                      	push rax
 17149 0000C5AD 48B8-                   	mov rax, L_constants + 2569
 17149 0000C5AF [090A000000000000] 
 17150 0000C5B7 50                      	push rax
 17151 0000C5B8 6A03                    	push 3	; arg count
 17152 0000C5BA 488B0425[33130000]      	mov rax, qword [free_var_73]	; free var char<=?
 17153 0000C5C2 803805                  	cmp byte [rax], T_undefined
 17154 0000C5C5 0F8438AE0000            	je L_error_fvar_undefined
 17155 0000C5CB 803804                  	cmp byte [rax], T_closure
 17156 0000C5CE 0F85B3AE0000            	jne L_error_non_closure
 17157 0000C5D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17158 0000C5D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17159 0000C5DA 483D[02000000]          	cmp rax, sob_boolean_false
 17160 0000C5E0 0F84CB000000            	je .L_if_else_0520
 17161                                  	; preparing a tail-call
 17162                                  	; preparing a non-tail-call
 17163 0000C5E6 488B4510                	mov rax, ENV
 17164 0000C5EA 488B00                  	mov rax, qword [rax + 8 * 0]
 17165 0000C5ED 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17166 0000C5F0 50                      	push rax
 17167                                  	; preparing a non-tail-call
 17168 0000C5F1 488B4520                	mov rax, PARAM(0)	; param ch
 17169 0000C5F5 50                      	push rax
 17170 0000C5F6 6A01                    	push 1	; arg count
 17171 0000C5F8 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17172 0000C600 803805                  	cmp byte [rax], T_undefined
 17173 0000C603 0F84FAAD0000            	je L_error_fvar_undefined
 17174 0000C609 803804                  	cmp byte [rax], T_closure
 17175 0000C60C 0F8575AE0000            	jne L_error_non_closure
 17176 0000C612 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17177 0000C615 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17178 0000C618 50                      	push rax
 17179 0000C619 6A02                    	push 2	; arg count
 17180 0000C61B 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 17181 0000C623 803805                  	cmp byte [rax], T_undefined
 17182 0000C626 0F84D7AD0000            	je L_error_fvar_undefined
 17183 0000C62C 803804                  	cmp byte [rax], T_closure
 17184 0000C62F 0F8552AE0000            	jne L_error_non_closure
 17185 0000C635 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17186 0000C638 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17187 0000C63B 50                      	push rax
 17188 0000C63C 6A01                    	push 1	; arg count
 17189 0000C63E 488B0425[43140000]      	mov rax, qword [free_var_89]	; free var integer->char
 17190 0000C646 803805                  	cmp byte [rax], T_undefined
 17191 0000C649 0F84B4AD0000            	je L_error_fvar_undefined
 17192 0000C64F 803804                  	cmp byte [rax], T_closure
 17193 0000C652 0F852FAE0000            	jne L_error_non_closure
 17194 0000C658 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17195 0000C65B FF7508                  	push qword [rbp + 8 *1]
 17196 0000C65E 4989C0                  	mov r8, rax
 17197 0000C661 488B5D18                	mov rbx, COUNT
 17198 0000C665 4883C303                	add rbx,3
 17199 0000C669 48C1E303                	shl rbx,3
 17200 0000C66D 4801EB                  	add rbx, rbp
 17201 0000C670 488B6D00                	mov rbp, [rbp]
 17202 0000C674 B900000000              	mov rcx,0
 17203 0000C679 BA04000000              	mov rdx, 4
 17204 0000C67E 4889D0                  	mov rax, rdx
 17205 0000C681 48FFC8                  	dec rax
 17206 0000C684 48C1E003                	shl rax,3
 17207 0000C688 4801E0                  	add rax, rsp
 17208                                  	.L_tc_recycle_frame_loop_095c:
 17209 0000C68B 4839D1                  	cmp rcx, rdx
 17210 0000C68E 7414                    	je .L_tc_recycle_frame_done_095c
 17211 0000C690 4C8B08                  	mov r9, qword [rax]
 17212 0000C693 4C890B                  	mov qword [rbx],r9
 17213 0000C696 4883E808                	sub rax,8
 17214 0000C69A 4883EB08                	sub rbx,8
 17215 0000C69E 4883C101                	add rcx,1
 17216 0000C6A2 EBE7                    	jmp .L_tc_recycle_frame_loop_095c
 17217                                  	.L_tc_recycle_frame_done_095c:
 17218 0000C6A4 4883C308                	add rbx,8
 17219 0000C6A8 4889DC                  	mov rsp,rbx
 17220 0000C6AB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 17221 0000C6AF EB04                    	jmp .L_if_end_05a6
 17222                                  .L_if_else_0520:
 17223 0000C6B1 488B4520                	mov rax, PARAM(0)	; param ch
 17224                                  .L_if_end_05a6:
 17225 0000C6B5 C9                      	leave
 17226 0000C6B6 C21800                  	ret AND_KILL_FRAME(1)
 17227                                  .L_lambda_simple_end_074e:	; new closure is in rax
 17228 0000C6B9 48890425[11130000]      	mov qword [free_var_71], rax
 17229 0000C6C1 48B8-                   	mov rax, sob_void
 17229 0000C6C3 [0000000000000000] 
 17230                                  
 17231 0000C6CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17232 0000C6D0 E85BAE0000              	call malloc
 17233 0000C6D5 50                      	push rax
 17234 0000C6D6 BF08000000              	mov rdi, 8 * 1	; new rib
 17235 0000C6DB E850AE0000              	call malloc
 17236 0000C6E0 50                      	push rax
 17237 0000C6E1 BF10000000              	mov rdi, 8 * 2	; extended env
 17238 0000C6E6 E845AE0000              	call malloc
 17239 0000C6EB 488B7D10                	mov rdi, ENV
 17240 0000C6EF BE00000000              	mov rsi, 0
 17241 0000C6F4 BA01000000              	mov rdx, 1
 17242                                  .L_lambda_simple_env_loop_074f:	; ext_env[i + 1] <-- env[i]
 17243 0000C6F9 4883FE01                	cmp rsi, 1
 17244 0000C6FD 7410                    	je .L_lambda_simple_env_end_074f
 17245 0000C6FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17246 0000C703 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17247 0000C707 48FFC6                  	inc rsi
 17248 0000C70A 48FFC2                  	inc rdx
 17249 0000C70D EBEA                    	jmp .L_lambda_simple_env_loop_074f
 17250                                  .L_lambda_simple_env_end_074f:
 17251 0000C70F 5B                      	pop rbx
 17252 0000C710 BE00000000              	mov rsi, 0
 17253                                  .L_lambda_simple_params_loop_074f:	; copy params
 17254 0000C715 4883FE01                	cmp rsi, 1
 17255 0000C719 740E                    	je .L_lambda_simple_params_end_074f
 17256 0000C71B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17257 0000C720 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17258 0000C724 48FFC6                  	inc rsi
 17259 0000C727 EBEC                    	jmp .L_lambda_simple_params_loop_074f
 17260                                  .L_lambda_simple_params_end_074f:
 17261 0000C729 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17262 0000C72C 4889C3                  	mov rbx, rax
 17263 0000C72F 58                      	pop rax
 17264 0000C730 C60004                  	mov byte [rax], T_closure
 17265 0000C733 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17266 0000C737 48C74009[44C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_074f
 17267 0000C73F E933010000              	jmp .L_lambda_simple_end_074f
 17268                                  .L_lambda_simple_code_074f:	; lambda-simple body
 17269 0000C744 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17270 0000C74A 740B                    	je .L_lambda_simple_arity_check_ok_0839
 17271 0000C74C FF742410                	push qword [rsp + 8 * 2]
 17272 0000C750 6A01                    	push 1
 17273 0000C752 E992AD0000              	jmp L_error_incorrect_arity_simple
 17274                                  .L_lambda_simple_arity_check_ok_0839:
 17275 0000C757 C8000000                	enter 0, 0
 17276                                  	; preparing a non-tail-call
 17277 0000C75B 48B8-                   	mov rax, L_constants + 2575
 17277 0000C75D [0F0A000000000000] 
 17278 0000C765 50                      	push rax
 17279 0000C766 488B4520                	mov rax, PARAM(0)	; param ch
 17280 0000C76A 50                      	push rax
 17281 0000C76B 48B8-                   	mov rax, L_constants + 2573
 17281 0000C76D [0D0A000000000000] 
 17282 0000C775 50                      	push rax
 17283 0000C776 6A03                    	push 3	; arg count
 17284 0000C778 488B0425[33130000]      	mov rax, qword [free_var_73]	; free var char<=?
 17285 0000C780 803805                  	cmp byte [rax], T_undefined
 17286 0000C783 0F847AAC0000            	je L_error_fvar_undefined
 17287 0000C789 803804                  	cmp byte [rax], T_closure
 17288 0000C78C 0F85F5AC0000            	jne L_error_non_closure
 17289 0000C792 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17290 0000C795 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17291 0000C798 483D[02000000]          	cmp rax, sob_boolean_false
 17292 0000C79E 0F84CB000000            	je .L_if_else_0521
 17293                                  	; preparing a tail-call
 17294                                  	; preparing a non-tail-call
 17295 0000C7A4 488B4510                	mov rax, ENV
 17296 0000C7A8 488B00                  	mov rax, qword [rax + 8 * 0]
 17297 0000C7AB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17298 0000C7AE 50                      	push rax
 17299                                  	; preparing a non-tail-call
 17300 0000C7AF 488B4520                	mov rax, PARAM(0)	; param ch
 17301 0000C7B3 50                      	push rax
 17302 0000C7B4 6A01                    	push 1	; arg count
 17303 0000C7B6 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17304 0000C7BE 803805                  	cmp byte [rax], T_undefined
 17305 0000C7C1 0F843CAC0000            	je L_error_fvar_undefined
 17306 0000C7C7 803804                  	cmp byte [rax], T_closure
 17307 0000C7CA 0F85B7AC0000            	jne L_error_non_closure
 17308 0000C7D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17309 0000C7D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17310 0000C7D6 50                      	push rax
 17311 0000C7D7 6A02                    	push 2	; arg count
 17312 0000C7D9 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 17313 0000C7E1 803805                  	cmp byte [rax], T_undefined
 17314 0000C7E4 0F8419AC0000            	je L_error_fvar_undefined
 17315 0000C7EA 803804                  	cmp byte [rax], T_closure
 17316 0000C7ED 0F8594AC0000            	jne L_error_non_closure
 17317 0000C7F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17318 0000C7F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17319 0000C7F9 50                      	push rax
 17320 0000C7FA 6A01                    	push 1	; arg count
 17321 0000C7FC 488B0425[43140000]      	mov rax, qword [free_var_89]	; free var integer->char
 17322 0000C804 803805                  	cmp byte [rax], T_undefined
 17323 0000C807 0F84F6AB0000            	je L_error_fvar_undefined
 17324 0000C80D 803804                  	cmp byte [rax], T_closure
 17325 0000C810 0F8571AC0000            	jne L_error_non_closure
 17326 0000C816 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17327 0000C819 FF7508                  	push qword [rbp + 8 *1]
 17328 0000C81C 4989C0                  	mov r8, rax
 17329 0000C81F 488B5D18                	mov rbx, COUNT
 17330 0000C823 4883C303                	add rbx,3
 17331 0000C827 48C1E303                	shl rbx,3
 17332 0000C82B 4801EB                  	add rbx, rbp
 17333 0000C82E 488B6D00                	mov rbp, [rbp]
 17334 0000C832 B900000000              	mov rcx,0
 17335 0000C837 BA04000000              	mov rdx, 4
 17336 0000C83C 4889D0                  	mov rax, rdx
 17337 0000C83F 48FFC8                  	dec rax
 17338 0000C842 48C1E003                	shl rax,3
 17339 0000C846 4801E0                  	add rax, rsp
 17340                                  	.L_tc_recycle_frame_loop_095d:
 17341 0000C849 4839D1                  	cmp rcx, rdx
 17342 0000C84C 7414                    	je .L_tc_recycle_frame_done_095d
 17343 0000C84E 4C8B08                  	mov r9, qword [rax]
 17344 0000C851 4C890B                  	mov qword [rbx],r9
 17345 0000C854 4883E808                	sub rax,8
 17346 0000C858 4883EB08                	sub rbx,8
 17347 0000C85C 4883C101                	add rcx,1
 17348 0000C860 EBE7                    	jmp .L_tc_recycle_frame_loop_095d
 17349                                  	.L_tc_recycle_frame_done_095d:
 17350 0000C862 4883C308                	add rbx,8
 17351 0000C866 4889DC                  	mov rsp,rbx
 17352 0000C869 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 17353 0000C86D EB04                    	jmp .L_if_end_05a7
 17354                                  .L_if_else_0521:
 17355 0000C86F 488B4520                	mov rax, PARAM(0)	; param ch
 17356                                  .L_if_end_05a7:
 17357 0000C873 C9                      	leave
 17358 0000C874 C21800                  	ret AND_KILL_FRAME(1)
 17359                                  .L_lambda_simple_end_074f:	; new closure is in rax
 17360 0000C877 48890425[22130000]      	mov qword [free_var_72], rax
 17361 0000C87F 48B8-                   	mov rax, sob_void
 17361 0000C881 [0000000000000000] 
 17362 0000C889 C9                      	leave
 17363 0000C88A C21800                  	ret AND_KILL_FRAME(1)
 17364                                  .L_lambda_simple_end_074d:	; new closure is in rax
 17365 0000C88D 803804                  	cmp byte [rax], T_closure
 17366 0000C890 0F85F1AB0000            	jne L_error_non_closure
 17367 0000C896 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17368 0000C899 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17369                                  
 17370 0000C89C 4889C7                  	mov rdi, rax
 17371 0000C89F E8E1AE0000              	call print_sexpr_if_not_void
 17372 0000C8A4 48B8-                   	mov rax, L_constants + 0
 17372 0000C8A6 [0000000000000000] 
 17373 0000C8AE 48890425[CD120000]      	mov qword [free_var_67], rax
 17374 0000C8B6 48B8-                   	mov rax, sob_void
 17374 0000C8B8 [0000000000000000] 
 17375                                  
 17376 0000C8C0 4889C7                  	mov rdi, rax
 17377 0000C8C3 E8BDAE0000              	call print_sexpr_if_not_void
 17378 0000C8C8 48B8-                   	mov rax, L_constants + 0
 17378 0000C8CA [0000000000000000] 
 17379 0000C8D2 48890425[BC120000]      	mov qword [free_var_66], rax
 17380 0000C8DA 48B8-                   	mov rax, sob_void
 17380 0000C8DC [0000000000000000] 
 17381                                  
 17382 0000C8E4 4889C7                  	mov rdi, rax
 17383 0000C8E7 E899AE0000              	call print_sexpr_if_not_void
 17384 0000C8EC 48B8-                   	mov rax, L_constants + 0
 17384 0000C8EE [0000000000000000] 
 17385 0000C8F6 48890425[DE120000]      	mov qword [free_var_68], rax
 17386 0000C8FE 48B8-                   	mov rax, sob_void
 17386 0000C900 [0000000000000000] 
 17387                                  
 17388 0000C908 4889C7                  	mov rdi, rax
 17389 0000C90B E875AE0000              	call print_sexpr_if_not_void
 17390 0000C910 48B8-                   	mov rax, L_constants + 0
 17390 0000C912 [0000000000000000] 
 17391 0000C91A 48890425[00130000]      	mov qword [free_var_70], rax
 17392 0000C922 48B8-                   	mov rax, sob_void
 17392 0000C924 [0000000000000000] 
 17393                                  
 17394 0000C92C 4889C7                  	mov rdi, rax
 17395 0000C92F E851AE0000              	call print_sexpr_if_not_void
 17396 0000C934 48B8-                   	mov rax, L_constants + 0
 17396 0000C936 [0000000000000000] 
 17397 0000C93E 48890425[EF120000]      	mov qword [free_var_69], rax
 17398 0000C946 48B8-                   	mov rax, sob_void
 17398 0000C948 [0000000000000000] 
 17399                                  
 17400 0000C950 4889C7                  	mov rdi, rax
 17401 0000C953 E82DAE0000              	call print_sexpr_if_not_void
 17402                                  	; preparing a non-tail-call
 17403 0000C958 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17404 0000C95D E8CEAB0000              	call malloc
 17405 0000C962 50                      	push rax
 17406 0000C963 BF00000000              	mov rdi, 8 * 0	; new rib
 17407 0000C968 E8C3AB0000              	call malloc
 17408 0000C96D 50                      	push rax
 17409 0000C96E BF08000000              	mov rdi, 8 * 1	; extended env
 17410 0000C973 E8B8AB0000              	call malloc
 17411 0000C978 488B7D10                	mov rdi, ENV
 17412 0000C97C BE00000000              	mov rsi, 0
 17413 0000C981 BA01000000              	mov rdx, 1
 17414                                  .L_lambda_simple_env_loop_0750:	; ext_env[i + 1] <-- env[i]
 17415 0000C986 4883FE00                	cmp rsi, 0
 17416 0000C98A 7410                    	je .L_lambda_simple_env_end_0750
 17417 0000C98C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17418 0000C990 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17419 0000C994 48FFC6                  	inc rsi
 17420 0000C997 48FFC2                  	inc rdx
 17421 0000C99A EBEA                    	jmp .L_lambda_simple_env_loop_0750
 17422                                  .L_lambda_simple_env_end_0750:
 17423 0000C99C 5B                      	pop rbx
 17424 0000C99D BE00000000              	mov rsi, 0
 17425                                  .L_lambda_simple_params_loop_0750:	; copy params
 17426 0000C9A2 4883FE00                	cmp rsi, 0
 17427 0000C9A6 740E                    	je .L_lambda_simple_params_end_0750
 17428 0000C9A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17429 0000C9AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17430 0000C9B1 48FFC6                  	inc rsi
 17431 0000C9B4 EBEC                    	jmp .L_lambda_simple_params_loop_0750
 17432                                  .L_lambda_simple_params_end_0750:
 17433 0000C9B6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17434 0000C9B9 4889C3                  	mov rbx, rax
 17435 0000C9BC 58                      	pop rax
 17436 0000C9BD C60004                  	mov byte [rax], T_closure
 17437 0000C9C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17438 0000C9C4 48C74009[D1C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0750
 17439 0000C9CC E976030000              	jmp .L_lambda_simple_end_0750
 17440                                  .L_lambda_simple_code_0750:	; lambda-simple body
 17441 0000C9D1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17442 0000C9D7 740B                    	je .L_lambda_simple_arity_check_ok_083a
 17443 0000C9D9 FF742410                	push qword [rsp + 8 * 2]
 17444 0000C9DD 6A01                    	push 1
 17445 0000C9DF E905AB0000              	jmp L_error_incorrect_arity_simple
 17446                                  .L_lambda_simple_arity_check_ok_083a:
 17447 0000C9E4 C8000000                	enter 0, 0
 17448 0000C9E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17449 0000C9ED E83EAB0000              	call malloc
 17450 0000C9F2 50                      	push rax
 17451 0000C9F3 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 17452 0000C9F7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17453 0000C9FB BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 17454 0000CA00 E82BAB0000              	call malloc
 17455 0000CA05 50                      	push rax
 17456 0000CA06 BF10000000              	mov rdi, 8 * 2	; extended env
 17457 0000CA0B E820AB0000              	call malloc
 17458 0000CA10 488B7D10                	mov rdi, ENV
 17459 0000CA14 BE00000000              	mov rsi, 0
 17460 0000CA19 BA01000000              	mov rdx, 1
 17461                                  .L_lambda_opt_env_loop_00eb:	; ext_env[i + 1] <-- env[i] copy all the array
 17462 0000CA1E 4883FE01                	cmp rsi, 1
 17463 0000CA22 7410                    	je .L_lambda_opt_env_end_00eb
 17464 0000CA24 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17465 0000CA28 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17466 0000CA2C 48FFC6                  	inc rsi
 17467 0000CA2F 48FFC2                  	inc rdx
 17468 0000CA32 EBEA                    	jmp .L_lambda_opt_env_loop_00eb
 17469                                  .L_lambda_opt_env_end_00eb:
 17470 0000CA34 5B                      	pop rbx
 17471 0000CA35 BE00000000              	mov rsi, 0
 17472                                  .L_lambda_opt_params_loop_02bf:	; copy params
 17473 0000CA3A 4883FE01                	cmp rsi, 1
 17474 0000CA3E 740E                    	je .L_lambda_opt_params_end_01d5
 17475 0000CA40 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17476 0000CA45 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17477 0000CA49 48FFC6                  	inc rsi
 17478 0000CA4C EBEC                    	jmp .L_lambda_opt_params_loop_02bf
 17479                                  .L_lambda_opt_params_end_01d5:
 17480 0000CA4E 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 17481 0000CA51 4889C3                  	mov rbx, rax
 17482 0000CA54 58                      	pop rax
 17483 0000CA55 C60004                  	mov byte [rax], T_closure
 17484 0000CA58 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17485 0000CA5C 48C74009[69CA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00eb
 17486 0000CA64 E9DA020000              	jmp .L_lambda_opt_end_01d5
 17487                                  .L_lambda_opt_code_00eb:	; lambda-opt body
 17488 0000CA69 48837C241000            	cmp qword [rsp + 8 * 2], 0
 17489 0000CA6F 7D0B                    	jge .L_lambda_simple_arity_check_ok_083b
 17490 0000CA71 FF742410                	push qword [rsp + 8 * 2]
 17491 0000CA75 6A00                    	push 0
 17492 0000CA77 E96DAA0000              	jmp L_error_incorrect_arity_simple
 17493                                  .L_lambda_simple_arity_check_ok_083b:
 17494 0000CA7C 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 17495 0000CA81 4983E800                	sub r8, 0
 17496 0000CA85 4C89C3                  	mov rbx,r8
 17497 0000CA88 4983F800                	cmp r8, 0
 17498 0000CA8C 7535                    	jne .L_lambda_opt_params_loop_02c1
 17499 0000CA8E 488B542410              	mov rdx, qword [rsp + 8 * 2]
 17500 0000CA93 4883C203                	add rdx , 3
 17501 0000CA97 4883EC08                	sub rsp , 8
 17502 0000CA9B 4889E1                  	mov rcx, rsp
 17503                                  .L_lambda_opt_stack_adjusted_02c0: ;pushing down the stack of the current function
 17504 0000CA9E 488B5908                	mov rbx, qword [rcx + 8 * 1]
 17505 0000CAA2 488919                  	mov qword[rcx] , rbx
 17506 0000CAA5 4883C108                	add rcx , 8
 17507 0000CAA9 48FFCA                  	dec rdx
 17508 0000CAAC 4883FA00                	cmp rdx, 0
 17509 0000CAB0 75EC                    	jne .L_lambda_opt_stack_adjusted_02c0
 17510 0000CAB2 48FF442410              	inc qword [rsp + 8 * 2]
 17511 0000CAB7 48C701[01000000]        	mov qword [rcx], sob_nil 
 17512 0000CABE E9A2000000              	jmp .L_lambda_opt_end_01d6
 17513                                  	.L_lambda_opt_params_loop_02c1:
 17514 0000CAC3 488B542410              	mov rdx, qword [rsp + 8*2]
 17515 0000CAC8 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 17516 0000CACD 4C89C2                  	mov rdx, r8
 17517 0000CAD0 49B9-                   	mov r9, sob_nil
 17517 0000CAD2 [0100000000000000] 
 17518                                  	.L_lambda_opt_params_loop_02c0: ;loop for copying the opt into list
 17519 0000CADA BF11000000              	mov rdi, (1 + 8 + 8)
 17520 0000CADF E84CAA0000              	call malloc
 17521 0000CAE4 C60021                  	mov byte[rax], T_pair
 17522 0000CAE7 488B19                  	mov rbx, qword [rcx]
 17523 0000CAEA 48895801                	mov SOB_PAIR_CAR(rax), rbx
 17524 0000CAEE 4C894809                	mov SOB_PAIR_CDR(rax), r9
 17525 0000CAF2 4989C1                  	mov r9, rax
 17526 0000CAF5 48FFCA                  	dec rdx
 17527 0000CAF8 4883E908                	sub rcx, 8
 17528 0000CAFC 4883FA00                	cmp rdx, 0
 17529 0000CB00 75D8                    	jne .L_lambda_opt_params_loop_02c0
 17530 0000CB02 488B542410              	mov rdx, qword [rsp + 8 * 2]
 17531 0000CB07 4889E0                  	mov rax, rsp
 17532 0000CB0A 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 17533 0000CB0F 4C89C1                  	mov rcx, r8
 17534 0000CB12 48FFC9                  	dec rcx
 17535 0000CB15 4883C203                	add rdx, 3
 17536 0000CB19 4829CA                  	sub rdx,rcx
 17537 0000CB1C 48C1E103                	shl rcx, 3
 17538                                  	.L_lambda_opt_stack_adjusted_02c1:
 17539 0000CB20 4883FA00                	cmp rdx, 0
 17540 0000CB24 7419                    	je .L_lambda_opt_params_end_01d6
 17541 0000CB26 4889D8                  	mov rax, rbx
 17542 0000CB29 4829C8                  	sub rax, rcx
 17543 0000CB2C 488B30                  	mov rsi, qword [rax]
 17544 0000CB2F 488933                  	mov [rbx], rsi
 17545 0000CB32 4883EB08                	sub rbx, 8
 17546 0000CB36 48FFCA                  	dec rdx
 17547 0000CB39 4883FA00                	cmp rdx, 0
 17548 0000CB3D 75E1                    	jne .L_lambda_opt_stack_adjusted_02c1
 17549                                  	.L_lambda_opt_params_end_01d6:
 17550 0000CB3F 4801CC                  	add rsp,rcx
 17551 0000CB42 BB00000000              	mov rbx, 0
 17552 0000CB47 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 17553 0000CB4C 4883C303                	add rbx,3
 17554 0000CB50 4C29C3                  	sub rbx,r8
 17555 0000CB53 48C1E303                	shl rbx, 3
 17556 0000CB57 4801E3                  	add rbx, rsp
 17557 0000CB5A 4C890B                  	mov qword[rbx] , r9
 17558 0000CB5D 49FFC8                  	dec r8
 17559 0000CB60 4C29442410              	sub qword [rsp + 8 * 2], r8
 17560                                  	.L_lambda_opt_end_01d6:
 17561 0000CB65 C8000000                	enter 0, 0
 17562                                  	; preparing a tail-call
 17563                                  	; preparing a non-tail-call
 17564 0000CB69 488B4520                	mov rax, PARAM(0)	; param s
 17565 0000CB6D 50                      	push rax
 17566 0000CB6E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17567 0000CB73 E8B8A90000              	call malloc
 17568 0000CB78 50                      	push rax
 17569 0000CB79 BF08000000              	mov rdi, 8 * 1	; new rib
 17570 0000CB7E E8ADA90000              	call malloc
 17571 0000CB83 50                      	push rax
 17572 0000CB84 BF18000000              	mov rdi, 8 * 3	; extended env
 17573 0000CB89 E8A2A90000              	call malloc
 17574 0000CB8E 488B7D10                	mov rdi, ENV
 17575 0000CB92 BE00000000              	mov rsi, 0
 17576 0000CB97 BA01000000              	mov rdx, 1
 17577                                  .L_lambda_simple_env_loop_0751:	; ext_env[i + 1] <-- env[i]
 17578 0000CB9C 4883FE02                	cmp rsi, 2
 17579 0000CBA0 7410                    	je .L_lambda_simple_env_end_0751
 17580 0000CBA2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17581 0000CBA6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17582 0000CBAA 48FFC6                  	inc rsi
 17583 0000CBAD 48FFC2                  	inc rdx
 17584 0000CBB0 EBEA                    	jmp .L_lambda_simple_env_loop_0751
 17585                                  .L_lambda_simple_env_end_0751:
 17586 0000CBB2 5B                      	pop rbx
 17587 0000CBB3 BE00000000              	mov rsi, 0
 17588                                  .L_lambda_simple_params_loop_0751:	; copy params
 17589 0000CBB8 4883FE01                	cmp rsi, 1
 17590 0000CBBC 740E                    	je .L_lambda_simple_params_end_0751
 17591 0000CBBE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17592 0000CBC3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17593 0000CBC7 48FFC6                  	inc rsi
 17594 0000CBCA EBEC                    	jmp .L_lambda_simple_params_loop_0751
 17595                                  .L_lambda_simple_params_end_0751:
 17596 0000CBCC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17597 0000CBCF 4889C3                  	mov rbx, rax
 17598 0000CBD2 58                      	pop rax
 17599 0000CBD3 C60004                  	mov byte [rax], T_closure
 17600 0000CBD6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17601 0000CBDA 48C74009[E7CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0751
 17602 0000CBE2 E9B6000000              	jmp .L_lambda_simple_end_0751
 17603                                  .L_lambda_simple_code_0751:	; lambda-simple body
 17604 0000CBE7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17605 0000CBED 740B                    	je .L_lambda_simple_arity_check_ok_083c
 17606 0000CBEF FF742410                	push qword [rsp + 8 * 2]
 17607 0000CBF3 6A01                    	push 1
 17608 0000CBF5 E9EFA80000              	jmp L_error_incorrect_arity_simple
 17609                                  .L_lambda_simple_arity_check_ok_083c:
 17610 0000CBFA C8000000                	enter 0, 0
 17611                                  	; preparing a tail-call
 17612                                  	; preparing a non-tail-call
 17613 0000CBFE 488B4520                	mov rax, PARAM(0)	; param ch
 17614 0000CC02 50                      	push rax
 17615 0000CC03 6A01                    	push 1	; arg count
 17616 0000CC05 488B0425[11130000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17617 0000CC0D 803805                  	cmp byte [rax], T_undefined
 17618 0000CC10 0F84EDA70000            	je L_error_fvar_undefined
 17619 0000CC16 803804                  	cmp byte [rax], T_closure
 17620 0000CC19 0F8568A80000            	jne L_error_non_closure
 17621 0000CC1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17622 0000CC22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17623 0000CC25 50                      	push rax
 17624 0000CC26 6A01                    	push 1	; arg count
 17625 0000CC28 488B0425[AB120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17626 0000CC30 803805                  	cmp byte [rax], T_undefined
 17627 0000CC33 0F84CAA70000            	je L_error_fvar_undefined
 17628 0000CC39 803804                  	cmp byte [rax], T_closure
 17629 0000CC3C 0F8545A80000            	jne L_error_non_closure
 17630 0000CC42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17631 0000CC45 FF7508                  	push qword [rbp + 8 *1]
 17632 0000CC48 4989C0                  	mov r8, rax
 17633 0000CC4B 488B5D18                	mov rbx, COUNT
 17634 0000CC4F 4883C303                	add rbx,3
 17635 0000CC53 48C1E303                	shl rbx,3
 17636 0000CC57 4801EB                  	add rbx, rbp
 17637 0000CC5A 488B6D00                	mov rbp, [rbp]
 17638 0000CC5E B900000000              	mov rcx,0
 17639 0000CC63 BA04000000              	mov rdx, 4
 17640 0000CC68 4889D0                  	mov rax, rdx
 17641 0000CC6B 48FFC8                  	dec rax
 17642 0000CC6E 48C1E003                	shl rax,3
 17643 0000CC72 4801E0                  	add rax, rsp
 17644                                  	.L_tc_recycle_frame_loop_095f:
 17645 0000CC75 4839D1                  	cmp rcx, rdx
 17646 0000CC78 7414                    	je .L_tc_recycle_frame_done_095f
 17647 0000CC7A 4C8B08                  	mov r9, qword [rax]
 17648 0000CC7D 4C890B                  	mov qword [rbx],r9
 17649 0000CC80 4883E808                	sub rax,8
 17650 0000CC84 4883EB08                	sub rbx,8
 17651 0000CC88 4883C101                	add rcx,1
 17652 0000CC8C EBE7                    	jmp .L_tc_recycle_frame_loop_095f
 17653                                  	.L_tc_recycle_frame_done_095f:
 17654 0000CC8E 4883C308                	add rbx,8
 17655 0000CC92 4889DC                  	mov rsp,rbx
 17656 0000CC95 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 17657 0000CC99 C9                      	leave
 17658 0000CC9A C21800                  	ret AND_KILL_FRAME(1)
 17659                                  .L_lambda_simple_end_0751:	; new closure is in rax
 17660 0000CC9D 50                      	push rax
 17661 0000CC9E 6A02                    	push 2	; arg count
 17662 0000CCA0 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
 17663 0000CCA8 803805                  	cmp byte [rax], T_undefined
 17664 0000CCAB 0F8452A70000            	je L_error_fvar_undefined
 17665 0000CCB1 803804                  	cmp byte [rax], T_closure
 17666 0000CCB4 0F85CDA70000            	jne L_error_non_closure
 17667 0000CCBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 17668 0000CCBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 17669 0000CCC0 50                      	push rax
 17670 0000CCC1 488B4510                	mov rax, ENV
 17671 0000CCC5 488B00                  	mov rax, qword [rax + 8 * 0]
 17672 0000CCC8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17673 0000CCCB 50                      	push rax
 17674 0000CCCC 6A02                    	push 2	; arg count
 17675 0000CCCE 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
 17676 0000CCD6 803805                  	cmp byte [rax], T_undefined
 17677 0000CCD9 0F8424A70000            	je L_error_fvar_undefined
 17678 0000CCDF 803804                  	cmp byte [rax], T_closure
 17679 0000CCE2 0F859FA70000            	jne L_error_non_closure
 17680 0000CCE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17681 0000CCEB FF7508                  	push qword [rbp + 8 *1]
 17682 0000CCEE 4989C0                  	mov r8, rax
 17683 0000CCF1 488B5D18                	mov rbx, COUNT
 17684 0000CCF5 4883C303                	add rbx,3
 17685 0000CCF9 48C1E303                	shl rbx,3
 17686 0000CCFD 4801EB                  	add rbx, rbp
 17687 0000CD00 488B6D00                	mov rbp, [rbp]
 17688 0000CD04 B900000000              	mov rcx,0
 17689 0000CD09 BA05000000              	mov rdx, 5
 17690 0000CD0E 4889D0                  	mov rax, rdx
 17691 0000CD11 48FFC8                  	dec rax
 17692 0000CD14 48C1E003                	shl rax,3
 17693 0000CD18 4801E0                  	add rax, rsp
 17694                                  	.L_tc_recycle_frame_loop_095e:
 17695 0000CD1B 4839D1                  	cmp rcx, rdx
 17696 0000CD1E 7414                    	je .L_tc_recycle_frame_done_095e
 17697 0000CD20 4C8B08                  	mov r9, qword [rax]
 17698 0000CD23 4C890B                  	mov qword [rbx],r9
 17699 0000CD26 4883E808                	sub rax,8
 17700 0000CD2A 4883EB08                	sub rbx,8
 17701 0000CD2E 4883C101                	add rcx,1
 17702 0000CD32 EBE7                    	jmp .L_tc_recycle_frame_loop_095e
 17703                                  	.L_tc_recycle_frame_done_095e:
 17704 0000CD34 4883C308                	add rbx,8
 17705 0000CD38 4889DC                  	mov rsp,rbx
 17706 0000CD3B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 17707                                  	LEAVE
    49 0000CD3F C9                  <1>  leave
 17708 0000CD40 C21800                  	ret AND_KILL_FRAME(1)
 17709                                  .L_lambda_opt_end_01d5:
 17710 0000CD43 C9                      	leave
 17711 0000CD44 C21800                  	ret AND_KILL_FRAME(1)
 17712                                  .L_lambda_simple_end_0750:	; new closure is in rax
 17713 0000CD47 50                      	push rax
 17714 0000CD48 6A01                    	push 1	; arg count
 17715 0000CD4A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17716 0000CD4F E8DCA70000              	call malloc
 17717 0000CD54 50                      	push rax
 17718 0000CD55 BF00000000              	mov rdi, 8 * 0	; new rib
 17719 0000CD5A E8D1A70000              	call malloc
 17720 0000CD5F 50                      	push rax
 17721 0000CD60 BF08000000              	mov rdi, 8 * 1	; extended env
 17722 0000CD65 E8C6A70000              	call malloc
 17723 0000CD6A 488B7D10                	mov rdi, ENV
 17724 0000CD6E BE00000000              	mov rsi, 0
 17725 0000CD73 BA01000000              	mov rdx, 1
 17726                                  .L_lambda_simple_env_loop_0752:	; ext_env[i + 1] <-- env[i]
 17727 0000CD78 4883FE00                	cmp rsi, 0
 17728 0000CD7C 7410                    	je .L_lambda_simple_env_end_0752
 17729 0000CD7E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17730 0000CD82 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17731 0000CD86 48FFC6                  	inc rsi
 17732 0000CD89 48FFC2                  	inc rdx
 17733 0000CD8C EBEA                    	jmp .L_lambda_simple_env_loop_0752
 17734                                  .L_lambda_simple_env_end_0752:
 17735 0000CD8E 5B                      	pop rbx
 17736 0000CD8F BE00000000              	mov rsi, 0
 17737                                  .L_lambda_simple_params_loop_0752:	; copy params
 17738 0000CD94 4883FE00                	cmp rsi, 0
 17739 0000CD98 740E                    	je .L_lambda_simple_params_end_0752
 17740 0000CD9A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17741 0000CD9F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17742 0000CDA3 48FFC6                  	inc rsi
 17743 0000CDA6 EBEC                    	jmp .L_lambda_simple_params_loop_0752
 17744                                  .L_lambda_simple_params_end_0752:
 17745 0000CDA8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17746 0000CDAB 4889C3                  	mov rbx, rax
 17747 0000CDAE 58                      	pop rax
 17748 0000CDAF C60004                  	mov byte [rax], T_closure
 17749 0000CDB2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17750 0000CDB6 48C74009[C3CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0752
 17751 0000CDBE E938010000              	jmp .L_lambda_simple_end_0752
 17752                                  .L_lambda_simple_code_0752:	; lambda-simple body
 17753 0000CDC3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17754 0000CDC9 740B                    	je .L_lambda_simple_arity_check_ok_083d
 17755 0000CDCB FF742410                	push qword [rsp + 8 * 2]
 17756 0000CDCF 6A01                    	push 1
 17757 0000CDD1 E913A70000              	jmp L_error_incorrect_arity_simple
 17758                                  .L_lambda_simple_arity_check_ok_083d:
 17759 0000CDD6 C8000000                	enter 0, 0
 17760                                  	; preparing a non-tail-call
 17761 0000CDDA 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 17762 0000CDE2 803805                  	cmp byte [rax], T_undefined
 17763 0000CDE5 0F8418A60000            	je L_error_fvar_undefined
 17764 0000CDEB 50                      	push rax
 17765 0000CDEC 6A01                    	push 1	; arg count
 17766 0000CDEE 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17767 0000CDF2 803804                  	cmp byte [rax], T_closure
 17768 0000CDF5 0F858CA60000            	jne L_error_non_closure
 17769 0000CDFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17770 0000CDFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17771 0000CE01 48890425[CD120000]      	mov qword [free_var_67], rax
 17772 0000CE09 48B8-                   	mov rax, sob_void
 17772 0000CE0B [0000000000000000] 
 17773                                  
 17774                                  	; preparing a non-tail-call
 17775 0000CE13 488B0425[AF0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17776 0000CE1B 803805                  	cmp byte [rax], T_undefined
 17777 0000CE1E 0F84DFA50000            	je L_error_fvar_undefined
 17778 0000CE24 50                      	push rax
 17779 0000CE25 6A01                    	push 1	; arg count
 17780 0000CE27 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17781 0000CE2B 803804                  	cmp byte [rax], T_closure
 17782 0000CE2E 0F8553A60000            	jne L_error_non_closure
 17783 0000CE34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17784 0000CE37 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17785 0000CE3A 48890425[BC120000]      	mov qword [free_var_66], rax
 17786 0000CE42 48B8-                   	mov rax, sob_void
 17786 0000CE44 [0000000000000000] 
 17787                                  
 17788                                  	; preparing a non-tail-call
 17789 0000CE4C 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 17790 0000CE54 803805                  	cmp byte [rax], T_undefined
 17791 0000CE57 0F84A6A50000            	je L_error_fvar_undefined
 17792 0000CE5D 50                      	push rax
 17793 0000CE5E 6A01                    	push 1	; arg count
 17794 0000CE60 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17795 0000CE64 803804                  	cmp byte [rax], T_closure
 17796 0000CE67 0F851AA60000            	jne L_error_non_closure
 17797 0000CE6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17798 0000CE70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17799 0000CE73 48890425[DE120000]      	mov qword [free_var_68], rax
 17800 0000CE7B 48B8-                   	mov rax, sob_void
 17800 0000CE7D [0000000000000000] 
 17801                                  
 17802                                  	; preparing a non-tail-call
 17803 0000CE85 488B0425[D10E0000]      	mov rax, qword [free_var_7]	; free var >
 17804 0000CE8D 803805                  	cmp byte [rax], T_undefined
 17805 0000CE90 0F846DA50000            	je L_error_fvar_undefined
 17806 0000CE96 50                      	push rax
 17807 0000CE97 6A01                    	push 1	; arg count
 17808 0000CE99 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17809 0000CE9D 803804                  	cmp byte [rax], T_closure
 17810 0000CEA0 0F85E1A50000            	jne L_error_non_closure
 17811 0000CEA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17812 0000CEA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17813 0000CEAC 48890425[00130000]      	mov qword [free_var_70], rax
 17814 0000CEB4 48B8-                   	mov rax, sob_void
 17814 0000CEB6 [0000000000000000] 
 17815                                  
 17816                                  	; preparing a non-tail-call
 17817 0000CEBE 488B0425[E20E0000]      	mov rax, qword [free_var_8]	; free var >=
 17818 0000CEC6 803805                  	cmp byte [rax], T_undefined
 17819 0000CEC9 0F8434A50000            	je L_error_fvar_undefined
 17820 0000CECF 50                      	push rax
 17821 0000CED0 6A01                    	push 1	; arg count
 17822 0000CED2 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17823 0000CED6 803804                  	cmp byte [rax], T_closure
 17824 0000CED9 0F85A8A50000            	jne L_error_non_closure
 17825 0000CEDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 17826 0000CEE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17827 0000CEE5 48890425[EF120000]      	mov qword [free_var_69], rax
 17828 0000CEED 48B8-                   	mov rax, sob_void
 17828 0000CEEF [0000000000000000] 
 17829 0000CEF7 C9                      	leave
 17830 0000CEF8 C21800                  	ret AND_KILL_FRAME(1)
 17831                                  .L_lambda_simple_end_0752:	; new closure is in rax
 17832 0000CEFB 803804                  	cmp byte [rax], T_closure
 17833 0000CEFE 0F8583A50000            	jne L_error_non_closure
 17834 0000CF04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17835 0000CF07 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17836                                  
 17837 0000CF0A 4889C7                  	mov rdi, rax
 17838 0000CF0D E873A80000              	call print_sexpr_if_not_void
 17839 0000CF12 48B8-                   	mov rax, L_constants + 0
 17839 0000CF14 [0000000000000000] 
 17840 0000CF1C 48890425[B8160000]      	mov qword [free_var_126], rax
 17841 0000CF24 48B8-                   	mov rax, sob_void
 17841 0000CF26 [0000000000000000] 
 17842                                  
 17843 0000CF2E 4889C7                  	mov rdi, rax
 17844 0000CF31 E84FA80000              	call print_sexpr_if_not_void
 17845 0000CF36 48B8-                   	mov rax, L_constants + 0
 17845 0000CF38 [0000000000000000] 
 17846 0000CF40 48890425[1E170000]      	mov qword [free_var_132], rax
 17847 0000CF48 48B8-                   	mov rax, sob_void
 17847 0000CF4A [0000000000000000] 
 17848                                  
 17849 0000CF52 4889C7                  	mov rdi, rax
 17850 0000CF55 E82BA80000              	call print_sexpr_if_not_void
 17851                                  	; preparing a non-tail-call
 17852 0000CF5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17853 0000CF5F E8CCA50000              	call malloc
 17854 0000CF64 50                      	push rax
 17855 0000CF65 BF00000000              	mov rdi, 8 * 0	; new rib
 17856 0000CF6A E8C1A50000              	call malloc
 17857 0000CF6F 50                      	push rax
 17858 0000CF70 BF08000000              	mov rdi, 8 * 1	; extended env
 17859 0000CF75 E8B6A50000              	call malloc
 17860 0000CF7A 488B7D10                	mov rdi, ENV
 17861 0000CF7E BE00000000              	mov rsi, 0
 17862 0000CF83 BA01000000              	mov rdx, 1
 17863                                  .L_lambda_simple_env_loop_0753:	; ext_env[i + 1] <-- env[i]
 17864 0000CF88 4883FE00                	cmp rsi, 0
 17865 0000CF8C 7410                    	je .L_lambda_simple_env_end_0753
 17866 0000CF8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17867 0000CF92 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17868 0000CF96 48FFC6                  	inc rsi
 17869 0000CF99 48FFC2                  	inc rdx
 17870 0000CF9C EBEA                    	jmp .L_lambda_simple_env_loop_0753
 17871                                  .L_lambda_simple_env_end_0753:
 17872 0000CF9E 5B                      	pop rbx
 17873 0000CF9F BE00000000              	mov rsi, 0
 17874                                  .L_lambda_simple_params_loop_0753:	; copy params
 17875 0000CFA4 4883FE00                	cmp rsi, 0
 17876 0000CFA8 740E                    	je .L_lambda_simple_params_end_0753
 17877 0000CFAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17878 0000CFAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17879 0000CFB3 48FFC6                  	inc rsi
 17880 0000CFB6 EBEC                    	jmp .L_lambda_simple_params_loop_0753
 17881                                  .L_lambda_simple_params_end_0753:
 17882 0000CFB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17883 0000CFBB 4889C3                  	mov rbx, rax
 17884 0000CFBE 58                      	pop rax
 17885 0000CFBF C60004                  	mov byte [rax], T_closure
 17886 0000CFC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17887 0000CFC6 48C74009[D3CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0753
 17888 0000CFCE E978010000              	jmp .L_lambda_simple_end_0753
 17889                                  .L_lambda_simple_code_0753:	; lambda-simple body
 17890 0000CFD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17891 0000CFD9 740B                    	je .L_lambda_simple_arity_check_ok_083e
 17892 0000CFDB FF742410                	push qword [rsp + 8 * 2]
 17893 0000CFDF 6A01                    	push 1
 17894 0000CFE1 E903A50000              	jmp L_error_incorrect_arity_simple
 17895                                  .L_lambda_simple_arity_check_ok_083e:
 17896 0000CFE6 C8000000                	enter 0, 0
 17897 0000CFEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17898 0000CFEF E83CA50000              	call malloc
 17899 0000CFF4 50                      	push rax
 17900 0000CFF5 BF08000000              	mov rdi, 8 * 1	; new rib
 17901 0000CFFA E831A50000              	call malloc
 17902 0000CFFF 50                      	push rax
 17903 0000D000 BF10000000              	mov rdi, 8 * 2	; extended env
 17904 0000D005 E826A50000              	call malloc
 17905 0000D00A 488B7D10                	mov rdi, ENV
 17906 0000D00E BE00000000              	mov rsi, 0
 17907 0000D013 BA01000000              	mov rdx, 1
 17908                                  .L_lambda_simple_env_loop_0754:	; ext_env[i + 1] <-- env[i]
 17909 0000D018 4883FE01                	cmp rsi, 1
 17910 0000D01C 7410                    	je .L_lambda_simple_env_end_0754
 17911 0000D01E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17912 0000D022 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17913 0000D026 48FFC6                  	inc rsi
 17914 0000D029 48FFC2                  	inc rdx
 17915 0000D02C EBEA                    	jmp .L_lambda_simple_env_loop_0754
 17916                                  .L_lambda_simple_env_end_0754:
 17917 0000D02E 5B                      	pop rbx
 17918 0000D02F BE00000000              	mov rsi, 0
 17919                                  .L_lambda_simple_params_loop_0754:	; copy params
 17920 0000D034 4883FE01                	cmp rsi, 1
 17921 0000D038 740E                    	je .L_lambda_simple_params_end_0754
 17922 0000D03A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17923 0000D03F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17924 0000D043 48FFC6                  	inc rsi
 17925 0000D046 EBEC                    	jmp .L_lambda_simple_params_loop_0754
 17926                                  .L_lambda_simple_params_end_0754:
 17927 0000D048 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17928 0000D04B 4889C3                  	mov rbx, rax
 17929 0000D04E 58                      	pop rax
 17930 0000D04F C60004                  	mov byte [rax], T_closure
 17931 0000D052 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17932 0000D056 48C74009[63D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0754
 17933 0000D05E E9E4000000              	jmp .L_lambda_simple_end_0754
 17934                                  .L_lambda_simple_code_0754:	; lambda-simple body
 17935 0000D063 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17936 0000D069 740B                    	je .L_lambda_simple_arity_check_ok_083f
 17937 0000D06B FF742410                	push qword [rsp + 8 * 2]
 17938 0000D06F 6A01                    	push 1
 17939 0000D071 E973A40000              	jmp L_error_incorrect_arity_simple
 17940                                  .L_lambda_simple_arity_check_ok_083f:
 17941 0000D076 C8000000                	enter 0, 0
 17942                                  	; preparing a tail-call
 17943                                  	; preparing a non-tail-call
 17944                                  	; preparing a non-tail-call
 17945 0000D07A 488B4520                	mov rax, PARAM(0)	; param str
 17946 0000D07E 50                      	push rax
 17947 0000D07F 6A01                    	push 1	; arg count
 17948 0000D081 488B0425[41160000]      	mov rax, qword [free_var_119]	; free var string->list
 17949 0000D089 803805                  	cmp byte [rax], T_undefined
 17950 0000D08C 0F8471A30000            	je L_error_fvar_undefined
 17951 0000D092 803804                  	cmp byte [rax], T_closure
 17952 0000D095 0F85ECA30000            	jne L_error_non_closure
 17953 0000D09B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17954 0000D09E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17955 0000D0A1 50                      	push rax
 17956 0000D0A2 488B4510                	mov rax, ENV
 17957 0000D0A6 488B00                  	mov rax, qword [rax + 8 * 0]
 17958 0000D0A9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17959 0000D0AC 50                      	push rax
 17960 0000D0AD 6A02                    	push 2	; arg count
 17961 0000D0AF 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
 17962 0000D0B7 803805                  	cmp byte [rax], T_undefined
 17963 0000D0BA 0F8443A30000            	je L_error_fvar_undefined
 17964 0000D0C0 803804                  	cmp byte [rax], T_closure
 17965 0000D0C3 0F85BEA30000            	jne L_error_non_closure
 17966 0000D0C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17967 0000D0CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17968 0000D0CF 50                      	push rax
 17969 0000D0D0 6A01                    	push 1	; arg count
 17970 0000D0D2 488B0425[98140000]      	mov rax, qword [free_var_94]	; free var list->string
 17971 0000D0DA 803805                  	cmp byte [rax], T_undefined
 17972 0000D0DD 0F8420A30000            	je L_error_fvar_undefined
 17973 0000D0E3 803804                  	cmp byte [rax], T_closure
 17974 0000D0E6 0F859BA30000            	jne L_error_non_closure
 17975 0000D0EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17976 0000D0EF FF7508                  	push qword [rbp + 8 *1]
 17977 0000D0F2 4989C0                  	mov r8, rax
 17978 0000D0F5 488B5D18                	mov rbx, COUNT
 17979 0000D0F9 4883C303                	add rbx,3
 17980 0000D0FD 48C1E303                	shl rbx,3
 17981 0000D101 4801EB                  	add rbx, rbp
 17982 0000D104 488B6D00                	mov rbp, [rbp]
 17983 0000D108 B900000000              	mov rcx,0
 17984 0000D10D BA04000000              	mov rdx, 4
 17985 0000D112 4889D0                  	mov rax, rdx
 17986 0000D115 48FFC8                  	dec rax
 17987 0000D118 48C1E003                	shl rax,3
 17988 0000D11C 4801E0                  	add rax, rsp
 17989                                  	.L_tc_recycle_frame_loop_0960:
 17990 0000D11F 4839D1                  	cmp rcx, rdx
 17991 0000D122 7414                    	je .L_tc_recycle_frame_done_0960
 17992 0000D124 4C8B08                  	mov r9, qword [rax]
 17993 0000D127 4C890B                  	mov qword [rbx],r9
 17994 0000D12A 4883E808                	sub rax,8
 17995 0000D12E 4883EB08                	sub rbx,8
 17996 0000D132 4883C101                	add rcx,1
 17997 0000D136 EBE7                    	jmp .L_tc_recycle_frame_loop_0960
 17998                                  	.L_tc_recycle_frame_done_0960:
 17999 0000D138 4883C308                	add rbx,8
 18000 0000D13C 4889DC                  	mov rsp,rbx
 18001 0000D13F 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 18002 0000D143 C9                      	leave
 18003 0000D144 C21800                  	ret AND_KILL_FRAME(1)
 18004                                  .L_lambda_simple_end_0754:	; new closure is in rax
 18005 0000D147 C9                      	leave
 18006 0000D148 C21800                  	ret AND_KILL_FRAME(1)
 18007                                  .L_lambda_simple_end_0753:	; new closure is in rax
 18008 0000D14B 50                      	push rax
 18009 0000D14C 6A01                    	push 1	; arg count
 18010 0000D14E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18011 0000D153 E8D8A30000              	call malloc
 18012 0000D158 50                      	push rax
 18013 0000D159 BF00000000              	mov rdi, 8 * 0	; new rib
 18014 0000D15E E8CDA30000              	call malloc
 18015 0000D163 50                      	push rax
 18016 0000D164 BF08000000              	mov rdi, 8 * 1	; extended env
 18017 0000D169 E8C2A30000              	call malloc
 18018 0000D16E 488B7D10                	mov rdi, ENV
 18019 0000D172 BE00000000              	mov rsi, 0
 18020 0000D177 BA01000000              	mov rdx, 1
 18021                                  .L_lambda_simple_env_loop_0755:	; ext_env[i + 1] <-- env[i]
 18022 0000D17C 4883FE00                	cmp rsi, 0
 18023 0000D180 7410                    	je .L_lambda_simple_env_end_0755
 18024 0000D182 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18025 0000D186 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18026 0000D18A 48FFC6                  	inc rsi
 18027 0000D18D 48FFC2                  	inc rdx
 18028 0000D190 EBEA                    	jmp .L_lambda_simple_env_loop_0755
 18029                                  .L_lambda_simple_env_end_0755:
 18030 0000D192 5B                      	pop rbx
 18031 0000D193 BE00000000              	mov rsi, 0
 18032                                  .L_lambda_simple_params_loop_0755:	; copy params
 18033 0000D198 4883FE00                	cmp rsi, 0
 18034 0000D19C 740E                    	je .L_lambda_simple_params_end_0755
 18035 0000D19E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18036 0000D1A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18037 0000D1A7 48FFC6                  	inc rsi
 18038 0000D1AA EBEC                    	jmp .L_lambda_simple_params_loop_0755
 18039                                  .L_lambda_simple_params_end_0755:
 18040 0000D1AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18041 0000D1AF 4889C3                  	mov rbx, rax
 18042 0000D1B2 58                      	pop rax
 18043 0000D1B3 C60004                  	mov byte [rax], T_closure
 18044 0000D1B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18045 0000D1BA 48C74009[C7D10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0755
 18046 0000D1C2 E98D000000              	jmp .L_lambda_simple_end_0755
 18047                                  .L_lambda_simple_code_0755:	; lambda-simple body
 18048 0000D1C7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18049 0000D1CD 740B                    	je .L_lambda_simple_arity_check_ok_0840
 18050 0000D1CF FF742410                	push qword [rsp + 8 * 2]
 18051 0000D1D3 6A01                    	push 1
 18052 0000D1D5 E90FA30000              	jmp L_error_incorrect_arity_simple
 18053                                  .L_lambda_simple_arity_check_ok_0840:
 18054 0000D1DA C8000000                	enter 0, 0
 18055                                  	; preparing a non-tail-call
 18056 0000D1DE 488B0425[11130000]      	mov rax, qword [free_var_71]	; free var char-downcase
 18057 0000D1E6 803805                  	cmp byte [rax], T_undefined
 18058 0000D1E9 0F8414A20000            	je L_error_fvar_undefined
 18059 0000D1EF 50                      	push rax
 18060 0000D1F0 6A01                    	push 1	; arg count
 18061 0000D1F2 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 18062 0000D1F6 803804                  	cmp byte [rax], T_closure
 18063 0000D1F9 0F8588A20000            	jne L_error_non_closure
 18064 0000D1FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18065 0000D202 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18066 0000D205 48890425[B8160000]      	mov qword [free_var_126], rax
 18067 0000D20D 48B8-                   	mov rax, sob_void
 18067 0000D20F [0000000000000000] 
 18068                                  
 18069                                  	; preparing a non-tail-call
 18070 0000D217 488B0425[22130000]      	mov rax, qword [free_var_72]	; free var char-upcase
 18071 0000D21F 803805                  	cmp byte [rax], T_undefined
 18072 0000D222 0F84DBA10000            	je L_error_fvar_undefined
 18073 0000D228 50                      	push rax
 18074 0000D229 6A01                    	push 1	; arg count
 18075 0000D22B 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 18076 0000D22F 803804                  	cmp byte [rax], T_closure
 18077 0000D232 0F854FA20000            	jne L_error_non_closure
 18078 0000D238 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18079 0000D23B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18080 0000D23E 48890425[1E170000]      	mov qword [free_var_132], rax
 18081 0000D246 48B8-                   	mov rax, sob_void
 18081 0000D248 [0000000000000000] 
 18082 0000D250 C9                      	leave
 18083 0000D251 C21800                  	ret AND_KILL_FRAME(1)
 18084                                  .L_lambda_simple_end_0755:	; new closure is in rax
 18085 0000D254 803804                  	cmp byte [rax], T_closure
 18086 0000D257 0F852AA20000            	jne L_error_non_closure
 18087 0000D25D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18088 0000D260 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18089                                  
 18090 0000D263 4889C7                  	mov rdi, rax
 18091 0000D266 E81AA50000              	call print_sexpr_if_not_void
 18092 0000D26B 48B8-                   	mov rax, L_constants + 0
 18092 0000D26D [0000000000000000] 
 18093 0000D275 48890425[40170000]      	mov qword [free_var_134], rax
 18094 0000D27D 48B8-                   	mov rax, sob_void
 18094 0000D27F [0000000000000000] 
 18095                                  
 18096 0000D287 4889C7                  	mov rdi, rax
 18097 0000D28A E8F6A40000              	call print_sexpr_if_not_void
 18098 0000D28F 48B8-                   	mov rax, L_constants + 0
 18098 0000D291 [0000000000000000] 
 18099 0000D299 48890425[2F170000]      	mov qword [free_var_133], rax
 18100 0000D2A1 48B8-                   	mov rax, sob_void
 18100 0000D2A3 [0000000000000000] 
 18101                                  
 18102 0000D2AB 4889C7                  	mov rdi, rax
 18103 0000D2AE E8D2A40000              	call print_sexpr_if_not_void
 18104 0000D2B3 48B8-                   	mov rax, L_constants + 0
 18104 0000D2B5 [0000000000000000] 
 18105 0000D2BD 48890425[51170000]      	mov qword [free_var_135], rax
 18106 0000D2C5 48B8-                   	mov rax, sob_void
 18106 0000D2C7 [0000000000000000] 
 18107                                  
 18108 0000D2CF 4889C7                  	mov rdi, rax
 18109 0000D2D2 E8AEA40000              	call print_sexpr_if_not_void
 18110 0000D2D7 48B8-                   	mov rax, L_constants + 0
 18110 0000D2D9 [0000000000000000] 
 18111 0000D2E1 48890425[62170000]      	mov qword [free_var_136], rax
 18112 0000D2E9 48B8-                   	mov rax, sob_void
 18112 0000D2EB [0000000000000000] 
 18113                                  
 18114 0000D2F3 4889C7                  	mov rdi, rax
 18115 0000D2F6 E88AA40000              	call print_sexpr_if_not_void
 18116 0000D2FB 48B8-                   	mov rax, L_constants + 0
 18116 0000D2FD [0000000000000000] 
 18117 0000D305 48890425[73170000]      	mov qword [free_var_137], rax
 18118 0000D30D 48B8-                   	mov rax, sob_void
 18118 0000D30F [0000000000000000] 
 18119                                  
 18120 0000D317 4889C7                  	mov rdi, rax
 18121 0000D31A E866A40000              	call print_sexpr_if_not_void
 18122 0000D31F 48B8-                   	mov rax, L_constants + 0
 18122 0000D321 [0000000000000000] 
 18123 0000D329 48890425[74160000]      	mov qword [free_var_122], rax
 18124 0000D331 48B8-                   	mov rax, sob_void
 18124 0000D333 [0000000000000000] 
 18125                                  
 18126 0000D33B 4889C7                  	mov rdi, rax
 18127 0000D33E E842A40000              	call print_sexpr_if_not_void
 18128 0000D343 48B8-                   	mov rax, L_constants + 0
 18128 0000D345 [0000000000000000] 
 18129 0000D34D 48890425[63160000]      	mov qword [free_var_121], rax
 18130 0000D355 48B8-                   	mov rax, sob_void
 18130 0000D357 [0000000000000000] 
 18131                                  
 18132 0000D35F 4889C7                  	mov rdi, rax
 18133 0000D362 E81EA40000              	call print_sexpr_if_not_void
 18134 0000D367 48B8-                   	mov rax, L_constants + 0
 18134 0000D369 [0000000000000000] 
 18135 0000D371 48890425[85160000]      	mov qword [free_var_123], rax
 18136 0000D379 48B8-                   	mov rax, sob_void
 18136 0000D37B [0000000000000000] 
 18137                                  
 18138 0000D383 4889C7                  	mov rdi, rax
 18139 0000D386 E8FAA30000              	call print_sexpr_if_not_void
 18140 0000D38B 48B8-                   	mov rax, L_constants + 0
 18140 0000D38D [0000000000000000] 
 18141 0000D395 48890425[96160000]      	mov qword [free_var_124], rax
 18142 0000D39D 48B8-                   	mov rax, sob_void
 18142 0000D39F [0000000000000000] 
 18143                                  
 18144 0000D3A7 4889C7                  	mov rdi, rax
 18145 0000D3AA E8D6A30000              	call print_sexpr_if_not_void
 18146 0000D3AF 48B8-                   	mov rax, L_constants + 0
 18146 0000D3B1 [0000000000000000] 
 18147 0000D3B9 48890425[A7160000]      	mov qword [free_var_125], rax
 18148 0000D3C1 48B8-                   	mov rax, sob_void
 18148 0000D3C3 [0000000000000000] 
 18149                                  
 18150 0000D3CB 4889C7                  	mov rdi, rax
 18151 0000D3CE E8B2A30000              	call print_sexpr_if_not_void
 18152                                  	; preparing a non-tail-call
 18153 0000D3D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18154 0000D3D8 E853A10000              	call malloc
 18155 0000D3DD 50                      	push rax
 18156 0000D3DE BF00000000              	mov rdi, 8 * 0	; new rib
 18157 0000D3E3 E848A10000              	call malloc
 18158 0000D3E8 50                      	push rax
 18159 0000D3E9 BF08000000              	mov rdi, 8 * 1	; extended env
 18160 0000D3EE E83DA10000              	call malloc
 18161 0000D3F3 488B7D10                	mov rdi, ENV
 18162 0000D3F7 BE00000000              	mov rsi, 0
 18163 0000D3FC BA01000000              	mov rdx, 1
 18164                                  .L_lambda_simple_env_loop_0756:	; ext_env[i + 1] <-- env[i]
 18165 0000D401 4883FE00                	cmp rsi, 0
 18166 0000D405 7410                    	je .L_lambda_simple_env_end_0756
 18167 0000D407 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18168 0000D40B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18169 0000D40F 48FFC6                  	inc rsi
 18170 0000D412 48FFC2                  	inc rdx
 18171 0000D415 EBEA                    	jmp .L_lambda_simple_env_loop_0756
 18172                                  .L_lambda_simple_env_end_0756:
 18173 0000D417 5B                      	pop rbx
 18174 0000D418 BE00000000              	mov rsi, 0
 18175                                  .L_lambda_simple_params_loop_0756:	; copy params
 18176 0000D41D 4883FE00                	cmp rsi, 0
 18177 0000D421 740E                    	je .L_lambda_simple_params_end_0756
 18178 0000D423 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18179 0000D428 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18180 0000D42C 48FFC6                  	inc rsi
 18181 0000D42F EBEC                    	jmp .L_lambda_simple_params_loop_0756
 18182                                  .L_lambda_simple_params_end_0756:
 18183 0000D431 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18184 0000D434 4889C3                  	mov rbx, rax
 18185 0000D437 58                      	pop rax
 18186 0000D438 C60004                  	mov byte [rax], T_closure
 18187 0000D43B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18188 0000D43F 48C74009[4CD40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0756
 18189 0000D447 E9D70D0000              	jmp .L_lambda_simple_end_0756
 18190                                  .L_lambda_simple_code_0756:	; lambda-simple body
 18191 0000D44C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18192 0000D452 740B                    	je .L_lambda_simple_arity_check_ok_0841
 18193 0000D454 FF742410                	push qword [rsp + 8 * 2]
 18194 0000D458 6A02                    	push 2
 18195 0000D45A E98AA00000              	jmp L_error_incorrect_arity_simple
 18196                                  .L_lambda_simple_arity_check_ok_0841:
 18197 0000D45F C8000000                	enter 0, 0
 18198                                  	; preparing a tail-call
 18199 0000D463 48B8-                   	mov rax, L_constants + 1993
 18199 0000D465 [C907000000000000] 
 18200 0000D46D 50                      	push rax
 18201 0000D46E 6A01                    	push 1	; arg count
 18202 0000D470 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18203 0000D475 E8B6A00000              	call malloc
 18204 0000D47A 50                      	push rax
 18205 0000D47B BF10000000              	mov rdi, 8 * 2	; new rib
 18206 0000D480 E8ABA00000              	call malloc
 18207 0000D485 50                      	push rax
 18208 0000D486 BF10000000              	mov rdi, 8 * 2	; extended env
 18209 0000D48B E8A0A00000              	call malloc
 18210 0000D490 488B7D10                	mov rdi, ENV
 18211 0000D494 BE00000000              	mov rsi, 0
 18212 0000D499 BA01000000              	mov rdx, 1
 18213                                  .L_lambda_simple_env_loop_0757:	; ext_env[i + 1] <-- env[i]
 18214 0000D49E 4883FE01                	cmp rsi, 1
 18215 0000D4A2 7410                    	je .L_lambda_simple_env_end_0757
 18216 0000D4A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18217 0000D4A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18218 0000D4AC 48FFC6                  	inc rsi
 18219 0000D4AF 48FFC2                  	inc rdx
 18220 0000D4B2 EBEA                    	jmp .L_lambda_simple_env_loop_0757
 18221                                  .L_lambda_simple_env_end_0757:
 18222 0000D4B4 5B                      	pop rbx
 18223 0000D4B5 BE00000000              	mov rsi, 0
 18224                                  .L_lambda_simple_params_loop_0757:	; copy params
 18225 0000D4BA 4883FE02                	cmp rsi, 2
 18226 0000D4BE 740E                    	je .L_lambda_simple_params_end_0757
 18227 0000D4C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18228 0000D4C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18229 0000D4C9 48FFC6                  	inc rsi
 18230 0000D4CC EBEC                    	jmp .L_lambda_simple_params_loop_0757
 18231                                  .L_lambda_simple_params_end_0757:
 18232 0000D4CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18233 0000D4D1 4889C3                  	mov rbx, rax
 18234 0000D4D4 58                      	pop rax
 18235 0000D4D5 C60004                  	mov byte [rax], T_closure
 18236 0000D4D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18237 0000D4DC 48C74009[E9D40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0757
 18238 0000D4E4 E9D60C0000              	jmp .L_lambda_simple_end_0757
 18239                                  .L_lambda_simple_code_0757:	; lambda-simple body
 18240 0000D4E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18241 0000D4EF 740B                    	je .L_lambda_simple_arity_check_ok_0842
 18242 0000D4F1 FF742410                	push qword [rsp + 8 * 2]
 18243 0000D4F5 6A01                    	push 1
 18244 0000D4F7 E9ED9F0000              	jmp L_error_incorrect_arity_simple
 18245                                  .L_lambda_simple_arity_check_ok_0842:
 18246 0000D4FC C8000000                	enter 0, 0
 18247 0000D500 BF08000000              	mov rdi, 8
 18248 0000D505 E826A00000              	call malloc
 18249 0000D50A 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 18250 0000D50E 488918                  	mov qword [rax], rbx
 18251 0000D511 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 18252 0000D515 48B8-                   	mov rax, sob_void
 18252 0000D517 [0000000000000000] 
 18253                                  
 18254 0000D51F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18255 0000D524 E807A00000              	call malloc
 18256 0000D529 50                      	push rax
 18257 0000D52A BF08000000              	mov rdi, 8 * 1	; new rib
 18258 0000D52F E8FC9F0000              	call malloc
 18259 0000D534 50                      	push rax
 18260 0000D535 BF18000000              	mov rdi, 8 * 3	; extended env
 18261 0000D53A E8F19F0000              	call malloc
 18262 0000D53F 488B7D10                	mov rdi, ENV
 18263 0000D543 BE00000000              	mov rsi, 0
 18264 0000D548 BA01000000              	mov rdx, 1
 18265                                  .L_lambda_simple_env_loop_0758:	; ext_env[i + 1] <-- env[i]
 18266 0000D54D 4883FE02                	cmp rsi, 2
 18267 0000D551 7410                    	je .L_lambda_simple_env_end_0758
 18268 0000D553 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18269 0000D557 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18270 0000D55B 48FFC6                  	inc rsi
 18271 0000D55E 48FFC2                  	inc rdx
 18272 0000D561 EBEA                    	jmp .L_lambda_simple_env_loop_0758
 18273                                  .L_lambda_simple_env_end_0758:
 18274 0000D563 5B                      	pop rbx
 18275 0000D564 BE00000000              	mov rsi, 0
 18276                                  .L_lambda_simple_params_loop_0758:	; copy params
 18277 0000D569 4883FE01                	cmp rsi, 1
 18278 0000D56D 740E                    	je .L_lambda_simple_params_end_0758
 18279 0000D56F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18280 0000D574 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18281 0000D578 48FFC6                  	inc rsi
 18282 0000D57B EBEC                    	jmp .L_lambda_simple_params_loop_0758
 18283                                  .L_lambda_simple_params_end_0758:
 18284 0000D57D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18285 0000D580 4889C3                  	mov rbx, rax
 18286 0000D583 58                      	pop rax
 18287 0000D584 C60004                  	mov byte [rax], T_closure
 18288 0000D587 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18289 0000D58B 48C74009[98D50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0758
 18290 0000D593 E9AE020000              	jmp .L_lambda_simple_end_0758
 18291                                  .L_lambda_simple_code_0758:	; lambda-simple body
 18292 0000D598 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18293 0000D59E 740B                    	je .L_lambda_simple_arity_check_ok_0843
 18294 0000D5A0 FF742410                	push qword [rsp + 8 * 2]
 18295 0000D5A4 6A05                    	push 5
 18296 0000D5A6 E93E9F0000              	jmp L_error_incorrect_arity_simple
 18297                                  .L_lambda_simple_arity_check_ok_0843:
 18298 0000D5AB C8000000                	enter 0, 0
 18299                                  	; preparing a non-tail-call
 18300 0000D5AF 488B4530                	mov rax, PARAM(2)	; param len1
 18301 0000D5B3 50                      	push rax
 18302 0000D5B4 488B4520                	mov rax, PARAM(0)	; param i
 18303 0000D5B8 50                      	push rax
 18304 0000D5B9 6A02                    	push 2	; arg count
 18305 0000D5BB 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 18306 0000D5C3 803805                  	cmp byte [rax], T_undefined
 18307 0000D5C6 0F84379E0000            	je L_error_fvar_undefined
 18308 0000D5CC 803804                  	cmp byte [rax], T_closure
 18309 0000D5CF 0F85B29E0000            	jne L_error_non_closure
 18310 0000D5D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18311 0000D5D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18312 0000D5DB 483D[02000000]          	cmp rax, sob_boolean_false
 18313 0000D5E1 742E                    	je .L_if_else_0522
 18314                                  	; preparing a non-tail-call
 18315 0000D5E3 488B4540                	mov rax, PARAM(4)	; param len2
 18316 0000D5E7 50                      	push rax
 18317 0000D5E8 488B4530                	mov rax, PARAM(2)	; param len1
 18318 0000D5EC 50                      	push rax
 18319 0000D5ED 6A02                    	push 2	; arg count
 18320 0000D5EF 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 18321 0000D5F7 803805                  	cmp byte [rax], T_undefined
 18322 0000D5FA 0F84039E0000            	je L_error_fvar_undefined
 18323 0000D600 803804                  	cmp byte [rax], T_closure
 18324 0000D603 0F857E9E0000            	jne L_error_non_closure
 18325 0000D609 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18326 0000D60C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18327 0000D60F EB0A                    	jmp .L_if_end_05a9
 18328                                  .L_if_else_0522:
 18329 0000D611 48B8-                   	mov rax, L_constants + 2
 18329 0000D613 [0200000000000000] 
 18330                                  .L_if_end_05a9:
 18331 0000D61B 483D[02000000]          	cmp rax, sob_boolean_false
 18332 0000D621 0F851B020000            	jne .L_if_end_05a8
 18333                                  	; preparing a non-tail-call
 18334 0000D627 488B4530                	mov rax, PARAM(2)	; param len1
 18335 0000D62B 50                      	push rax
 18336 0000D62C 488B4520                	mov rax, PARAM(0)	; param i
 18337 0000D630 50                      	push rax
 18338 0000D631 6A02                    	push 2	; arg count
 18339 0000D633 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 18340 0000D63B 803805                  	cmp byte [rax], T_undefined
 18341 0000D63E 0F84BF9D0000            	je L_error_fvar_undefined
 18342 0000D644 803804                  	cmp byte [rax], T_closure
 18343 0000D647 0F853A9E0000            	jne L_error_non_closure
 18344 0000D64D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18345 0000D650 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18346 0000D653 483D[02000000]          	cmp rax, sob_boolean_false
 18347 0000D659 0F84D1010000            	je .L_if_else_0524
 18348                                  	; preparing a non-tail-call
 18349                                  	; preparing a non-tail-call
 18350 0000D65F 488B4520                	mov rax, PARAM(0)	; param i
 18351 0000D663 50                      	push rax
 18352 0000D664 488B4538                	mov rax, PARAM(3)	; param str2
 18353 0000D668 50                      	push rax
 18354 0000D669 6A02                    	push 2	; arg count
 18355 0000D66B 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18356 0000D673 803805                  	cmp byte [rax], T_undefined
 18357 0000D676 0F84879D0000            	je L_error_fvar_undefined
 18358 0000D67C 803804                  	cmp byte [rax], T_closure
 18359 0000D67F 0F85029E0000            	jne L_error_non_closure
 18360 0000D685 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18361 0000D688 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18362 0000D68B 50                      	push rax
 18363                                  	; preparing a non-tail-call
 18364 0000D68C 488B4520                	mov rax, PARAM(0)	; param i
 18365 0000D690 50                      	push rax
 18366 0000D691 488B4528                	mov rax, PARAM(1)	; param str1
 18367 0000D695 50                      	push rax
 18368 0000D696 6A02                    	push 2	; arg count
 18369 0000D698 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18370 0000D6A0 803805                  	cmp byte [rax], T_undefined
 18371 0000D6A3 0F845A9D0000            	je L_error_fvar_undefined
 18372 0000D6A9 803804                  	cmp byte [rax], T_closure
 18373 0000D6AC 0F85D59D0000            	jne L_error_non_closure
 18374 0000D6B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18375 0000D6B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18376 0000D6B8 50                      	push rax
 18377 0000D6B9 6A02                    	push 2	; arg count
 18378 0000D6BB 488B4510                	mov rax, ENV
 18379 0000D6BF 488B4008                	mov rax, qword [rax + 8 * 1]
 18380 0000D6C3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18381 0000D6C6 803804                  	cmp byte [rax], T_closure
 18382 0000D6C9 0F85B89D0000            	jne L_error_non_closure
 18383 0000D6CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18384 0000D6D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18385 0000D6D5 483D[02000000]          	cmp rax, sob_boolean_false
 18386 0000D6DB 0F854D010000            	jne .L_if_end_05aa
 18387                                  	; preparing a non-tail-call
 18388                                  	; preparing a non-tail-call
 18389 0000D6E1 488B4520                	mov rax, PARAM(0)	; param i
 18390 0000D6E5 50                      	push rax
 18391 0000D6E6 488B4538                	mov rax, PARAM(3)	; param str2
 18392 0000D6EA 50                      	push rax
 18393 0000D6EB 6A02                    	push 2	; arg count
 18394 0000D6ED 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18395 0000D6F5 803805                  	cmp byte [rax], T_undefined
 18396 0000D6F8 0F84059D0000            	je L_error_fvar_undefined
 18397 0000D6FE 803804                  	cmp byte [rax], T_closure
 18398 0000D701 0F85809D0000            	jne L_error_non_closure
 18399 0000D707 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18400 0000D70A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18401 0000D70D 50                      	push rax
 18402                                  	; preparing a non-tail-call
 18403 0000D70E 488B4520                	mov rax, PARAM(0)	; param i
 18404 0000D712 50                      	push rax
 18405 0000D713 488B4528                	mov rax, PARAM(1)	; param str1
 18406 0000D717 50                      	push rax
 18407 0000D718 6A02                    	push 2	; arg count
 18408 0000D71A 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18409 0000D722 803805                  	cmp byte [rax], T_undefined
 18410 0000D725 0F84D89C0000            	je L_error_fvar_undefined
 18411 0000D72B 803804                  	cmp byte [rax], T_closure
 18412 0000D72E 0F85539D0000            	jne L_error_non_closure
 18413 0000D734 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18414 0000D737 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18415 0000D73A 50                      	push rax
 18416 0000D73B 6A02                    	push 2	; arg count
 18417 0000D73D 488B4510                	mov rax, ENV
 18418 0000D741 488B4008                	mov rax, qword [rax + 8 * 1]
 18419 0000D745 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18420 0000D749 803804                  	cmp byte [rax], T_closure
 18421 0000D74C 0F85359D0000            	jne L_error_non_closure
 18422 0000D752 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18423 0000D755 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18424 0000D758 483D[02000000]          	cmp rax, sob_boolean_false
 18425 0000D75E 0F84B8000000            	je .L_if_else_0523
 18426                                  	; preparing a tail-call
 18427 0000D764 488B4540                	mov rax, PARAM(4)	; param len2
 18428 0000D768 50                      	push rax
 18429 0000D769 488B4538                	mov rax, PARAM(3)	; param str2
 18430 0000D76D 50                      	push rax
 18431 0000D76E 488B4530                	mov rax, PARAM(2)	; param len1
 18432 0000D772 50                      	push rax
 18433 0000D773 488B4528                	mov rax, PARAM(1)	; param str1
 18434 0000D777 50                      	push rax
 18435                                  	; preparing a non-tail-call
 18436 0000D778 48B8-                   	mov rax, L_constants + 2270
 18436 0000D77A [DE08000000000000] 
 18437 0000D782 50                      	push rax
 18438 0000D783 488B4520                	mov rax, PARAM(0)	; param i
 18439 0000D787 50                      	push rax
 18440 0000D788 6A02                    	push 2	; arg count
 18441 0000D78A 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 18442 0000D792 803805                  	cmp byte [rax], T_undefined
 18443 0000D795 0F84689C0000            	je L_error_fvar_undefined
 18444 0000D79B 803804                  	cmp byte [rax], T_closure
 18445 0000D79E 0F85E39C0000            	jne L_error_non_closure
 18446 0000D7A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18447 0000D7A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18448 0000D7AA 50                      	push rax
 18449 0000D7AB 6A05                    	push 5	; arg count
 18450 0000D7AD 488B4510                	mov rax, ENV
 18451 0000D7B1 488B00                  	mov rax, qword [rax + 8 * 0]
 18452 0000D7B4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18453 0000D7B7 488B00                  	mov rax, qword [rax]
 18454 0000D7BA 803804                  	cmp byte [rax], T_closure
 18455 0000D7BD 0F85C49C0000            	jne L_error_non_closure
 18456 0000D7C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18457 0000D7C6 FF7508                  	push qword [rbp + 8 *1]
 18458 0000D7C9 4989C0                  	mov r8, rax
 18459 0000D7CC 488B5D18                	mov rbx, COUNT
 18460 0000D7D0 4883C303                	add rbx,3
 18461 0000D7D4 48C1E303                	shl rbx,3
 18462 0000D7D8 4801EB                  	add rbx, rbp
 18463 0000D7DB 488B6D00                	mov rbp, [rbp]
 18464 0000D7DF B900000000              	mov rcx,0
 18465 0000D7E4 BA08000000              	mov rdx, 8
 18466 0000D7E9 4889D0                  	mov rax, rdx
 18467 0000D7EC 48FFC8                  	dec rax
 18468 0000D7EF 48C1E003                	shl rax,3
 18469 0000D7F3 4801E0                  	add rax, rsp
 18470                                  	.L_tc_recycle_frame_loop_0962:
 18471 0000D7F6 4839D1                  	cmp rcx, rdx
 18472 0000D7F9 7414                    	je .L_tc_recycle_frame_done_0962
 18473 0000D7FB 4C8B08                  	mov r9, qword [rax]
 18474 0000D7FE 4C890B                  	mov qword [rbx],r9
 18475 0000D801 4883E808                	sub rax,8
 18476 0000D805 4883EB08                	sub rbx,8
 18477 0000D809 4883C101                	add rcx,1
 18478 0000D80D EBE7                    	jmp .L_tc_recycle_frame_loop_0962
 18479                                  	.L_tc_recycle_frame_done_0962:
 18480 0000D80F 4883C308                	add rbx,8
 18481 0000D813 4889DC                  	mov rsp,rbx
 18482 0000D816 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 18483 0000D81A EB0A                    	jmp .L_if_end_05ab
 18484                                  .L_if_else_0523:
 18485 0000D81C 48B8-                   	mov rax, L_constants + 2
 18485 0000D81E [0200000000000000] 
 18486                                  .L_if_end_05ab:
 18487 0000D826 483D[02000000]          	cmp rax, sob_boolean_false
 18488 0000D82C 7500                    	jne .L_if_end_05aa
 18489                                  .L_if_end_05aa:
 18490 0000D82E EB0A                    	jmp .L_if_end_05ac
 18491                                  .L_if_else_0524:
 18492 0000D830 48B8-                   	mov rax, L_constants + 2
 18492 0000D832 [0200000000000000] 
 18493                                  .L_if_end_05ac:
 18494 0000D83A 483D[02000000]          	cmp rax, sob_boolean_false
 18495 0000D840 7500                    	jne .L_if_end_05a8
 18496                                  .L_if_end_05a8:
 18497 0000D842 C9                      	leave
 18498 0000D843 C23800                  	ret AND_KILL_FRAME(5)
 18499                                  .L_lambda_simple_end_0758:	; new closure is in rax
 18500 0000D846 50                      	push rax
 18501 0000D847 488B4520                	mov rax, PARAM(0)	; param run
 18502 0000D84B 8F00                    	pop qword [rax]
 18503 0000D84D 48B8-                   	mov rax, sob_void
 18503 0000D84F [0000000000000000] 
 18504                                  
 18505                                  	; preparing a tail-call
 18506 0000D857 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18507 0000D85C E8CF9C0000              	call malloc
 18508 0000D861 50                      	push rax
 18509 0000D862 BF08000000              	mov rdi, 8 * 1	; new rib
 18510 0000D867 E8C49C0000              	call malloc
 18511 0000D86C 50                      	push rax
 18512 0000D86D BF18000000              	mov rdi, 8 * 3	; extended env
 18513 0000D872 E8B99C0000              	call malloc
 18514 0000D877 488B7D10                	mov rdi, ENV
 18515 0000D87B BE00000000              	mov rsi, 0
 18516 0000D880 BA01000000              	mov rdx, 1
 18517                                  .L_lambda_simple_env_loop_0759:	; ext_env[i + 1] <-- env[i]
 18518 0000D885 4883FE02                	cmp rsi, 2
 18519 0000D889 7410                    	je .L_lambda_simple_env_end_0759
 18520 0000D88B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18521 0000D88F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18522 0000D893 48FFC6                  	inc rsi
 18523 0000D896 48FFC2                  	inc rdx
 18524 0000D899 EBEA                    	jmp .L_lambda_simple_env_loop_0759
 18525                                  .L_lambda_simple_env_end_0759:
 18526 0000D89B 5B                      	pop rbx
 18527 0000D89C BE00000000              	mov rsi, 0
 18528                                  .L_lambda_simple_params_loop_0759:	; copy params
 18529 0000D8A1 4883FE01                	cmp rsi, 1
 18530 0000D8A5 740E                    	je .L_lambda_simple_params_end_0759
 18531 0000D8A7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18532 0000D8AC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18533 0000D8B0 48FFC6                  	inc rsi
 18534 0000D8B3 EBEC                    	jmp .L_lambda_simple_params_loop_0759
 18535                                  .L_lambda_simple_params_end_0759:
 18536 0000D8B5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18537 0000D8B8 4889C3                  	mov rbx, rax
 18538 0000D8BB 58                      	pop rax
 18539 0000D8BC C60004                  	mov byte [rax], T_closure
 18540 0000D8BF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18541 0000D8C3 48C74009[D0D80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0759
 18542 0000D8CB E9D6020000              	jmp .L_lambda_simple_end_0759
 18543                                  .L_lambda_simple_code_0759:	; lambda-simple body
 18544 0000D8D0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18545 0000D8D6 740B                    	je .L_lambda_simple_arity_check_ok_0844
 18546 0000D8D8 FF742410                	push qword [rsp + 8 * 2]
 18547 0000D8DC 6A02                    	push 2
 18548 0000D8DE E9069C0000              	jmp L_error_incorrect_arity_simple
 18549                                  .L_lambda_simple_arity_check_ok_0844:
 18550 0000D8E3 C8000000                	enter 0, 0
 18551                                  	; preparing a tail-call
 18552                                  	; preparing a non-tail-call
 18553 0000D8E7 488B4528                	mov rax, PARAM(1)	; param str2
 18554 0000D8EB 50                      	push rax
 18555 0000D8EC 6A01                    	push 1	; arg count
 18556 0000D8EE 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 18557 0000D8F6 803805                  	cmp byte [rax], T_undefined
 18558 0000D8F9 0F84049B0000            	je L_error_fvar_undefined
 18559 0000D8FF 803804                  	cmp byte [rax], T_closure
 18560 0000D902 0F857F9B0000            	jne L_error_non_closure
 18561 0000D908 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18562 0000D90B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18563 0000D90E 50                      	push rax
 18564                                  	; preparing a non-tail-call
 18565 0000D90F 488B4520                	mov rax, PARAM(0)	; param str1
 18566 0000D913 50                      	push rax
 18567 0000D914 6A01                    	push 1	; arg count
 18568 0000D916 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 18569 0000D91E 803805                  	cmp byte [rax], T_undefined
 18570 0000D921 0F84DC9A0000            	je L_error_fvar_undefined
 18571 0000D927 803804                  	cmp byte [rax], T_closure
 18572 0000D92A 0F85579B0000            	jne L_error_non_closure
 18573 0000D930 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18574 0000D933 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18575 0000D936 50                      	push rax
 18576 0000D937 6A02                    	push 2	; arg count
 18577 0000D939 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18578 0000D93E E8ED9B0000              	call malloc
 18579 0000D943 50                      	push rax
 18580 0000D944 BF10000000              	mov rdi, 8 * 2	; new rib
 18581 0000D949 E8E29B0000              	call malloc
 18582 0000D94E 50                      	push rax
 18583 0000D94F BF20000000              	mov rdi, 8 * 4	; extended env
 18584 0000D954 E8D79B0000              	call malloc
 18585 0000D959 488B7D10                	mov rdi, ENV
 18586 0000D95D BE00000000              	mov rsi, 0
 18587 0000D962 BA01000000              	mov rdx, 1
 18588                                  .L_lambda_simple_env_loop_075a:	; ext_env[i + 1] <-- env[i]
 18589 0000D967 4883FE03                	cmp rsi, 3
 18590 0000D96B 7410                    	je .L_lambda_simple_env_end_075a
 18591 0000D96D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18592 0000D971 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18593 0000D975 48FFC6                  	inc rsi
 18594 0000D978 48FFC2                  	inc rdx
 18595 0000D97B EBEA                    	jmp .L_lambda_simple_env_loop_075a
 18596                                  .L_lambda_simple_env_end_075a:
 18597 0000D97D 5B                      	pop rbx
 18598 0000D97E BE00000000              	mov rsi, 0
 18599                                  .L_lambda_simple_params_loop_075a:	; copy params
 18600 0000D983 4883FE02                	cmp rsi, 2
 18601 0000D987 740E                    	je .L_lambda_simple_params_end_075a
 18602 0000D989 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18603 0000D98E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18604 0000D992 48FFC6                  	inc rsi
 18605 0000D995 EBEC                    	jmp .L_lambda_simple_params_loop_075a
 18606                                  .L_lambda_simple_params_end_075a:
 18607 0000D997 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18608 0000D99A 4889C3                  	mov rbx, rax
 18609 0000D99D 58                      	pop rax
 18610 0000D99E C60004                  	mov byte [rax], T_closure
 18611 0000D9A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18612 0000D9A5 48C74009[B2D90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075a
 18613 0000D9AD E990010000              	jmp .L_lambda_simple_end_075a
 18614                                  .L_lambda_simple_code_075a:	; lambda-simple body
 18615 0000D9B2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18616 0000D9B8 740B                    	je .L_lambda_simple_arity_check_ok_0845
 18617 0000D9BA FF742410                	push qword [rsp + 8 * 2]
 18618 0000D9BE 6A02                    	push 2
 18619 0000D9C0 E9249B0000              	jmp L_error_incorrect_arity_simple
 18620                                  .L_lambda_simple_arity_check_ok_0845:
 18621 0000D9C5 C8000000                	enter 0, 0
 18622                                  	; preparing a non-tail-call
 18623 0000D9C9 488B4528                	mov rax, PARAM(1)	; param len2
 18624 0000D9CD 50                      	push rax
 18625 0000D9CE 488B4520                	mov rax, PARAM(0)	; param len1
 18626 0000D9D2 50                      	push rax
 18627 0000D9D3 6A02                    	push 2	; arg count
 18628 0000D9D5 488B0425[AF0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18629 0000D9DD 803805                  	cmp byte [rax], T_undefined
 18630 0000D9E0 0F841D9A0000            	je L_error_fvar_undefined
 18631 0000D9E6 803804                  	cmp byte [rax], T_closure
 18632 0000D9E9 0F85989A0000            	jne L_error_non_closure
 18633 0000D9EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18634 0000D9F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18635 0000D9F5 483D[02000000]          	cmp rax, sob_boolean_false
 18636 0000D9FB 0F84A1000000            	je .L_if_else_0525
 18637                                  	; preparing a tail-call
 18638 0000DA01 488B4528                	mov rax, PARAM(1)	; param len2
 18639 0000DA05 50                      	push rax
 18640 0000DA06 488B4510                	mov rax, ENV
 18641 0000DA0A 488B00                  	mov rax, qword [rax + 8 * 0]
 18642 0000DA0D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18643 0000DA11 50                      	push rax
 18644 0000DA12 488B4520                	mov rax, PARAM(0)	; param len1
 18645 0000DA16 50                      	push rax
 18646 0000DA17 488B4510                	mov rax, ENV
 18647 0000DA1B 488B00                  	mov rax, qword [rax + 8 * 0]
 18648 0000DA1E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18649 0000DA21 50                      	push rax
 18650 0000DA22 48B8-                   	mov rax, L_constants + 2135
 18650 0000DA24 [5708000000000000] 
 18651 0000DA2C 50                      	push rax
 18652 0000DA2D 6A05                    	push 5	; arg count
 18653 0000DA2F 488B4510                	mov rax, ENV
 18654 0000DA33 488B4008                	mov rax, qword [rax + 8 * 1]
 18655 0000DA37 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18656 0000DA3A 488B00                  	mov rax, qword [rax]
 18657 0000DA3D 803804                  	cmp byte [rax], T_closure
 18658 0000DA40 0F85419A0000            	jne L_error_non_closure
 18659 0000DA46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18660 0000DA49 FF7508                  	push qword [rbp + 8 *1]
 18661 0000DA4C 4989C0                  	mov r8, rax
 18662 0000DA4F 488B5D18                	mov rbx, COUNT
 18663 0000DA53 4883C303                	add rbx,3
 18664 0000DA57 48C1E303                	shl rbx,3
 18665 0000DA5B 4801EB                  	add rbx, rbp
 18666 0000DA5E 488B6D00                	mov rbp, [rbp]
 18667 0000DA62 B900000000              	mov rcx,0
 18668 0000DA67 BA08000000              	mov rdx, 8
 18669 0000DA6C 4889D0                  	mov rax, rdx
 18670 0000DA6F 48FFC8                  	dec rax
 18671 0000DA72 48C1E003                	shl rax,3
 18672 0000DA76 4801E0                  	add rax, rsp
 18673                                  	.L_tc_recycle_frame_loop_0965:
 18674 0000DA79 4839D1                  	cmp rcx, rdx
 18675 0000DA7C 7414                    	je .L_tc_recycle_frame_done_0965
 18676 0000DA7E 4C8B08                  	mov r9, qword [rax]
 18677 0000DA81 4C890B                  	mov qword [rbx],r9
 18678 0000DA84 4883E808                	sub rax,8
 18679 0000DA88 4883EB08                	sub rbx,8
 18680 0000DA8C 4883C101                	add rcx,1
 18681 0000DA90 EBE7                    	jmp .L_tc_recycle_frame_loop_0965
 18682                                  	.L_tc_recycle_frame_done_0965:
 18683 0000DA92 4883C308                	add rbx,8
 18684 0000DA96 4889DC                  	mov rsp,rbx
 18685 0000DA99 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 18686 0000DA9D E99C000000              	jmp .L_if_end_05ad
 18687                                  .L_if_else_0525:
 18688                                  	; preparing a tail-call
 18689 0000DAA2 488B4520                	mov rax, PARAM(0)	; param len1
 18690 0000DAA6 50                      	push rax
 18691 0000DAA7 488B4510                	mov rax, ENV
 18692 0000DAAB 488B00                  	mov rax, qword [rax + 8 * 0]
 18693 0000DAAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18694 0000DAB1 50                      	push rax
 18695 0000DAB2 488B4528                	mov rax, PARAM(1)	; param len2
 18696 0000DAB6 50                      	push rax
 18697 0000DAB7 488B4510                	mov rax, ENV
 18698 0000DABB 488B00                  	mov rax, qword [rax + 8 * 0]
 18699 0000DABE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18700 0000DAC2 50                      	push rax
 18701 0000DAC3 48B8-                   	mov rax, L_constants + 2135
 18701 0000DAC5 [5708000000000000] 
 18702 0000DACD 50                      	push rax
 18703 0000DACE 6A05                    	push 5	; arg count
 18704 0000DAD0 488B4510                	mov rax, ENV
 18705 0000DAD4 488B4008                	mov rax, qword [rax + 8 * 1]
 18706 0000DAD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18707 0000DADB 488B00                  	mov rax, qword [rax]
 18708 0000DADE 803804                  	cmp byte [rax], T_closure
 18709 0000DAE1 0F85A0990000            	jne L_error_non_closure
 18710 0000DAE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18711 0000DAEA FF7508                  	push qword [rbp + 8 *1]
 18712 0000DAED 4989C0                  	mov r8, rax
 18713 0000DAF0 488B5D18                	mov rbx, COUNT
 18714 0000DAF4 4883C303                	add rbx,3
 18715 0000DAF8 48C1E303                	shl rbx,3
 18716 0000DAFC 4801EB                  	add rbx, rbp
 18717 0000DAFF 488B6D00                	mov rbp, [rbp]
 18718 0000DB03 B900000000              	mov rcx,0
 18719 0000DB08 BA08000000              	mov rdx, 8
 18720 0000DB0D 4889D0                  	mov rax, rdx
 18721 0000DB10 48FFC8                  	dec rax
 18722 0000DB13 48C1E003                	shl rax,3
 18723 0000DB17 4801E0                  	add rax, rsp
 18724                                  	.L_tc_recycle_frame_loop_0966:
 18725 0000DB1A 4839D1                  	cmp rcx, rdx
 18726 0000DB1D 7414                    	je .L_tc_recycle_frame_done_0966
 18727 0000DB1F 4C8B08                  	mov r9, qword [rax]
 18728 0000DB22 4C890B                  	mov qword [rbx],r9
 18729 0000DB25 4883E808                	sub rax,8
 18730 0000DB29 4883EB08                	sub rbx,8
 18731 0000DB2D 4883C101                	add rcx,1
 18732 0000DB31 EBE7                    	jmp .L_tc_recycle_frame_loop_0966
 18733                                  	.L_tc_recycle_frame_done_0966:
 18734 0000DB33 4883C308                	add rbx,8
 18735 0000DB37 4889DC                  	mov rsp,rbx
 18736 0000DB3A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 18737                                  .L_if_end_05ad:
 18738 0000DB3E C9                      	leave
 18739 0000DB3F C22000                  	ret AND_KILL_FRAME(2)
 18740                                  .L_lambda_simple_end_075a:	; new closure is in rax
 18741 0000DB42 803804                  	cmp byte [rax], T_closure
 18742 0000DB45 0F853C990000            	jne L_error_non_closure
 18743 0000DB4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 18744 0000DB4E FF7508                  	push qword [rbp + 8 *1]
 18745 0000DB51 4989C0                  	mov r8, rax
 18746 0000DB54 488B5D18                	mov rbx, COUNT
 18747 0000DB58 4883C303                	add rbx,3
 18748 0000DB5C 48C1E303                	shl rbx,3
 18749 0000DB60 4801EB                  	add rbx, rbp
 18750 0000DB63 488B6D00                	mov rbp, [rbp]
 18751 0000DB67 B900000000              	mov rcx,0
 18752 0000DB6C BA05000000              	mov rdx, 5
 18753 0000DB71 4889D0                  	mov rax, rdx
 18754 0000DB74 48FFC8                  	dec rax
 18755 0000DB77 48C1E003                	shl rax,3
 18756 0000DB7B 4801E0                  	add rax, rsp
 18757                                  	.L_tc_recycle_frame_loop_0964:
 18758 0000DB7E 4839D1                  	cmp rcx, rdx
 18759 0000DB81 7414                    	je .L_tc_recycle_frame_done_0964
 18760 0000DB83 4C8B08                  	mov r9, qword [rax]
 18761 0000DB86 4C890B                  	mov qword [rbx],r9
 18762 0000DB89 4883E808                	sub rax,8
 18763 0000DB8D 4883EB08                	sub rbx,8
 18764 0000DB91 4883C101                	add rcx,1
 18765 0000DB95 EBE7                    	jmp .L_tc_recycle_frame_loop_0964
 18766                                  	.L_tc_recycle_frame_done_0964:
 18767 0000DB97 4883C308                	add rbx,8
 18768 0000DB9B 4889DC                  	mov rsp,rbx
 18769 0000DB9E 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 18770 0000DBA2 C9                      	leave
 18771 0000DBA3 C22000                  	ret AND_KILL_FRAME(2)
 18772                                  .L_lambda_simple_end_0759:	; new closure is in rax
 18773 0000DBA6 50                      	push rax
 18774 0000DBA7 6A01                    	push 1	; arg count
 18775 0000DBA9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18776 0000DBAE E87D990000              	call malloc
 18777 0000DBB3 50                      	push rax
 18778 0000DBB4 BF08000000              	mov rdi, 8 * 1	; new rib
 18779 0000DBB9 E872990000              	call malloc
 18780 0000DBBE 50                      	push rax
 18781 0000DBBF BF18000000              	mov rdi, 8 * 3	; extended env
 18782 0000DBC4 E867990000              	call malloc
 18783 0000DBC9 488B7D10                	mov rdi, ENV
 18784 0000DBCD BE00000000              	mov rsi, 0
 18785 0000DBD2 BA01000000              	mov rdx, 1
 18786                                  .L_lambda_simple_env_loop_075b:	; ext_env[i + 1] <-- env[i]
 18787 0000DBD7 4883FE02                	cmp rsi, 2
 18788 0000DBDB 7410                    	je .L_lambda_simple_env_end_075b
 18789 0000DBDD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18790 0000DBE1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18791 0000DBE5 48FFC6                  	inc rsi
 18792 0000DBE8 48FFC2                  	inc rdx
 18793 0000DBEB EBEA                    	jmp .L_lambda_simple_env_loop_075b
 18794                                  .L_lambda_simple_env_end_075b:
 18795 0000DBED 5B                      	pop rbx
 18796 0000DBEE BE00000000              	mov rsi, 0
 18797                                  .L_lambda_simple_params_loop_075b:	; copy params
 18798 0000DBF3 4883FE01                	cmp rsi, 1
 18799 0000DBF7 740E                    	je .L_lambda_simple_params_end_075b
 18800 0000DBF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18801 0000DBFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18802 0000DC02 48FFC6                  	inc rsi
 18803 0000DC05 EBEC                    	jmp .L_lambda_simple_params_loop_075b
 18804                                  .L_lambda_simple_params_end_075b:
 18805 0000DC07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18806 0000DC0A 4889C3                  	mov rbx, rax
 18807 0000DC0D 58                      	pop rax
 18808 0000DC0E C60004                  	mov byte [rax], T_closure
 18809 0000DC11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18810 0000DC15 48C74009[22DC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075b
 18811 0000DC1D E939050000              	jmp .L_lambda_simple_end_075b
 18812                                  .L_lambda_simple_code_075b:	; lambda-simple body
 18813 0000DC22 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18814 0000DC28 740B                    	je .L_lambda_simple_arity_check_ok_0846
 18815 0000DC2A FF742410                	push qword [rsp + 8 * 2]
 18816 0000DC2E 6A01                    	push 1
 18817 0000DC30 E9B4980000              	jmp L_error_incorrect_arity_simple
 18818                                  .L_lambda_simple_arity_check_ok_0846:
 18819 0000DC35 C8000000                	enter 0, 0
 18820                                  	; preparing a tail-call
 18821 0000DC39 48B8-                   	mov rax, L_constants + 1993
 18821 0000DC3B [C907000000000000] 
 18822 0000DC43 50                      	push rax
 18823 0000DC44 6A01                    	push 1	; arg count
 18824 0000DC46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18825 0000DC4B E8E0980000              	call malloc
 18826 0000DC50 50                      	push rax
 18827 0000DC51 BF08000000              	mov rdi, 8 * 1	; new rib
 18828 0000DC56 E8D5980000              	call malloc
 18829 0000DC5B 50                      	push rax
 18830 0000DC5C BF20000000              	mov rdi, 8 * 4	; extended env
 18831 0000DC61 E8CA980000              	call malloc
 18832 0000DC66 488B7D10                	mov rdi, ENV
 18833 0000DC6A BE00000000              	mov rsi, 0
 18834 0000DC6F BA01000000              	mov rdx, 1
 18835                                  .L_lambda_simple_env_loop_075c:	; ext_env[i + 1] <-- env[i]
 18836 0000DC74 4883FE03                	cmp rsi, 3
 18837 0000DC78 7410                    	je .L_lambda_simple_env_end_075c
 18838 0000DC7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18839 0000DC7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18840 0000DC82 48FFC6                  	inc rsi
 18841 0000DC85 48FFC2                  	inc rdx
 18842 0000DC88 EBEA                    	jmp .L_lambda_simple_env_loop_075c
 18843                                  .L_lambda_simple_env_end_075c:
 18844 0000DC8A 5B                      	pop rbx
 18845 0000DC8B BE00000000              	mov rsi, 0
 18846                                  .L_lambda_simple_params_loop_075c:	; copy params
 18847 0000DC90 4883FE01                	cmp rsi, 1
 18848 0000DC94 740E                    	je .L_lambda_simple_params_end_075c
 18849 0000DC96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18850 0000DC9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18851 0000DC9F 48FFC6                  	inc rsi
 18852 0000DCA2 EBEC                    	jmp .L_lambda_simple_params_loop_075c
 18853                                  .L_lambda_simple_params_end_075c:
 18854 0000DCA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18855 0000DCA7 4889C3                  	mov rbx, rax
 18856 0000DCAA 58                      	pop rax
 18857 0000DCAB C60004                  	mov byte [rax], T_closure
 18858 0000DCAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18859 0000DCB2 48C74009[BFDC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075c
 18860 0000DCBA E938040000              	jmp .L_lambda_simple_end_075c
 18861                                  .L_lambda_simple_code_075c:	; lambda-simple body
 18862 0000DCBF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18863 0000DCC5 740B                    	je .L_lambda_simple_arity_check_ok_0847
 18864 0000DCC7 FF742410                	push qword [rsp + 8 * 2]
 18865 0000DCCB 6A01                    	push 1
 18866 0000DCCD E917980000              	jmp L_error_incorrect_arity_simple
 18867                                  .L_lambda_simple_arity_check_ok_0847:
 18868 0000DCD2 C8000000                	enter 0, 0
 18869 0000DCD6 BF08000000              	mov rdi, 8
 18870 0000DCDB E850980000              	call malloc
 18871 0000DCE0 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 18872 0000DCE4 488918                  	mov qword [rax], rbx
 18873 0000DCE7 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 18874 0000DCEB 48B8-                   	mov rax, sob_void
 18874 0000DCED [0000000000000000] 
 18875                                  
 18876 0000DCF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18877 0000DCFA E831980000              	call malloc
 18878 0000DCFF 50                      	push rax
 18879 0000DD00 BF08000000              	mov rdi, 8 * 1	; new rib
 18880 0000DD05 E826980000              	call malloc
 18881 0000DD0A 50                      	push rax
 18882 0000DD0B BF28000000              	mov rdi, 8 * 5	; extended env
 18883 0000DD10 E81B980000              	call malloc
 18884 0000DD15 488B7D10                	mov rdi, ENV
 18885 0000DD19 BE00000000              	mov rsi, 0
 18886 0000DD1E BA01000000              	mov rdx, 1
 18887                                  .L_lambda_simple_env_loop_075d:	; ext_env[i + 1] <-- env[i]
 18888 0000DD23 4883FE04                	cmp rsi, 4
 18889 0000DD27 7410                    	je .L_lambda_simple_env_end_075d
 18890 0000DD29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18891 0000DD2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18892 0000DD31 48FFC6                  	inc rsi
 18893 0000DD34 48FFC2                  	inc rdx
 18894 0000DD37 EBEA                    	jmp .L_lambda_simple_env_loop_075d
 18895                                  .L_lambda_simple_env_end_075d:
 18896 0000DD39 5B                      	pop rbx
 18897 0000DD3A BE00000000              	mov rsi, 0
 18898                                  .L_lambda_simple_params_loop_075d:	; copy params
 18899 0000DD3F 4883FE01                	cmp rsi, 1
 18900 0000DD43 740E                    	je .L_lambda_simple_params_end_075d
 18901 0000DD45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18902 0000DD4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18903 0000DD4E 48FFC6                  	inc rsi
 18904 0000DD51 EBEC                    	jmp .L_lambda_simple_params_loop_075d
 18905                                  .L_lambda_simple_params_end_075d:
 18906 0000DD53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18907 0000DD56 4889C3                  	mov rbx, rax
 18908 0000DD59 58                      	pop rax
 18909 0000DD5A C60004                  	mov byte [rax], T_closure
 18910 0000DD5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18911 0000DD61 48C74009[6EDD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075d
 18912 0000DD69 E976010000              	jmp .L_lambda_simple_end_075d
 18913                                  .L_lambda_simple_code_075d:	; lambda-simple body
 18914 0000DD6E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18915 0000DD74 740B                    	je .L_lambda_simple_arity_check_ok_0848
 18916 0000DD76 FF742410                	push qword [rsp + 8 * 2]
 18917 0000DD7A 6A02                    	push 2
 18918 0000DD7C E968970000              	jmp L_error_incorrect_arity_simple
 18919                                  .L_lambda_simple_arity_check_ok_0848:
 18920 0000DD81 C8000000                	enter 0, 0
 18921                                  	; preparing a non-tail-call
 18922 0000DD85 488B4528                	mov rax, PARAM(1)	; param strs
 18923 0000DD89 50                      	push rax
 18924 0000DD8A 6A01                    	push 1	; arg count
 18925 0000DD8C 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 18926 0000DD94 803805                  	cmp byte [rax], T_undefined
 18927 0000DD97 0F8466960000            	je L_error_fvar_undefined
 18928 0000DD9D 803804                  	cmp byte [rax], T_closure
 18929 0000DDA0 0F85E1960000            	jne L_error_non_closure
 18930 0000DDA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18931 0000DDA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18932 0000DDAC 483D[02000000]          	cmp rax, sob_boolean_false
 18933 0000DDB2 0F8528010000            	jne .L_if_end_05ae
 18934                                  	; preparing a non-tail-call
 18935                                  	; preparing a non-tail-call
 18936 0000DDB8 488B4528                	mov rax, PARAM(1)	; param strs
 18937 0000DDBC 50                      	push rax
 18938 0000DDBD 6A01                    	push 1	; arg count
 18939 0000DDBF 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 18940 0000DDC7 803805                  	cmp byte [rax], T_undefined
 18941 0000DDCA 0F8433960000            	je L_error_fvar_undefined
 18942 0000DDD0 803804                  	cmp byte [rax], T_closure
 18943 0000DDD3 0F85AE960000            	jne L_error_non_closure
 18944 0000DDD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18945 0000DDDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18946 0000DDDF 50                      	push rax
 18947 0000DDE0 488B4520                	mov rax, PARAM(0)	; param str
 18948 0000DDE4 50                      	push rax
 18949 0000DDE5 6A02                    	push 2	; arg count
 18950 0000DDE7 488B4510                	mov rax, ENV
 18951 0000DDEB 488B4008                	mov rax, qword [rax + 8 * 1]
 18952 0000DDEF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18953 0000DDF2 803804                  	cmp byte [rax], T_closure
 18954 0000DDF5 0F858C960000            	jne L_error_non_closure
 18955 0000DDFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18956 0000DDFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 18957 0000DE01 483D[02000000]          	cmp rax, sob_boolean_false
 18958 0000DE07 0F84C1000000            	je .L_if_else_0526
 18959                                  	; preparing a tail-call
 18960                                  	; preparing a non-tail-call
 18961 0000DE0D 488B4528                	mov rax, PARAM(1)	; param strs
 18962 0000DE11 50                      	push rax
 18963 0000DE12 6A01                    	push 1	; arg count
 18964 0000DE14 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 18965 0000DE1C 803805                  	cmp byte [rax], T_undefined
 18966 0000DE1F 0F84DE950000            	je L_error_fvar_undefined
 18967 0000DE25 803804                  	cmp byte [rax], T_closure
 18968 0000DE28 0F8559960000            	jne L_error_non_closure
 18969 0000DE2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18970 0000DE31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18971 0000DE34 50                      	push rax
 18972                                  	; preparing a non-tail-call
 18973 0000DE35 488B4528                	mov rax, PARAM(1)	; param strs
 18974 0000DE39 50                      	push rax
 18975 0000DE3A 6A01                    	push 1	; arg count
 18976 0000DE3C 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 18977 0000DE44 803805                  	cmp byte [rax], T_undefined
 18978 0000DE47 0F84B6950000            	je L_error_fvar_undefined
 18979 0000DE4D 803804                  	cmp byte [rax], T_closure
 18980 0000DE50 0F8531960000            	jne L_error_non_closure
 18981 0000DE56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18982 0000DE59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18983 0000DE5C 50                      	push rax
 18984 0000DE5D 6A02                    	push 2	; arg count
 18985 0000DE5F 488B4510                	mov rax, ENV
 18986 0000DE63 488B00                  	mov rax, qword [rax + 8 * 0]
 18987 0000DE66 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18988 0000DE69 488B00                  	mov rax, qword [rax]
 18989 0000DE6C 803804                  	cmp byte [rax], T_closure
 18990 0000DE6F 0F8512960000            	jne L_error_non_closure
 18991 0000DE75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18992 0000DE78 FF7508                  	push qword [rbp + 8 *1]
 18993 0000DE7B 4989C0                  	mov r8, rax
 18994 0000DE7E 488B5D18                	mov rbx, COUNT
 18995 0000DE82 4883C303                	add rbx,3
 18996 0000DE86 48C1E303                	shl rbx,3
 18997 0000DE8A 4801EB                  	add rbx, rbp
 18998 0000DE8D 488B6D00                	mov rbp, [rbp]
 18999 0000DE91 B900000000              	mov rcx,0
 19000 0000DE96 BA05000000              	mov rdx, 5
 19001 0000DE9B 4889D0                  	mov rax, rdx
 19002 0000DE9E 48FFC8                  	dec rax
 19003 0000DEA1 48C1E003                	shl rax,3
 19004 0000DEA5 4801E0                  	add rax, rsp
 19005                                  	.L_tc_recycle_frame_loop_0968:
 19006 0000DEA8 4839D1                  	cmp rcx, rdx
 19007 0000DEAB 7414                    	je .L_tc_recycle_frame_done_0968
 19008 0000DEAD 4C8B08                  	mov r9, qword [rax]
 19009 0000DEB0 4C890B                  	mov qword [rbx],r9
 19010 0000DEB3 4883E808                	sub rax,8
 19011 0000DEB7 4883EB08                	sub rbx,8
 19012 0000DEBB 4883C101                	add rcx,1
 19013 0000DEBF EBE7                    	jmp .L_tc_recycle_frame_loop_0968
 19014                                  	.L_tc_recycle_frame_done_0968:
 19015 0000DEC1 4883C308                	add rbx,8
 19016 0000DEC5 4889DC                  	mov rsp,rbx
 19017 0000DEC8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19018 0000DECC EB0A                    	jmp .L_if_end_05af
 19019                                  .L_if_else_0526:
 19020 0000DECE 48B8-                   	mov rax, L_constants + 2
 19020 0000DED0 [0200000000000000] 
 19021                                  .L_if_end_05af:
 19022 0000DED8 483D[02000000]          	cmp rax, sob_boolean_false
 19023 0000DEDE 7500                    	jne .L_if_end_05ae
 19024                                  .L_if_end_05ae:
 19025 0000DEE0 C9                      	leave
 19026 0000DEE1 C22000                  	ret AND_KILL_FRAME(2)
 19027                                  .L_lambda_simple_end_075d:	; new closure is in rax
 19028 0000DEE4 50                      	push rax
 19029 0000DEE5 488B4520                	mov rax, PARAM(0)	; param run
 19030 0000DEE9 8F00                    	pop qword [rax]
 19031 0000DEEB 48B8-                   	mov rax, sob_void
 19031 0000DEED [0000000000000000] 
 19032                                  
 19033 0000DEF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19034 0000DEFA E831960000              	call malloc
 19035 0000DEFF 50                      	push rax
 19036 0000DF00 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 19037 0000DF04 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19038 0000DF08 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 19039 0000DF0D E81E960000              	call malloc
 19040 0000DF12 50                      	push rax
 19041 0000DF13 BF28000000              	mov rdi, 8 * 5	; extended env
 19042 0000DF18 E813960000              	call malloc
 19043 0000DF1D 488B7D10                	mov rdi, ENV
 19044 0000DF21 BE00000000              	mov rsi, 0
 19045 0000DF26 BA01000000              	mov rdx, 1
 19046                                  .L_lambda_opt_env_loop_00ec:	; ext_env[i + 1] <-- env[i] copy all the array
 19047 0000DF2B 4883FE04                	cmp rsi, 4
 19048 0000DF2F 7410                    	je .L_lambda_opt_env_end_00ec
 19049 0000DF31 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19050 0000DF35 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19051 0000DF39 48FFC6                  	inc rsi
 19052 0000DF3C 48FFC2                  	inc rdx
 19053 0000DF3F EBEA                    	jmp .L_lambda_opt_env_loop_00ec
 19054                                  .L_lambda_opt_env_end_00ec:
 19055 0000DF41 5B                      	pop rbx
 19056 0000DF42 BE00000000              	mov rsi, 0
 19057                                  .L_lambda_opt_params_loop_02c2:	; copy params
 19058 0000DF47 4883FE01                	cmp rsi, 1
 19059 0000DF4B 740E                    	je .L_lambda_opt_params_end_01d7
 19060 0000DF4D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19061 0000DF52 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19062 0000DF56 48FFC6                  	inc rsi
 19063 0000DF59 EBEC                    	jmp .L_lambda_opt_params_loop_02c2
 19064                                  .L_lambda_opt_params_end_01d7:
 19065 0000DF5B 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 19066 0000DF5E 4889C3                  	mov rbx, rax
 19067 0000DF61 58                      	pop rax
 19068 0000DF62 C60004                  	mov byte [rax], T_closure
 19069 0000DF65 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19070 0000DF69 48C74009[76DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00ec
 19071 0000DF71 E97D010000              	jmp .L_lambda_opt_end_01d7
 19072                                  .L_lambda_opt_code_00ec:	; lambda-opt body
 19073 0000DF76 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19074 0000DF7C 7D0B                    	jge .L_lambda_simple_arity_check_ok_0849
 19075 0000DF7E FF742410                	push qword [rsp + 8 * 2]
 19076 0000DF82 6A01                    	push 1
 19077 0000DF84 E960950000              	jmp L_error_incorrect_arity_simple
 19078                                  .L_lambda_simple_arity_check_ok_0849:
 19079 0000DF89 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 19080 0000DF8E 4983E801                	sub r8, 1
 19081 0000DF92 4C89C3                  	mov rbx,r8
 19082 0000DF95 4983F800                	cmp r8, 0
 19083 0000DF99 7535                    	jne .L_lambda_opt_params_loop_02c4
 19084 0000DF9B 488B542410              	mov rdx, qword [rsp + 8 * 2]
 19085 0000DFA0 4883C203                	add rdx , 3
 19086 0000DFA4 4883EC08                	sub rsp , 8
 19087 0000DFA8 4889E1                  	mov rcx, rsp
 19088                                  .L_lambda_opt_stack_adjusted_02c3: ;pushing down the stack of the current function
 19089 0000DFAB 488B5908                	mov rbx, qword [rcx + 8 * 1]
 19090 0000DFAF 488919                  	mov qword[rcx] , rbx
 19091 0000DFB2 4883C108                	add rcx , 8
 19092 0000DFB6 48FFCA                  	dec rdx
 19093 0000DFB9 4883FA00                	cmp rdx, 0
 19094 0000DFBD 75EC                    	jne .L_lambda_opt_stack_adjusted_02c3
 19095 0000DFBF 48FF442410              	inc qword [rsp + 8 * 2]
 19096 0000DFC4 48C701[01000000]        	mov qword [rcx], sob_nil 
 19097 0000DFCB E9A2000000              	jmp .L_lambda_opt_end_01d8
 19098                                  	.L_lambda_opt_params_loop_02c4:
 19099 0000DFD0 488B542410              	mov rdx, qword [rsp + 8*2]
 19100 0000DFD5 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 19101 0000DFDA 4C89C2                  	mov rdx, r8
 19102 0000DFDD 49B9-                   	mov r9, sob_nil
 19102 0000DFDF [0100000000000000] 
 19103                                  	.L_lambda_opt_params_loop_02c3: ;loop for copying the opt into list
 19104 0000DFE7 BF11000000              	mov rdi, (1 + 8 + 8)
 19105 0000DFEC E83F950000              	call malloc
 19106 0000DFF1 C60021                  	mov byte[rax], T_pair
 19107 0000DFF4 488B19                  	mov rbx, qword [rcx]
 19108 0000DFF7 48895801                	mov SOB_PAIR_CAR(rax), rbx
 19109 0000DFFB 4C894809                	mov SOB_PAIR_CDR(rax), r9
 19110 0000DFFF 4989C1                  	mov r9, rax
 19111 0000E002 48FFCA                  	dec rdx
 19112 0000E005 4883E908                	sub rcx, 8
 19113 0000E009 4883FA00                	cmp rdx, 0
 19114 0000E00D 75D8                    	jne .L_lambda_opt_params_loop_02c3
 19115 0000E00F 488B542410              	mov rdx, qword [rsp + 8 * 2]
 19116 0000E014 4889E0                  	mov rax, rsp
 19117 0000E017 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 19118 0000E01C 4C89C1                  	mov rcx, r8
 19119 0000E01F 48FFC9                  	dec rcx
 19120 0000E022 4883C203                	add rdx, 3
 19121 0000E026 4829CA                  	sub rdx,rcx
 19122 0000E029 48C1E103                	shl rcx, 3
 19123                                  	.L_lambda_opt_stack_adjusted_02c4:
 19124 0000E02D 4883FA00                	cmp rdx, 0
 19125 0000E031 7419                    	je .L_lambda_opt_params_end_01d8
 19126 0000E033 4889D8                  	mov rax, rbx
 19127 0000E036 4829C8                  	sub rax, rcx
 19128 0000E039 488B30                  	mov rsi, qword [rax]
 19129 0000E03C 488933                  	mov [rbx], rsi
 19130 0000E03F 4883EB08                	sub rbx, 8
 19131 0000E043 48FFCA                  	dec rdx
 19132 0000E046 4883FA00                	cmp rdx, 0
 19133 0000E04A 75E1                    	jne .L_lambda_opt_stack_adjusted_02c4
 19134                                  	.L_lambda_opt_params_end_01d8:
 19135 0000E04C 4801CC                  	add rsp,rcx
 19136 0000E04F BB01000000              	mov rbx, 1
 19137 0000E054 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 19138 0000E059 4883C303                	add rbx,3
 19139 0000E05D 4C29C3                  	sub rbx,r8
 19140 0000E060 48C1E303                	shl rbx, 3
 19141 0000E064 4801E3                  	add rbx, rsp
 19142 0000E067 4C890B                  	mov qword[rbx] , r9
 19143 0000E06A 49FFC8                  	dec r8
 19144 0000E06D 4C29442410              	sub qword [rsp + 8 * 2], r8
 19145                                  	.L_lambda_opt_end_01d8:
 19146 0000E072 C8000000                	enter 0, 0
 19147                                  	; preparing a tail-call
 19148 0000E076 488B4528                	mov rax, PARAM(1)	; param strs
 19149 0000E07A 50                      	push rax
 19150 0000E07B 488B4520                	mov rax, PARAM(0)	; param str
 19151 0000E07F 50                      	push rax
 19152 0000E080 6A02                    	push 2	; arg count
 19153 0000E082 488B4510                	mov rax, ENV
 19154 0000E086 488B00                  	mov rax, qword [rax + 8 * 0]
 19155 0000E089 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19156 0000E08C 488B00                  	mov rax, qword [rax]
 19157 0000E08F 803804                  	cmp byte [rax], T_closure
 19158 0000E092 0F85EF930000            	jne L_error_non_closure
 19159 0000E098 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19160 0000E09B FF7508                  	push qword [rbp + 8 *1]
 19161 0000E09E 4989C0                  	mov r8, rax
 19162 0000E0A1 488B5D18                	mov rbx, COUNT
 19163 0000E0A5 4883C303                	add rbx,3
 19164 0000E0A9 48C1E303                	shl rbx,3
 19165 0000E0AD 4801EB                  	add rbx, rbp
 19166 0000E0B0 488B6D00                	mov rbp, [rbp]
 19167 0000E0B4 B900000000              	mov rcx,0
 19168 0000E0B9 BA05000000              	mov rdx, 5
 19169 0000E0BE 4889D0                  	mov rax, rdx
 19170 0000E0C1 48FFC8                  	dec rax
 19171 0000E0C4 48C1E003                	shl rax,3
 19172 0000E0C8 4801E0                  	add rax, rsp
 19173                                  	.L_tc_recycle_frame_loop_0969:
 19174 0000E0CB 4839D1                  	cmp rcx, rdx
 19175 0000E0CE 7414                    	je .L_tc_recycle_frame_done_0969
 19176 0000E0D0 4C8B08                  	mov r9, qword [rax]
 19177 0000E0D3 4C890B                  	mov qword [rbx],r9
 19178 0000E0D6 4883E808                	sub rax,8
 19179 0000E0DA 4883EB08                	sub rbx,8
 19180 0000E0DE 4883C101                	add rcx,1
 19181 0000E0E2 EBE7                    	jmp .L_tc_recycle_frame_loop_0969
 19182                                  	.L_tc_recycle_frame_done_0969:
 19183 0000E0E4 4883C308                	add rbx,8
 19184 0000E0E8 4889DC                  	mov rsp,rbx
 19185 0000E0EB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19186                                  	LEAVE
    49 0000E0EF C9                  <1>  leave
 19187 0000E0F0 C22000                  	ret AND_KILL_FRAME(2)
 19188                                  .L_lambda_opt_end_01d7:
 19189 0000E0F3 C9                      	leave
 19190 0000E0F4 C21800                  	ret AND_KILL_FRAME(1)
 19191                                  .L_lambda_simple_end_075c:	; new closure is in rax
 19192 0000E0F7 803804                  	cmp byte [rax], T_closure
 19193 0000E0FA 0F8587930000            	jne L_error_non_closure
 19194 0000E100 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19195 0000E103 FF7508                  	push qword [rbp + 8 *1]
 19196 0000E106 4989C0                  	mov r8, rax
 19197 0000E109 488B5D18                	mov rbx, COUNT
 19198 0000E10D 4883C303                	add rbx,3
 19199 0000E111 48C1E303                	shl rbx,3
 19200 0000E115 4801EB                  	add rbx, rbp
 19201 0000E118 488B6D00                	mov rbp, [rbp]
 19202 0000E11C B900000000              	mov rcx,0
 19203 0000E121 BA04000000              	mov rdx, 4
 19204 0000E126 4889D0                  	mov rax, rdx
 19205 0000E129 48FFC8                  	dec rax
 19206 0000E12C 48C1E003                	shl rax,3
 19207 0000E130 4801E0                  	add rax, rsp
 19208                                  	.L_tc_recycle_frame_loop_0967:
 19209 0000E133 4839D1                  	cmp rcx, rdx
 19210 0000E136 7414                    	je .L_tc_recycle_frame_done_0967
 19211 0000E138 4C8B08                  	mov r9, qword [rax]
 19212 0000E13B 4C890B                  	mov qword [rbx],r9
 19213 0000E13E 4883E808                	sub rax,8
 19214 0000E142 4883EB08                	sub rbx,8
 19215 0000E146 4883C101                	add rcx,1
 19216 0000E14A EBE7                    	jmp .L_tc_recycle_frame_loop_0967
 19217                                  	.L_tc_recycle_frame_done_0967:
 19218 0000E14C 4883C308                	add rbx,8
 19219 0000E150 4889DC                  	mov rsp,rbx
 19220 0000E153 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19221 0000E157 C9                      	leave
 19222 0000E158 C21800                  	ret AND_KILL_FRAME(1)
 19223                                  .L_lambda_simple_end_075b:	; new closure is in rax
 19224 0000E15B 803804                  	cmp byte [rax], T_closure
 19225 0000E15E 0F8523930000            	jne L_error_non_closure
 19226 0000E164 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19227 0000E167 FF7508                  	push qword [rbp + 8 *1]
 19228 0000E16A 4989C0                  	mov r8, rax
 19229 0000E16D 488B5D18                	mov rbx, COUNT
 19230 0000E171 4883C303                	add rbx,3
 19231 0000E175 48C1E303                	shl rbx,3
 19232 0000E179 4801EB                  	add rbx, rbp
 19233 0000E17C 488B6D00                	mov rbp, [rbp]
 19234 0000E180 B900000000              	mov rcx,0
 19235 0000E185 BA04000000              	mov rdx, 4
 19236 0000E18A 4889D0                  	mov rax, rdx
 19237 0000E18D 48FFC8                  	dec rax
 19238 0000E190 48C1E003                	shl rax,3
 19239 0000E194 4801E0                  	add rax, rsp
 19240                                  	.L_tc_recycle_frame_loop_0963:
 19241 0000E197 4839D1                  	cmp rcx, rdx
 19242 0000E19A 7414                    	je .L_tc_recycle_frame_done_0963
 19243 0000E19C 4C8B08                  	mov r9, qword [rax]
 19244 0000E19F 4C890B                  	mov qword [rbx],r9
 19245 0000E1A2 4883E808                	sub rax,8
 19246 0000E1A6 4883EB08                	sub rbx,8
 19247 0000E1AA 4883C101                	add rcx,1
 19248 0000E1AE EBE7                    	jmp .L_tc_recycle_frame_loop_0963
 19249                                  	.L_tc_recycle_frame_done_0963:
 19250 0000E1B0 4883C308                	add rbx,8
 19251 0000E1B4 4889DC                  	mov rsp,rbx
 19252 0000E1B7 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19253 0000E1BB C9                      	leave
 19254 0000E1BC C21800                  	ret AND_KILL_FRAME(1)
 19255                                  .L_lambda_simple_end_0757:	; new closure is in rax
 19256 0000E1BF 803804                  	cmp byte [rax], T_closure
 19257 0000E1C2 0F85BF920000            	jne L_error_non_closure
 19258 0000E1C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19259 0000E1CB FF7508                  	push qword [rbp + 8 *1]
 19260 0000E1CE 4989C0                  	mov r8, rax
 19261 0000E1D1 488B5D18                	mov rbx, COUNT
 19262 0000E1D5 4883C303                	add rbx,3
 19263 0000E1D9 48C1E303                	shl rbx,3
 19264 0000E1DD 4801EB                  	add rbx, rbp
 19265 0000E1E0 488B6D00                	mov rbp, [rbp]
 19266 0000E1E4 B900000000              	mov rcx,0
 19267 0000E1E9 BA04000000              	mov rdx, 4
 19268 0000E1EE 4889D0                  	mov rax, rdx
 19269 0000E1F1 48FFC8                  	dec rax
 19270 0000E1F4 48C1E003                	shl rax,3
 19271 0000E1F8 4801E0                  	add rax, rsp
 19272                                  	.L_tc_recycle_frame_loop_0961:
 19273 0000E1FB 4839D1                  	cmp rcx, rdx
 19274 0000E1FE 7414                    	je .L_tc_recycle_frame_done_0961
 19275 0000E200 4C8B08                  	mov r9, qword [rax]
 19276 0000E203 4C890B                  	mov qword [rbx],r9
 19277 0000E206 4883E808                	sub rax,8
 19278 0000E20A 4883EB08                	sub rbx,8
 19279 0000E20E 4883C101                	add rcx,1
 19280 0000E212 EBE7                    	jmp .L_tc_recycle_frame_loop_0961
 19281                                  	.L_tc_recycle_frame_done_0961:
 19282 0000E214 4883C308                	add rbx,8
 19283 0000E218 4889DC                  	mov rsp,rbx
 19284 0000E21B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19285 0000E21F C9                      	leave
 19286 0000E220 C22000                  	ret AND_KILL_FRAME(2)
 19287                                  .L_lambda_simple_end_0756:	; new closure is in rax
 19288 0000E223 50                      	push rax
 19289 0000E224 6A01                    	push 1	; arg count
 19290 0000E226 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19291 0000E22B E800930000              	call malloc
 19292 0000E230 50                      	push rax
 19293 0000E231 BF00000000              	mov rdi, 8 * 0	; new rib
 19294 0000E236 E8F5920000              	call malloc
 19295 0000E23B 50                      	push rax
 19296 0000E23C BF08000000              	mov rdi, 8 * 1	; extended env
 19297 0000E241 E8EA920000              	call malloc
 19298 0000E246 488B7D10                	mov rdi, ENV
 19299 0000E24A BE00000000              	mov rsi, 0
 19300 0000E24F BA01000000              	mov rdx, 1
 19301                                  .L_lambda_simple_env_loop_075e:	; ext_env[i + 1] <-- env[i]
 19302 0000E254 4883FE00                	cmp rsi, 0
 19303 0000E258 7410                    	je .L_lambda_simple_env_end_075e
 19304 0000E25A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19305 0000E25E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19306 0000E262 48FFC6                  	inc rsi
 19307 0000E265 48FFC2                  	inc rdx
 19308 0000E268 EBEA                    	jmp .L_lambda_simple_env_loop_075e
 19309                                  .L_lambda_simple_env_end_075e:
 19310 0000E26A 5B                      	pop rbx
 19311 0000E26B BE00000000              	mov rsi, 0
 19312                                  .L_lambda_simple_params_loop_075e:	; copy params
 19313 0000E270 4883FE00                	cmp rsi, 0
 19314 0000E274 740E                    	je .L_lambda_simple_params_end_075e
 19315 0000E276 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19316 0000E27B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19317 0000E27F 48FFC6                  	inc rsi
 19318 0000E282 EBEC                    	jmp .L_lambda_simple_params_loop_075e
 19319                                  .L_lambda_simple_params_end_075e:
 19320 0000E284 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19321 0000E287 4889C3                  	mov rbx, rax
 19322 0000E28A 58                      	pop rax
 19323 0000E28B C60004                  	mov byte [rax], T_closure
 19324 0000E28E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19325 0000E292 48C74009[9FE20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075e
 19326 0000E29A E947010000              	jmp .L_lambda_simple_end_075e
 19327                                  .L_lambda_simple_code_075e:	; lambda-simple body
 19328 0000E29F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19329 0000E2A5 740B                    	je .L_lambda_simple_arity_check_ok_084a
 19330 0000E2A7 FF742410                	push qword [rsp + 8 * 2]
 19331 0000E2AB 6A01                    	push 1
 19332 0000E2AD E937920000              	jmp L_error_incorrect_arity_simple
 19333                                  .L_lambda_simple_arity_check_ok_084a:
 19334 0000E2B2 C8000000                	enter 0, 0
 19335                                  	; preparing a non-tail-call
 19336 0000E2B6 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 19337 0000E2BE 803805                  	cmp byte [rax], T_undefined
 19338 0000E2C1 0F843C910000            	je L_error_fvar_undefined
 19339 0000E2C7 50                      	push rax
 19340 0000E2C8 488B0425[44130000]      	mov rax, qword [free_var_74]	; free var char<?
 19341 0000E2D0 803805                  	cmp byte [rax], T_undefined
 19342 0000E2D3 0F842A910000            	je L_error_fvar_undefined
 19343 0000E2D9 50                      	push rax
 19344 0000E2DA 6A02                    	push 2	; arg count
 19345 0000E2DC 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19346 0000E2E0 803804                  	cmp byte [rax], T_closure
 19347 0000E2E3 0F859E910000            	jne L_error_non_closure
 19348 0000E2E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19349 0000E2EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19350 0000E2EF 48890425[40170000]      	mov qword [free_var_134], rax
 19351 0000E2F7 48B8-                   	mov rax, sob_void
 19351 0000E2F9 [0000000000000000] 
 19352                                  
 19353                                  	; preparing a non-tail-call
 19354 0000E301 488B0425[DE120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19355 0000E309 803805                  	cmp byte [rax], T_undefined
 19356 0000E30C 0F84F1900000            	je L_error_fvar_undefined
 19357 0000E312 50                      	push rax
 19358 0000E313 488B0425[CD120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19359 0000E31B 803805                  	cmp byte [rax], T_undefined
 19360 0000E31E 0F84DF900000            	je L_error_fvar_undefined
 19361 0000E324 50                      	push rax
 19362 0000E325 6A02                    	push 2	; arg count
 19363 0000E327 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19364 0000E32B 803804                  	cmp byte [rax], T_closure
 19365 0000E32E 0F8553910000            	jne L_error_non_closure
 19366 0000E334 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19367 0000E337 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19368 0000E33A 48890425[74160000]      	mov qword [free_var_122], rax
 19369 0000E342 48B8-                   	mov rax, sob_void
 19369 0000E344 [0000000000000000] 
 19370                                  
 19371                                  	; preparing a non-tail-call
 19372 0000E34C 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 19373 0000E354 803805                  	cmp byte [rax], T_undefined
 19374 0000E357 0F84A6900000            	je L_error_fvar_undefined
 19375 0000E35D 50                      	push rax
 19376 0000E35E 488B0425[77130000]      	mov rax, qword [free_var_77]	; free var char>?
 19377 0000E366 803805                  	cmp byte [rax], T_undefined
 19378 0000E369 0F8494900000            	je L_error_fvar_undefined
 19379 0000E36F 50                      	push rax
 19380 0000E370 6A02                    	push 2	; arg count
 19381 0000E372 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19382 0000E376 803804                  	cmp byte [rax], T_closure
 19383 0000E379 0F8508910000            	jne L_error_non_closure
 19384 0000E37F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19385 0000E382 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19386 0000E385 48890425[73170000]      	mov qword [free_var_137], rax
 19387 0000E38D 48B8-                   	mov rax, sob_void
 19387 0000E38F [0000000000000000] 
 19388                                  
 19389                                  	; preparing a non-tail-call
 19390 0000E397 488B0425[DE120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19391 0000E39F 803805                  	cmp byte [rax], T_undefined
 19392 0000E3A2 0F845B900000            	je L_error_fvar_undefined
 19393 0000E3A8 50                      	push rax
 19394 0000E3A9 488B0425[00130000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19395 0000E3B1 803805                  	cmp byte [rax], T_undefined
 19396 0000E3B4 0F8449900000            	je L_error_fvar_undefined
 19397 0000E3BA 50                      	push rax
 19398 0000E3BB 6A02                    	push 2	; arg count
 19399 0000E3BD 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19400 0000E3C1 803804                  	cmp byte [rax], T_closure
 19401 0000E3C4 0F85BD900000            	jne L_error_non_closure
 19402 0000E3CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19403 0000E3CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 19404 0000E3D0 48890425[A7160000]      	mov qword [free_var_125], rax
 19405 0000E3D8 48B8-                   	mov rax, sob_void
 19405 0000E3DA [0000000000000000] 
 19406 0000E3E2 C9                      	leave
 19407 0000E3E3 C21800                  	ret AND_KILL_FRAME(1)
 19408                                  .L_lambda_simple_end_075e:	; new closure is in rax
 19409 0000E3E6 803804                  	cmp byte [rax], T_closure
 19410 0000E3E9 0F8598900000            	jne L_error_non_closure
 19411 0000E3EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19412 0000E3F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19413                                  
 19414 0000E3F5 4889C7                  	mov rdi, rax
 19415 0000E3F8 E888930000              	call print_sexpr_if_not_void
 19416                                  	; preparing a non-tail-call
 19417 0000E3FD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19418 0000E402 E829910000              	call malloc
 19419 0000E407 50                      	push rax
 19420 0000E408 BF00000000              	mov rdi, 8 * 0	; new rib
 19421 0000E40D E81E910000              	call malloc
 19422 0000E412 50                      	push rax
 19423 0000E413 BF08000000              	mov rdi, 8 * 1	; extended env
 19424 0000E418 E813910000              	call malloc
 19425 0000E41D 488B7D10                	mov rdi, ENV
 19426 0000E421 BE00000000              	mov rsi, 0
 19427 0000E426 BA01000000              	mov rdx, 1
 19428                                  .L_lambda_simple_env_loop_075f:	; ext_env[i + 1] <-- env[i]
 19429 0000E42B 4883FE00                	cmp rsi, 0
 19430 0000E42F 7410                    	je .L_lambda_simple_env_end_075f
 19431 0000E431 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19432 0000E435 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19433 0000E439 48FFC6                  	inc rsi
 19434 0000E43C 48FFC2                  	inc rdx
 19435 0000E43F EBEA                    	jmp .L_lambda_simple_env_loop_075f
 19436                                  .L_lambda_simple_env_end_075f:
 19437 0000E441 5B                      	pop rbx
 19438 0000E442 BE00000000              	mov rsi, 0
 19439                                  .L_lambda_simple_params_loop_075f:	; copy params
 19440 0000E447 4883FE00                	cmp rsi, 0
 19441 0000E44B 740E                    	je .L_lambda_simple_params_end_075f
 19442 0000E44D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19443 0000E452 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19444 0000E456 48FFC6                  	inc rsi
 19445 0000E459 EBEC                    	jmp .L_lambda_simple_params_loop_075f
 19446                                  .L_lambda_simple_params_end_075f:
 19447 0000E45B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19448 0000E45E 4889C3                  	mov rbx, rax
 19449 0000E461 58                      	pop rax
 19450 0000E462 C60004                  	mov byte [rax], T_closure
 19451 0000E465 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19452 0000E469 48C74009[76E40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_075f
 19453 0000E471 E98F0D0000              	jmp .L_lambda_simple_end_075f
 19454                                  .L_lambda_simple_code_075f:	; lambda-simple body
 19455 0000E476 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19456 0000E47C 740B                    	je .L_lambda_simple_arity_check_ok_084b
 19457 0000E47E FF742410                	push qword [rsp + 8 * 2]
 19458 0000E482 6A02                    	push 2
 19459 0000E484 E960900000              	jmp L_error_incorrect_arity_simple
 19460                                  .L_lambda_simple_arity_check_ok_084b:
 19461 0000E489 C8000000                	enter 0, 0
 19462                                  	; preparing a tail-call
 19463 0000E48D 48B8-                   	mov rax, L_constants + 1993
 19463 0000E48F [C907000000000000] 
 19464 0000E497 50                      	push rax
 19465 0000E498 6A01                    	push 1	; arg count
 19466 0000E49A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19467 0000E49F E88C900000              	call malloc
 19468 0000E4A4 50                      	push rax
 19469 0000E4A5 BF10000000              	mov rdi, 8 * 2	; new rib
 19470 0000E4AA E881900000              	call malloc
 19471 0000E4AF 50                      	push rax
 19472 0000E4B0 BF10000000              	mov rdi, 8 * 2	; extended env
 19473 0000E4B5 E876900000              	call malloc
 19474 0000E4BA 488B7D10                	mov rdi, ENV
 19475 0000E4BE BE00000000              	mov rsi, 0
 19476 0000E4C3 BA01000000              	mov rdx, 1
 19477                                  .L_lambda_simple_env_loop_0760:	; ext_env[i + 1] <-- env[i]
 19478 0000E4C8 4883FE01                	cmp rsi, 1
 19479 0000E4CC 7410                    	je .L_lambda_simple_env_end_0760
 19480 0000E4CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19481 0000E4D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19482 0000E4D6 48FFC6                  	inc rsi
 19483 0000E4D9 48FFC2                  	inc rdx
 19484 0000E4DC EBEA                    	jmp .L_lambda_simple_env_loop_0760
 19485                                  .L_lambda_simple_env_end_0760:
 19486 0000E4DE 5B                      	pop rbx
 19487 0000E4DF BE00000000              	mov rsi, 0
 19488                                  .L_lambda_simple_params_loop_0760:	; copy params
 19489 0000E4E4 4883FE02                	cmp rsi, 2
 19490 0000E4E8 740E                    	je .L_lambda_simple_params_end_0760
 19491 0000E4EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19492 0000E4EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19493 0000E4F3 48FFC6                  	inc rsi
 19494 0000E4F6 EBEC                    	jmp .L_lambda_simple_params_loop_0760
 19495                                  .L_lambda_simple_params_end_0760:
 19496 0000E4F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19497 0000E4FB 4889C3                  	mov rbx, rax
 19498 0000E4FE 58                      	pop rax
 19499 0000E4FF C60004                  	mov byte [rax], T_closure
 19500 0000E502 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19501 0000E506 48C74009[13E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0760
 19502 0000E50E E98E0C0000              	jmp .L_lambda_simple_end_0760
 19503                                  .L_lambda_simple_code_0760:	; lambda-simple body
 19504 0000E513 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19505 0000E519 740B                    	je .L_lambda_simple_arity_check_ok_084c
 19506 0000E51B FF742410                	push qword [rsp + 8 * 2]
 19507 0000E51F 6A01                    	push 1
 19508 0000E521 E9C38F0000              	jmp L_error_incorrect_arity_simple
 19509                                  .L_lambda_simple_arity_check_ok_084c:
 19510 0000E526 C8000000                	enter 0, 0
 19511 0000E52A BF08000000              	mov rdi, 8
 19512 0000E52F E8FC8F0000              	call malloc
 19513 0000E534 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 19514 0000E538 488918                  	mov qword [rax], rbx
 19515 0000E53B 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 19516 0000E53F 48B8-                   	mov rax, sob_void
 19516 0000E541 [0000000000000000] 
 19517                                  
 19518 0000E549 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19519 0000E54E E8DD8F0000              	call malloc
 19520 0000E553 50                      	push rax
 19521 0000E554 BF08000000              	mov rdi, 8 * 1	; new rib
 19522 0000E559 E8D28F0000              	call malloc
 19523 0000E55E 50                      	push rax
 19524 0000E55F BF18000000              	mov rdi, 8 * 3	; extended env
 19525 0000E564 E8C78F0000              	call malloc
 19526 0000E569 488B7D10                	mov rdi, ENV
 19527 0000E56D BE00000000              	mov rsi, 0
 19528 0000E572 BA01000000              	mov rdx, 1
 19529                                  .L_lambda_simple_env_loop_0761:	; ext_env[i + 1] <-- env[i]
 19530 0000E577 4883FE02                	cmp rsi, 2
 19531 0000E57B 7410                    	je .L_lambda_simple_env_end_0761
 19532 0000E57D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19533 0000E581 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19534 0000E585 48FFC6                  	inc rsi
 19535 0000E588 48FFC2                  	inc rdx
 19536 0000E58B EBEA                    	jmp .L_lambda_simple_env_loop_0761
 19537                                  .L_lambda_simple_env_end_0761:
 19538 0000E58D 5B                      	pop rbx
 19539 0000E58E BE00000000              	mov rsi, 0
 19540                                  .L_lambda_simple_params_loop_0761:	; copy params
 19541 0000E593 4883FE01                	cmp rsi, 1
 19542 0000E597 740E                    	je .L_lambda_simple_params_end_0761
 19543 0000E599 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19544 0000E59E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19545 0000E5A2 48FFC6                  	inc rsi
 19546 0000E5A5 EBEC                    	jmp .L_lambda_simple_params_loop_0761
 19547                                  .L_lambda_simple_params_end_0761:
 19548 0000E5A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19549 0000E5AA 4889C3                  	mov rbx, rax
 19550 0000E5AD 58                      	pop rax
 19551 0000E5AE C60004                  	mov byte [rax], T_closure
 19552 0000E5B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19553 0000E5B5 48C74009[C2E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0761
 19554 0000E5BD E966020000              	jmp .L_lambda_simple_end_0761
 19555                                  .L_lambda_simple_code_0761:	; lambda-simple body
 19556 0000E5C2 48837C241005            	cmp qword [rsp + 8 * 2], 5
 19557 0000E5C8 740B                    	je .L_lambda_simple_arity_check_ok_084d
 19558 0000E5CA FF742410                	push qword [rsp + 8 * 2]
 19559 0000E5CE 6A05                    	push 5
 19560 0000E5D0 E9148F0000              	jmp L_error_incorrect_arity_simple
 19561                                  .L_lambda_simple_arity_check_ok_084d:
 19562 0000E5D5 C8000000                	enter 0, 0
 19563                                  	; preparing a non-tail-call
 19564 0000E5D9 488B4530                	mov rax, PARAM(2)	; param len1
 19565 0000E5DD 50                      	push rax
 19566 0000E5DE 488B4520                	mov rax, PARAM(0)	; param i
 19567 0000E5E2 50                      	push rax
 19568 0000E5E3 6A02                    	push 2	; arg count
 19569 0000E5E5 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 19570 0000E5ED 803805                  	cmp byte [rax], T_undefined
 19571 0000E5F0 0F840D8E0000            	je L_error_fvar_undefined
 19572 0000E5F6 803804                  	cmp byte [rax], T_closure
 19573 0000E5F9 0F85888E0000            	jne L_error_non_closure
 19574 0000E5FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19575 0000E602 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19576 0000E605 483D[02000000]          	cmp rax, sob_boolean_false
 19577 0000E60B 0F8513020000            	jne .L_if_end_05b0
 19578                                  	; preparing a non-tail-call
 19579                                  	; preparing a non-tail-call
 19580 0000E611 488B4520                	mov rax, PARAM(0)	; param i
 19581 0000E615 50                      	push rax
 19582 0000E616 488B4538                	mov rax, PARAM(3)	; param str2
 19583 0000E61A 50                      	push rax
 19584 0000E61B 6A02                    	push 2	; arg count
 19585 0000E61D 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19586 0000E625 803805                  	cmp byte [rax], T_undefined
 19587 0000E628 0F84D58D0000            	je L_error_fvar_undefined
 19588 0000E62E 803804                  	cmp byte [rax], T_closure
 19589 0000E631 0F85508E0000            	jne L_error_non_closure
 19590 0000E637 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19591 0000E63A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19592 0000E63D 50                      	push rax
 19593                                  	; preparing a non-tail-call
 19594 0000E63E 488B4520                	mov rax, PARAM(0)	; param i
 19595 0000E642 50                      	push rax
 19596 0000E643 488B4528                	mov rax, PARAM(1)	; param str1
 19597 0000E647 50                      	push rax
 19598 0000E648 6A02                    	push 2	; arg count
 19599 0000E64A 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19600 0000E652 803805                  	cmp byte [rax], T_undefined
 19601 0000E655 0F84A88D0000            	je L_error_fvar_undefined
 19602 0000E65B 803804                  	cmp byte [rax], T_closure
 19603 0000E65E 0F85238E0000            	jne L_error_non_closure
 19604 0000E664 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19605 0000E667 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19606 0000E66A 50                      	push rax
 19607 0000E66B 6A02                    	push 2	; arg count
 19608 0000E66D 488B4510                	mov rax, ENV
 19609 0000E671 488B4008                	mov rax, qword [rax + 8 * 1]
 19610 0000E675 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 19611 0000E678 803804                  	cmp byte [rax], T_closure
 19612 0000E67B 0F85068E0000            	jne L_error_non_closure
 19613 0000E681 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19614 0000E684 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19615 0000E687 483D[02000000]          	cmp rax, sob_boolean_false
 19616 0000E68D 0F8591010000            	jne .L_if_end_05b0
 19617                                  	; preparing a non-tail-call
 19618 0000E693 488B4530                	mov rax, PARAM(2)	; param len1
 19619 0000E697 50                      	push rax
 19620 0000E698 488B4520                	mov rax, PARAM(0)	; param i
 19621 0000E69C 50                      	push rax
 19622 0000E69D 6A02                    	push 2	; arg count
 19623 0000E69F 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 19624 0000E6A7 803805                  	cmp byte [rax], T_undefined
 19625 0000E6AA 0F84538D0000            	je L_error_fvar_undefined
 19626 0000E6B0 803804                  	cmp byte [rax], T_closure
 19627 0000E6B3 0F85CE8D0000            	jne L_error_non_closure
 19628 0000E6B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19629 0000E6BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19630 0000E6BF 483D[02000000]          	cmp rax, sob_boolean_false
 19631 0000E6C5 0F8447010000            	je .L_if_else_0528
 19632                                  	; preparing a non-tail-call
 19633                                  	; preparing a non-tail-call
 19634 0000E6CB 488B4520                	mov rax, PARAM(0)	; param i
 19635 0000E6CF 50                      	push rax
 19636 0000E6D0 488B4538                	mov rax, PARAM(3)	; param str2
 19637 0000E6D4 50                      	push rax
 19638 0000E6D5 6A02                    	push 2	; arg count
 19639 0000E6D7 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19640 0000E6DF 803805                  	cmp byte [rax], T_undefined
 19641 0000E6E2 0F841B8D0000            	je L_error_fvar_undefined
 19642 0000E6E8 803804                  	cmp byte [rax], T_closure
 19643 0000E6EB 0F85968D0000            	jne L_error_non_closure
 19644 0000E6F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19645 0000E6F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19646 0000E6F7 50                      	push rax
 19647                                  	; preparing a non-tail-call
 19648 0000E6F8 488B4520                	mov rax, PARAM(0)	; param i
 19649 0000E6FC 50                      	push rax
 19650 0000E6FD 488B4528                	mov rax, PARAM(1)	; param str1
 19651 0000E701 50                      	push rax
 19652 0000E702 6A02                    	push 2	; arg count
 19653 0000E704 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19654 0000E70C 803805                  	cmp byte [rax], T_undefined
 19655 0000E70F 0F84EE8C0000            	je L_error_fvar_undefined
 19656 0000E715 803804                  	cmp byte [rax], T_closure
 19657 0000E718 0F85698D0000            	jne L_error_non_closure
 19658 0000E71E FF7001                  	push SOB_CLOSURE_ENV(rax)
 19659 0000E721 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19660 0000E724 50                      	push rax
 19661 0000E725 6A02                    	push 2	; arg count
 19662 0000E727 488B4510                	mov rax, ENV
 19663 0000E72B 488B4008                	mov rax, qword [rax + 8 * 1]
 19664 0000E72F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19665 0000E733 803804                  	cmp byte [rax], T_closure
 19666 0000E736 0F854B8D0000            	jne L_error_non_closure
 19667 0000E73C FF7001                  	push SOB_CLOSURE_ENV(rax)
 19668 0000E73F FF5009                  	call SOB_CLOSURE_CODE(rax)
 19669 0000E742 483D[02000000]          	cmp rax, sob_boolean_false
 19670 0000E748 0F84B8000000            	je .L_if_else_0527
 19671                                  	; preparing a tail-call
 19672 0000E74E 488B4540                	mov rax, PARAM(4)	; param len2
 19673 0000E752 50                      	push rax
 19674 0000E753 488B4538                	mov rax, PARAM(3)	; param str2
 19675 0000E757 50                      	push rax
 19676 0000E758 488B4530                	mov rax, PARAM(2)	; param len1
 19677 0000E75C 50                      	push rax
 19678 0000E75D 488B4528                	mov rax, PARAM(1)	; param str1
 19679 0000E761 50                      	push rax
 19680                                  	; preparing a non-tail-call
 19681 0000E762 48B8-                   	mov rax, L_constants + 2270
 19681 0000E764 [DE08000000000000] 
 19682 0000E76C 50                      	push rax
 19683 0000E76D 488B4520                	mov rax, PARAM(0)	; param i
 19684 0000E771 50                      	push rax
 19685 0000E772 6A02                    	push 2	; arg count
 19686 0000E774 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 19687 0000E77C 803805                  	cmp byte [rax], T_undefined
 19688 0000E77F 0F847E8C0000            	je L_error_fvar_undefined
 19689 0000E785 803804                  	cmp byte [rax], T_closure
 19690 0000E788 0F85F98C0000            	jne L_error_non_closure
 19691 0000E78E FF7001                  	push SOB_CLOSURE_ENV(rax)
 19692 0000E791 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19693 0000E794 50                      	push rax
 19694 0000E795 6A05                    	push 5	; arg count
 19695 0000E797 488B4510                	mov rax, ENV
 19696 0000E79B 488B00                  	mov rax, qword [rax + 8 * 0]
 19697 0000E79E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19698 0000E7A1 488B00                  	mov rax, qword [rax]
 19699 0000E7A4 803804                  	cmp byte [rax], T_closure
 19700 0000E7A7 0F85DA8C0000            	jne L_error_non_closure
 19701 0000E7AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 19702 0000E7B0 FF7508                  	push qword [rbp + 8 *1]
 19703 0000E7B3 4989C0                  	mov r8, rax
 19704 0000E7B6 488B5D18                	mov rbx, COUNT
 19705 0000E7BA 4883C303                	add rbx,3
 19706 0000E7BE 48C1E303                	shl rbx,3
 19707 0000E7C2 4801EB                  	add rbx, rbp
 19708 0000E7C5 488B6D00                	mov rbp, [rbp]
 19709 0000E7C9 B900000000              	mov rcx,0
 19710 0000E7CE BA08000000              	mov rdx, 8
 19711 0000E7D3 4889D0                  	mov rax, rdx
 19712 0000E7D6 48FFC8                  	dec rax
 19713 0000E7D9 48C1E003                	shl rax,3
 19714 0000E7DD 4801E0                  	add rax, rsp
 19715                                  	.L_tc_recycle_frame_loop_096b:
 19716 0000E7E0 4839D1                  	cmp rcx, rdx
 19717 0000E7E3 7414                    	je .L_tc_recycle_frame_done_096b
 19718 0000E7E5 4C8B08                  	mov r9, qword [rax]
 19719 0000E7E8 4C890B                  	mov qword [rbx],r9
 19720 0000E7EB 4883E808                	sub rax,8
 19721 0000E7EF 4883EB08                	sub rbx,8
 19722 0000E7F3 4883C101                	add rcx,1
 19723 0000E7F7 EBE7                    	jmp .L_tc_recycle_frame_loop_096b
 19724                                  	.L_tc_recycle_frame_done_096b:
 19725 0000E7F9 4883C308                	add rbx,8
 19726 0000E7FD 4889DC                  	mov rsp,rbx
 19727 0000E800 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19728 0000E804 EB0A                    	jmp .L_if_end_05b1
 19729                                  .L_if_else_0527:
 19730 0000E806 48B8-                   	mov rax, L_constants + 2
 19730 0000E808 [0200000000000000] 
 19731                                  .L_if_end_05b1:
 19732 0000E810 EB0A                    	jmp .L_if_end_05b2
 19733                                  .L_if_else_0528:
 19734 0000E812 48B8-                   	mov rax, L_constants + 2
 19734 0000E814 [0200000000000000] 
 19735                                  .L_if_end_05b2:
 19736 0000E81C 483D[02000000]          	cmp rax, sob_boolean_false
 19737 0000E822 7500                    	jne .L_if_end_05b0
 19738                                  .L_if_end_05b0:
 19739 0000E824 C9                      	leave
 19740 0000E825 C23800                  	ret AND_KILL_FRAME(5)
 19741                                  .L_lambda_simple_end_0761:	; new closure is in rax
 19742 0000E828 50                      	push rax
 19743 0000E829 488B4520                	mov rax, PARAM(0)	; param run
 19744 0000E82D 8F00                    	pop qword [rax]
 19745 0000E82F 48B8-                   	mov rax, sob_void
 19745 0000E831 [0000000000000000] 
 19746                                  
 19747                                  	; preparing a tail-call
 19748 0000E839 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19749 0000E83E E8ED8C0000              	call malloc
 19750 0000E843 50                      	push rax
 19751 0000E844 BF08000000              	mov rdi, 8 * 1	; new rib
 19752 0000E849 E8E28C0000              	call malloc
 19753 0000E84E 50                      	push rax
 19754 0000E84F BF18000000              	mov rdi, 8 * 3	; extended env
 19755 0000E854 E8D78C0000              	call malloc
 19756 0000E859 488B7D10                	mov rdi, ENV
 19757 0000E85D BE00000000              	mov rsi, 0
 19758 0000E862 BA01000000              	mov rdx, 1
 19759                                  .L_lambda_simple_env_loop_0762:	; ext_env[i + 1] <-- env[i]
 19760 0000E867 4883FE02                	cmp rsi, 2
 19761 0000E86B 7410                    	je .L_lambda_simple_env_end_0762
 19762 0000E86D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19763 0000E871 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19764 0000E875 48FFC6                  	inc rsi
 19765 0000E878 48FFC2                  	inc rdx
 19766 0000E87B EBEA                    	jmp .L_lambda_simple_env_loop_0762
 19767                                  .L_lambda_simple_env_end_0762:
 19768 0000E87D 5B                      	pop rbx
 19769 0000E87E BE00000000              	mov rsi, 0
 19770                                  .L_lambda_simple_params_loop_0762:	; copy params
 19771 0000E883 4883FE01                	cmp rsi, 1
 19772 0000E887 740E                    	je .L_lambda_simple_params_end_0762
 19773 0000E889 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19774 0000E88E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19775 0000E892 48FFC6                  	inc rsi
 19776 0000E895 EBEC                    	jmp .L_lambda_simple_params_loop_0762
 19777                                  .L_lambda_simple_params_end_0762:
 19778 0000E897 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19779 0000E89A 4889C3                  	mov rbx, rax
 19780 0000E89D 58                      	pop rax
 19781 0000E89E C60004                  	mov byte [rax], T_closure
 19782 0000E8A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19783 0000E8A5 48C74009[B2E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0762
 19784 0000E8AD E9D6020000              	jmp .L_lambda_simple_end_0762
 19785                                  .L_lambda_simple_code_0762:	; lambda-simple body
 19786 0000E8B2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19787 0000E8B8 740B                    	je .L_lambda_simple_arity_check_ok_084e
 19788 0000E8BA FF742410                	push qword [rsp + 8 * 2]
 19789 0000E8BE 6A02                    	push 2
 19790 0000E8C0 E9248C0000              	jmp L_error_incorrect_arity_simple
 19791                                  .L_lambda_simple_arity_check_ok_084e:
 19792 0000E8C5 C8000000                	enter 0, 0
 19793                                  	; preparing a tail-call
 19794                                  	; preparing a non-tail-call
 19795 0000E8C9 488B4528                	mov rax, PARAM(1)	; param str2
 19796 0000E8CD 50                      	push rax
 19797 0000E8CE 6A01                    	push 1	; arg count
 19798 0000E8D0 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 19799 0000E8D8 803805                  	cmp byte [rax], T_undefined
 19800 0000E8DB 0F84228B0000            	je L_error_fvar_undefined
 19801 0000E8E1 803804                  	cmp byte [rax], T_closure
 19802 0000E8E4 0F859D8B0000            	jne L_error_non_closure
 19803 0000E8EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19804 0000E8ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 19805 0000E8F0 50                      	push rax
 19806                                  	; preparing a non-tail-call
 19807 0000E8F1 488B4520                	mov rax, PARAM(0)	; param str1
 19808 0000E8F5 50                      	push rax
 19809 0000E8F6 6A01                    	push 1	; arg count
 19810 0000E8F8 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 19811 0000E900 803805                  	cmp byte [rax], T_undefined
 19812 0000E903 0F84FA8A0000            	je L_error_fvar_undefined
 19813 0000E909 803804                  	cmp byte [rax], T_closure
 19814 0000E90C 0F85758B0000            	jne L_error_non_closure
 19815 0000E912 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19816 0000E915 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19817 0000E918 50                      	push rax
 19818 0000E919 6A02                    	push 2	; arg count
 19819 0000E91B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19820 0000E920 E80B8C0000              	call malloc
 19821 0000E925 50                      	push rax
 19822 0000E926 BF10000000              	mov rdi, 8 * 2	; new rib
 19823 0000E92B E8008C0000              	call malloc
 19824 0000E930 50                      	push rax
 19825 0000E931 BF20000000              	mov rdi, 8 * 4	; extended env
 19826 0000E936 E8F58B0000              	call malloc
 19827 0000E93B 488B7D10                	mov rdi, ENV
 19828 0000E93F BE00000000              	mov rsi, 0
 19829 0000E944 BA01000000              	mov rdx, 1
 19830                                  .L_lambda_simple_env_loop_0763:	; ext_env[i + 1] <-- env[i]
 19831 0000E949 4883FE03                	cmp rsi, 3
 19832 0000E94D 7410                    	je .L_lambda_simple_env_end_0763
 19833 0000E94F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19834 0000E953 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19835 0000E957 48FFC6                  	inc rsi
 19836 0000E95A 48FFC2                  	inc rdx
 19837 0000E95D EBEA                    	jmp .L_lambda_simple_env_loop_0763
 19838                                  .L_lambda_simple_env_end_0763:
 19839 0000E95F 5B                      	pop rbx
 19840 0000E960 BE00000000              	mov rsi, 0
 19841                                  .L_lambda_simple_params_loop_0763:	; copy params
 19842 0000E965 4883FE02                	cmp rsi, 2
 19843 0000E969 740E                    	je .L_lambda_simple_params_end_0763
 19844 0000E96B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19845 0000E970 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19846 0000E974 48FFC6                  	inc rsi
 19847 0000E977 EBEC                    	jmp .L_lambda_simple_params_loop_0763
 19848                                  .L_lambda_simple_params_end_0763:
 19849 0000E979 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19850 0000E97C 4889C3                  	mov rbx, rax
 19851 0000E97F 58                      	pop rax
 19852 0000E980 C60004                  	mov byte [rax], T_closure
 19853 0000E983 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19854 0000E987 48C74009[94E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0763
 19855 0000E98F E990010000              	jmp .L_lambda_simple_end_0763
 19856                                  .L_lambda_simple_code_0763:	; lambda-simple body
 19857 0000E994 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19858 0000E99A 740B                    	je .L_lambda_simple_arity_check_ok_084f
 19859 0000E99C FF742410                	push qword [rsp + 8 * 2]
 19860 0000E9A0 6A02                    	push 2
 19861 0000E9A2 E9428B0000              	jmp L_error_incorrect_arity_simple
 19862                                  .L_lambda_simple_arity_check_ok_084f:
 19863 0000E9A7 C8000000                	enter 0, 0
 19864                                  	; preparing a non-tail-call
 19865 0000E9AB 488B4528                	mov rax, PARAM(1)	; param len2
 19866 0000E9AF 50                      	push rax
 19867 0000E9B0 488B4520                	mov rax, PARAM(0)	; param len1
 19868 0000E9B4 50                      	push rax
 19869 0000E9B5 6A02                    	push 2	; arg count
 19870 0000E9B7 488B0425[AF0E0000]      	mov rax, qword [free_var_5]	; free var <=
 19871 0000E9BF 803805                  	cmp byte [rax], T_undefined
 19872 0000E9C2 0F843B8A0000            	je L_error_fvar_undefined
 19873 0000E9C8 803804                  	cmp byte [rax], T_closure
 19874 0000E9CB 0F85B68A0000            	jne L_error_non_closure
 19875 0000E9D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19876 0000E9D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19877 0000E9D7 483D[02000000]          	cmp rax, sob_boolean_false
 19878 0000E9DD 0F84A1000000            	je .L_if_else_0529
 19879                                  	; preparing a tail-call
 19880 0000E9E3 488B4528                	mov rax, PARAM(1)	; param len2
 19881 0000E9E7 50                      	push rax
 19882 0000E9E8 488B4510                	mov rax, ENV
 19883 0000E9EC 488B00                  	mov rax, qword [rax + 8 * 0]
 19884 0000E9EF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19885 0000E9F3 50                      	push rax
 19886 0000E9F4 488B4520                	mov rax, PARAM(0)	; param len1
 19887 0000E9F8 50                      	push rax
 19888 0000E9F9 488B4510                	mov rax, ENV
 19889 0000E9FD 488B00                  	mov rax, qword [rax + 8 * 0]
 19890 0000EA00 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19891 0000EA03 50                      	push rax
 19892 0000EA04 48B8-                   	mov rax, L_constants + 2135
 19892 0000EA06 [5708000000000000] 
 19893 0000EA0E 50                      	push rax
 19894 0000EA0F 6A05                    	push 5	; arg count
 19895 0000EA11 488B4510                	mov rax, ENV
 19896 0000EA15 488B4008                	mov rax, qword [rax + 8 * 1]
 19897 0000EA19 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19898 0000EA1C 488B00                  	mov rax, qword [rax]
 19899 0000EA1F 803804                  	cmp byte [rax], T_closure
 19900 0000EA22 0F855F8A0000            	jne L_error_non_closure
 19901 0000EA28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19902 0000EA2B FF7508                  	push qword [rbp + 8 *1]
 19903 0000EA2E 4989C0                  	mov r8, rax
 19904 0000EA31 488B5D18                	mov rbx, COUNT
 19905 0000EA35 4883C303                	add rbx,3
 19906 0000EA39 48C1E303                	shl rbx,3
 19907 0000EA3D 4801EB                  	add rbx, rbp
 19908 0000EA40 488B6D00                	mov rbp, [rbp]
 19909 0000EA44 B900000000              	mov rcx,0
 19910 0000EA49 BA08000000              	mov rdx, 8
 19911 0000EA4E 4889D0                  	mov rax, rdx
 19912 0000EA51 48FFC8                  	dec rax
 19913 0000EA54 48C1E003                	shl rax,3
 19914 0000EA58 4801E0                  	add rax, rsp
 19915                                  	.L_tc_recycle_frame_loop_096e:
 19916 0000EA5B 4839D1                  	cmp rcx, rdx
 19917 0000EA5E 7414                    	je .L_tc_recycle_frame_done_096e
 19918 0000EA60 4C8B08                  	mov r9, qword [rax]
 19919 0000EA63 4C890B                  	mov qword [rbx],r9
 19920 0000EA66 4883E808                	sub rax,8
 19921 0000EA6A 4883EB08                	sub rbx,8
 19922 0000EA6E 4883C101                	add rcx,1
 19923 0000EA72 EBE7                    	jmp .L_tc_recycle_frame_loop_096e
 19924                                  	.L_tc_recycle_frame_done_096e:
 19925 0000EA74 4883C308                	add rbx,8
 19926 0000EA78 4889DC                  	mov rsp,rbx
 19927 0000EA7B 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19928 0000EA7F E99C000000              	jmp .L_if_end_05b3
 19929                                  .L_if_else_0529:
 19930                                  	; preparing a tail-call
 19931 0000EA84 488B4520                	mov rax, PARAM(0)	; param len1
 19932 0000EA88 50                      	push rax
 19933 0000EA89 488B4510                	mov rax, ENV
 19934 0000EA8D 488B00                  	mov rax, qword [rax + 8 * 0]
 19935 0000EA90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19936 0000EA93 50                      	push rax
 19937 0000EA94 488B4528                	mov rax, PARAM(1)	; param len2
 19938 0000EA98 50                      	push rax
 19939 0000EA99 488B4510                	mov rax, ENV
 19940 0000EA9D 488B00                  	mov rax, qword [rax + 8 * 0]
 19941 0000EAA0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19942 0000EAA4 50                      	push rax
 19943 0000EAA5 48B8-                   	mov rax, L_constants + 2135
 19943 0000EAA7 [5708000000000000] 
 19944 0000EAAF 50                      	push rax
 19945 0000EAB0 6A05                    	push 5	; arg count
 19946 0000EAB2 488B4510                	mov rax, ENV
 19947 0000EAB6 488B4008                	mov rax, qword [rax + 8 * 1]
 19948 0000EABA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19949 0000EABD 488B00                  	mov rax, qword [rax]
 19950 0000EAC0 803804                  	cmp byte [rax], T_closure
 19951 0000EAC3 0F85BE890000            	jne L_error_non_closure
 19952 0000EAC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19953 0000EACC FF7508                  	push qword [rbp + 8 *1]
 19954 0000EACF 4989C0                  	mov r8, rax
 19955 0000EAD2 488B5D18                	mov rbx, COUNT
 19956 0000EAD6 4883C303                	add rbx,3
 19957 0000EADA 48C1E303                	shl rbx,3
 19958 0000EADE 4801EB                  	add rbx, rbp
 19959 0000EAE1 488B6D00                	mov rbp, [rbp]
 19960 0000EAE5 B900000000              	mov rcx,0
 19961 0000EAEA BA08000000              	mov rdx, 8
 19962 0000EAEF 4889D0                  	mov rax, rdx
 19963 0000EAF2 48FFC8                  	dec rax
 19964 0000EAF5 48C1E003                	shl rax,3
 19965 0000EAF9 4801E0                  	add rax, rsp
 19966                                  	.L_tc_recycle_frame_loop_096f:
 19967 0000EAFC 4839D1                  	cmp rcx, rdx
 19968 0000EAFF 7414                    	je .L_tc_recycle_frame_done_096f
 19969 0000EB01 4C8B08                  	mov r9, qword [rax]
 19970 0000EB04 4C890B                  	mov qword [rbx],r9
 19971 0000EB07 4883E808                	sub rax,8
 19972 0000EB0B 4883EB08                	sub rbx,8
 19973 0000EB0F 4883C101                	add rcx,1
 19974 0000EB13 EBE7                    	jmp .L_tc_recycle_frame_loop_096f
 19975                                  	.L_tc_recycle_frame_done_096f:
 19976 0000EB15 4883C308                	add rbx,8
 19977 0000EB19 4889DC                  	mov rsp,rbx
 19978 0000EB1C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 19979                                  .L_if_end_05b3:
 19980 0000EB20 C9                      	leave
 19981 0000EB21 C22000                  	ret AND_KILL_FRAME(2)
 19982                                  .L_lambda_simple_end_0763:	; new closure is in rax
 19983 0000EB24 803804                  	cmp byte [rax], T_closure
 19984 0000EB27 0F855A890000            	jne L_error_non_closure
 19985 0000EB2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19986 0000EB30 FF7508                  	push qword [rbp + 8 *1]
 19987 0000EB33 4989C0                  	mov r8, rax
 19988 0000EB36 488B5D18                	mov rbx, COUNT
 19989 0000EB3A 4883C303                	add rbx,3
 19990 0000EB3E 48C1E303                	shl rbx,3
 19991 0000EB42 4801EB                  	add rbx, rbp
 19992 0000EB45 488B6D00                	mov rbp, [rbp]
 19993 0000EB49 B900000000              	mov rcx,0
 19994 0000EB4E BA05000000              	mov rdx, 5
 19995 0000EB53 4889D0                  	mov rax, rdx
 19996 0000EB56 48FFC8                  	dec rax
 19997 0000EB59 48C1E003                	shl rax,3
 19998 0000EB5D 4801E0                  	add rax, rsp
 19999                                  	.L_tc_recycle_frame_loop_096d:
 20000 0000EB60 4839D1                  	cmp rcx, rdx
 20001 0000EB63 7414                    	je .L_tc_recycle_frame_done_096d
 20002 0000EB65 4C8B08                  	mov r9, qword [rax]
 20003 0000EB68 4C890B                  	mov qword [rbx],r9
 20004 0000EB6B 4883E808                	sub rax,8
 20005 0000EB6F 4883EB08                	sub rbx,8
 20006 0000EB73 4883C101                	add rcx,1
 20007 0000EB77 EBE7                    	jmp .L_tc_recycle_frame_loop_096d
 20008                                  	.L_tc_recycle_frame_done_096d:
 20009 0000EB79 4883C308                	add rbx,8
 20010 0000EB7D 4889DC                  	mov rsp,rbx
 20011 0000EB80 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20012 0000EB84 C9                      	leave
 20013 0000EB85 C22000                  	ret AND_KILL_FRAME(2)
 20014                                  .L_lambda_simple_end_0762:	; new closure is in rax
 20015 0000EB88 50                      	push rax
 20016 0000EB89 6A01                    	push 1	; arg count
 20017 0000EB8B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20018 0000EB90 E89B890000              	call malloc
 20019 0000EB95 50                      	push rax
 20020 0000EB96 BF08000000              	mov rdi, 8 * 1	; new rib
 20021 0000EB9B E890890000              	call malloc
 20022 0000EBA0 50                      	push rax
 20023 0000EBA1 BF18000000              	mov rdi, 8 * 3	; extended env
 20024 0000EBA6 E885890000              	call malloc
 20025 0000EBAB 488B7D10                	mov rdi, ENV
 20026 0000EBAF BE00000000              	mov rsi, 0
 20027 0000EBB4 BA01000000              	mov rdx, 1
 20028                                  .L_lambda_simple_env_loop_0764:	; ext_env[i + 1] <-- env[i]
 20029 0000EBB9 4883FE02                	cmp rsi, 2
 20030 0000EBBD 7410                    	je .L_lambda_simple_env_end_0764
 20031 0000EBBF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20032 0000EBC3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20033 0000EBC7 48FFC6                  	inc rsi
 20034 0000EBCA 48FFC2                  	inc rdx
 20035 0000EBCD EBEA                    	jmp .L_lambda_simple_env_loop_0764
 20036                                  .L_lambda_simple_env_end_0764:
 20037 0000EBCF 5B                      	pop rbx
 20038 0000EBD0 BE00000000              	mov rsi, 0
 20039                                  .L_lambda_simple_params_loop_0764:	; copy params
 20040 0000EBD5 4883FE01                	cmp rsi, 1
 20041 0000EBD9 740E                    	je .L_lambda_simple_params_end_0764
 20042 0000EBDB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20043 0000EBE0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20044 0000EBE4 48FFC6                  	inc rsi
 20045 0000EBE7 EBEC                    	jmp .L_lambda_simple_params_loop_0764
 20046                                  .L_lambda_simple_params_end_0764:
 20047 0000EBE9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20048 0000EBEC 4889C3                  	mov rbx, rax
 20049 0000EBEF 58                      	pop rax
 20050 0000EBF0 C60004                  	mov byte [rax], T_closure
 20051 0000EBF3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20052 0000EBF7 48C74009[04EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0764
 20053 0000EBFF E939050000              	jmp .L_lambda_simple_end_0764
 20054                                  .L_lambda_simple_code_0764:	; lambda-simple body
 20055 0000EC04 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20056 0000EC0A 740B                    	je .L_lambda_simple_arity_check_ok_0850
 20057 0000EC0C FF742410                	push qword [rsp + 8 * 2]
 20058 0000EC10 6A01                    	push 1
 20059 0000EC12 E9D2880000              	jmp L_error_incorrect_arity_simple
 20060                                  .L_lambda_simple_arity_check_ok_0850:
 20061 0000EC17 C8000000                	enter 0, 0
 20062                                  	; preparing a tail-call
 20063 0000EC1B 48B8-                   	mov rax, L_constants + 1993
 20063 0000EC1D [C907000000000000] 
 20064 0000EC25 50                      	push rax
 20065 0000EC26 6A01                    	push 1	; arg count
 20066 0000EC28 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20067 0000EC2D E8FE880000              	call malloc
 20068 0000EC32 50                      	push rax
 20069 0000EC33 BF08000000              	mov rdi, 8 * 1	; new rib
 20070 0000EC38 E8F3880000              	call malloc
 20071 0000EC3D 50                      	push rax
 20072 0000EC3E BF20000000              	mov rdi, 8 * 4	; extended env
 20073 0000EC43 E8E8880000              	call malloc
 20074 0000EC48 488B7D10                	mov rdi, ENV
 20075 0000EC4C BE00000000              	mov rsi, 0
 20076 0000EC51 BA01000000              	mov rdx, 1
 20077                                  .L_lambda_simple_env_loop_0765:	; ext_env[i + 1] <-- env[i]
 20078 0000EC56 4883FE03                	cmp rsi, 3
 20079 0000EC5A 7410                    	je .L_lambda_simple_env_end_0765
 20080 0000EC5C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20081 0000EC60 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20082 0000EC64 48FFC6                  	inc rsi
 20083 0000EC67 48FFC2                  	inc rdx
 20084 0000EC6A EBEA                    	jmp .L_lambda_simple_env_loop_0765
 20085                                  .L_lambda_simple_env_end_0765:
 20086 0000EC6C 5B                      	pop rbx
 20087 0000EC6D BE00000000              	mov rsi, 0
 20088                                  .L_lambda_simple_params_loop_0765:	; copy params
 20089 0000EC72 4883FE01                	cmp rsi, 1
 20090 0000EC76 740E                    	je .L_lambda_simple_params_end_0765
 20091 0000EC78 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20092 0000EC7D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20093 0000EC81 48FFC6                  	inc rsi
 20094 0000EC84 EBEC                    	jmp .L_lambda_simple_params_loop_0765
 20095                                  .L_lambda_simple_params_end_0765:
 20096 0000EC86 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20097 0000EC89 4889C3                  	mov rbx, rax
 20098 0000EC8C 58                      	pop rax
 20099 0000EC8D C60004                  	mov byte [rax], T_closure
 20100 0000EC90 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20101 0000EC94 48C74009[A1EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0765
 20102 0000EC9C E938040000              	jmp .L_lambda_simple_end_0765
 20103                                  .L_lambda_simple_code_0765:	; lambda-simple body
 20104 0000ECA1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20105 0000ECA7 740B                    	je .L_lambda_simple_arity_check_ok_0851
 20106 0000ECA9 FF742410                	push qword [rsp + 8 * 2]
 20107 0000ECAD 6A01                    	push 1
 20108 0000ECAF E935880000              	jmp L_error_incorrect_arity_simple
 20109                                  .L_lambda_simple_arity_check_ok_0851:
 20110 0000ECB4 C8000000                	enter 0, 0
 20111 0000ECB8 BF08000000              	mov rdi, 8
 20112 0000ECBD E86E880000              	call malloc
 20113 0000ECC2 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 20114 0000ECC6 488918                  	mov qword [rax], rbx
 20115 0000ECC9 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 20116 0000ECCD 48B8-                   	mov rax, sob_void
 20116 0000ECCF [0000000000000000] 
 20117                                  
 20118 0000ECD7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20119 0000ECDC E84F880000              	call malloc
 20120 0000ECE1 50                      	push rax
 20121 0000ECE2 BF08000000              	mov rdi, 8 * 1	; new rib
 20122 0000ECE7 E844880000              	call malloc
 20123 0000ECEC 50                      	push rax
 20124 0000ECED BF28000000              	mov rdi, 8 * 5	; extended env
 20125 0000ECF2 E839880000              	call malloc
 20126 0000ECF7 488B7D10                	mov rdi, ENV
 20127 0000ECFB BE00000000              	mov rsi, 0
 20128 0000ED00 BA01000000              	mov rdx, 1
 20129                                  .L_lambda_simple_env_loop_0766:	; ext_env[i + 1] <-- env[i]
 20130 0000ED05 4883FE04                	cmp rsi, 4
 20131 0000ED09 7410                    	je .L_lambda_simple_env_end_0766
 20132 0000ED0B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20133 0000ED0F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20134 0000ED13 48FFC6                  	inc rsi
 20135 0000ED16 48FFC2                  	inc rdx
 20136 0000ED19 EBEA                    	jmp .L_lambda_simple_env_loop_0766
 20137                                  .L_lambda_simple_env_end_0766:
 20138 0000ED1B 5B                      	pop rbx
 20139 0000ED1C BE00000000              	mov rsi, 0
 20140                                  .L_lambda_simple_params_loop_0766:	; copy params
 20141 0000ED21 4883FE01                	cmp rsi, 1
 20142 0000ED25 740E                    	je .L_lambda_simple_params_end_0766
 20143 0000ED27 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20144 0000ED2C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20145 0000ED30 48FFC6                  	inc rsi
 20146 0000ED33 EBEC                    	jmp .L_lambda_simple_params_loop_0766
 20147                                  .L_lambda_simple_params_end_0766:
 20148 0000ED35 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20149 0000ED38 4889C3                  	mov rbx, rax
 20150 0000ED3B 58                      	pop rax
 20151 0000ED3C C60004                  	mov byte [rax], T_closure
 20152 0000ED3F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20153 0000ED43 48C74009[50ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0766
 20154 0000ED4B E976010000              	jmp .L_lambda_simple_end_0766
 20155                                  .L_lambda_simple_code_0766:	; lambda-simple body
 20156 0000ED50 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20157 0000ED56 740B                    	je .L_lambda_simple_arity_check_ok_0852
 20158 0000ED58 FF742410                	push qword [rsp + 8 * 2]
 20159 0000ED5C 6A02                    	push 2
 20160 0000ED5E E986870000              	jmp L_error_incorrect_arity_simple
 20161                                  .L_lambda_simple_arity_check_ok_0852:
 20162 0000ED63 C8000000                	enter 0, 0
 20163                                  	; preparing a non-tail-call
 20164 0000ED67 488B4528                	mov rax, PARAM(1)	; param strs
 20165 0000ED6B 50                      	push rax
 20166 0000ED6C 6A01                    	push 1	; arg count
 20167 0000ED6E 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 20168 0000ED76 803805                  	cmp byte [rax], T_undefined
 20169 0000ED79 0F8484860000            	je L_error_fvar_undefined
 20170 0000ED7F 803804                  	cmp byte [rax], T_closure
 20171 0000ED82 0F85FF860000            	jne L_error_non_closure
 20172 0000ED88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20173 0000ED8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20174 0000ED8E 483D[02000000]          	cmp rax, sob_boolean_false
 20175 0000ED94 0F8528010000            	jne .L_if_end_05b4
 20176                                  	; preparing a non-tail-call
 20177                                  	; preparing a non-tail-call
 20178 0000ED9A 488B4528                	mov rax, PARAM(1)	; param strs
 20179 0000ED9E 50                      	push rax
 20180 0000ED9F 6A01                    	push 1	; arg count
 20181 0000EDA1 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 20182 0000EDA9 803805                  	cmp byte [rax], T_undefined
 20183 0000EDAC 0F8451860000            	je L_error_fvar_undefined
 20184 0000EDB2 803804                  	cmp byte [rax], T_closure
 20185 0000EDB5 0F85CC860000            	jne L_error_non_closure
 20186 0000EDBB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20187 0000EDBE FF5009                  	call SOB_CLOSURE_CODE(rax)
 20188 0000EDC1 50                      	push rax
 20189 0000EDC2 488B4520                	mov rax, PARAM(0)	; param str
 20190 0000EDC6 50                      	push rax
 20191 0000EDC7 6A02                    	push 2	; arg count
 20192 0000EDC9 488B4510                	mov rax, ENV
 20193 0000EDCD 488B4008                	mov rax, qword [rax + 8 * 1]
 20194 0000EDD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 20195 0000EDD4 803804                  	cmp byte [rax], T_closure
 20196 0000EDD7 0F85AA860000            	jne L_error_non_closure
 20197 0000EDDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20198 0000EDE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20199 0000EDE3 483D[02000000]          	cmp rax, sob_boolean_false
 20200 0000EDE9 0F84C1000000            	je .L_if_else_052a
 20201                                  	; preparing a tail-call
 20202                                  	; preparing a non-tail-call
 20203 0000EDEF 488B4528                	mov rax, PARAM(1)	; param strs
 20204 0000EDF3 50                      	push rax
 20205 0000EDF4 6A01                    	push 1	; arg count
 20206 0000EDF6 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 20207 0000EDFE 803805                  	cmp byte [rax], T_undefined
 20208 0000EE01 0F84FC850000            	je L_error_fvar_undefined
 20209 0000EE07 803804                  	cmp byte [rax], T_closure
 20210 0000EE0A 0F8577860000            	jne L_error_non_closure
 20211 0000EE10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20212 0000EE13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20213 0000EE16 50                      	push rax
 20214                                  	; preparing a non-tail-call
 20215 0000EE17 488B4528                	mov rax, PARAM(1)	; param strs
 20216 0000EE1B 50                      	push rax
 20217 0000EE1C 6A01                    	push 1	; arg count
 20218 0000EE1E 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 20219 0000EE26 803805                  	cmp byte [rax], T_undefined
 20220 0000EE29 0F84D4850000            	je L_error_fvar_undefined
 20221 0000EE2F 803804                  	cmp byte [rax], T_closure
 20222 0000EE32 0F854F860000            	jne L_error_non_closure
 20223 0000EE38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20224 0000EE3B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20225 0000EE3E 50                      	push rax
 20226 0000EE3F 6A02                    	push 2	; arg count
 20227 0000EE41 488B4510                	mov rax, ENV
 20228 0000EE45 488B00                  	mov rax, qword [rax + 8 * 0]
 20229 0000EE48 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20230 0000EE4B 488B00                  	mov rax, qword [rax]
 20231 0000EE4E 803804                  	cmp byte [rax], T_closure
 20232 0000EE51 0F8530860000            	jne L_error_non_closure
 20233 0000EE57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20234 0000EE5A FF7508                  	push qword [rbp + 8 *1]
 20235 0000EE5D 4989C0                  	mov r8, rax
 20236 0000EE60 488B5D18                	mov rbx, COUNT
 20237 0000EE64 4883C303                	add rbx,3
 20238 0000EE68 48C1E303                	shl rbx,3
 20239 0000EE6C 4801EB                  	add rbx, rbp
 20240 0000EE6F 488B6D00                	mov rbp, [rbp]
 20241 0000EE73 B900000000              	mov rcx,0
 20242 0000EE78 BA05000000              	mov rdx, 5
 20243 0000EE7D 4889D0                  	mov rax, rdx
 20244 0000EE80 48FFC8                  	dec rax
 20245 0000EE83 48C1E003                	shl rax,3
 20246 0000EE87 4801E0                  	add rax, rsp
 20247                                  	.L_tc_recycle_frame_loop_0971:
 20248 0000EE8A 4839D1                  	cmp rcx, rdx
 20249 0000EE8D 7414                    	je .L_tc_recycle_frame_done_0971
 20250 0000EE8F 4C8B08                  	mov r9, qword [rax]
 20251 0000EE92 4C890B                  	mov qword [rbx],r9
 20252 0000EE95 4883E808                	sub rax,8
 20253 0000EE99 4883EB08                	sub rbx,8
 20254 0000EE9D 4883C101                	add rcx,1
 20255 0000EEA1 EBE7                    	jmp .L_tc_recycle_frame_loop_0971
 20256                                  	.L_tc_recycle_frame_done_0971:
 20257 0000EEA3 4883C308                	add rbx,8
 20258 0000EEA7 4889DC                  	mov rsp,rbx
 20259 0000EEAA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20260 0000EEAE EB0A                    	jmp .L_if_end_05b5
 20261                                  .L_if_else_052a:
 20262 0000EEB0 48B8-                   	mov rax, L_constants + 2
 20262 0000EEB2 [0200000000000000] 
 20263                                  .L_if_end_05b5:
 20264 0000EEBA 483D[02000000]          	cmp rax, sob_boolean_false
 20265 0000EEC0 7500                    	jne .L_if_end_05b4
 20266                                  .L_if_end_05b4:
 20267 0000EEC2 C9                      	leave
 20268 0000EEC3 C22000                  	ret AND_KILL_FRAME(2)
 20269                                  .L_lambda_simple_end_0766:	; new closure is in rax
 20270 0000EEC6 50                      	push rax
 20271 0000EEC7 488B4520                	mov rax, PARAM(0)	; param run
 20272 0000EECB 8F00                    	pop qword [rax]
 20273 0000EECD 48B8-                   	mov rax, sob_void
 20273 0000EECF [0000000000000000] 
 20274                                  
 20275 0000EED7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20276 0000EEDC E84F860000              	call malloc
 20277 0000EEE1 50                      	push rax
 20278 0000EEE2 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 20279 0000EEE6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20280 0000EEEA BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 20281 0000EEEF E83C860000              	call malloc
 20282 0000EEF4 50                      	push rax
 20283 0000EEF5 BF28000000              	mov rdi, 8 * 5	; extended env
 20284 0000EEFA E831860000              	call malloc
 20285 0000EEFF 488B7D10                	mov rdi, ENV
 20286 0000EF03 BE00000000              	mov rsi, 0
 20287 0000EF08 BA01000000              	mov rdx, 1
 20288                                  .L_lambda_opt_env_loop_00ed:	; ext_env[i + 1] <-- env[i] copy all the array
 20289 0000EF0D 4883FE04                	cmp rsi, 4
 20290 0000EF11 7410                    	je .L_lambda_opt_env_end_00ed
 20291 0000EF13 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20292 0000EF17 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20293 0000EF1B 48FFC6                  	inc rsi
 20294 0000EF1E 48FFC2                  	inc rdx
 20295 0000EF21 EBEA                    	jmp .L_lambda_opt_env_loop_00ed
 20296                                  .L_lambda_opt_env_end_00ed:
 20297 0000EF23 5B                      	pop rbx
 20298 0000EF24 BE00000000              	mov rsi, 0
 20299                                  .L_lambda_opt_params_loop_02c5:	; copy params
 20300 0000EF29 4883FE01                	cmp rsi, 1
 20301 0000EF2D 740E                    	je .L_lambda_opt_params_end_01d9
 20302 0000EF2F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20303 0000EF34 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20304 0000EF38 48FFC6                  	inc rsi
 20305 0000EF3B EBEC                    	jmp .L_lambda_opt_params_loop_02c5
 20306                                  .L_lambda_opt_params_end_01d9:
 20307 0000EF3D 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 20308 0000EF40 4889C3                  	mov rbx, rax
 20309 0000EF43 58                      	pop rax
 20310 0000EF44 C60004                  	mov byte [rax], T_closure
 20311 0000EF47 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20312 0000EF4B 48C74009[58EF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00ed
 20313 0000EF53 E97D010000              	jmp .L_lambda_opt_end_01d9
 20314                                  .L_lambda_opt_code_00ed:	; lambda-opt body
 20315 0000EF58 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20316 0000EF5E 7D0B                    	jge .L_lambda_simple_arity_check_ok_0853
 20317 0000EF60 FF742410                	push qword [rsp + 8 * 2]
 20318 0000EF64 6A01                    	push 1
 20319 0000EF66 E97E850000              	jmp L_error_incorrect_arity_simple
 20320                                  .L_lambda_simple_arity_check_ok_0853:
 20321 0000EF6B 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 20322 0000EF70 4983E801                	sub r8, 1
 20323 0000EF74 4C89C3                  	mov rbx,r8
 20324 0000EF77 4983F800                	cmp r8, 0
 20325 0000EF7B 7535                    	jne .L_lambda_opt_params_loop_02c7
 20326 0000EF7D 488B542410              	mov rdx, qword [rsp + 8 * 2]
 20327 0000EF82 4883C203                	add rdx , 3
 20328 0000EF86 4883EC08                	sub rsp , 8
 20329 0000EF8A 4889E1                  	mov rcx, rsp
 20330                                  .L_lambda_opt_stack_adjusted_02c6: ;pushing down the stack of the current function
 20331 0000EF8D 488B5908                	mov rbx, qword [rcx + 8 * 1]
 20332 0000EF91 488919                  	mov qword[rcx] , rbx
 20333 0000EF94 4883C108                	add rcx , 8
 20334 0000EF98 48FFCA                  	dec rdx
 20335 0000EF9B 4883FA00                	cmp rdx, 0
 20336 0000EF9F 75EC                    	jne .L_lambda_opt_stack_adjusted_02c6
 20337 0000EFA1 48FF442410              	inc qword [rsp + 8 * 2]
 20338 0000EFA6 48C701[01000000]        	mov qword [rcx], sob_nil 
 20339 0000EFAD E9A2000000              	jmp .L_lambda_opt_end_01da
 20340                                  	.L_lambda_opt_params_loop_02c7:
 20341 0000EFB2 488B542410              	mov rdx, qword [rsp + 8*2]
 20342 0000EFB7 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 20343 0000EFBC 4C89C2                  	mov rdx, r8
 20344 0000EFBF 49B9-                   	mov r9, sob_nil
 20344 0000EFC1 [0100000000000000] 
 20345                                  	.L_lambda_opt_params_loop_02c6: ;loop for copying the opt into list
 20346 0000EFC9 BF11000000              	mov rdi, (1 + 8 + 8)
 20347 0000EFCE E85D850000              	call malloc
 20348 0000EFD3 C60021                  	mov byte[rax], T_pair
 20349 0000EFD6 488B19                  	mov rbx, qword [rcx]
 20350 0000EFD9 48895801                	mov SOB_PAIR_CAR(rax), rbx
 20351 0000EFDD 4C894809                	mov SOB_PAIR_CDR(rax), r9
 20352 0000EFE1 4989C1                  	mov r9, rax
 20353 0000EFE4 48FFCA                  	dec rdx
 20354 0000EFE7 4883E908                	sub rcx, 8
 20355 0000EFEB 4883FA00                	cmp rdx, 0
 20356 0000EFEF 75D8                    	jne .L_lambda_opt_params_loop_02c6
 20357 0000EFF1 488B542410              	mov rdx, qword [rsp + 8 * 2]
 20358 0000EFF6 4889E0                  	mov rax, rsp
 20359 0000EFF9 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 20360 0000EFFE 4C89C1                  	mov rcx, r8
 20361 0000F001 48FFC9                  	dec rcx
 20362 0000F004 4883C203                	add rdx, 3
 20363 0000F008 4829CA                  	sub rdx,rcx
 20364 0000F00B 48C1E103                	shl rcx, 3
 20365                                  	.L_lambda_opt_stack_adjusted_02c7:
 20366 0000F00F 4883FA00                	cmp rdx, 0
 20367 0000F013 7419                    	je .L_lambda_opt_params_end_01da
 20368 0000F015 4889D8                  	mov rax, rbx
 20369 0000F018 4829C8                  	sub rax, rcx
 20370 0000F01B 488B30                  	mov rsi, qword [rax]
 20371 0000F01E 488933                  	mov [rbx], rsi
 20372 0000F021 4883EB08                	sub rbx, 8
 20373 0000F025 48FFCA                  	dec rdx
 20374 0000F028 4883FA00                	cmp rdx, 0
 20375 0000F02C 75E1                    	jne .L_lambda_opt_stack_adjusted_02c7
 20376                                  	.L_lambda_opt_params_end_01da:
 20377 0000F02E 4801CC                  	add rsp,rcx
 20378 0000F031 BB01000000              	mov rbx, 1
 20379 0000F036 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 20380 0000F03B 4883C303                	add rbx,3
 20381 0000F03F 4C29C3                  	sub rbx,r8
 20382 0000F042 48C1E303                	shl rbx, 3
 20383 0000F046 4801E3                  	add rbx, rsp
 20384 0000F049 4C890B                  	mov qword[rbx] , r9
 20385 0000F04C 49FFC8                  	dec r8
 20386 0000F04F 4C29442410              	sub qword [rsp + 8 * 2], r8
 20387                                  	.L_lambda_opt_end_01da:
 20388 0000F054 C8000000                	enter 0, 0
 20389                                  	; preparing a tail-call
 20390 0000F058 488B4528                	mov rax, PARAM(1)	; param strs
 20391 0000F05C 50                      	push rax
 20392 0000F05D 488B4520                	mov rax, PARAM(0)	; param str
 20393 0000F061 50                      	push rax
 20394 0000F062 6A02                    	push 2	; arg count
 20395 0000F064 488B4510                	mov rax, ENV
 20396 0000F068 488B00                  	mov rax, qword [rax + 8 * 0]
 20397 0000F06B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20398 0000F06E 488B00                  	mov rax, qword [rax]
 20399 0000F071 803804                  	cmp byte [rax], T_closure
 20400 0000F074 0F850D840000            	jne L_error_non_closure
 20401 0000F07A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20402 0000F07D FF7508                  	push qword [rbp + 8 *1]
 20403 0000F080 4989C0                  	mov r8, rax
 20404 0000F083 488B5D18                	mov rbx, COUNT
 20405 0000F087 4883C303                	add rbx,3
 20406 0000F08B 48C1E303                	shl rbx,3
 20407 0000F08F 4801EB                  	add rbx, rbp
 20408 0000F092 488B6D00                	mov rbp, [rbp]
 20409 0000F096 B900000000              	mov rcx,0
 20410 0000F09B BA05000000              	mov rdx, 5
 20411 0000F0A0 4889D0                  	mov rax, rdx
 20412 0000F0A3 48FFC8                  	dec rax
 20413 0000F0A6 48C1E003                	shl rax,3
 20414 0000F0AA 4801E0                  	add rax, rsp
 20415                                  	.L_tc_recycle_frame_loop_0972:
 20416 0000F0AD 4839D1                  	cmp rcx, rdx
 20417 0000F0B0 7414                    	je .L_tc_recycle_frame_done_0972
 20418 0000F0B2 4C8B08                  	mov r9, qword [rax]
 20419 0000F0B5 4C890B                  	mov qword [rbx],r9
 20420 0000F0B8 4883E808                	sub rax,8
 20421 0000F0BC 4883EB08                	sub rbx,8
 20422 0000F0C0 4883C101                	add rcx,1
 20423 0000F0C4 EBE7                    	jmp .L_tc_recycle_frame_loop_0972
 20424                                  	.L_tc_recycle_frame_done_0972:
 20425 0000F0C6 4883C308                	add rbx,8
 20426 0000F0CA 4889DC                  	mov rsp,rbx
 20427 0000F0CD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20428                                  	LEAVE
    49 0000F0D1 C9                  <1>  leave
 20429 0000F0D2 C22000                  	ret AND_KILL_FRAME(2)
 20430                                  .L_lambda_opt_end_01d9:
 20431 0000F0D5 C9                      	leave
 20432 0000F0D6 C21800                  	ret AND_KILL_FRAME(1)
 20433                                  .L_lambda_simple_end_0765:	; new closure is in rax
 20434 0000F0D9 803804                  	cmp byte [rax], T_closure
 20435 0000F0DC 0F85A5830000            	jne L_error_non_closure
 20436 0000F0E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20437 0000F0E5 FF7508                  	push qword [rbp + 8 *1]
 20438 0000F0E8 4989C0                  	mov r8, rax
 20439 0000F0EB 488B5D18                	mov rbx, COUNT
 20440 0000F0EF 4883C303                	add rbx,3
 20441 0000F0F3 48C1E303                	shl rbx,3
 20442 0000F0F7 4801EB                  	add rbx, rbp
 20443 0000F0FA 488B6D00                	mov rbp, [rbp]
 20444 0000F0FE B900000000              	mov rcx,0
 20445 0000F103 BA04000000              	mov rdx, 4
 20446 0000F108 4889D0                  	mov rax, rdx
 20447 0000F10B 48FFC8                  	dec rax
 20448 0000F10E 48C1E003                	shl rax,3
 20449 0000F112 4801E0                  	add rax, rsp
 20450                                  	.L_tc_recycle_frame_loop_0970:
 20451 0000F115 4839D1                  	cmp rcx, rdx
 20452 0000F118 7414                    	je .L_tc_recycle_frame_done_0970
 20453 0000F11A 4C8B08                  	mov r9, qword [rax]
 20454 0000F11D 4C890B                  	mov qword [rbx],r9
 20455 0000F120 4883E808                	sub rax,8
 20456 0000F124 4883EB08                	sub rbx,8
 20457 0000F128 4883C101                	add rcx,1
 20458 0000F12C EBE7                    	jmp .L_tc_recycle_frame_loop_0970
 20459                                  	.L_tc_recycle_frame_done_0970:
 20460 0000F12E 4883C308                	add rbx,8
 20461 0000F132 4889DC                  	mov rsp,rbx
 20462 0000F135 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20463 0000F139 C9                      	leave
 20464 0000F13A C21800                  	ret AND_KILL_FRAME(1)
 20465                                  .L_lambda_simple_end_0764:	; new closure is in rax
 20466 0000F13D 803804                  	cmp byte [rax], T_closure
 20467 0000F140 0F8541830000            	jne L_error_non_closure
 20468 0000F146 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20469 0000F149 FF7508                  	push qword [rbp + 8 *1]
 20470 0000F14C 4989C0                  	mov r8, rax
 20471 0000F14F 488B5D18                	mov rbx, COUNT
 20472 0000F153 4883C303                	add rbx,3
 20473 0000F157 48C1E303                	shl rbx,3
 20474 0000F15B 4801EB                  	add rbx, rbp
 20475 0000F15E 488B6D00                	mov rbp, [rbp]
 20476 0000F162 B900000000              	mov rcx,0
 20477 0000F167 BA04000000              	mov rdx, 4
 20478 0000F16C 4889D0                  	mov rax, rdx
 20479 0000F16F 48FFC8                  	dec rax
 20480 0000F172 48C1E003                	shl rax,3
 20481 0000F176 4801E0                  	add rax, rsp
 20482                                  	.L_tc_recycle_frame_loop_096c:
 20483 0000F179 4839D1                  	cmp rcx, rdx
 20484 0000F17C 7414                    	je .L_tc_recycle_frame_done_096c
 20485 0000F17E 4C8B08                  	mov r9, qword [rax]
 20486 0000F181 4C890B                  	mov qword [rbx],r9
 20487 0000F184 4883E808                	sub rax,8
 20488 0000F188 4883EB08                	sub rbx,8
 20489 0000F18C 4883C101                	add rcx,1
 20490 0000F190 EBE7                    	jmp .L_tc_recycle_frame_loop_096c
 20491                                  	.L_tc_recycle_frame_done_096c:
 20492 0000F192 4883C308                	add rbx,8
 20493 0000F196 4889DC                  	mov rsp,rbx
 20494 0000F199 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20495 0000F19D C9                      	leave
 20496 0000F19E C21800                  	ret AND_KILL_FRAME(1)
 20497                                  .L_lambda_simple_end_0760:	; new closure is in rax
 20498 0000F1A1 803804                  	cmp byte [rax], T_closure
 20499 0000F1A4 0F85DD820000            	jne L_error_non_closure
 20500 0000F1AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20501 0000F1AD FF7508                  	push qword [rbp + 8 *1]
 20502 0000F1B0 4989C0                  	mov r8, rax
 20503 0000F1B3 488B5D18                	mov rbx, COUNT
 20504 0000F1B7 4883C303                	add rbx,3
 20505 0000F1BB 48C1E303                	shl rbx,3
 20506 0000F1BF 4801EB                  	add rbx, rbp
 20507 0000F1C2 488B6D00                	mov rbp, [rbp]
 20508 0000F1C6 B900000000              	mov rcx,0
 20509 0000F1CB BA04000000              	mov rdx, 4
 20510 0000F1D0 4889D0                  	mov rax, rdx
 20511 0000F1D3 48FFC8                  	dec rax
 20512 0000F1D6 48C1E003                	shl rax,3
 20513 0000F1DA 4801E0                  	add rax, rsp
 20514                                  	.L_tc_recycle_frame_loop_096a:
 20515 0000F1DD 4839D1                  	cmp rcx, rdx
 20516 0000F1E0 7414                    	je .L_tc_recycle_frame_done_096a
 20517 0000F1E2 4C8B08                  	mov r9, qword [rax]
 20518 0000F1E5 4C890B                  	mov qword [rbx],r9
 20519 0000F1E8 4883E808                	sub rax,8
 20520 0000F1EC 4883EB08                	sub rbx,8
 20521 0000F1F0 4883C101                	add rcx,1
 20522 0000F1F4 EBE7                    	jmp .L_tc_recycle_frame_loop_096a
 20523                                  	.L_tc_recycle_frame_done_096a:
 20524 0000F1F6 4883C308                	add rbx,8
 20525 0000F1FA 4889DC                  	mov rsp,rbx
 20526 0000F1FD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20527 0000F201 C9                      	leave
 20528 0000F202 C22000                  	ret AND_KILL_FRAME(2)
 20529                                  .L_lambda_simple_end_075f:	; new closure is in rax
 20530 0000F205 50                      	push rax
 20531 0000F206 6A01                    	push 1	; arg count
 20532 0000F208 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20533 0000F20D E81E830000              	call malloc
 20534 0000F212 50                      	push rax
 20535 0000F213 BF00000000              	mov rdi, 8 * 0	; new rib
 20536 0000F218 E813830000              	call malloc
 20537 0000F21D 50                      	push rax
 20538 0000F21E BF08000000              	mov rdi, 8 * 1	; extended env
 20539 0000F223 E808830000              	call malloc
 20540 0000F228 488B7D10                	mov rdi, ENV
 20541 0000F22C BE00000000              	mov rsi, 0
 20542 0000F231 BA01000000              	mov rdx, 1
 20543                                  .L_lambda_simple_env_loop_0767:	; ext_env[i + 1] <-- env[i]
 20544 0000F236 4883FE00                	cmp rsi, 0
 20545 0000F23A 7410                    	je .L_lambda_simple_env_end_0767
 20546 0000F23C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20547 0000F240 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20548 0000F244 48FFC6                  	inc rsi
 20549 0000F247 48FFC2                  	inc rdx
 20550 0000F24A EBEA                    	jmp .L_lambda_simple_env_loop_0767
 20551                                  .L_lambda_simple_env_end_0767:
 20552 0000F24C 5B                      	pop rbx
 20553 0000F24D BE00000000              	mov rsi, 0
 20554                                  .L_lambda_simple_params_loop_0767:	; copy params
 20555 0000F252 4883FE00                	cmp rsi, 0
 20556 0000F256 740E                    	je .L_lambda_simple_params_end_0767
 20557 0000F258 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20558 0000F25D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20559 0000F261 48FFC6                  	inc rsi
 20560 0000F264 EBEC                    	jmp .L_lambda_simple_params_loop_0767
 20561                                  .L_lambda_simple_params_end_0767:
 20562 0000F266 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20563 0000F269 4889C3                  	mov rbx, rax
 20564 0000F26C 58                      	pop rax
 20565 0000F26D C60004                  	mov byte [rax], T_closure
 20566 0000F270 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20567 0000F274 48C74009[81F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0767
 20568 0000F27C E947010000              	jmp .L_lambda_simple_end_0767
 20569                                  .L_lambda_simple_code_0767:	; lambda-simple body
 20570 0000F281 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20571 0000F287 740B                    	je .L_lambda_simple_arity_check_ok_0854
 20572 0000F289 FF742410                	push qword [rsp + 8 * 2]
 20573 0000F28D 6A01                    	push 1
 20574 0000F28F E955820000              	jmp L_error_incorrect_arity_simple
 20575                                  .L_lambda_simple_arity_check_ok_0854:
 20576 0000F294 C8000000                	enter 0, 0
 20577                                  	; preparing a non-tail-call
 20578 0000F298 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 20579 0000F2A0 803805                  	cmp byte [rax], T_undefined
 20580 0000F2A3 0F845A810000            	je L_error_fvar_undefined
 20581 0000F2A9 50                      	push rax
 20582 0000F2AA 488B0425[44130000]      	mov rax, qword [free_var_74]	; free var char<?
 20583 0000F2B2 803805                  	cmp byte [rax], T_undefined
 20584 0000F2B5 0F8448810000            	je L_error_fvar_undefined
 20585 0000F2BB 50                      	push rax
 20586 0000F2BC 6A02                    	push 2	; arg count
 20587 0000F2BE 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20588 0000F2C2 803804                  	cmp byte [rax], T_closure
 20589 0000F2C5 0F85BC810000            	jne L_error_non_closure
 20590 0000F2CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20591 0000F2CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 20592 0000F2D1 48890425[2F170000]      	mov qword [free_var_133], rax
 20593 0000F2D9 48B8-                   	mov rax, sob_void
 20593 0000F2DB [0000000000000000] 
 20594                                  
 20595                                  	; preparing a non-tail-call
 20596 0000F2E3 488B0425[DE120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20597 0000F2EB 803805                  	cmp byte [rax], T_undefined
 20598 0000F2EE 0F840F810000            	je L_error_fvar_undefined
 20599 0000F2F4 50                      	push rax
 20600 0000F2F5 488B0425[CD120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 20601 0000F2FD 803805                  	cmp byte [rax], T_undefined
 20602 0000F300 0F84FD800000            	je L_error_fvar_undefined
 20603 0000F306 50                      	push rax
 20604 0000F307 6A02                    	push 2	; arg count
 20605 0000F309 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20606 0000F30D 803804                  	cmp byte [rax], T_closure
 20607 0000F310 0F8571810000            	jne L_error_non_closure
 20608 0000F316 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20609 0000F319 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20610 0000F31C 48890425[63160000]      	mov qword [free_var_121], rax
 20611 0000F324 48B8-                   	mov rax, sob_void
 20611 0000F326 [0000000000000000] 
 20612                                  
 20613                                  	; preparing a non-tail-call
 20614 0000F32E 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 20615 0000F336 803805                  	cmp byte [rax], T_undefined
 20616 0000F339 0F84C4800000            	je L_error_fvar_undefined
 20617 0000F33F 50                      	push rax
 20618 0000F340 488B0425[77130000]      	mov rax, qword [free_var_77]	; free var char>?
 20619 0000F348 803805                  	cmp byte [rax], T_undefined
 20620 0000F34B 0F84B2800000            	je L_error_fvar_undefined
 20621 0000F351 50                      	push rax
 20622 0000F352 6A02                    	push 2	; arg count
 20623 0000F354 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20624 0000F358 803804                  	cmp byte [rax], T_closure
 20625 0000F35B 0F8526810000            	jne L_error_non_closure
 20626 0000F361 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20627 0000F364 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20628 0000F367 48890425[62170000]      	mov qword [free_var_136], rax
 20629 0000F36F 48B8-                   	mov rax, sob_void
 20629 0000F371 [0000000000000000] 
 20630                                  
 20631                                  	; preparing a non-tail-call
 20632 0000F379 488B0425[DE120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20633 0000F381 803805                  	cmp byte [rax], T_undefined
 20634 0000F384 0F8479800000            	je L_error_fvar_undefined
 20635 0000F38A 50                      	push rax
 20636 0000F38B 488B0425[00130000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 20637 0000F393 803805                  	cmp byte [rax], T_undefined
 20638 0000F396 0F8467800000            	je L_error_fvar_undefined
 20639 0000F39C 50                      	push rax
 20640 0000F39D 6A02                    	push 2	; arg count
 20641 0000F39F 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20642 0000F3A3 803804                  	cmp byte [rax], T_closure
 20643 0000F3A6 0F85DB800000            	jne L_error_non_closure
 20644 0000F3AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 20645 0000F3AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 20646 0000F3B2 48890425[96160000]      	mov qword [free_var_124], rax
 20647 0000F3BA 48B8-                   	mov rax, sob_void
 20647 0000F3BC [0000000000000000] 
 20648 0000F3C4 C9                      	leave
 20649 0000F3C5 C21800                  	ret AND_KILL_FRAME(1)
 20650                                  .L_lambda_simple_end_0767:	; new closure is in rax
 20651 0000F3C8 803804                  	cmp byte [rax], T_closure
 20652 0000F3CB 0F85B6800000            	jne L_error_non_closure
 20653 0000F3D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20654 0000F3D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20655                                  
 20656 0000F3D7 4889C7                  	mov rdi, rax
 20657 0000F3DA E8A6830000              	call print_sexpr_if_not_void
 20658                                  	; preparing a non-tail-call
 20659 0000F3DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20660 0000F3E4 E847810000              	call malloc
 20661 0000F3E9 50                      	push rax
 20662 0000F3EA BF00000000              	mov rdi, 8 * 0	; new rib
 20663 0000F3EF E83C810000              	call malloc
 20664 0000F3F4 50                      	push rax
 20665 0000F3F5 BF08000000              	mov rdi, 8 * 1	; extended env
 20666 0000F3FA E831810000              	call malloc
 20667 0000F3FF 488B7D10                	mov rdi, ENV
 20668 0000F403 BE00000000              	mov rsi, 0
 20669 0000F408 BA01000000              	mov rdx, 1
 20670                                  .L_lambda_simple_env_loop_0768:	; ext_env[i + 1] <-- env[i]
 20671 0000F40D 4883FE00                	cmp rsi, 0
 20672 0000F411 7410                    	je .L_lambda_simple_env_end_0768
 20673 0000F413 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20674 0000F417 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20675 0000F41B 48FFC6                  	inc rsi
 20676 0000F41E 48FFC2                  	inc rdx
 20677 0000F421 EBEA                    	jmp .L_lambda_simple_env_loop_0768
 20678                                  .L_lambda_simple_env_end_0768:
 20679 0000F423 5B                      	pop rbx
 20680 0000F424 BE00000000              	mov rsi, 0
 20681                                  .L_lambda_simple_params_loop_0768:	; copy params
 20682 0000F429 4883FE00                	cmp rsi, 0
 20683 0000F42D 740E                    	je .L_lambda_simple_params_end_0768
 20684 0000F42F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20685 0000F434 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20686 0000F438 48FFC6                  	inc rsi
 20687 0000F43B EBEC                    	jmp .L_lambda_simple_params_loop_0768
 20688                                  .L_lambda_simple_params_end_0768:
 20689 0000F43D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20690 0000F440 4889C3                  	mov rbx, rax
 20691 0000F443 58                      	pop rax
 20692 0000F444 C60004                  	mov byte [rax], T_closure
 20693 0000F447 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20694 0000F44B 48C74009[58F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0768
 20695 0000F453 E96D0C0000              	jmp .L_lambda_simple_end_0768
 20696                                  .L_lambda_simple_code_0768:	; lambda-simple body
 20697 0000F458 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20698 0000F45E 740B                    	je .L_lambda_simple_arity_check_ok_0855
 20699 0000F460 FF742410                	push qword [rsp + 8 * 2]
 20700 0000F464 6A01                    	push 1
 20701 0000F466 E97E800000              	jmp L_error_incorrect_arity_simple
 20702                                  .L_lambda_simple_arity_check_ok_0855:
 20703 0000F46B C8000000                	enter 0, 0
 20704                                  	; preparing a tail-call
 20705 0000F46F 48B8-                   	mov rax, L_constants + 1993
 20705 0000F471 [C907000000000000] 
 20706 0000F479 50                      	push rax
 20707 0000F47A 6A01                    	push 1	; arg count
 20708 0000F47C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20709 0000F481 E8AA800000              	call malloc
 20710 0000F486 50                      	push rax
 20711 0000F487 BF08000000              	mov rdi, 8 * 1	; new rib
 20712 0000F48C E89F800000              	call malloc
 20713 0000F491 50                      	push rax
 20714 0000F492 BF10000000              	mov rdi, 8 * 2	; extended env
 20715 0000F497 E894800000              	call malloc
 20716 0000F49C 488B7D10                	mov rdi, ENV
 20717 0000F4A0 BE00000000              	mov rsi, 0
 20718 0000F4A5 BA01000000              	mov rdx, 1
 20719                                  .L_lambda_simple_env_loop_0769:	; ext_env[i + 1] <-- env[i]
 20720 0000F4AA 4883FE01                	cmp rsi, 1
 20721 0000F4AE 7410                    	je .L_lambda_simple_env_end_0769
 20722 0000F4B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20723 0000F4B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20724 0000F4B8 48FFC6                  	inc rsi
 20725 0000F4BB 48FFC2                  	inc rdx
 20726 0000F4BE EBEA                    	jmp .L_lambda_simple_env_loop_0769
 20727                                  .L_lambda_simple_env_end_0769:
 20728 0000F4C0 5B                      	pop rbx
 20729 0000F4C1 BE00000000              	mov rsi, 0
 20730                                  .L_lambda_simple_params_loop_0769:	; copy params
 20731 0000F4C6 4883FE01                	cmp rsi, 1
 20732 0000F4CA 740E                    	je .L_lambda_simple_params_end_0769
 20733 0000F4CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20734 0000F4D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20735 0000F4D5 48FFC6                  	inc rsi
 20736 0000F4D8 EBEC                    	jmp .L_lambda_simple_params_loop_0769
 20737                                  .L_lambda_simple_params_end_0769:
 20738 0000F4DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20739 0000F4DD 4889C3                  	mov rbx, rax
 20740 0000F4E0 58                      	pop rax
 20741 0000F4E1 C60004                  	mov byte [rax], T_closure
 20742 0000F4E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20743 0000F4E8 48C74009[F5F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0769
 20744 0000F4F0 E96C0B0000              	jmp .L_lambda_simple_end_0769
 20745                                  .L_lambda_simple_code_0769:	; lambda-simple body
 20746 0000F4F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20747 0000F4FB 740B                    	je .L_lambda_simple_arity_check_ok_0856
 20748 0000F4FD FF742410                	push qword [rsp + 8 * 2]
 20749 0000F501 6A01                    	push 1
 20750 0000F503 E9E17F0000              	jmp L_error_incorrect_arity_simple
 20751                                  .L_lambda_simple_arity_check_ok_0856:
 20752 0000F508 C8000000                	enter 0, 0
 20753 0000F50C BF08000000              	mov rdi, 8
 20754 0000F511 E81A800000              	call malloc
 20755 0000F516 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 20756 0000F51A 488918                  	mov qword [rax], rbx
 20757 0000F51D 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 20758 0000F521 48B8-                   	mov rax, sob_void
 20758 0000F523 [0000000000000000] 
 20759                                  
 20760 0000F52B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20761 0000F530 E8FB7F0000              	call malloc
 20762 0000F535 50                      	push rax
 20763 0000F536 BF08000000              	mov rdi, 8 * 1	; new rib
 20764 0000F53B E8F07F0000              	call malloc
 20765 0000F540 50                      	push rax
 20766 0000F541 BF18000000              	mov rdi, 8 * 3	; extended env
 20767 0000F546 E8E57F0000              	call malloc
 20768 0000F54B 488B7D10                	mov rdi, ENV
 20769 0000F54F BE00000000              	mov rsi, 0
 20770 0000F554 BA01000000              	mov rdx, 1
 20771                                  .L_lambda_simple_env_loop_076a:	; ext_env[i + 1] <-- env[i]
 20772 0000F559 4883FE02                	cmp rsi, 2
 20773 0000F55D 7410                    	je .L_lambda_simple_env_end_076a
 20774 0000F55F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20775 0000F563 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20776 0000F567 48FFC6                  	inc rsi
 20777 0000F56A 48FFC2                  	inc rdx
 20778 0000F56D EBEA                    	jmp .L_lambda_simple_env_loop_076a
 20779                                  .L_lambda_simple_env_end_076a:
 20780 0000F56F 5B                      	pop rbx
 20781 0000F570 BE00000000              	mov rsi, 0
 20782                                  .L_lambda_simple_params_loop_076a:	; copy params
 20783 0000F575 4883FE01                	cmp rsi, 1
 20784 0000F579 740E                    	je .L_lambda_simple_params_end_076a
 20785 0000F57B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20786 0000F580 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20787 0000F584 48FFC6                  	inc rsi
 20788 0000F587 EBEC                    	jmp .L_lambda_simple_params_loop_076a
 20789                                  .L_lambda_simple_params_end_076a:
 20790 0000F589 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20791 0000F58C 4889C3                  	mov rbx, rax
 20792 0000F58F 58                      	pop rax
 20793 0000F590 C60004                  	mov byte [rax], T_closure
 20794 0000F593 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20795 0000F597 48C74009[A4F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076a
 20796 0000F59F E9DE010000              	jmp .L_lambda_simple_end_076a
 20797                                  .L_lambda_simple_code_076a:	; lambda-simple body
 20798 0000F5A4 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20799 0000F5AA 740B                    	je .L_lambda_simple_arity_check_ok_0857
 20800 0000F5AC FF742410                	push qword [rsp + 8 * 2]
 20801 0000F5B0 6A04                    	push 4
 20802 0000F5B2 E9327F0000              	jmp L_error_incorrect_arity_simple
 20803                                  .L_lambda_simple_arity_check_ok_0857:
 20804 0000F5B7 C8000000                	enter 0, 0
 20805                                  	; preparing a non-tail-call
 20806 0000F5BB 488B4538                	mov rax, PARAM(3)	; param len
 20807 0000F5BF 50                      	push rax
 20808 0000F5C0 488B4520                	mov rax, PARAM(0)	; param i
 20809 0000F5C4 50                      	push rax
 20810 0000F5C5 6A02                    	push 2	; arg count
 20811 0000F5C7 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 20812 0000F5CF 803805                  	cmp byte [rax], T_undefined
 20813 0000F5D2 0F842B7E0000            	je L_error_fvar_undefined
 20814 0000F5D8 803804                  	cmp byte [rax], T_closure
 20815 0000F5DB 0F85A67E0000            	jne L_error_non_closure
 20816 0000F5E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20817 0000F5E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20818 0000F5E7 483D[02000000]          	cmp rax, sob_boolean_false
 20819 0000F5ED 0F858B010000            	jne .L_if_end_05b6
 20820                                  	; preparing a non-tail-call
 20821 0000F5F3 488B4538                	mov rax, PARAM(3)	; param len
 20822 0000F5F7 50                      	push rax
 20823 0000F5F8 488B4520                	mov rax, PARAM(0)	; param i
 20824 0000F5FC 50                      	push rax
 20825 0000F5FD 6A02                    	push 2	; arg count
 20826 0000F5FF 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 20827 0000F607 803805                  	cmp byte [rax], T_undefined
 20828 0000F60A 0F84F37D0000            	je L_error_fvar_undefined
 20829 0000F610 803804                  	cmp byte [rax], T_closure
 20830 0000F613 0F856E7E0000            	jne L_error_non_closure
 20831 0000F619 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20832 0000F61C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20833 0000F61F 483D[02000000]          	cmp rax, sob_boolean_false
 20834 0000F625 0F8441010000            	je .L_if_else_052c
 20835                                  	; preparing a non-tail-call
 20836                                  	; preparing a non-tail-call
 20837 0000F62B 488B4520                	mov rax, PARAM(0)	; param i
 20838 0000F62F 50                      	push rax
 20839 0000F630 488B4530                	mov rax, PARAM(2)	; param str2
 20840 0000F634 50                      	push rax
 20841 0000F635 6A02                    	push 2	; arg count
 20842 0000F637 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20843 0000F63F 803805                  	cmp byte [rax], T_undefined
 20844 0000F642 0F84BB7D0000            	je L_error_fvar_undefined
 20845 0000F648 803804                  	cmp byte [rax], T_closure
 20846 0000F64B 0F85367E0000            	jne L_error_non_closure
 20847 0000F651 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20848 0000F654 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20849 0000F657 50                      	push rax
 20850                                  	; preparing a non-tail-call
 20851 0000F658 488B4520                	mov rax, PARAM(0)	; param i
 20852 0000F65C 50                      	push rax
 20853 0000F65D 488B4528                	mov rax, PARAM(1)	; param str1
 20854 0000F661 50                      	push rax
 20855 0000F662 6A02                    	push 2	; arg count
 20856 0000F664 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20857 0000F66C 803805                  	cmp byte [rax], T_undefined
 20858 0000F66F 0F848E7D0000            	je L_error_fvar_undefined
 20859 0000F675 803804                  	cmp byte [rax], T_closure
 20860 0000F678 0F85097E0000            	jne L_error_non_closure
 20861 0000F67E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20862 0000F681 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20863 0000F684 50                      	push rax
 20864 0000F685 6A02                    	push 2	; arg count
 20865 0000F687 488B4510                	mov rax, ENV
 20866 0000F68B 488B4008                	mov rax, qword [rax + 8 * 1]
 20867 0000F68F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20868 0000F692 803804                  	cmp byte [rax], T_closure
 20869 0000F695 0F85EC7D0000            	jne L_error_non_closure
 20870 0000F69B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20871 0000F69E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20872 0000F6A1 483D[02000000]          	cmp rax, sob_boolean_false
 20873 0000F6A7 0F84B3000000            	je .L_if_else_052b
 20874                                  	; preparing a tail-call
 20875 0000F6AD 488B4538                	mov rax, PARAM(3)	; param len
 20876 0000F6B1 50                      	push rax
 20877 0000F6B2 488B4530                	mov rax, PARAM(2)	; param str2
 20878 0000F6B6 50                      	push rax
 20879 0000F6B7 488B4528                	mov rax, PARAM(1)	; param str1
 20880 0000F6BB 50                      	push rax
 20881                                  	; preparing a non-tail-call
 20882 0000F6BC 48B8-                   	mov rax, L_constants + 2270
 20882 0000F6BE [DE08000000000000] 
 20883 0000F6C6 50                      	push rax
 20884 0000F6C7 488B4520                	mov rax, PARAM(0)	; param i
 20885 0000F6CB 50                      	push rax
 20886 0000F6CC 6A02                    	push 2	; arg count
 20887 0000F6CE 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 20888 0000F6D6 803805                  	cmp byte [rax], T_undefined
 20889 0000F6D9 0F84247D0000            	je L_error_fvar_undefined
 20890 0000F6DF 803804                  	cmp byte [rax], T_closure
 20891 0000F6E2 0F859F7D0000            	jne L_error_non_closure
 20892 0000F6E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20893 0000F6EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20894 0000F6EE 50                      	push rax
 20895 0000F6EF 6A04                    	push 4	; arg count
 20896 0000F6F1 488B4510                	mov rax, ENV
 20897 0000F6F5 488B00                  	mov rax, qword [rax + 8 * 0]
 20898 0000F6F8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20899 0000F6FB 488B00                  	mov rax, qword [rax]
 20900 0000F6FE 803804                  	cmp byte [rax], T_closure
 20901 0000F701 0F85807D0000            	jne L_error_non_closure
 20902 0000F707 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20903 0000F70A FF7508                  	push qword [rbp + 8 *1]
 20904 0000F70D 4989C0                  	mov r8, rax
 20905 0000F710 488B5D18                	mov rbx, COUNT
 20906 0000F714 4883C303                	add rbx,3
 20907 0000F718 48C1E303                	shl rbx,3
 20908 0000F71C 4801EB                  	add rbx, rbp
 20909 0000F71F 488B6D00                	mov rbp, [rbp]
 20910 0000F723 B900000000              	mov rcx,0
 20911 0000F728 BA07000000              	mov rdx, 7
 20912 0000F72D 4889D0                  	mov rax, rdx
 20913 0000F730 48FFC8                  	dec rax
 20914 0000F733 48C1E003                	shl rax,3
 20915 0000F737 4801E0                  	add rax, rsp
 20916                                  	.L_tc_recycle_frame_loop_0974:
 20917 0000F73A 4839D1                  	cmp rcx, rdx
 20918 0000F73D 7414                    	je .L_tc_recycle_frame_done_0974
 20919 0000F73F 4C8B08                  	mov r9, qword [rax]
 20920 0000F742 4C890B                  	mov qword [rbx],r9
 20921 0000F745 4883E808                	sub rax,8
 20922 0000F749 4883EB08                	sub rbx,8
 20923 0000F74D 4883C101                	add rcx,1
 20924 0000F751 EBE7                    	jmp .L_tc_recycle_frame_loop_0974
 20925                                  	.L_tc_recycle_frame_done_0974:
 20926 0000F753 4883C308                	add rbx,8
 20927 0000F757 4889DC                  	mov rsp,rbx
 20928 0000F75A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 20929 0000F75E EB0A                    	jmp .L_if_end_05b7
 20930                                  .L_if_else_052b:
 20931 0000F760 48B8-                   	mov rax, L_constants + 2
 20931 0000F762 [0200000000000000] 
 20932                                  .L_if_end_05b7:
 20933 0000F76A EB0A                    	jmp .L_if_end_05b8
 20934                                  .L_if_else_052c:
 20935 0000F76C 48B8-                   	mov rax, L_constants + 2
 20935 0000F76E [0200000000000000] 
 20936                                  .L_if_end_05b8:
 20937 0000F776 483D[02000000]          	cmp rax, sob_boolean_false
 20938 0000F77C 7500                    	jne .L_if_end_05b6
 20939                                  .L_if_end_05b6:
 20940 0000F77E C9                      	leave
 20941 0000F77F C23000                  	ret AND_KILL_FRAME(4)
 20942                                  .L_lambda_simple_end_076a:	; new closure is in rax
 20943 0000F782 50                      	push rax
 20944 0000F783 488B4520                	mov rax, PARAM(0)	; param run
 20945 0000F787 8F00                    	pop qword [rax]
 20946 0000F789 48B8-                   	mov rax, sob_void
 20946 0000F78B [0000000000000000] 
 20947                                  
 20948                                  	; preparing a tail-call
 20949 0000F793 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20950 0000F798 E8937D0000              	call malloc
 20951 0000F79D 50                      	push rax
 20952 0000F79E BF08000000              	mov rdi, 8 * 1	; new rib
 20953 0000F7A3 E8887D0000              	call malloc
 20954 0000F7A8 50                      	push rax
 20955 0000F7A9 BF18000000              	mov rdi, 8 * 3	; extended env
 20956 0000F7AE E87D7D0000              	call malloc
 20957 0000F7B3 488B7D10                	mov rdi, ENV
 20958 0000F7B7 BE00000000              	mov rsi, 0
 20959 0000F7BC BA01000000              	mov rdx, 1
 20960                                  .L_lambda_simple_env_loop_076b:	; ext_env[i + 1] <-- env[i]
 20961 0000F7C1 4883FE02                	cmp rsi, 2
 20962 0000F7C5 7410                    	je .L_lambda_simple_env_end_076b
 20963 0000F7C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20964 0000F7CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20965 0000F7CF 48FFC6                  	inc rsi
 20966 0000F7D2 48FFC2                  	inc rdx
 20967 0000F7D5 EBEA                    	jmp .L_lambda_simple_env_loop_076b
 20968                                  .L_lambda_simple_env_end_076b:
 20969 0000F7D7 5B                      	pop rbx
 20970 0000F7D8 BE00000000              	mov rsi, 0
 20971                                  .L_lambda_simple_params_loop_076b:	; copy params
 20972 0000F7DD 4883FE01                	cmp rsi, 1
 20973 0000F7E1 740E                    	je .L_lambda_simple_params_end_076b
 20974 0000F7E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20975 0000F7E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20976 0000F7EC 48FFC6                  	inc rsi
 20977 0000F7EF EBEC                    	jmp .L_lambda_simple_params_loop_076b
 20978                                  .L_lambda_simple_params_end_076b:
 20979 0000F7F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20980 0000F7F4 4889C3                  	mov rbx, rax
 20981 0000F7F7 58                      	pop rax
 20982 0000F7F8 C60004                  	mov byte [rax], T_closure
 20983 0000F7FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20984 0000F7FF 48C74009[0CF80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076b
 20985 0000F807 E93C020000              	jmp .L_lambda_simple_end_076b
 20986                                  .L_lambda_simple_code_076b:	; lambda-simple body
 20987 0000F80C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20988 0000F812 740B                    	je .L_lambda_simple_arity_check_ok_0858
 20989 0000F814 FF742410                	push qword [rsp + 8 * 2]
 20990 0000F818 6A02                    	push 2
 20991 0000F81A E9CA7C0000              	jmp L_error_incorrect_arity_simple
 20992                                  .L_lambda_simple_arity_check_ok_0858:
 20993 0000F81F C8000000                	enter 0, 0
 20994                                  	; preparing a tail-call
 20995                                  	; preparing a non-tail-call
 20996 0000F823 488B4528                	mov rax, PARAM(1)	; param str2
 20997 0000F827 50                      	push rax
 20998 0000F828 6A01                    	push 1	; arg count
 20999 0000F82A 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 21000 0000F832 803805                  	cmp byte [rax], T_undefined
 21001 0000F835 0F84C87B0000            	je L_error_fvar_undefined
 21002 0000F83B 803804                  	cmp byte [rax], T_closure
 21003 0000F83E 0F85437C0000            	jne L_error_non_closure
 21004 0000F844 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21005 0000F847 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21006 0000F84A 50                      	push rax
 21007                                  	; preparing a non-tail-call
 21008 0000F84B 488B4520                	mov rax, PARAM(0)	; param str1
 21009 0000F84F 50                      	push rax
 21010 0000F850 6A01                    	push 1	; arg count
 21011 0000F852 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 21012 0000F85A 803805                  	cmp byte [rax], T_undefined
 21013 0000F85D 0F84A07B0000            	je L_error_fvar_undefined
 21014 0000F863 803804                  	cmp byte [rax], T_closure
 21015 0000F866 0F851B7C0000            	jne L_error_non_closure
 21016 0000F86C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21017 0000F86F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21018 0000F872 50                      	push rax
 21019 0000F873 6A02                    	push 2	; arg count
 21020 0000F875 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21021 0000F87A E8B17C0000              	call malloc
 21022 0000F87F 50                      	push rax
 21023 0000F880 BF10000000              	mov rdi, 8 * 2	; new rib
 21024 0000F885 E8A67C0000              	call malloc
 21025 0000F88A 50                      	push rax
 21026 0000F88B BF20000000              	mov rdi, 8 * 4	; extended env
 21027 0000F890 E89B7C0000              	call malloc
 21028 0000F895 488B7D10                	mov rdi, ENV
 21029 0000F899 BE00000000              	mov rsi, 0
 21030 0000F89E BA01000000              	mov rdx, 1
 21031                                  .L_lambda_simple_env_loop_076c:	; ext_env[i + 1] <-- env[i]
 21032 0000F8A3 4883FE03                	cmp rsi, 3
 21033 0000F8A7 7410                    	je .L_lambda_simple_env_end_076c
 21034 0000F8A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21035 0000F8AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21036 0000F8B1 48FFC6                  	inc rsi
 21037 0000F8B4 48FFC2                  	inc rdx
 21038 0000F8B7 EBEA                    	jmp .L_lambda_simple_env_loop_076c
 21039                                  .L_lambda_simple_env_end_076c:
 21040 0000F8B9 5B                      	pop rbx
 21041 0000F8BA BE00000000              	mov rsi, 0
 21042                                  .L_lambda_simple_params_loop_076c:	; copy params
 21043 0000F8BF 4883FE02                	cmp rsi, 2
 21044 0000F8C3 740E                    	je .L_lambda_simple_params_end_076c
 21045 0000F8C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21046 0000F8CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21047 0000F8CE 48FFC6                  	inc rsi
 21048 0000F8D1 EBEC                    	jmp .L_lambda_simple_params_loop_076c
 21049                                  .L_lambda_simple_params_end_076c:
 21050 0000F8D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21051 0000F8D6 4889C3                  	mov rbx, rax
 21052 0000F8D9 58                      	pop rax
 21053 0000F8DA C60004                  	mov byte [rax], T_closure
 21054 0000F8DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21055 0000F8E1 48C74009[EEF80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076c
 21056 0000F8E9 E9F6000000              	jmp .L_lambda_simple_end_076c
 21057                                  .L_lambda_simple_code_076c:	; lambda-simple body
 21058 0000F8EE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21059 0000F8F4 740B                    	je .L_lambda_simple_arity_check_ok_0859
 21060 0000F8F6 FF742410                	push qword [rsp + 8 * 2]
 21061 0000F8FA 6A02                    	push 2
 21062 0000F8FC E9E87B0000              	jmp L_error_incorrect_arity_simple
 21063                                  .L_lambda_simple_arity_check_ok_0859:
 21064 0000F901 C8000000                	enter 0, 0
 21065                                  	; preparing a non-tail-call
 21066 0000F905 488B4528                	mov rax, PARAM(1)	; param len2
 21067 0000F909 50                      	push rax
 21068 0000F90A 488B4520                	mov rax, PARAM(0)	; param len1
 21069 0000F90E 50                      	push rax
 21070 0000F90F 6A02                    	push 2	; arg count
 21071 0000F911 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 21072 0000F919 803805                  	cmp byte [rax], T_undefined
 21073 0000F91C 0F84E17A0000            	je L_error_fvar_undefined
 21074 0000F922 803804                  	cmp byte [rax], T_closure
 21075 0000F925 0F855C7B0000            	jne L_error_non_closure
 21076 0000F92B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21077 0000F92E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21078 0000F931 483D[02000000]          	cmp rax, sob_boolean_false
 21079 0000F937 0F8499000000            	je .L_if_else_052d
 21080                                  	; preparing a tail-call
 21081 0000F93D 488B4520                	mov rax, PARAM(0)	; param len1
 21082 0000F941 50                      	push rax
 21083 0000F942 488B4510                	mov rax, ENV
 21084 0000F946 488B00                  	mov rax, qword [rax + 8 * 0]
 21085 0000F949 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 21086 0000F94D 50                      	push rax
 21087 0000F94E 488B4510                	mov rax, ENV
 21088 0000F952 488B00                  	mov rax, qword [rax + 8 * 0]
 21089 0000F955 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 21090 0000F958 50                      	push rax
 21091 0000F959 48B8-                   	mov rax, L_constants + 2135
 21091 0000F95B [5708000000000000] 
 21092 0000F963 50                      	push rax
 21093 0000F964 6A04                    	push 4	; arg count
 21094 0000F966 488B4510                	mov rax, ENV
 21095 0000F96A 488B4008                	mov rax, qword [rax + 8 * 1]
 21096 0000F96E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21097 0000F971 488B00                  	mov rax, qword [rax]
 21098 0000F974 803804                  	cmp byte [rax], T_closure
 21099 0000F977 0F850A7B0000            	jne L_error_non_closure
 21100 0000F97D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21101 0000F980 FF7508                  	push qword [rbp + 8 *1]
 21102 0000F983 4989C0                  	mov r8, rax
 21103 0000F986 488B5D18                	mov rbx, COUNT
 21104 0000F98A 4883C303                	add rbx,3
 21105 0000F98E 48C1E303                	shl rbx,3
 21106 0000F992 4801EB                  	add rbx, rbp
 21107 0000F995 488B6D00                	mov rbp, [rbp]
 21108 0000F999 B900000000              	mov rcx,0
 21109 0000F99E BA07000000              	mov rdx, 7
 21110 0000F9A3 4889D0                  	mov rax, rdx
 21111 0000F9A6 48FFC8                  	dec rax
 21112 0000F9A9 48C1E003                	shl rax,3
 21113 0000F9AD 4801E0                  	add rax, rsp
 21114                                  	.L_tc_recycle_frame_loop_0977:
 21115 0000F9B0 4839D1                  	cmp rcx, rdx
 21116 0000F9B3 7414                    	je .L_tc_recycle_frame_done_0977
 21117 0000F9B5 4C8B08                  	mov r9, qword [rax]
 21118 0000F9B8 4C890B                  	mov qword [rbx],r9
 21119 0000F9BB 4883E808                	sub rax,8
 21120 0000F9BF 4883EB08                	sub rbx,8
 21121 0000F9C3 4883C101                	add rcx,1
 21122 0000F9C7 EBE7                    	jmp .L_tc_recycle_frame_loop_0977
 21123                                  	.L_tc_recycle_frame_done_0977:
 21124 0000F9C9 4883C308                	add rbx,8
 21125 0000F9CD 4889DC                  	mov rsp,rbx
 21126 0000F9D0 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21127 0000F9D4 EB0A                    	jmp .L_if_end_05b9
 21128                                  .L_if_else_052d:
 21129 0000F9D6 48B8-                   	mov rax, L_constants + 2
 21129 0000F9D8 [0200000000000000] 
 21130                                  .L_if_end_05b9:
 21131 0000F9E0 C9                      	leave
 21132 0000F9E1 C22000                  	ret AND_KILL_FRAME(2)
 21133                                  .L_lambda_simple_end_076c:	; new closure is in rax
 21134 0000F9E4 803804                  	cmp byte [rax], T_closure
 21135 0000F9E7 0F859A7A0000            	jne L_error_non_closure
 21136 0000F9ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 21137 0000F9F0 FF7508                  	push qword [rbp + 8 *1]
 21138 0000F9F3 4989C0                  	mov r8, rax
 21139 0000F9F6 488B5D18                	mov rbx, COUNT
 21140 0000F9FA 4883C303                	add rbx,3
 21141 0000F9FE 48C1E303                	shl rbx,3
 21142 0000FA02 4801EB                  	add rbx, rbp
 21143 0000FA05 488B6D00                	mov rbp, [rbp]
 21144 0000FA09 B900000000              	mov rcx,0
 21145 0000FA0E BA05000000              	mov rdx, 5
 21146 0000FA13 4889D0                  	mov rax, rdx
 21147 0000FA16 48FFC8                  	dec rax
 21148 0000FA19 48C1E003                	shl rax,3
 21149 0000FA1D 4801E0                  	add rax, rsp
 21150                                  	.L_tc_recycle_frame_loop_0976:
 21151 0000FA20 4839D1                  	cmp rcx, rdx
 21152 0000FA23 7414                    	je .L_tc_recycle_frame_done_0976
 21153 0000FA25 4C8B08                  	mov r9, qword [rax]
 21154 0000FA28 4C890B                  	mov qword [rbx],r9
 21155 0000FA2B 4883E808                	sub rax,8
 21156 0000FA2F 4883EB08                	sub rbx,8
 21157 0000FA33 4883C101                	add rcx,1
 21158 0000FA37 EBE7                    	jmp .L_tc_recycle_frame_loop_0976
 21159                                  	.L_tc_recycle_frame_done_0976:
 21160 0000FA39 4883C308                	add rbx,8
 21161 0000FA3D 4889DC                  	mov rsp,rbx
 21162 0000FA40 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21163 0000FA44 C9                      	leave
 21164 0000FA45 C22000                  	ret AND_KILL_FRAME(2)
 21165                                  .L_lambda_simple_end_076b:	; new closure is in rax
 21166 0000FA48 50                      	push rax
 21167 0000FA49 6A01                    	push 1	; arg count
 21168 0000FA4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21169 0000FA50 E8DB7A0000              	call malloc
 21170 0000FA55 50                      	push rax
 21171 0000FA56 BF08000000              	mov rdi, 8 * 1	; new rib
 21172 0000FA5B E8D07A0000              	call malloc
 21173 0000FA60 50                      	push rax
 21174 0000FA61 BF18000000              	mov rdi, 8 * 3	; extended env
 21175 0000FA66 E8C57A0000              	call malloc
 21176 0000FA6B 488B7D10                	mov rdi, ENV
 21177 0000FA6F BE00000000              	mov rsi, 0
 21178 0000FA74 BA01000000              	mov rdx, 1
 21179                                  .L_lambda_simple_env_loop_076d:	; ext_env[i + 1] <-- env[i]
 21180 0000FA79 4883FE02                	cmp rsi, 2
 21181 0000FA7D 7410                    	je .L_lambda_simple_env_end_076d
 21182 0000FA7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21183 0000FA83 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21184 0000FA87 48FFC6                  	inc rsi
 21185 0000FA8A 48FFC2                  	inc rdx
 21186 0000FA8D EBEA                    	jmp .L_lambda_simple_env_loop_076d
 21187                                  .L_lambda_simple_env_end_076d:
 21188 0000FA8F 5B                      	pop rbx
 21189 0000FA90 BE00000000              	mov rsi, 0
 21190                                  .L_lambda_simple_params_loop_076d:	; copy params
 21191 0000FA95 4883FE01                	cmp rsi, 1
 21192 0000FA99 740E                    	je .L_lambda_simple_params_end_076d
 21193 0000FA9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21194 0000FAA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21195 0000FAA4 48FFC6                  	inc rsi
 21196 0000FAA7 EBEC                    	jmp .L_lambda_simple_params_loop_076d
 21197                                  .L_lambda_simple_params_end_076d:
 21198 0000FAA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21199 0000FAAC 4889C3                  	mov rbx, rax
 21200 0000FAAF 58                      	pop rax
 21201 0000FAB0 C60004                  	mov byte [rax], T_closure
 21202 0000FAB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21203 0000FAB7 48C74009[C4FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076d
 21204 0000FABF E939050000              	jmp .L_lambda_simple_end_076d
 21205                                  .L_lambda_simple_code_076d:	; lambda-simple body
 21206 0000FAC4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21207 0000FACA 740B                    	je .L_lambda_simple_arity_check_ok_085a
 21208 0000FACC FF742410                	push qword [rsp + 8 * 2]
 21209 0000FAD0 6A01                    	push 1
 21210 0000FAD2 E9127A0000              	jmp L_error_incorrect_arity_simple
 21211                                  .L_lambda_simple_arity_check_ok_085a:
 21212 0000FAD7 C8000000                	enter 0, 0
 21213                                  	; preparing a tail-call
 21214 0000FADB 48B8-                   	mov rax, L_constants + 1993
 21214 0000FADD [C907000000000000] 
 21215 0000FAE5 50                      	push rax
 21216 0000FAE6 6A01                    	push 1	; arg count
 21217 0000FAE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21218 0000FAED E83E7A0000              	call malloc
 21219 0000FAF2 50                      	push rax
 21220 0000FAF3 BF08000000              	mov rdi, 8 * 1	; new rib
 21221 0000FAF8 E8337A0000              	call malloc
 21222 0000FAFD 50                      	push rax
 21223 0000FAFE BF20000000              	mov rdi, 8 * 4	; extended env
 21224 0000FB03 E8287A0000              	call malloc
 21225 0000FB08 488B7D10                	mov rdi, ENV
 21226 0000FB0C BE00000000              	mov rsi, 0
 21227 0000FB11 BA01000000              	mov rdx, 1
 21228                                  .L_lambda_simple_env_loop_076e:	; ext_env[i + 1] <-- env[i]
 21229 0000FB16 4883FE03                	cmp rsi, 3
 21230 0000FB1A 7410                    	je .L_lambda_simple_env_end_076e
 21231 0000FB1C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21232 0000FB20 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21233 0000FB24 48FFC6                  	inc rsi
 21234 0000FB27 48FFC2                  	inc rdx
 21235 0000FB2A EBEA                    	jmp .L_lambda_simple_env_loop_076e
 21236                                  .L_lambda_simple_env_end_076e:
 21237 0000FB2C 5B                      	pop rbx
 21238 0000FB2D BE00000000              	mov rsi, 0
 21239                                  .L_lambda_simple_params_loop_076e:	; copy params
 21240 0000FB32 4883FE01                	cmp rsi, 1
 21241 0000FB36 740E                    	je .L_lambda_simple_params_end_076e
 21242 0000FB38 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21243 0000FB3D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21244 0000FB41 48FFC6                  	inc rsi
 21245 0000FB44 EBEC                    	jmp .L_lambda_simple_params_loop_076e
 21246                                  .L_lambda_simple_params_end_076e:
 21247 0000FB46 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21248 0000FB49 4889C3                  	mov rbx, rax
 21249 0000FB4C 58                      	pop rax
 21250 0000FB4D C60004                  	mov byte [rax], T_closure
 21251 0000FB50 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21252 0000FB54 48C74009[61FB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076e
 21253 0000FB5C E938040000              	jmp .L_lambda_simple_end_076e
 21254                                  .L_lambda_simple_code_076e:	; lambda-simple body
 21255 0000FB61 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21256 0000FB67 740B                    	je .L_lambda_simple_arity_check_ok_085b
 21257 0000FB69 FF742410                	push qword [rsp + 8 * 2]
 21258 0000FB6D 6A01                    	push 1
 21259 0000FB6F E975790000              	jmp L_error_incorrect_arity_simple
 21260                                  .L_lambda_simple_arity_check_ok_085b:
 21261 0000FB74 C8000000                	enter 0, 0
 21262 0000FB78 BF08000000              	mov rdi, 8
 21263 0000FB7D E8AE790000              	call malloc
 21264 0000FB82 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 21265 0000FB86 488918                  	mov qword [rax], rbx
 21266 0000FB89 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 21267 0000FB8D 48B8-                   	mov rax, sob_void
 21267 0000FB8F [0000000000000000] 
 21268                                  
 21269 0000FB97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21270 0000FB9C E88F790000              	call malloc
 21271 0000FBA1 50                      	push rax
 21272 0000FBA2 BF08000000              	mov rdi, 8 * 1	; new rib
 21273 0000FBA7 E884790000              	call malloc
 21274 0000FBAC 50                      	push rax
 21275 0000FBAD BF28000000              	mov rdi, 8 * 5	; extended env
 21276 0000FBB2 E879790000              	call malloc
 21277 0000FBB7 488B7D10                	mov rdi, ENV
 21278 0000FBBB BE00000000              	mov rsi, 0
 21279 0000FBC0 BA01000000              	mov rdx, 1
 21280                                  .L_lambda_simple_env_loop_076f:	; ext_env[i + 1] <-- env[i]
 21281 0000FBC5 4883FE04                	cmp rsi, 4
 21282 0000FBC9 7410                    	je .L_lambda_simple_env_end_076f
 21283 0000FBCB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21284 0000FBCF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21285 0000FBD3 48FFC6                  	inc rsi
 21286 0000FBD6 48FFC2                  	inc rdx
 21287 0000FBD9 EBEA                    	jmp .L_lambda_simple_env_loop_076f
 21288                                  .L_lambda_simple_env_end_076f:
 21289 0000FBDB 5B                      	pop rbx
 21290 0000FBDC BE00000000              	mov rsi, 0
 21291                                  .L_lambda_simple_params_loop_076f:	; copy params
 21292 0000FBE1 4883FE01                	cmp rsi, 1
 21293 0000FBE5 740E                    	je .L_lambda_simple_params_end_076f
 21294 0000FBE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21295 0000FBEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21296 0000FBF0 48FFC6                  	inc rsi
 21297 0000FBF3 EBEC                    	jmp .L_lambda_simple_params_loop_076f
 21298                                  .L_lambda_simple_params_end_076f:
 21299 0000FBF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21300 0000FBF8 4889C3                  	mov rbx, rax
 21301 0000FBFB 58                      	pop rax
 21302 0000FBFC C60004                  	mov byte [rax], T_closure
 21303 0000FBFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21304 0000FC03 48C74009[10FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_076f
 21305 0000FC0B E976010000              	jmp .L_lambda_simple_end_076f
 21306                                  .L_lambda_simple_code_076f:	; lambda-simple body
 21307 0000FC10 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21308 0000FC16 740B                    	je .L_lambda_simple_arity_check_ok_085c
 21309 0000FC18 FF742410                	push qword [rsp + 8 * 2]
 21310 0000FC1C 6A02                    	push 2
 21311 0000FC1E E9C6780000              	jmp L_error_incorrect_arity_simple
 21312                                  .L_lambda_simple_arity_check_ok_085c:
 21313 0000FC23 C8000000                	enter 0, 0
 21314                                  	; preparing a non-tail-call
 21315 0000FC27 488B4528                	mov rax, PARAM(1)	; param strs
 21316 0000FC2B 50                      	push rax
 21317 0000FC2C 6A01                    	push 1	; arg count
 21318 0000FC2E 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 21319 0000FC36 803805                  	cmp byte [rax], T_undefined
 21320 0000FC39 0F84C4770000            	je L_error_fvar_undefined
 21321 0000FC3F 803804                  	cmp byte [rax], T_closure
 21322 0000FC42 0F853F780000            	jne L_error_non_closure
 21323 0000FC48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21324 0000FC4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 21325 0000FC4E 483D[02000000]          	cmp rax, sob_boolean_false
 21326 0000FC54 0F8528010000            	jne .L_if_end_05ba
 21327                                  	; preparing a non-tail-call
 21328                                  	; preparing a non-tail-call
 21329 0000FC5A 488B4528                	mov rax, PARAM(1)	; param strs
 21330 0000FC5E 50                      	push rax
 21331 0000FC5F 6A01                    	push 1	; arg count
 21332 0000FC61 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 21333 0000FC69 803805                  	cmp byte [rax], T_undefined
 21334 0000FC6C 0F8491770000            	je L_error_fvar_undefined
 21335 0000FC72 803804                  	cmp byte [rax], T_closure
 21336 0000FC75 0F850C780000            	jne L_error_non_closure
 21337 0000FC7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21338 0000FC7E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21339 0000FC81 50                      	push rax
 21340 0000FC82 488B4520                	mov rax, PARAM(0)	; param str
 21341 0000FC86 50                      	push rax
 21342 0000FC87 6A02                    	push 2	; arg count
 21343 0000FC89 488B4510                	mov rax, ENV
 21344 0000FC8D 488B4008                	mov rax, qword [rax + 8 * 1]
 21345 0000FC91 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 21346 0000FC94 803804                  	cmp byte [rax], T_closure
 21347 0000FC97 0F85EA770000            	jne L_error_non_closure
 21348 0000FC9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21349 0000FCA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21350 0000FCA3 483D[02000000]          	cmp rax, sob_boolean_false
 21351 0000FCA9 0F84C1000000            	je .L_if_else_052e
 21352                                  	; preparing a tail-call
 21353                                  	; preparing a non-tail-call
 21354 0000FCAF 488B4528                	mov rax, PARAM(1)	; param strs
 21355 0000FCB3 50                      	push rax
 21356 0000FCB4 6A01                    	push 1	; arg count
 21357 0000FCB6 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 21358 0000FCBE 803805                  	cmp byte [rax], T_undefined
 21359 0000FCC1 0F843C770000            	je L_error_fvar_undefined
 21360 0000FCC7 803804                  	cmp byte [rax], T_closure
 21361 0000FCCA 0F85B7770000            	jne L_error_non_closure
 21362 0000FCD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21363 0000FCD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21364 0000FCD6 50                      	push rax
 21365                                  	; preparing a non-tail-call
 21366 0000FCD7 488B4528                	mov rax, PARAM(1)	; param strs
 21367 0000FCDB 50                      	push rax
 21368 0000FCDC 6A01                    	push 1	; arg count
 21369 0000FCDE 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 21370 0000FCE6 803805                  	cmp byte [rax], T_undefined
 21371 0000FCE9 0F8414770000            	je L_error_fvar_undefined
 21372 0000FCEF 803804                  	cmp byte [rax], T_closure
 21373 0000FCF2 0F858F770000            	jne L_error_non_closure
 21374 0000FCF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21375 0000FCFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 21376 0000FCFE 50                      	push rax
 21377 0000FCFF 6A02                    	push 2	; arg count
 21378 0000FD01 488B4510                	mov rax, ENV
 21379 0000FD05 488B00                  	mov rax, qword [rax + 8 * 0]
 21380 0000FD08 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21381 0000FD0B 488B00                  	mov rax, qword [rax]
 21382 0000FD0E 803804                  	cmp byte [rax], T_closure
 21383 0000FD11 0F8570770000            	jne L_error_non_closure
 21384 0000FD17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21385 0000FD1A FF7508                  	push qword [rbp + 8 *1]
 21386 0000FD1D 4989C0                  	mov r8, rax
 21387 0000FD20 488B5D18                	mov rbx, COUNT
 21388 0000FD24 4883C303                	add rbx,3
 21389 0000FD28 48C1E303                	shl rbx,3
 21390 0000FD2C 4801EB                  	add rbx, rbp
 21391 0000FD2F 488B6D00                	mov rbp, [rbp]
 21392 0000FD33 B900000000              	mov rcx,0
 21393 0000FD38 BA05000000              	mov rdx, 5
 21394 0000FD3D 4889D0                  	mov rax, rdx
 21395 0000FD40 48FFC8                  	dec rax
 21396 0000FD43 48C1E003                	shl rax,3
 21397 0000FD47 4801E0                  	add rax, rsp
 21398                                  	.L_tc_recycle_frame_loop_0979:
 21399 0000FD4A 4839D1                  	cmp rcx, rdx
 21400 0000FD4D 7414                    	je .L_tc_recycle_frame_done_0979
 21401 0000FD4F 4C8B08                  	mov r9, qword [rax]
 21402 0000FD52 4C890B                  	mov qword [rbx],r9
 21403 0000FD55 4883E808                	sub rax,8
 21404 0000FD59 4883EB08                	sub rbx,8
 21405 0000FD5D 4883C101                	add rcx,1
 21406 0000FD61 EBE7                    	jmp .L_tc_recycle_frame_loop_0979
 21407                                  	.L_tc_recycle_frame_done_0979:
 21408 0000FD63 4883C308                	add rbx,8
 21409 0000FD67 4889DC                  	mov rsp,rbx
 21410 0000FD6A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21411 0000FD6E EB0A                    	jmp .L_if_end_05bb
 21412                                  .L_if_else_052e:
 21413 0000FD70 48B8-                   	mov rax, L_constants + 2
 21413 0000FD72 [0200000000000000] 
 21414                                  .L_if_end_05bb:
 21415 0000FD7A 483D[02000000]          	cmp rax, sob_boolean_false
 21416 0000FD80 7500                    	jne .L_if_end_05ba
 21417                                  .L_if_end_05ba:
 21418 0000FD82 C9                      	leave
 21419 0000FD83 C22000                  	ret AND_KILL_FRAME(2)
 21420                                  .L_lambda_simple_end_076f:	; new closure is in rax
 21421 0000FD86 50                      	push rax
 21422 0000FD87 488B4520                	mov rax, PARAM(0)	; param run
 21423 0000FD8B 8F00                    	pop qword [rax]
 21424 0000FD8D 48B8-                   	mov rax, sob_void
 21424 0000FD8F [0000000000000000] 
 21425                                  
 21426 0000FD97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21427 0000FD9C E88F770000              	call malloc
 21428 0000FDA1 50                      	push rax
 21429 0000FDA2 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 21430 0000FDA6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21431 0000FDAA BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 21432 0000FDAF E87C770000              	call malloc
 21433 0000FDB4 50                      	push rax
 21434 0000FDB5 BF28000000              	mov rdi, 8 * 5	; extended env
 21435 0000FDBA E871770000              	call malloc
 21436 0000FDBF 488B7D10                	mov rdi, ENV
 21437 0000FDC3 BE00000000              	mov rsi, 0
 21438 0000FDC8 BA01000000              	mov rdx, 1
 21439                                  .L_lambda_opt_env_loop_00ee:	; ext_env[i + 1] <-- env[i] copy all the array
 21440 0000FDCD 4883FE04                	cmp rsi, 4
 21441 0000FDD1 7410                    	je .L_lambda_opt_env_end_00ee
 21442 0000FDD3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21443 0000FDD7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21444 0000FDDB 48FFC6                  	inc rsi
 21445 0000FDDE 48FFC2                  	inc rdx
 21446 0000FDE1 EBEA                    	jmp .L_lambda_opt_env_loop_00ee
 21447                                  .L_lambda_opt_env_end_00ee:
 21448 0000FDE3 5B                      	pop rbx
 21449 0000FDE4 BE00000000              	mov rsi, 0
 21450                                  .L_lambda_opt_params_loop_02c8:	; copy params
 21451 0000FDE9 4883FE01                	cmp rsi, 1
 21452 0000FDED 740E                    	je .L_lambda_opt_params_end_01db
 21453 0000FDEF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21454 0000FDF4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21455 0000FDF8 48FFC6                  	inc rsi
 21456 0000FDFB EBEC                    	jmp .L_lambda_opt_params_loop_02c8
 21457                                  .L_lambda_opt_params_end_01db:
 21458 0000FDFD 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 21459 0000FE00 4889C3                  	mov rbx, rax
 21460 0000FE03 58                      	pop rax
 21461 0000FE04 C60004                  	mov byte [rax], T_closure
 21462 0000FE07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21463 0000FE0B 48C74009[18FE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00ee
 21464 0000FE13 E97D010000              	jmp .L_lambda_opt_end_01db
 21465                                  .L_lambda_opt_code_00ee:	; lambda-opt body
 21466 0000FE18 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21467 0000FE1E 7D0B                    	jge .L_lambda_simple_arity_check_ok_085d
 21468 0000FE20 FF742410                	push qword [rsp + 8 * 2]
 21469 0000FE24 6A01                    	push 1
 21470 0000FE26 E9BE760000              	jmp L_error_incorrect_arity_simple
 21471                                  .L_lambda_simple_arity_check_ok_085d:
 21472 0000FE2B 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21473 0000FE30 4983E801                	sub r8, 1
 21474 0000FE34 4C89C3                  	mov rbx,r8
 21475 0000FE37 4983F800                	cmp r8, 0
 21476 0000FE3B 7535                    	jne .L_lambda_opt_params_loop_02ca
 21477 0000FE3D 488B542410              	mov rdx, qword [rsp + 8 * 2]
 21478 0000FE42 4883C203                	add rdx , 3
 21479 0000FE46 4883EC08                	sub rsp , 8
 21480 0000FE4A 4889E1                  	mov rcx, rsp
 21481                                  .L_lambda_opt_stack_adjusted_02c9: ;pushing down the stack of the current function
 21482 0000FE4D 488B5908                	mov rbx, qword [rcx + 8 * 1]
 21483 0000FE51 488919                  	mov qword[rcx] , rbx
 21484 0000FE54 4883C108                	add rcx , 8
 21485 0000FE58 48FFCA                  	dec rdx
 21486 0000FE5B 4883FA00                	cmp rdx, 0
 21487 0000FE5F 75EC                    	jne .L_lambda_opt_stack_adjusted_02c9
 21488 0000FE61 48FF442410              	inc qword [rsp + 8 * 2]
 21489 0000FE66 48C701[01000000]        	mov qword [rcx], sob_nil 
 21490 0000FE6D E9A2000000              	jmp .L_lambda_opt_end_01dc
 21491                                  	.L_lambda_opt_params_loop_02ca:
 21492 0000FE72 488B542410              	mov rdx, qword [rsp + 8*2]
 21493 0000FE77 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 21494 0000FE7C 4C89C2                  	mov rdx, r8
 21495 0000FE7F 49B9-                   	mov r9, sob_nil
 21495 0000FE81 [0100000000000000] 
 21496                                  	.L_lambda_opt_params_loop_02c9: ;loop for copying the opt into list
 21497 0000FE89 BF11000000              	mov rdi, (1 + 8 + 8)
 21498 0000FE8E E89D760000              	call malloc
 21499 0000FE93 C60021                  	mov byte[rax], T_pair
 21500 0000FE96 488B19                  	mov rbx, qword [rcx]
 21501 0000FE99 48895801                	mov SOB_PAIR_CAR(rax), rbx
 21502 0000FE9D 4C894809                	mov SOB_PAIR_CDR(rax), r9
 21503 0000FEA1 4989C1                  	mov r9, rax
 21504 0000FEA4 48FFCA                  	dec rdx
 21505 0000FEA7 4883E908                	sub rcx, 8
 21506 0000FEAB 4883FA00                	cmp rdx, 0
 21507 0000FEAF 75D8                    	jne .L_lambda_opt_params_loop_02c9
 21508 0000FEB1 488B542410              	mov rdx, qword [rsp + 8 * 2]
 21509 0000FEB6 4889E0                  	mov rax, rsp
 21510 0000FEB9 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 21511 0000FEBE 4C89C1                  	mov rcx, r8
 21512 0000FEC1 48FFC9                  	dec rcx
 21513 0000FEC4 4883C203                	add rdx, 3
 21514 0000FEC8 4829CA                  	sub rdx,rcx
 21515 0000FECB 48C1E103                	shl rcx, 3
 21516                                  	.L_lambda_opt_stack_adjusted_02ca:
 21517 0000FECF 4883FA00                	cmp rdx, 0
 21518 0000FED3 7419                    	je .L_lambda_opt_params_end_01dc
 21519 0000FED5 4889D8                  	mov rax, rbx
 21520 0000FED8 4829C8                  	sub rax, rcx
 21521 0000FEDB 488B30                  	mov rsi, qword [rax]
 21522 0000FEDE 488933                  	mov [rbx], rsi
 21523 0000FEE1 4883EB08                	sub rbx, 8
 21524 0000FEE5 48FFCA                  	dec rdx
 21525 0000FEE8 4883FA00                	cmp rdx, 0
 21526 0000FEEC 75E1                    	jne .L_lambda_opt_stack_adjusted_02ca
 21527                                  	.L_lambda_opt_params_end_01dc:
 21528 0000FEEE 4801CC                  	add rsp,rcx
 21529 0000FEF1 BB01000000              	mov rbx, 1
 21530 0000FEF6 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 21531 0000FEFB 4883C303                	add rbx,3
 21532 0000FEFF 4C29C3                  	sub rbx,r8
 21533 0000FF02 48C1E303                	shl rbx, 3
 21534 0000FF06 4801E3                  	add rbx, rsp
 21535 0000FF09 4C890B                  	mov qword[rbx] , r9
 21536 0000FF0C 49FFC8                  	dec r8
 21537 0000FF0F 4C29442410              	sub qword [rsp + 8 * 2], r8
 21538                                  	.L_lambda_opt_end_01dc:
 21539 0000FF14 C8000000                	enter 0, 0
 21540                                  	; preparing a tail-call
 21541 0000FF18 488B4528                	mov rax, PARAM(1)	; param strs
 21542 0000FF1C 50                      	push rax
 21543 0000FF1D 488B4520                	mov rax, PARAM(0)	; param str
 21544 0000FF21 50                      	push rax
 21545 0000FF22 6A02                    	push 2	; arg count
 21546 0000FF24 488B4510                	mov rax, ENV
 21547 0000FF28 488B00                  	mov rax, qword [rax + 8 * 0]
 21548 0000FF2B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21549 0000FF2E 488B00                  	mov rax, qword [rax]
 21550 0000FF31 803804                  	cmp byte [rax], T_closure
 21551 0000FF34 0F854D750000            	jne L_error_non_closure
 21552 0000FF3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21553 0000FF3D FF7508                  	push qword [rbp + 8 *1]
 21554 0000FF40 4989C0                  	mov r8, rax
 21555 0000FF43 488B5D18                	mov rbx, COUNT
 21556 0000FF47 4883C303                	add rbx,3
 21557 0000FF4B 48C1E303                	shl rbx,3
 21558 0000FF4F 4801EB                  	add rbx, rbp
 21559 0000FF52 488B6D00                	mov rbp, [rbp]
 21560 0000FF56 B900000000              	mov rcx,0
 21561 0000FF5B BA05000000              	mov rdx, 5
 21562 0000FF60 4889D0                  	mov rax, rdx
 21563 0000FF63 48FFC8                  	dec rax
 21564 0000FF66 48C1E003                	shl rax,3
 21565 0000FF6A 4801E0                  	add rax, rsp
 21566                                  	.L_tc_recycle_frame_loop_097a:
 21567 0000FF6D 4839D1                  	cmp rcx, rdx
 21568 0000FF70 7414                    	je .L_tc_recycle_frame_done_097a
 21569 0000FF72 4C8B08                  	mov r9, qword [rax]
 21570 0000FF75 4C890B                  	mov qword [rbx],r9
 21571 0000FF78 4883E808                	sub rax,8
 21572 0000FF7C 4883EB08                	sub rbx,8
 21573 0000FF80 4883C101                	add rcx,1
 21574 0000FF84 EBE7                    	jmp .L_tc_recycle_frame_loop_097a
 21575                                  	.L_tc_recycle_frame_done_097a:
 21576 0000FF86 4883C308                	add rbx,8
 21577 0000FF8A 4889DC                  	mov rsp,rbx
 21578 0000FF8D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21579                                  	LEAVE
    49 0000FF91 C9                  <1>  leave
 21580 0000FF92 C22000                  	ret AND_KILL_FRAME(2)
 21581                                  .L_lambda_opt_end_01db:
 21582 0000FF95 C9                      	leave
 21583 0000FF96 C21800                  	ret AND_KILL_FRAME(1)
 21584                                  .L_lambda_simple_end_076e:	; new closure is in rax
 21585 0000FF99 803804                  	cmp byte [rax], T_closure
 21586 0000FF9C 0F85E5740000            	jne L_error_non_closure
 21587 0000FFA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21588 0000FFA5 FF7508                  	push qword [rbp + 8 *1]
 21589 0000FFA8 4989C0                  	mov r8, rax
 21590 0000FFAB 488B5D18                	mov rbx, COUNT
 21591 0000FFAF 4883C303                	add rbx,3
 21592 0000FFB3 48C1E303                	shl rbx,3
 21593 0000FFB7 4801EB                  	add rbx, rbp
 21594 0000FFBA 488B6D00                	mov rbp, [rbp]
 21595 0000FFBE B900000000              	mov rcx,0
 21596 0000FFC3 BA04000000              	mov rdx, 4
 21597 0000FFC8 4889D0                  	mov rax, rdx
 21598 0000FFCB 48FFC8                  	dec rax
 21599 0000FFCE 48C1E003                	shl rax,3
 21600 0000FFD2 4801E0                  	add rax, rsp
 21601                                  	.L_tc_recycle_frame_loop_0978:
 21602 0000FFD5 4839D1                  	cmp rcx, rdx
 21603 0000FFD8 7414                    	je .L_tc_recycle_frame_done_0978
 21604 0000FFDA 4C8B08                  	mov r9, qword [rax]
 21605 0000FFDD 4C890B                  	mov qword [rbx],r9
 21606 0000FFE0 4883E808                	sub rax,8
 21607 0000FFE4 4883EB08                	sub rbx,8
 21608 0000FFE8 4883C101                	add rcx,1
 21609 0000FFEC EBE7                    	jmp .L_tc_recycle_frame_loop_0978
 21610                                  	.L_tc_recycle_frame_done_0978:
 21611 0000FFEE 4883C308                	add rbx,8
 21612 0000FFF2 4889DC                  	mov rsp,rbx
 21613 0000FFF5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21614 0000FFF9 C9                      	leave
 21615 0000FFFA C21800                  	ret AND_KILL_FRAME(1)
 21616                                  .L_lambda_simple_end_076d:	; new closure is in rax
 21617 0000FFFD 803804                  	cmp byte [rax], T_closure
 21618 00010000 0F8581740000            	jne L_error_non_closure
 21619 00010006 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21620 00010009 FF7508                  	push qword [rbp + 8 *1]
 21621 0001000C 4989C0                  	mov r8, rax
 21622 0001000F 488B5D18                	mov rbx, COUNT
 21623 00010013 4883C303                	add rbx,3
 21624 00010017 48C1E303                	shl rbx,3
 21625 0001001B 4801EB                  	add rbx, rbp
 21626 0001001E 488B6D00                	mov rbp, [rbp]
 21627 00010022 B900000000              	mov rcx,0
 21628 00010027 BA04000000              	mov rdx, 4
 21629 0001002C 4889D0                  	mov rax, rdx
 21630 0001002F 48FFC8                  	dec rax
 21631 00010032 48C1E003                	shl rax,3
 21632 00010036 4801E0                  	add rax, rsp
 21633                                  	.L_tc_recycle_frame_loop_0975:
 21634 00010039 4839D1                  	cmp rcx, rdx
 21635 0001003C 7414                    	je .L_tc_recycle_frame_done_0975
 21636 0001003E 4C8B08                  	mov r9, qword [rax]
 21637 00010041 4C890B                  	mov qword [rbx],r9
 21638 00010044 4883E808                	sub rax,8
 21639 00010048 4883EB08                	sub rbx,8
 21640 0001004C 4883C101                	add rcx,1
 21641 00010050 EBE7                    	jmp .L_tc_recycle_frame_loop_0975
 21642                                  	.L_tc_recycle_frame_done_0975:
 21643 00010052 4883C308                	add rbx,8
 21644 00010056 4889DC                  	mov rsp,rbx
 21645 00010059 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21646 0001005D C9                      	leave
 21647 0001005E C21800                  	ret AND_KILL_FRAME(1)
 21648                                  .L_lambda_simple_end_0769:	; new closure is in rax
 21649 00010061 803804                  	cmp byte [rax], T_closure
 21650 00010064 0F851D740000            	jne L_error_non_closure
 21651 0001006A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21652 0001006D FF7508                  	push qword [rbp + 8 *1]
 21653 00010070 4989C0                  	mov r8, rax
 21654 00010073 488B5D18                	mov rbx, COUNT
 21655 00010077 4883C303                	add rbx,3
 21656 0001007B 48C1E303                	shl rbx,3
 21657 0001007F 4801EB                  	add rbx, rbp
 21658 00010082 488B6D00                	mov rbp, [rbp]
 21659 00010086 B900000000              	mov rcx,0
 21660 0001008B BA04000000              	mov rdx, 4
 21661 00010090 4889D0                  	mov rax, rdx
 21662 00010093 48FFC8                  	dec rax
 21663 00010096 48C1E003                	shl rax,3
 21664 0001009A 4801E0                  	add rax, rsp
 21665                                  	.L_tc_recycle_frame_loop_0973:
 21666 0001009D 4839D1                  	cmp rcx, rdx
 21667 000100A0 7414                    	je .L_tc_recycle_frame_done_0973
 21668 000100A2 4C8B08                  	mov r9, qword [rax]
 21669 000100A5 4C890B                  	mov qword [rbx],r9
 21670 000100A8 4883E808                	sub rax,8
 21671 000100AC 4883EB08                	sub rbx,8
 21672 000100B0 4883C101                	add rcx,1
 21673 000100B4 EBE7                    	jmp .L_tc_recycle_frame_loop_0973
 21674                                  	.L_tc_recycle_frame_done_0973:
 21675 000100B6 4883C308                	add rbx,8
 21676 000100BA 4889DC                  	mov rsp,rbx
 21677 000100BD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21678 000100C1 C9                      	leave
 21679 000100C2 C21800                  	ret AND_KILL_FRAME(1)
 21680                                  .L_lambda_simple_end_0768:	; new closure is in rax
 21681 000100C5 50                      	push rax
 21682 000100C6 6A01                    	push 1	; arg count
 21683 000100C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21684 000100CD E85E740000              	call malloc
 21685 000100D2 50                      	push rax
 21686 000100D3 BF00000000              	mov rdi, 8 * 0	; new rib
 21687 000100D8 E853740000              	call malloc
 21688 000100DD 50                      	push rax
 21689 000100DE BF08000000              	mov rdi, 8 * 1	; extended env
 21690 000100E3 E848740000              	call malloc
 21691 000100E8 488B7D10                	mov rdi, ENV
 21692 000100EC BE00000000              	mov rsi, 0
 21693 000100F1 BA01000000              	mov rdx, 1
 21694                                  .L_lambda_simple_env_loop_0770:	; ext_env[i + 1] <-- env[i]
 21695 000100F6 4883FE00                	cmp rsi, 0
 21696 000100FA 7410                    	je .L_lambda_simple_env_end_0770
 21697 000100FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21698 00010100 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21699 00010104 48FFC6                  	inc rsi
 21700 00010107 48FFC2                  	inc rdx
 21701 0001010A EBEA                    	jmp .L_lambda_simple_env_loop_0770
 21702                                  .L_lambda_simple_env_end_0770:
 21703 0001010C 5B                      	pop rbx
 21704 0001010D BE00000000              	mov rsi, 0
 21705                                  .L_lambda_simple_params_loop_0770:	; copy params
 21706 00010112 4883FE00                	cmp rsi, 0
 21707 00010116 740E                    	je .L_lambda_simple_params_end_0770
 21708 00010118 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21709 0001011D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21710 00010121 48FFC6                  	inc rsi
 21711 00010124 EBEC                    	jmp .L_lambda_simple_params_loop_0770
 21712                                  .L_lambda_simple_params_end_0770:
 21713 00010126 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21714 00010129 4889C3                  	mov rbx, rax
 21715 0001012C 58                      	pop rax
 21716 0001012D C60004                  	mov byte [rax], T_closure
 21717 00010130 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21718 00010134 48C74009[41010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0770
 21719 0001013C E98D000000              	jmp .L_lambda_simple_end_0770
 21720                                  .L_lambda_simple_code_0770:	; lambda-simple body
 21721 00010141 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21722 00010147 740B                    	je .L_lambda_simple_arity_check_ok_085e
 21723 00010149 FF742410                	push qword [rsp + 8 * 2]
 21724 0001014D 6A01                    	push 1
 21725 0001014F E995730000              	jmp L_error_incorrect_arity_simple
 21726                                  .L_lambda_simple_arity_check_ok_085e:
 21727 00010154 C8000000                	enter 0, 0
 21728                                  	; preparing a non-tail-call
 21729 00010158 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 21730 00010160 803805                  	cmp byte [rax], T_undefined
 21731 00010163 0F849A720000            	je L_error_fvar_undefined
 21732 00010169 50                      	push rax
 21733 0001016A 6A01                    	push 1	; arg count
 21734 0001016C 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21735 00010170 803804                  	cmp byte [rax], T_closure
 21736 00010173 0F850E730000            	jne L_error_non_closure
 21737 00010179 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21738 0001017C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21739 0001017F 48890425[51170000]      	mov qword [free_var_135], rax
 21740 00010187 48B8-                   	mov rax, sob_void
 21740 00010189 [0000000000000000] 
 21741                                  
 21742                                  	; preparing a non-tail-call
 21743 00010191 488B0425[DE120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 21744 00010199 803805                  	cmp byte [rax], T_undefined
 21745 0001019C 0F8461720000            	je L_error_fvar_undefined
 21746 000101A2 50                      	push rax
 21747 000101A3 6A01                    	push 1	; arg count
 21748 000101A5 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21749 000101A9 803804                  	cmp byte [rax], T_closure
 21750 000101AC 0F85D5720000            	jne L_error_non_closure
 21751 000101B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21752 000101B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21753 000101B8 48890425[85160000]      	mov qword [free_var_123], rax
 21754 000101C0 48B8-                   	mov rax, sob_void
 21754 000101C2 [0000000000000000] 
 21755 000101CA C9                      	leave
 21756 000101CB C21800                  	ret AND_KILL_FRAME(1)
 21757                                  .L_lambda_simple_end_0770:	; new closure is in rax
 21758 000101CE 803804                  	cmp byte [rax], T_closure
 21759 000101D1 0F85B0720000            	jne L_error_non_closure
 21760 000101D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21761 000101DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21762                                  
 21763 000101DD 4889C7                  	mov rdi, rax
 21764 000101E0 E8A0750000              	call print_sexpr_if_not_void
 21765 000101E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21766 000101EA E841730000              	call malloc
 21767 000101EF 50                      	push rax
 21768 000101F0 BF00000000              	mov rdi, 8 * 0	; new rib
 21769 000101F5 E836730000              	call malloc
 21770 000101FA 50                      	push rax
 21771 000101FB BF08000000              	mov rdi, 8 * 1	; extended env
 21772 00010200 E82B730000              	call malloc
 21773 00010205 488B7D10                	mov rdi, ENV
 21774 00010209 BE00000000              	mov rsi, 0
 21775 0001020E BA01000000              	mov rdx, 1
 21776                                  .L_lambda_simple_env_loop_0771:	; ext_env[i + 1] <-- env[i]
 21777 00010213 4883FE00                	cmp rsi, 0
 21778 00010217 7410                    	je .L_lambda_simple_env_end_0771
 21779 00010219 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21780 0001021D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21781 00010221 48FFC6                  	inc rsi
 21782 00010224 48FFC2                  	inc rdx
 21783 00010227 EBEA                    	jmp .L_lambda_simple_env_loop_0771
 21784                                  .L_lambda_simple_env_end_0771:
 21785 00010229 5B                      	pop rbx
 21786 0001022A BE00000000              	mov rsi, 0
 21787                                  .L_lambda_simple_params_loop_0771:	; copy params
 21788 0001022F 4883FE00                	cmp rsi, 0
 21789 00010233 740E                    	je .L_lambda_simple_params_end_0771
 21790 00010235 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21791 0001023A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21792 0001023E 48FFC6                  	inc rsi
 21793 00010241 EBEC                    	jmp .L_lambda_simple_params_loop_0771
 21794                                  .L_lambda_simple_params_end_0771:
 21795 00010243 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21796 00010246 4889C3                  	mov rbx, rax
 21797 00010249 58                      	pop rax
 21798 0001024A C60004                  	mov byte [rax], T_closure
 21799 0001024D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21800 00010251 48C74009[5E020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0771
 21801 00010259 E930010000              	jmp .L_lambda_simple_end_0771
 21802                                  .L_lambda_simple_code_0771:	; lambda-simple body
 21803 0001025E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21804 00010264 740B                    	je .L_lambda_simple_arity_check_ok_085f
 21805 00010266 FF742410                	push qword [rsp + 8 * 2]
 21806 0001026A 6A01                    	push 1
 21807 0001026C E978720000              	jmp L_error_incorrect_arity_simple
 21808                                  .L_lambda_simple_arity_check_ok_085f:
 21809 00010271 C8000000                	enter 0, 0
 21810                                  	; preparing a non-tail-call
 21811 00010275 488B4520                	mov rax, PARAM(0)	; param e
 21812 00010279 50                      	push rax
 21813 0001027A 6A01                    	push 1	; arg count
 21814 0001027C 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 21815 00010284 803805                  	cmp byte [rax], T_undefined
 21816 00010287 0F8476710000            	je L_error_fvar_undefined
 21817 0001028D 803804                  	cmp byte [rax], T_closure
 21818 00010290 0F85F1710000            	jne L_error_non_closure
 21819 00010296 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21820 00010299 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21821 0001029C 483D[02000000]          	cmp rax, sob_boolean_false
 21822 000102A2 0F85E2000000            	jne .L_if_end_05bc
 21823                                  	; preparing a non-tail-call
 21824 000102A8 488B4520                	mov rax, PARAM(0)	; param e
 21825 000102AC 50                      	push rax
 21826 000102AD 6A01                    	push 1	; arg count
 21827 000102AF 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
 21828 000102B7 803805                  	cmp byte [rax], T_undefined
 21829 000102BA 0F8443710000            	je L_error_fvar_undefined
 21830 000102C0 803804                  	cmp byte [rax], T_closure
 21831 000102C3 0F85BE710000            	jne L_error_non_closure
 21832 000102C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21833 000102CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 21834 000102CF 483D[02000000]          	cmp rax, sob_boolean_false
 21835 000102D5 0F849D000000            	je .L_if_else_052f
 21836                                  	; preparing a tail-call
 21837                                  	; preparing a non-tail-call
 21838 000102DB 488B4520                	mov rax, PARAM(0)	; param e
 21839 000102DF 50                      	push rax
 21840 000102E0 6A01                    	push 1	; arg count
 21841 000102E2 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 21842 000102EA 803805                  	cmp byte [rax], T_undefined
 21843 000102ED 0F8410710000            	je L_error_fvar_undefined
 21844 000102F3 803804                  	cmp byte [rax], T_closure
 21845 000102F6 0F858B710000            	jne L_error_non_closure
 21846 000102FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21847 000102FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21848 00010302 50                      	push rax
 21849 00010303 6A01                    	push 1	; arg count
 21850 00010305 488B0425[BA140000]      	mov rax, qword [free_var_96]	; free var list?
 21851 0001030D 803805                  	cmp byte [rax], T_undefined
 21852 00010310 0F84ED700000            	je L_error_fvar_undefined
 21853 00010316 803804                  	cmp byte [rax], T_closure
 21854 00010319 0F8568710000            	jne L_error_non_closure
 21855 0001031F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21856 00010322 FF7508                  	push qword [rbp + 8 *1]
 21857 00010325 4989C0                  	mov r8, rax
 21858 00010328 488B5D18                	mov rbx, COUNT
 21859 0001032C 4883C303                	add rbx,3
 21860 00010330 48C1E303                	shl rbx,3
 21861 00010334 4801EB                  	add rbx, rbp
 21862 00010337 488B6D00                	mov rbp, [rbp]
 21863 0001033B B900000000              	mov rcx,0
 21864 00010340 BA04000000              	mov rdx, 4
 21865 00010345 4889D0                  	mov rax, rdx
 21866 00010348 48FFC8                  	dec rax
 21867 0001034B 48C1E003                	shl rax,3
 21868 0001034F 4801E0                  	add rax, rsp
 21869                                  	.L_tc_recycle_frame_loop_097b:
 21870 00010352 4839D1                  	cmp rcx, rdx
 21871 00010355 7414                    	je .L_tc_recycle_frame_done_097b
 21872 00010357 4C8B08                  	mov r9, qword [rax]
 21873 0001035A 4C890B                  	mov qword [rbx],r9
 21874 0001035D 4883E808                	sub rax,8
 21875 00010361 4883EB08                	sub rbx,8
 21876 00010365 4883C101                	add rcx,1
 21877 00010369 EBE7                    	jmp .L_tc_recycle_frame_loop_097b
 21878                                  	.L_tc_recycle_frame_done_097b:
 21879 0001036B 4883C308                	add rbx,8
 21880 0001036F 4889DC                  	mov rsp,rbx
 21881 00010372 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 21882 00010376 EB0A                    	jmp .L_if_end_05bd
 21883                                  .L_if_else_052f:
 21884 00010378 48B8-                   	mov rax, L_constants + 2
 21884 0001037A [0200000000000000] 
 21885                                  .L_if_end_05bd:
 21886 00010382 483D[02000000]          	cmp rax, sob_boolean_false
 21887 00010388 7500                    	jne .L_if_end_05bc
 21888                                  .L_if_end_05bc:
 21889 0001038A C9                      	leave
 21890 0001038B C21800                  	ret AND_KILL_FRAME(1)
 21891                                  .L_lambda_simple_end_0771:	; new closure is in rax
 21892 0001038E 48890425[BA140000]      	mov qword [free_var_96], rax
 21893 00010396 48B8-                   	mov rax, sob_void
 21893 00010398 [0000000000000000] 
 21894                                  
 21895 000103A0 4889C7                  	mov rdi, rax
 21896 000103A3 E8DD730000              	call print_sexpr_if_not_void
 21897                                  	; preparing a non-tail-call
 21898 000103A8 488B0425[0F150000]      	mov rax, qword [free_var_101]	; free var make-vector
 21899 000103B0 803805                  	cmp byte [rax], T_undefined
 21900 000103B3 0F844A700000            	je L_error_fvar_undefined
 21901 000103B9 50                      	push rax
 21902 000103BA 6A01                    	push 1	; arg count
 21903 000103BC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21904 000103C1 E86A710000              	call malloc
 21905 000103C6 50                      	push rax
 21906 000103C7 BF00000000              	mov rdi, 8 * 0	; new rib
 21907 000103CC E85F710000              	call malloc
 21908 000103D1 50                      	push rax
 21909 000103D2 BF08000000              	mov rdi, 8 * 1	; extended env
 21910 000103D7 E854710000              	call malloc
 21911 000103DC 488B7D10                	mov rdi, ENV
 21912 000103E0 BE00000000              	mov rsi, 0
 21913 000103E5 BA01000000              	mov rdx, 1
 21914                                  .L_lambda_simple_env_loop_0772:	; ext_env[i + 1] <-- env[i]
 21915 000103EA 4883FE00                	cmp rsi, 0
 21916 000103EE 7410                    	je .L_lambda_simple_env_end_0772
 21917 000103F0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21918 000103F4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21919 000103F8 48FFC6                  	inc rsi
 21920 000103FB 48FFC2                  	inc rdx
 21921 000103FE EBEA                    	jmp .L_lambda_simple_env_loop_0772
 21922                                  .L_lambda_simple_env_end_0772:
 21923 00010400 5B                      	pop rbx
 21924 00010401 BE00000000              	mov rsi, 0
 21925                                  .L_lambda_simple_params_loop_0772:	; copy params
 21926 00010406 4883FE00                	cmp rsi, 0
 21927 0001040A 740E                    	je .L_lambda_simple_params_end_0772
 21928 0001040C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21929 00010411 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21930 00010415 48FFC6                  	inc rsi
 21931 00010418 EBEC                    	jmp .L_lambda_simple_params_loop_0772
 21932                                  .L_lambda_simple_params_end_0772:
 21933 0001041A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21934 0001041D 4889C3                  	mov rbx, rax
 21935 00010420 58                      	pop rax
 21936 00010421 C60004                  	mov byte [rax], T_closure
 21937 00010424 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21938 00010428 48C74009[35040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0772
 21939 00010430 E940040000              	jmp .L_lambda_simple_end_0772
 21940                                  .L_lambda_simple_code_0772:	; lambda-simple body
 21941 00010435 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21942 0001043B 740B                    	je .L_lambda_simple_arity_check_ok_0860
 21943 0001043D FF742410                	push qword [rsp + 8 * 2]
 21944 00010441 6A01                    	push 1
 21945 00010443 E9A1700000              	jmp L_error_incorrect_arity_simple
 21946                                  .L_lambda_simple_arity_check_ok_0860:
 21947 00010448 C8000000                	enter 0, 0
 21948 0001044C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21949 00010451 E8DA700000              	call malloc
 21950 00010456 50                      	push rax
 21951 00010457 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 21952 0001045B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21953 0001045F BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 21954 00010464 E8C7700000              	call malloc
 21955 00010469 50                      	push rax
 21956 0001046A BF10000000              	mov rdi, 8 * 2	; extended env
 21957 0001046F E8BC700000              	call malloc
 21958 00010474 488B7D10                	mov rdi, ENV
 21959 00010478 BE00000000              	mov rsi, 0
 21960 0001047D BA01000000              	mov rdx, 1
 21961                                  .L_lambda_opt_env_loop_00ef:	; ext_env[i + 1] <-- env[i] copy all the array
 21962 00010482 4883FE01                	cmp rsi, 1
 21963 00010486 7410                    	je .L_lambda_opt_env_end_00ef
 21964 00010488 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21965 0001048C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21966 00010490 48FFC6                  	inc rsi
 21967 00010493 48FFC2                  	inc rdx
 21968 00010496 EBEA                    	jmp .L_lambda_opt_env_loop_00ef
 21969                                  .L_lambda_opt_env_end_00ef:
 21970 00010498 5B                      	pop rbx
 21971 00010499 BE00000000              	mov rsi, 0
 21972                                  .L_lambda_opt_params_loop_02cb:	; copy params
 21973 0001049E 4883FE01                	cmp rsi, 1
 21974 000104A2 740E                    	je .L_lambda_opt_params_end_01dd
 21975 000104A4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21976 000104A9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21977 000104AD 48FFC6                  	inc rsi
 21978 000104B0 EBEC                    	jmp .L_lambda_opt_params_loop_02cb
 21979                                  .L_lambda_opt_params_end_01dd:
 21980 000104B2 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 21981 000104B5 4889C3                  	mov rbx, rax
 21982 000104B8 58                      	pop rax
 21983 000104B9 C60004                  	mov byte [rax], T_closure
 21984 000104BC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21985 000104C0 48C74009[CD040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00ef
 21986 000104C8 E9A4030000              	jmp .L_lambda_opt_end_01dd
 21987                                  .L_lambda_opt_code_00ef:	; lambda-opt body
 21988 000104CD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21989 000104D3 7D0B                    	jge .L_lambda_simple_arity_check_ok_0861
 21990 000104D5 FF742410                	push qword [rsp + 8 * 2]
 21991 000104D9 6A01                    	push 1
 21992 000104DB E909700000              	jmp L_error_incorrect_arity_simple
 21993                                  .L_lambda_simple_arity_check_ok_0861:
 21994 000104E0 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21995 000104E5 4983E801                	sub r8, 1
 21996 000104E9 4C89C3                  	mov rbx,r8
 21997 000104EC 4983F800                	cmp r8, 0
 21998 000104F0 7535                    	jne .L_lambda_opt_params_loop_02cd
 21999 000104F2 488B542410              	mov rdx, qword [rsp + 8 * 2]
 22000 000104F7 4883C203                	add rdx , 3
 22001 000104FB 4883EC08                	sub rsp , 8
 22002 000104FF 4889E1                  	mov rcx, rsp
 22003                                  .L_lambda_opt_stack_adjusted_02cc: ;pushing down the stack of the current function
 22004 00010502 488B5908                	mov rbx, qword [rcx + 8 * 1]
 22005 00010506 488919                  	mov qword[rcx] , rbx
 22006 00010509 4883C108                	add rcx , 8
 22007 0001050D 48FFCA                  	dec rdx
 22008 00010510 4883FA00                	cmp rdx, 0
 22009 00010514 75EC                    	jne .L_lambda_opt_stack_adjusted_02cc
 22010 00010516 48FF442410              	inc qword [rsp + 8 * 2]
 22011 0001051B 48C701[01000000]        	mov qword [rcx], sob_nil 
 22012 00010522 E9A2000000              	jmp .L_lambda_opt_end_01de
 22013                                  	.L_lambda_opt_params_loop_02cd:
 22014 00010527 488B542410              	mov rdx, qword [rsp + 8*2]
 22015 0001052C 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 22016 00010531 4C89C2                  	mov rdx, r8
 22017 00010534 49B9-                   	mov r9, sob_nil
 22017 00010536 [0100000000000000] 
 22018                                  	.L_lambda_opt_params_loop_02cc: ;loop for copying the opt into list
 22019 0001053E BF11000000              	mov rdi, (1 + 8 + 8)
 22020 00010543 E8E86F0000              	call malloc
 22021 00010548 C60021                  	mov byte[rax], T_pair
 22022 0001054B 488B19                  	mov rbx, qword [rcx]
 22023 0001054E 48895801                	mov SOB_PAIR_CAR(rax), rbx
 22024 00010552 4C894809                	mov SOB_PAIR_CDR(rax), r9
 22025 00010556 4989C1                  	mov r9, rax
 22026 00010559 48FFCA                  	dec rdx
 22027 0001055C 4883E908                	sub rcx, 8
 22028 00010560 4883FA00                	cmp rdx, 0
 22029 00010564 75D8                    	jne .L_lambda_opt_params_loop_02cc
 22030 00010566 488B542410              	mov rdx, qword [rsp + 8 * 2]
 22031 0001056B 4889E0                  	mov rax, rsp
 22032 0001056E 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 22033 00010573 4C89C1                  	mov rcx, r8
 22034 00010576 48FFC9                  	dec rcx
 22035 00010579 4883C203                	add rdx, 3
 22036 0001057D 4829CA                  	sub rdx,rcx
 22037 00010580 48C1E103                	shl rcx, 3
 22038                                  	.L_lambda_opt_stack_adjusted_02cd:
 22039 00010584 4883FA00                	cmp rdx, 0
 22040 00010588 7419                    	je .L_lambda_opt_params_end_01de
 22041 0001058A 4889D8                  	mov rax, rbx
 22042 0001058D 4829C8                  	sub rax, rcx
 22043 00010590 488B30                  	mov rsi, qword [rax]
 22044 00010593 488933                  	mov [rbx], rsi
 22045 00010596 4883EB08                	sub rbx, 8
 22046 0001059A 48FFCA                  	dec rdx
 22047 0001059D 4883FA00                	cmp rdx, 0
 22048 000105A1 75E1                    	jne .L_lambda_opt_stack_adjusted_02cd
 22049                                  	.L_lambda_opt_params_end_01de:
 22050 000105A3 4801CC                  	add rsp,rcx
 22051 000105A6 BB01000000              	mov rbx, 1
 22052 000105AB 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 22053 000105B0 4883C303                	add rbx,3
 22054 000105B4 4C29C3                  	sub rbx,r8
 22055 000105B7 48C1E303                	shl rbx, 3
 22056 000105BB 4801E3                  	add rbx, rsp
 22057 000105BE 4C890B                  	mov qword[rbx] , r9
 22058 000105C1 49FFC8                  	dec r8
 22059 000105C4 4C29442410              	sub qword [rsp + 8 * 2], r8
 22060                                  	.L_lambda_opt_end_01de:
 22061 000105C9 C8000000                	enter 0, 0
 22062                                  	; preparing a tail-call
 22063                                  	; preparing a non-tail-call
 22064 000105CD 488B4528                	mov rax, PARAM(1)	; param xs
 22065 000105D1 50                      	push rax
 22066 000105D2 6A01                    	push 1	; arg count
 22067 000105D4 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 22068 000105DC 803805                  	cmp byte [rax], T_undefined
 22069 000105DF 0F841E6E0000            	je L_error_fvar_undefined
 22070 000105E5 803804                  	cmp byte [rax], T_closure
 22071 000105E8 0F85996E0000            	jne L_error_non_closure
 22072 000105EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22073 000105F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22074 000105F4 483D[02000000]          	cmp rax, sob_boolean_false
 22075 000105FA 740F                    	je .L_if_else_0532
 22076 000105FC 48B8-                   	mov rax, L_constants + 0
 22076 000105FE [0000000000000000] 
 22077 00010606 E9EE000000              	jmp .L_if_end_05c0
 22078                                  .L_if_else_0532:
 22079                                  	; preparing a non-tail-call
 22080 0001060B 488B4528                	mov rax, PARAM(1)	; param xs
 22081 0001060F 50                      	push rax
 22082 00010610 6A01                    	push 1	; arg count
 22083 00010612 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
 22084 0001061A 803805                  	cmp byte [rax], T_undefined
 22085 0001061D 0F84E06D0000            	je L_error_fvar_undefined
 22086 00010623 803804                  	cmp byte [rax], T_closure
 22087 00010626 0F855B6E0000            	jne L_error_non_closure
 22088 0001062C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22089 0001062F FF5009                  	call SOB_CLOSURE_CODE(rax)
 22090 00010632 483D[02000000]          	cmp rax, sob_boolean_false
 22091 00010638 744C                    	je .L_if_else_0530
 22092                                  	; preparing a non-tail-call
 22093                                  	; preparing a non-tail-call
 22094 0001063A 488B4528                	mov rax, PARAM(1)	; param xs
 22095 0001063E 50                      	push rax
 22096 0001063F 6A01                    	push 1	; arg count
 22097 00010641 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 22098 00010649 803805                  	cmp byte [rax], T_undefined
 22099 0001064C 0F84B16D0000            	je L_error_fvar_undefined
 22100 00010652 803804                  	cmp byte [rax], T_closure
 22101 00010655 0F852C6E0000            	jne L_error_non_closure
 22102 0001065B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22103 0001065E FF5009                  	call SOB_CLOSURE_CODE(rax)
 22104 00010661 50                      	push rax
 22105 00010662 6A01                    	push 1	; arg count
 22106 00010664 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 22107 0001066C 803805                  	cmp byte [rax], T_undefined
 22108 0001066F 0F848E6D0000            	je L_error_fvar_undefined
 22109 00010675 803804                  	cmp byte [rax], T_closure
 22110 00010678 0F85096E0000            	jne L_error_non_closure
 22111 0001067E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22112 00010681 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22113 00010684 EB0A                    	jmp .L_if_end_05be
 22114                                  .L_if_else_0530:
 22115 00010686 48B8-                   	mov rax, L_constants + 2
 22115 00010688 [0200000000000000] 
 22116                                  .L_if_end_05be:
 22117 00010690 483D[02000000]          	cmp rax, sob_boolean_false
 22118 00010696 7429                    	je .L_if_else_0531
 22119                                  	; preparing a non-tail-call
 22120 00010698 488B4528                	mov rax, PARAM(1)	; param xs
 22121 0001069C 50                      	push rax
 22122 0001069D 6A01                    	push 1	; arg count
 22123 0001069F 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 22124 000106A7 803805                  	cmp byte [rax], T_undefined
 22125 000106AA 0F84536D0000            	je L_error_fvar_undefined
 22126 000106B0 803804                  	cmp byte [rax], T_closure
 22127 000106B3 0F85CE6D0000            	jne L_error_non_closure
 22128 000106B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22129 000106BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22130 000106BF EB38                    	jmp .L_if_end_05bf
 22131                                  .L_if_else_0531:
 22132                                  	; preparing a non-tail-call
 22133 000106C1 48B8-                   	mov rax, L_constants + 2955
 22133 000106C3 [8B0B000000000000] 
 22134 000106CB 50                      	push rax
 22135 000106CC 48B8-                   	mov rax, L_constants + 2946
 22135 000106CE [820B000000000000] 
 22136 000106D6 50                      	push rax
 22137 000106D7 6A02                    	push 2	; arg count
 22138 000106D9 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 22139 000106E1 803805                  	cmp byte [rax], T_undefined
 22140 000106E4 0F84196D0000            	je L_error_fvar_undefined
 22141 000106EA 803804                  	cmp byte [rax], T_closure
 22142 000106ED 0F85946D0000            	jne L_error_non_closure
 22143 000106F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22144 000106F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22145                                  .L_if_end_05bf:
 22146                                  .L_if_end_05c0:
 22147 000106F9 50                      	push rax
 22148 000106FA 6A01                    	push 1	; arg count
 22149 000106FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22150 00010701 E82A6E0000              	call malloc
 22151 00010706 50                      	push rax
 22152 00010707 BF10000000              	mov rdi, 8 * 2	; new rib
 22153 0001070C E81F6E0000              	call malloc
 22154 00010711 50                      	push rax
 22155 00010712 BF18000000              	mov rdi, 8 * 3	; extended env
 22156 00010717 E8146E0000              	call malloc
 22157 0001071C 488B7D10                	mov rdi, ENV
 22158 00010720 BE00000000              	mov rsi, 0
 22159 00010725 BA01000000              	mov rdx, 1
 22160                                  .L_lambda_simple_env_loop_0773:	; ext_env[i + 1] <-- env[i]
 22161 0001072A 4883FE02                	cmp rsi, 2
 22162 0001072E 7410                    	je .L_lambda_simple_env_end_0773
 22163 00010730 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22164 00010734 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22165 00010738 48FFC6                  	inc rsi
 22166 0001073B 48FFC2                  	inc rdx
 22167 0001073E EBEA                    	jmp .L_lambda_simple_env_loop_0773
 22168                                  .L_lambda_simple_env_end_0773:
 22169 00010740 5B                      	pop rbx
 22170 00010741 BE00000000              	mov rsi, 0
 22171                                  .L_lambda_simple_params_loop_0773:	; copy params
 22172 00010746 4883FE02                	cmp rsi, 2
 22173 0001074A 740E                    	je .L_lambda_simple_params_end_0773
 22174 0001074C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22175 00010751 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22176 00010755 48FFC6                  	inc rsi
 22177 00010758 EBEC                    	jmp .L_lambda_simple_params_loop_0773
 22178                                  .L_lambda_simple_params_end_0773:
 22179 0001075A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22180 0001075D 4889C3                  	mov rbx, rax
 22181 00010760 58                      	pop rax
 22182 00010761 C60004                  	mov byte [rax], T_closure
 22183 00010764 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22184 00010768 48C74009[75070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0773
 22185 00010770 E998000000              	jmp .L_lambda_simple_end_0773
 22186                                  .L_lambda_simple_code_0773:	; lambda-simple body
 22187 00010775 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22188 0001077B 740B                    	je .L_lambda_simple_arity_check_ok_0862
 22189 0001077D FF742410                	push qword [rsp + 8 * 2]
 22190 00010781 6A01                    	push 1
 22191 00010783 E9616D0000              	jmp L_error_incorrect_arity_simple
 22192                                  .L_lambda_simple_arity_check_ok_0862:
 22193 00010788 C8000000                	enter 0, 0
 22194                                  	; preparing a tail-call
 22195 0001078C 488B4520                	mov rax, PARAM(0)	; param x
 22196 00010790 50                      	push rax
 22197 00010791 488B4510                	mov rax, ENV
 22198 00010795 488B00                  	mov rax, qword [rax + 8 * 0]
 22199 00010798 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22200 0001079B 50                      	push rax
 22201 0001079C 6A02                    	push 2	; arg count
 22202 0001079E 488B4510                	mov rax, ENV
 22203 000107A2 488B4008                	mov rax, qword [rax + 8 * 1]
 22204 000107A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 22205 000107A9 803804                  	cmp byte [rax], T_closure
 22206 000107AC 0F85D56C0000            	jne L_error_non_closure
 22207 000107B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22208 000107B5 FF7508                  	push qword [rbp + 8 *1]
 22209 000107B8 4989C0                  	mov r8, rax
 22210 000107BB 488B5D18                	mov rbx, COUNT
 22211 000107BF 4883C303                	add rbx,3
 22212 000107C3 48C1E303                	shl rbx,3
 22213 000107C7 4801EB                  	add rbx, rbp
 22214 000107CA 488B6D00                	mov rbp, [rbp]
 22215 000107CE B900000000              	mov rcx,0
 22216 000107D3 BA05000000              	mov rdx, 5
 22217 000107D8 4889D0                  	mov rax, rdx
 22218 000107DB 48FFC8                  	dec rax
 22219 000107DE 48C1E003                	shl rax,3
 22220 000107E2 4801E0                  	add rax, rsp
 22221                                  	.L_tc_recycle_frame_loop_097d:
 22222 000107E5 4839D1                  	cmp rcx, rdx
 22223 000107E8 7414                    	je .L_tc_recycle_frame_done_097d
 22224 000107EA 4C8B08                  	mov r9, qword [rax]
 22225 000107ED 4C890B                  	mov qword [rbx],r9
 22226 000107F0 4883E808                	sub rax,8
 22227 000107F4 4883EB08                	sub rbx,8
 22228 000107F8 4883C101                	add rcx,1
 22229 000107FC EBE7                    	jmp .L_tc_recycle_frame_loop_097d
 22230                                  	.L_tc_recycle_frame_done_097d:
 22231 000107FE 4883C308                	add rbx,8
 22232 00010802 4889DC                  	mov rsp,rbx
 22233 00010805 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22234 00010809 C9                      	leave
 22235 0001080A C21800                  	ret AND_KILL_FRAME(1)
 22236                                  .L_lambda_simple_end_0773:	; new closure is in rax
 22237 0001080D 803804                  	cmp byte [rax], T_closure
 22238 00010810 0F85716C0000            	jne L_error_non_closure
 22239 00010816 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22240 00010819 FF7508                  	push qword [rbp + 8 *1]
 22241 0001081C 4989C0                  	mov r8, rax
 22242 0001081F 488B5D18                	mov rbx, COUNT
 22243 00010823 4883C303                	add rbx,3
 22244 00010827 48C1E303                	shl rbx,3
 22245 0001082B 4801EB                  	add rbx, rbp
 22246 0001082E 488B6D00                	mov rbp, [rbp]
 22247 00010832 B900000000              	mov rcx,0
 22248 00010837 BA04000000              	mov rdx, 4
 22249 0001083C 4889D0                  	mov rax, rdx
 22250 0001083F 48FFC8                  	dec rax
 22251 00010842 48C1E003                	shl rax,3
 22252 00010846 4801E0                  	add rax, rsp
 22253                                  	.L_tc_recycle_frame_loop_097c:
 22254 00010849 4839D1                  	cmp rcx, rdx
 22255 0001084C 7414                    	je .L_tc_recycle_frame_done_097c
 22256 0001084E 4C8B08                  	mov r9, qword [rax]
 22257 00010851 4C890B                  	mov qword [rbx],r9
 22258 00010854 4883E808                	sub rax,8
 22259 00010858 4883EB08                	sub rbx,8
 22260 0001085C 4883C101                	add rcx,1
 22261 00010860 EBE7                    	jmp .L_tc_recycle_frame_loop_097c
 22262                                  	.L_tc_recycle_frame_done_097c:
 22263 00010862 4883C308                	add rbx,8
 22264 00010866 4889DC                  	mov rsp,rbx
 22265 00010869 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22266                                  	LEAVE
    49 0001086D C9                  <1>  leave
 22267 0001086E C22000                  	ret AND_KILL_FRAME(2)
 22268                                  .L_lambda_opt_end_01dd:
 22269 00010871 C9                      	leave
 22270 00010872 C21800                  	ret AND_KILL_FRAME(1)
 22271                                  .L_lambda_simple_end_0772:	; new closure is in rax
 22272 00010875 803804                  	cmp byte [rax], T_closure
 22273 00010878 0F85096C0000            	jne L_error_non_closure
 22274 0001087E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22275 00010881 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22276 00010884 48890425[0F150000]      	mov qword [free_var_101], rax
 22277 0001088C 48B8-                   	mov rax, sob_void
 22277 0001088E [0000000000000000] 
 22278                                  
 22279 00010896 4889C7                  	mov rdi, rax
 22280 00010899 E8E76E0000              	call print_sexpr_if_not_void
 22281                                  	; preparing a non-tail-call
 22282 0001089E 488B0425[ED140000]      	mov rax, qword [free_var_99]	; free var make-string
 22283 000108A6 803805                  	cmp byte [rax], T_undefined
 22284 000108A9 0F84546B0000            	je L_error_fvar_undefined
 22285 000108AF 50                      	push rax
 22286 000108B0 6A01                    	push 1	; arg count
 22287 000108B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22288 000108B7 E8746C0000              	call malloc
 22289 000108BC 50                      	push rax
 22290 000108BD BF00000000              	mov rdi, 8 * 0	; new rib
 22291 000108C2 E8696C0000              	call malloc
 22292 000108C7 50                      	push rax
 22293 000108C8 BF08000000              	mov rdi, 8 * 1	; extended env
 22294 000108CD E85E6C0000              	call malloc
 22295 000108D2 488B7D10                	mov rdi, ENV
 22296 000108D6 BE00000000              	mov rsi, 0
 22297 000108DB BA01000000              	mov rdx, 1
 22298                                  .L_lambda_simple_env_loop_0774:	; ext_env[i + 1] <-- env[i]
 22299 000108E0 4883FE00                	cmp rsi, 0
 22300 000108E4 7410                    	je .L_lambda_simple_env_end_0774
 22301 000108E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22302 000108EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22303 000108EE 48FFC6                  	inc rsi
 22304 000108F1 48FFC2                  	inc rdx
 22305 000108F4 EBEA                    	jmp .L_lambda_simple_env_loop_0774
 22306                                  .L_lambda_simple_env_end_0774:
 22307 000108F6 5B                      	pop rbx
 22308 000108F7 BE00000000              	mov rsi, 0
 22309                                  .L_lambda_simple_params_loop_0774:	; copy params
 22310 000108FC 4883FE00                	cmp rsi, 0
 22311 00010900 740E                    	je .L_lambda_simple_params_end_0774
 22312 00010902 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22313 00010907 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22314 0001090B 48FFC6                  	inc rsi
 22315 0001090E EBEC                    	jmp .L_lambda_simple_params_loop_0774
 22316                                  .L_lambda_simple_params_end_0774:
 22317 00010910 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22318 00010913 4889C3                  	mov rbx, rax
 22319 00010916 58                      	pop rax
 22320 00010917 C60004                  	mov byte [rax], T_closure
 22321 0001091A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22322 0001091E 48C74009[2B090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0774
 22323 00010926 E940040000              	jmp .L_lambda_simple_end_0774
 22324                                  .L_lambda_simple_code_0774:	; lambda-simple body
 22325 0001092B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22326 00010931 740B                    	je .L_lambda_simple_arity_check_ok_0863
 22327 00010933 FF742410                	push qword [rsp + 8 * 2]
 22328 00010937 6A01                    	push 1
 22329 00010939 E9AB6B0000              	jmp L_error_incorrect_arity_simple
 22330                                  .L_lambda_simple_arity_check_ok_0863:
 22331 0001093E C8000000                	enter 0, 0
 22332 00010942 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22333 00010947 E8E46B0000              	call malloc
 22334 0001094C 50                      	push rax
 22335 0001094D 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 22336 00010951 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22337 00010955 BF08000000              	mov rdi, 8 * 1	; new rib for optional parameters
 22338 0001095A E8D16B0000              	call malloc
 22339 0001095F 50                      	push rax
 22340 00010960 BF10000000              	mov rdi, 8 * 2	; extended env
 22341 00010965 E8C66B0000              	call malloc
 22342 0001096A 488B7D10                	mov rdi, ENV
 22343 0001096E BE00000000              	mov rsi, 0
 22344 00010973 BA01000000              	mov rdx, 1
 22345                                  .L_lambda_opt_env_loop_00f0:	; ext_env[i + 1] <-- env[i] copy all the array
 22346 00010978 4883FE01                	cmp rsi, 1
 22347 0001097C 7410                    	je .L_lambda_opt_env_end_00f0
 22348 0001097E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22349 00010982 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22350 00010986 48FFC6                  	inc rsi
 22351 00010989 48FFC2                  	inc rdx
 22352 0001098C EBEA                    	jmp .L_lambda_opt_env_loop_00f0
 22353                                  .L_lambda_opt_env_end_00f0:
 22354 0001098E 5B                      	pop rbx
 22355 0001098F BE00000000              	mov rsi, 0
 22356                                  .L_lambda_opt_params_loop_02ce:	; copy params
 22357 00010994 4883FE01                	cmp rsi, 1
 22358 00010998 740E                    	je .L_lambda_opt_params_end_01df
 22359 0001099A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22360 0001099F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22361 000109A3 48FFC6                  	inc rsi
 22362 000109A6 EBEC                    	jmp .L_lambda_opt_params_loop_02ce
 22363                                  .L_lambda_opt_params_end_01df:
 22364 000109A8 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 22365 000109AB 4889C3                  	mov rbx, rax
 22366 000109AE 58                      	pop rax
 22367 000109AF C60004                  	mov byte [rax], T_closure
 22368 000109B2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22369 000109B6 48C74009[C3090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00f0
 22370 000109BE E9A4030000              	jmp .L_lambda_opt_end_01df
 22371                                  .L_lambda_opt_code_00f0:	; lambda-opt body
 22372 000109C3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22373 000109C9 7D0B                    	jge .L_lambda_simple_arity_check_ok_0864
 22374 000109CB FF742410                	push qword [rsp + 8 * 2]
 22375 000109CF 6A01                    	push 1
 22376 000109D1 E9136B0000              	jmp L_error_incorrect_arity_simple
 22377                                  .L_lambda_simple_arity_check_ok_0864:
 22378 000109D6 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 22379 000109DB 4983E801                	sub r8, 1
 22380 000109DF 4C89C3                  	mov rbx,r8
 22381 000109E2 4983F800                	cmp r8, 0
 22382 000109E6 7535                    	jne .L_lambda_opt_params_loop_02d0
 22383 000109E8 488B542410              	mov rdx, qword [rsp + 8 * 2]
 22384 000109ED 4883C203                	add rdx , 3
 22385 000109F1 4883EC08                	sub rsp , 8
 22386 000109F5 4889E1                  	mov rcx, rsp
 22387                                  .L_lambda_opt_stack_adjusted_02cf: ;pushing down the stack of the current function
 22388 000109F8 488B5908                	mov rbx, qword [rcx + 8 * 1]
 22389 000109FC 488919                  	mov qword[rcx] , rbx
 22390 000109FF 4883C108                	add rcx , 8
 22391 00010A03 48FFCA                  	dec rdx
 22392 00010A06 4883FA00                	cmp rdx, 0
 22393 00010A0A 75EC                    	jne .L_lambda_opt_stack_adjusted_02cf
 22394 00010A0C 48FF442410              	inc qword [rsp + 8 * 2]
 22395 00010A11 48C701[01000000]        	mov qword [rcx], sob_nil 
 22396 00010A18 E9A2000000              	jmp .L_lambda_opt_end_01e0
 22397                                  	.L_lambda_opt_params_loop_02d0:
 22398 00010A1D 488B542410              	mov rdx, qword [rsp + 8*2]
 22399 00010A22 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 22400 00010A27 4C89C2                  	mov rdx, r8
 22401 00010A2A 49B9-                   	mov r9, sob_nil
 22401 00010A2C [0100000000000000] 
 22402                                  	.L_lambda_opt_params_loop_02cf: ;loop for copying the opt into list
 22403 00010A34 BF11000000              	mov rdi, (1 + 8 + 8)
 22404 00010A39 E8F26A0000              	call malloc
 22405 00010A3E C60021                  	mov byte[rax], T_pair
 22406 00010A41 488B19                  	mov rbx, qword [rcx]
 22407 00010A44 48895801                	mov SOB_PAIR_CAR(rax), rbx
 22408 00010A48 4C894809                	mov SOB_PAIR_CDR(rax), r9
 22409 00010A4C 4989C1                  	mov r9, rax
 22410 00010A4F 48FFCA                  	dec rdx
 22411 00010A52 4883E908                	sub rcx, 8
 22412 00010A56 4883FA00                	cmp rdx, 0
 22413 00010A5A 75D8                    	jne .L_lambda_opt_params_loop_02cf
 22414 00010A5C 488B542410              	mov rdx, qword [rsp + 8 * 2]
 22415 00010A61 4889E0                  	mov rax, rsp
 22416 00010A64 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 22417 00010A69 4C89C1                  	mov rcx, r8
 22418 00010A6C 48FFC9                  	dec rcx
 22419 00010A6F 4883C203                	add rdx, 3
 22420 00010A73 4829CA                  	sub rdx,rcx
 22421 00010A76 48C1E103                	shl rcx, 3
 22422                                  	.L_lambda_opt_stack_adjusted_02d0:
 22423 00010A7A 4883FA00                	cmp rdx, 0
 22424 00010A7E 7419                    	je .L_lambda_opt_params_end_01e0
 22425 00010A80 4889D8                  	mov rax, rbx
 22426 00010A83 4829C8                  	sub rax, rcx
 22427 00010A86 488B30                  	mov rsi, qword [rax]
 22428 00010A89 488933                  	mov [rbx], rsi
 22429 00010A8C 4883EB08                	sub rbx, 8
 22430 00010A90 48FFCA                  	dec rdx
 22431 00010A93 4883FA00                	cmp rdx, 0
 22432 00010A97 75E1                    	jne .L_lambda_opt_stack_adjusted_02d0
 22433                                  	.L_lambda_opt_params_end_01e0:
 22434 00010A99 4801CC                  	add rsp,rcx
 22435 00010A9C BB01000000              	mov rbx, 1
 22436 00010AA1 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 22437 00010AA6 4883C303                	add rbx,3
 22438 00010AAA 4C29C3                  	sub rbx,r8
 22439 00010AAD 48C1E303                	shl rbx, 3
 22440 00010AB1 4801E3                  	add rbx, rsp
 22441 00010AB4 4C890B                  	mov qword[rbx] , r9
 22442 00010AB7 49FFC8                  	dec r8
 22443 00010ABA 4C29442410              	sub qword [rsp + 8 * 2], r8
 22444                                  	.L_lambda_opt_end_01e0:
 22445 00010ABF C8000000                	enter 0, 0
 22446                                  	; preparing a tail-call
 22447                                  	; preparing a non-tail-call
 22448 00010AC3 488B4528                	mov rax, PARAM(1)	; param chs
 22449 00010AC7 50                      	push rax
 22450 00010AC8 6A01                    	push 1	; arg count
 22451 00010ACA 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 22452 00010AD2 803805                  	cmp byte [rax], T_undefined
 22453 00010AD5 0F8428690000            	je L_error_fvar_undefined
 22454 00010ADB 803804                  	cmp byte [rax], T_closure
 22455 00010ADE 0F85A3690000            	jne L_error_non_closure
 22456 00010AE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22457 00010AE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22458 00010AEA 483D[02000000]          	cmp rax, sob_boolean_false
 22459 00010AF0 740F                    	je .L_if_else_0535
 22460 00010AF2 48B8-                   	mov rax, L_constants + 4
 22460 00010AF4 [0400000000000000] 
 22461 00010AFC E9EE000000              	jmp .L_if_end_05c3
 22462                                  .L_if_else_0535:
 22463                                  	; preparing a non-tail-call
 22464 00010B01 488B4528                	mov rax, PARAM(1)	; param chs
 22465 00010B05 50                      	push rax
 22466 00010B06 6A01                    	push 1	; arg count
 22467 00010B08 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
 22468 00010B10 803805                  	cmp byte [rax], T_undefined
 22469 00010B13 0F84EA680000            	je L_error_fvar_undefined
 22470 00010B19 803804                  	cmp byte [rax], T_closure
 22471 00010B1C 0F8565690000            	jne L_error_non_closure
 22472 00010B22 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22473 00010B25 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22474 00010B28 483D[02000000]          	cmp rax, sob_boolean_false
 22475 00010B2E 744C                    	je .L_if_else_0533
 22476                                  	; preparing a non-tail-call
 22477                                  	; preparing a non-tail-call
 22478 00010B30 488B4528                	mov rax, PARAM(1)	; param chs
 22479 00010B34 50                      	push rax
 22480 00010B35 6A01                    	push 1	; arg count
 22481 00010B37 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 22482 00010B3F 803805                  	cmp byte [rax], T_undefined
 22483 00010B42 0F84BB680000            	je L_error_fvar_undefined
 22484 00010B48 803804                  	cmp byte [rax], T_closure
 22485 00010B4B 0F8536690000            	jne L_error_non_closure
 22486 00010B51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22487 00010B54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22488 00010B57 50                      	push rax
 22489 00010B58 6A01                    	push 1	; arg count
 22490 00010B5A 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 22491 00010B62 803805                  	cmp byte [rax], T_undefined
 22492 00010B65 0F8498680000            	je L_error_fvar_undefined
 22493 00010B6B 803804                  	cmp byte [rax], T_closure
 22494 00010B6E 0F8513690000            	jne L_error_non_closure
 22495 00010B74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22496 00010B77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22497 00010B7A EB0A                    	jmp .L_if_end_05c1
 22498                                  .L_if_else_0533:
 22499 00010B7C 48B8-                   	mov rax, L_constants + 2
 22499 00010B7E [0200000000000000] 
 22500                                  .L_if_end_05c1:
 22501 00010B86 483D[02000000]          	cmp rax, sob_boolean_false
 22502 00010B8C 7429                    	je .L_if_else_0534
 22503                                  	; preparing a non-tail-call
 22504 00010B8E 488B4528                	mov rax, PARAM(1)	; param chs
 22505 00010B92 50                      	push rax
 22506 00010B93 6A01                    	push 1	; arg count
 22507 00010B95 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 22508 00010B9D 803805                  	cmp byte [rax], T_undefined
 22509 00010BA0 0F845D680000            	je L_error_fvar_undefined
 22510 00010BA6 803804                  	cmp byte [rax], T_closure
 22511 00010BA9 0F85D8680000            	jne L_error_non_closure
 22512 00010BAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22513 00010BB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22514 00010BB5 EB38                    	jmp .L_if_end_05c2
 22515                                  .L_if_else_0534:
 22516                                  	; preparing a non-tail-call
 22517 00010BB7 48B8-                   	mov rax, L_constants + 3016
 22517 00010BB9 [C80B000000000000] 
 22518 00010BC1 50                      	push rax
 22519 00010BC2 48B8-                   	mov rax, L_constants + 3007
 22519 00010BC4 [BF0B000000000000] 
 22520 00010BCC 50                      	push rax
 22521 00010BCD 6A02                    	push 2	; arg count
 22522 00010BCF 488B0425[CC130000]      	mov rax, qword [free_var_82]	; free var error
 22523 00010BD7 803805                  	cmp byte [rax], T_undefined
 22524 00010BDA 0F8423680000            	je L_error_fvar_undefined
 22525 00010BE0 803804                  	cmp byte [rax], T_closure
 22526 00010BE3 0F859E680000            	jne L_error_non_closure
 22527 00010BE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22528 00010BEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22529                                  .L_if_end_05c2:
 22530                                  .L_if_end_05c3:
 22531 00010BEF 50                      	push rax
 22532 00010BF0 6A01                    	push 1	; arg count
 22533 00010BF2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22534 00010BF7 E834690000              	call malloc
 22535 00010BFC 50                      	push rax
 22536 00010BFD BF10000000              	mov rdi, 8 * 2	; new rib
 22537 00010C02 E829690000              	call malloc
 22538 00010C07 50                      	push rax
 22539 00010C08 BF18000000              	mov rdi, 8 * 3	; extended env
 22540 00010C0D E81E690000              	call malloc
 22541 00010C12 488B7D10                	mov rdi, ENV
 22542 00010C16 BE00000000              	mov rsi, 0
 22543 00010C1B BA01000000              	mov rdx, 1
 22544                                  .L_lambda_simple_env_loop_0775:	; ext_env[i + 1] <-- env[i]
 22545 00010C20 4883FE02                	cmp rsi, 2
 22546 00010C24 7410                    	je .L_lambda_simple_env_end_0775
 22547 00010C26 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22548 00010C2A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22549 00010C2E 48FFC6                  	inc rsi
 22550 00010C31 48FFC2                  	inc rdx
 22551 00010C34 EBEA                    	jmp .L_lambda_simple_env_loop_0775
 22552                                  .L_lambda_simple_env_end_0775:
 22553 00010C36 5B                      	pop rbx
 22554 00010C37 BE00000000              	mov rsi, 0
 22555                                  .L_lambda_simple_params_loop_0775:	; copy params
 22556 00010C3C 4883FE02                	cmp rsi, 2
 22557 00010C40 740E                    	je .L_lambda_simple_params_end_0775
 22558 00010C42 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22559 00010C47 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22560 00010C4B 48FFC6                  	inc rsi
 22561 00010C4E EBEC                    	jmp .L_lambda_simple_params_loop_0775
 22562                                  .L_lambda_simple_params_end_0775:
 22563 00010C50 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22564 00010C53 4889C3                  	mov rbx, rax
 22565 00010C56 58                      	pop rax
 22566 00010C57 C60004                  	mov byte [rax], T_closure
 22567 00010C5A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22568 00010C5E 48C74009[6B0C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0775
 22569 00010C66 E998000000              	jmp .L_lambda_simple_end_0775
 22570                                  .L_lambda_simple_code_0775:	; lambda-simple body
 22571 00010C6B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22572 00010C71 740B                    	je .L_lambda_simple_arity_check_ok_0865
 22573 00010C73 FF742410                	push qword [rsp + 8 * 2]
 22574 00010C77 6A01                    	push 1
 22575 00010C79 E96B680000              	jmp L_error_incorrect_arity_simple
 22576                                  .L_lambda_simple_arity_check_ok_0865:
 22577 00010C7E C8000000                	enter 0, 0
 22578                                  	; preparing a tail-call
 22579 00010C82 488B4520                	mov rax, PARAM(0)	; param ch
 22580 00010C86 50                      	push rax
 22581 00010C87 488B4510                	mov rax, ENV
 22582 00010C8B 488B00                  	mov rax, qword [rax + 8 * 0]
 22583 00010C8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22584 00010C91 50                      	push rax
 22585 00010C92 6A02                    	push 2	; arg count
 22586 00010C94 488B4510                	mov rax, ENV
 22587 00010C98 488B4008                	mov rax, qword [rax + 8 * 1]
 22588 00010C9C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 22589 00010C9F 803804                  	cmp byte [rax], T_closure
 22590 00010CA2 0F85DF670000            	jne L_error_non_closure
 22591 00010CA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22592 00010CAB FF7508                  	push qword [rbp + 8 *1]
 22593 00010CAE 4989C0                  	mov r8, rax
 22594 00010CB1 488B5D18                	mov rbx, COUNT
 22595 00010CB5 4883C303                	add rbx,3
 22596 00010CB9 48C1E303                	shl rbx,3
 22597 00010CBD 4801EB                  	add rbx, rbp
 22598 00010CC0 488B6D00                	mov rbp, [rbp]
 22599 00010CC4 B900000000              	mov rcx,0
 22600 00010CC9 BA05000000              	mov rdx, 5
 22601 00010CCE 4889D0                  	mov rax, rdx
 22602 00010CD1 48FFC8                  	dec rax
 22603 00010CD4 48C1E003                	shl rax,3
 22604 00010CD8 4801E0                  	add rax, rsp
 22605                                  	.L_tc_recycle_frame_loop_097f:
 22606 00010CDB 4839D1                  	cmp rcx, rdx
 22607 00010CDE 7414                    	je .L_tc_recycle_frame_done_097f
 22608 00010CE0 4C8B08                  	mov r9, qword [rax]
 22609 00010CE3 4C890B                  	mov qword [rbx],r9
 22610 00010CE6 4883E808                	sub rax,8
 22611 00010CEA 4883EB08                	sub rbx,8
 22612 00010CEE 4883C101                	add rcx,1
 22613 00010CF2 EBE7                    	jmp .L_tc_recycle_frame_loop_097f
 22614                                  	.L_tc_recycle_frame_done_097f:
 22615 00010CF4 4883C308                	add rbx,8
 22616 00010CF8 4889DC                  	mov rsp,rbx
 22617 00010CFB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22618 00010CFF C9                      	leave
 22619 00010D00 C21800                  	ret AND_KILL_FRAME(1)
 22620                                  .L_lambda_simple_end_0775:	; new closure is in rax
 22621 00010D03 803804                  	cmp byte [rax], T_closure
 22622 00010D06 0F857B670000            	jne L_error_non_closure
 22623 00010D0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22624 00010D0F FF7508                  	push qword [rbp + 8 *1]
 22625 00010D12 4989C0                  	mov r8, rax
 22626 00010D15 488B5D18                	mov rbx, COUNT
 22627 00010D19 4883C303                	add rbx,3
 22628 00010D1D 48C1E303                	shl rbx,3
 22629 00010D21 4801EB                  	add rbx, rbp
 22630 00010D24 488B6D00                	mov rbp, [rbp]
 22631 00010D28 B900000000              	mov rcx,0
 22632 00010D2D BA04000000              	mov rdx, 4
 22633 00010D32 4889D0                  	mov rax, rdx
 22634 00010D35 48FFC8                  	dec rax
 22635 00010D38 48C1E003                	shl rax,3
 22636 00010D3C 4801E0                  	add rax, rsp
 22637                                  	.L_tc_recycle_frame_loop_097e:
 22638 00010D3F 4839D1                  	cmp rcx, rdx
 22639 00010D42 7414                    	je .L_tc_recycle_frame_done_097e
 22640 00010D44 4C8B08                  	mov r9, qword [rax]
 22641 00010D47 4C890B                  	mov qword [rbx],r9
 22642 00010D4A 4883E808                	sub rax,8
 22643 00010D4E 4883EB08                	sub rbx,8
 22644 00010D52 4883C101                	add rcx,1
 22645 00010D56 EBE7                    	jmp .L_tc_recycle_frame_loop_097e
 22646                                  	.L_tc_recycle_frame_done_097e:
 22647 00010D58 4883C308                	add rbx,8
 22648 00010D5C 4889DC                  	mov rsp,rbx
 22649 00010D5F 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22650                                  	LEAVE
    49 00010D63 C9                  <1>  leave
 22651 00010D64 C22000                  	ret AND_KILL_FRAME(2)
 22652                                  .L_lambda_opt_end_01df:
 22653 00010D67 C9                      	leave
 22654 00010D68 C21800                  	ret AND_KILL_FRAME(1)
 22655                                  .L_lambda_simple_end_0774:	; new closure is in rax
 22656 00010D6B 803804                  	cmp byte [rax], T_closure
 22657 00010D6E 0F8513670000            	jne L_error_non_closure
 22658 00010D74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22659 00010D77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22660 00010D7A 48890425[ED140000]      	mov qword [free_var_99], rax
 22661 00010D82 48B8-                   	mov rax, sob_void
 22661 00010D84 [0000000000000000] 
 22662                                  
 22663 00010D8C 4889C7                  	mov rdi, rax
 22664 00010D8F E8F1690000              	call print_sexpr_if_not_void
 22665                                  	; preparing a non-tail-call
 22666 00010D94 48B8-                   	mov rax, L_constants + 1993
 22666 00010D96 [C907000000000000] 
 22667 00010D9E 50                      	push rax
 22668 00010D9F 6A01                    	push 1	; arg count
 22669 00010DA1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22670 00010DA6 E885670000              	call malloc
 22671 00010DAB 50                      	push rax
 22672 00010DAC BF00000000              	mov rdi, 8 * 0	; new rib
 22673 00010DB1 E87A670000              	call malloc
 22674 00010DB6 50                      	push rax
 22675 00010DB7 BF08000000              	mov rdi, 8 * 1	; extended env
 22676 00010DBC E86F670000              	call malloc
 22677 00010DC1 488B7D10                	mov rdi, ENV
 22678 00010DC5 BE00000000              	mov rsi, 0
 22679 00010DCA BA01000000              	mov rdx, 1
 22680                                  .L_lambda_simple_env_loop_0776:	; ext_env[i + 1] <-- env[i]
 22681 00010DCF 4883FE00                	cmp rsi, 0
 22682 00010DD3 7410                    	je .L_lambda_simple_env_end_0776
 22683 00010DD5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22684 00010DD9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22685 00010DDD 48FFC6                  	inc rsi
 22686 00010DE0 48FFC2                  	inc rdx
 22687 00010DE3 EBEA                    	jmp .L_lambda_simple_env_loop_0776
 22688                                  .L_lambda_simple_env_end_0776:
 22689 00010DE5 5B                      	pop rbx
 22690 00010DE6 BE00000000              	mov rsi, 0
 22691                                  .L_lambda_simple_params_loop_0776:	; copy params
 22692 00010DEB 4883FE00                	cmp rsi, 0
 22693 00010DEF 740E                    	je .L_lambda_simple_params_end_0776
 22694 00010DF1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22695 00010DF6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22696 00010DFA 48FFC6                  	inc rsi
 22697 00010DFD EBEC                    	jmp .L_lambda_simple_params_loop_0776
 22698                                  .L_lambda_simple_params_end_0776:
 22699 00010DFF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22700 00010E02 4889C3                  	mov rbx, rax
 22701 00010E05 58                      	pop rax
 22702 00010E06 C60004                  	mov byte [rax], T_closure
 22703 00010E09 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22704 00010E0D 48C74009[1A0E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0776
 22705 00010E15 E982040000              	jmp .L_lambda_simple_end_0776
 22706                                  .L_lambda_simple_code_0776:	; lambda-simple body
 22707 00010E1A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22708 00010E20 740B                    	je .L_lambda_simple_arity_check_ok_0866
 22709 00010E22 FF742410                	push qword [rsp + 8 * 2]
 22710 00010E26 6A01                    	push 1
 22711 00010E28 E9BC660000              	jmp L_error_incorrect_arity_simple
 22712                                  .L_lambda_simple_arity_check_ok_0866:
 22713 00010E2D C8000000                	enter 0, 0
 22714 00010E31 BF08000000              	mov rdi, 8
 22715 00010E36 E8F5660000              	call malloc
 22716 00010E3B 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 22717 00010E3F 488918                  	mov qword [rax], rbx
 22718 00010E42 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 22719 00010E46 48B8-                   	mov rax, sob_void
 22719 00010E48 [0000000000000000] 
 22720                                  
 22721 00010E50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22722 00010E55 E8D6660000              	call malloc
 22723 00010E5A 50                      	push rax
 22724 00010E5B BF08000000              	mov rdi, 8 * 1	; new rib
 22725 00010E60 E8CB660000              	call malloc
 22726 00010E65 50                      	push rax
 22727 00010E66 BF10000000              	mov rdi, 8 * 2	; extended env
 22728 00010E6B E8C0660000              	call malloc
 22729 00010E70 488B7D10                	mov rdi, ENV
 22730 00010E74 BE00000000              	mov rsi, 0
 22731 00010E79 BA01000000              	mov rdx, 1
 22732                                  .L_lambda_simple_env_loop_0777:	; ext_env[i + 1] <-- env[i]
 22733 00010E7E 4883FE01                	cmp rsi, 1
 22734 00010E82 7410                    	je .L_lambda_simple_env_end_0777
 22735 00010E84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22736 00010E88 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22737 00010E8C 48FFC6                  	inc rsi
 22738 00010E8F 48FFC2                  	inc rdx
 22739 00010E92 EBEA                    	jmp .L_lambda_simple_env_loop_0777
 22740                                  .L_lambda_simple_env_end_0777:
 22741 00010E94 5B                      	pop rbx
 22742 00010E95 BE00000000              	mov rsi, 0
 22743                                  .L_lambda_simple_params_loop_0777:	; copy params
 22744 00010E9A 4883FE01                	cmp rsi, 1
 22745 00010E9E 740E                    	je .L_lambda_simple_params_end_0777
 22746 00010EA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22747 00010EA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22748 00010EA9 48FFC6                  	inc rsi
 22749 00010EAC EBEC                    	jmp .L_lambda_simple_params_loop_0777
 22750                                  .L_lambda_simple_params_end_0777:
 22751 00010EAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22752 00010EB1 4889C3                  	mov rbx, rax
 22753 00010EB4 58                      	pop rax
 22754 00010EB5 C60004                  	mov byte [rax], T_closure
 22755 00010EB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22756 00010EBC 48C74009[C90E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0777
 22757 00010EC4 E9AB020000              	jmp .L_lambda_simple_end_0777
 22758                                  .L_lambda_simple_code_0777:	; lambda-simple body
 22759 00010EC9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22760 00010ECF 740B                    	je .L_lambda_simple_arity_check_ok_0867
 22761 00010ED1 FF742410                	push qword [rsp + 8 * 2]
 22762 00010ED5 6A02                    	push 2
 22763 00010ED7 E90D660000              	jmp L_error_incorrect_arity_simple
 22764                                  .L_lambda_simple_arity_check_ok_0867:
 22765 00010EDC C8000000                	enter 0, 0
 22766                                  	; preparing a non-tail-call
 22767 00010EE0 488B4520                	mov rax, PARAM(0)	; param s
 22768 00010EE4 50                      	push rax
 22769 00010EE5 6A01                    	push 1	; arg count
 22770 00010EE7 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 22771 00010EEF 803805                  	cmp byte [rax], T_undefined
 22772 00010EF2 0F840B650000            	je L_error_fvar_undefined
 22773 00010EF8 803804                  	cmp byte [rax], T_closure
 22774 00010EFB 0F8586650000            	jne L_error_non_closure
 22775 00010F01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22776 00010F04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22777 00010F07 483D[02000000]          	cmp rax, sob_boolean_false
 22778 00010F0D 0F8488000000            	je .L_if_else_0536
 22779                                  	; preparing a tail-call
 22780 00010F13 48B8-                   	mov rax, L_constants + 0
 22780 00010F15 [0000000000000000] 
 22781 00010F1D 50                      	push rax
 22782 00010F1E 488B4528                	mov rax, PARAM(1)	; param i
 22783 00010F22 50                      	push rax
 22784 00010F23 6A02                    	push 2	; arg count
 22785 00010F25 488B0425[0F150000]      	mov rax, qword [free_var_101]	; free var make-vector
 22786 00010F2D 803805                  	cmp byte [rax], T_undefined
 22787 00010F30 0F84CD640000            	je L_error_fvar_undefined
 22788 00010F36 803804                  	cmp byte [rax], T_closure
 22789 00010F39 0F8548650000            	jne L_error_non_closure
 22790 00010F3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22791 00010F42 FF7508                  	push qword [rbp + 8 *1]
 22792 00010F45 4989C0                  	mov r8, rax
 22793 00010F48 488B5D18                	mov rbx, COUNT
 22794 00010F4C 4883C303                	add rbx,3
 22795 00010F50 48C1E303                	shl rbx,3
 22796 00010F54 4801EB                  	add rbx, rbp
 22797 00010F57 488B6D00                	mov rbp, [rbp]
 22798 00010F5B B900000000              	mov rcx,0
 22799 00010F60 BA05000000              	mov rdx, 5
 22800 00010F65 4889D0                  	mov rax, rdx
 22801 00010F68 48FFC8                  	dec rax
 22802 00010F6B 48C1E003                	shl rax,3
 22803 00010F6F 4801E0                  	add rax, rsp
 22804                                  	.L_tc_recycle_frame_loop_0980:
 22805 00010F72 4839D1                  	cmp rcx, rdx
 22806 00010F75 7414                    	je .L_tc_recycle_frame_done_0980
 22807 00010F77 4C8B08                  	mov r9, qword [rax]
 22808 00010F7A 4C890B                  	mov qword [rbx],r9
 22809 00010F7D 4883E808                	sub rax,8
 22810 00010F81 4883EB08                	sub rbx,8
 22811 00010F85 4883C101                	add rcx,1
 22812 00010F89 EBE7                    	jmp .L_tc_recycle_frame_loop_0980
 22813                                  	.L_tc_recycle_frame_done_0980:
 22814 00010F8B 4883C308                	add rbx,8
 22815 00010F8F 4889DC                  	mov rsp,rbx
 22816 00010F92 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22817 00010F96 E9D5010000              	jmp .L_if_end_05c4
 22818                                  .L_if_else_0536:
 22819                                  	; preparing a tail-call
 22820                                  	; preparing a non-tail-call
 22821                                  	; preparing a non-tail-call
 22822 00010F9B 48B8-                   	mov rax, L_constants + 2270
 22822 00010F9D [DE08000000000000] 
 22823 00010FA5 50                      	push rax
 22824 00010FA6 488B4528                	mov rax, PARAM(1)	; param i
 22825 00010FAA 50                      	push rax
 22826 00010FAB 6A02                    	push 2	; arg count
 22827 00010FAD 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 22828 00010FB5 803805                  	cmp byte [rax], T_undefined
 22829 00010FB8 0F8445640000            	je L_error_fvar_undefined
 22830 00010FBE 803804                  	cmp byte [rax], T_closure
 22831 00010FC1 0F85C0640000            	jne L_error_non_closure
 22832 00010FC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22833 00010FCA FF5009                  	call SOB_CLOSURE_CODE(rax)
 22834 00010FCD 50                      	push rax
 22835                                  	; preparing a non-tail-call
 22836 00010FCE 488B4520                	mov rax, PARAM(0)	; param s
 22837 00010FD2 50                      	push rax
 22838 00010FD3 6A01                    	push 1	; arg count
 22839 00010FD5 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 22840 00010FDD 803805                  	cmp byte [rax], T_undefined
 22841 00010FE0 0F841D640000            	je L_error_fvar_undefined
 22842 00010FE6 803804                  	cmp byte [rax], T_closure
 22843 00010FE9 0F8598640000            	jne L_error_non_closure
 22844 00010FEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22845 00010FF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22846 00010FF5 50                      	push rax
 22847 00010FF6 6A02                    	push 2	; arg count
 22848 00010FF8 488B4510                	mov rax, ENV
 22849 00010FFC 488B00                  	mov rax, qword [rax + 8 * 0]
 22850 00010FFF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22851 00011002 488B00                  	mov rax, qword [rax]
 22852 00011005 803804                  	cmp byte [rax], T_closure
 22853 00011008 0F8579640000            	jne L_error_non_closure
 22854 0001100E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22855 00011011 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22856 00011014 50                      	push rax
 22857 00011015 6A01                    	push 1	; arg count
 22858 00011017 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22859 0001101C E80F650000              	call malloc
 22860 00011021 50                      	push rax
 22861 00011022 BF10000000              	mov rdi, 8 * 2	; new rib
 22862 00011027 E804650000              	call malloc
 22863 0001102C 50                      	push rax
 22864 0001102D BF18000000              	mov rdi, 8 * 3	; extended env
 22865 00011032 E8F9640000              	call malloc
 22866 00011037 488B7D10                	mov rdi, ENV
 22867 0001103B BE00000000              	mov rsi, 0
 22868 00011040 BA01000000              	mov rdx, 1
 22869                                  .L_lambda_simple_env_loop_0778:	; ext_env[i + 1] <-- env[i]
 22870 00011045 4883FE02                	cmp rsi, 2
 22871 00011049 7410                    	je .L_lambda_simple_env_end_0778
 22872 0001104B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22873 0001104F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22874 00011053 48FFC6                  	inc rsi
 22875 00011056 48FFC2                  	inc rdx
 22876 00011059 EBEA                    	jmp .L_lambda_simple_env_loop_0778
 22877                                  .L_lambda_simple_env_end_0778:
 22878 0001105B 5B                      	pop rbx
 22879 0001105C BE00000000              	mov rsi, 0
 22880                                  .L_lambda_simple_params_loop_0778:	; copy params
 22881 00011061 4883FE02                	cmp rsi, 2
 22882 00011065 740E                    	je .L_lambda_simple_params_end_0778
 22883 00011067 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22884 0001106C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22885 00011070 48FFC6                  	inc rsi
 22886 00011073 EBEC                    	jmp .L_lambda_simple_params_loop_0778
 22887                                  .L_lambda_simple_params_end_0778:
 22888 00011075 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22889 00011078 4889C3                  	mov rbx, rax
 22890 0001107B 58                      	pop rax
 22891 0001107C C60004                  	mov byte [rax], T_closure
 22892 0001107F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22893 00011083 48C74009[90100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0778
 22894 0001108B E980000000              	jmp .L_lambda_simple_end_0778
 22895                                  .L_lambda_simple_code_0778:	; lambda-simple body
 22896 00011090 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22897 00011096 740B                    	je .L_lambda_simple_arity_check_ok_0868
 22898 00011098 FF742410                	push qword [rsp + 8 * 2]
 22899 0001109C 6A01                    	push 1
 22900 0001109E E946640000              	jmp L_error_incorrect_arity_simple
 22901                                  .L_lambda_simple_arity_check_ok_0868:
 22902 000110A3 C8000000                	enter 0, 0
 22903                                  	; preparing a non-tail-call
 22904                                  	; preparing a non-tail-call
 22905 000110A7 488B4510                	mov rax, ENV
 22906 000110AB 488B00                  	mov rax, qword [rax + 8 * 0]
 22907 000110AE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22908 000110B1 50                      	push rax
 22909 000110B2 6A01                    	push 1	; arg count
 22910 000110B4 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 22911 000110BC 803805                  	cmp byte [rax], T_undefined
 22912 000110BF 0F843E630000            	je L_error_fvar_undefined
 22913 000110C5 803804                  	cmp byte [rax], T_closure
 22914 000110C8 0F85B9630000            	jne L_error_non_closure
 22915 000110CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22916 000110D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22917 000110D4 50                      	push rax
 22918 000110D5 488B4510                	mov rax, ENV
 22919 000110D9 488B00                  	mov rax, qword [rax + 8 * 0]
 22920 000110DC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22921 000110E0 50                      	push rax
 22922 000110E1 488B4520                	mov rax, PARAM(0)	; param v
 22923 000110E5 50                      	push rax
 22924 000110E6 6A03                    	push 3	; arg count
 22925 000110E8 488B0425[1D180000]      	mov rax, qword [free_var_147]	; free var vector-set!
 22926 000110F0 803805                  	cmp byte [rax], T_undefined
 22927 000110F3 0F840A630000            	je L_error_fvar_undefined
 22928 000110F9 803804                  	cmp byte [rax], T_closure
 22929 000110FC 0F8585630000            	jne L_error_non_closure
 22930 00011102 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22931 00011105 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22932                                  
 22933 00011108 488B4520                	mov rax, PARAM(0)	; param v
 22934 0001110C C9                      	leave
 22935 0001110D C21800                  	ret AND_KILL_FRAME(1)
 22936                                  .L_lambda_simple_end_0778:	; new closure is in rax
 22937 00011110 803804                  	cmp byte [rax], T_closure
 22938 00011113 0F856E630000            	jne L_error_non_closure
 22939 00011119 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22940 0001111C FF7508                  	push qword [rbp + 8 *1]
 22941 0001111F 4989C0                  	mov r8, rax
 22942 00011122 488B5D18                	mov rbx, COUNT
 22943 00011126 4883C303                	add rbx,3
 22944 0001112A 48C1E303                	shl rbx,3
 22945 0001112E 4801EB                  	add rbx, rbp
 22946 00011131 488B6D00                	mov rbp, [rbp]
 22947 00011135 B900000000              	mov rcx,0
 22948 0001113A BA04000000              	mov rdx, 4
 22949 0001113F 4889D0                  	mov rax, rdx
 22950 00011142 48FFC8                  	dec rax
 22951 00011145 48C1E003                	shl rax,3
 22952 00011149 4801E0                  	add rax, rsp
 22953                                  	.L_tc_recycle_frame_loop_0981:
 22954 0001114C 4839D1                  	cmp rcx, rdx
 22955 0001114F 7414                    	je .L_tc_recycle_frame_done_0981
 22956 00011151 4C8B08                  	mov r9, qword [rax]
 22957 00011154 4C890B                  	mov qword [rbx],r9
 22958 00011157 4883E808                	sub rax,8
 22959 0001115B 4883EB08                	sub rbx,8
 22960 0001115F 4883C101                	add rcx,1
 22961 00011163 EBE7                    	jmp .L_tc_recycle_frame_loop_0981
 22962                                  	.L_tc_recycle_frame_done_0981:
 22963 00011165 4883C308                	add rbx,8
 22964 00011169 4889DC                  	mov rsp,rbx
 22965 0001116C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 22966                                  .L_if_end_05c4:
 22967 00011170 C9                      	leave
 22968 00011171 C22000                  	ret AND_KILL_FRAME(2)
 22969                                  .L_lambda_simple_end_0777:	; new closure is in rax
 22970 00011174 50                      	push rax
 22971 00011175 488B4520                	mov rax, PARAM(0)	; param run
 22972 00011179 8F00                    	pop qword [rax]
 22973 0001117B 48B8-                   	mov rax, sob_void
 22973 0001117D [0000000000000000] 
 22974                                  
 22975 00011185 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22976 0001118A E8A1630000              	call malloc
 22977 0001118F 50                      	push rax
 22978 00011190 BF08000000              	mov rdi, 8 * 1	; new rib
 22979 00011195 E896630000              	call malloc
 22980 0001119A 50                      	push rax
 22981 0001119B BF10000000              	mov rdi, 8 * 2	; extended env
 22982 000111A0 E88B630000              	call malloc
 22983 000111A5 488B7D10                	mov rdi, ENV
 22984 000111A9 BE00000000              	mov rsi, 0
 22985 000111AE BA01000000              	mov rdx, 1
 22986                                  .L_lambda_simple_env_loop_0779:	; ext_env[i + 1] <-- env[i]
 22987 000111B3 4883FE01                	cmp rsi, 1
 22988 000111B7 7410                    	je .L_lambda_simple_env_end_0779
 22989 000111B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22990 000111BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22991 000111C1 48FFC6                  	inc rsi
 22992 000111C4 48FFC2                  	inc rdx
 22993 000111C7 EBEA                    	jmp .L_lambda_simple_env_loop_0779
 22994                                  .L_lambda_simple_env_end_0779:
 22995 000111C9 5B                      	pop rbx
 22996 000111CA BE00000000              	mov rsi, 0
 22997                                  .L_lambda_simple_params_loop_0779:	; copy params
 22998 000111CF 4883FE01                	cmp rsi, 1
 22999 000111D3 740E                    	je .L_lambda_simple_params_end_0779
 23000 000111D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23001 000111DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23002 000111DE 48FFC6                  	inc rsi
 23003 000111E1 EBEC                    	jmp .L_lambda_simple_params_loop_0779
 23004                                  .L_lambda_simple_params_end_0779:
 23005 000111E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23006 000111E6 4889C3                  	mov rbx, rax
 23007 000111E9 58                      	pop rax
 23008 000111EA C60004                  	mov byte [rax], T_closure
 23009 000111ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23010 000111F1 48C74009[FE110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0779
 23011 000111F9 E99A000000              	jmp .L_lambda_simple_end_0779
 23012                                  .L_lambda_simple_code_0779:	; lambda-simple body
 23013 000111FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23014 00011204 740B                    	je .L_lambda_simple_arity_check_ok_0869
 23015 00011206 FF742410                	push qword [rsp + 8 * 2]
 23016 0001120A 6A01                    	push 1
 23017 0001120C E9D8620000              	jmp L_error_incorrect_arity_simple
 23018                                  .L_lambda_simple_arity_check_ok_0869:
 23019 00011211 C8000000                	enter 0, 0
 23020                                  	; preparing a tail-call
 23021 00011215 48B8-                   	mov rax, L_constants + 2135
 23021 00011217 [5708000000000000] 
 23022 0001121F 50                      	push rax
 23023 00011220 488B4520                	mov rax, PARAM(0)	; param s
 23024 00011224 50                      	push rax
 23025 00011225 6A02                    	push 2	; arg count
 23026 00011227 488B4510                	mov rax, ENV
 23027 0001122B 488B00                  	mov rax, qword [rax + 8 * 0]
 23028 0001122E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23029 00011231 488B00                  	mov rax, qword [rax]
 23030 00011234 803804                  	cmp byte [rax], T_closure
 23031 00011237 0F854A620000            	jne L_error_non_closure
 23032 0001123D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23033 00011240 FF7508                  	push qword [rbp + 8 *1]
 23034 00011243 4989C0                  	mov r8, rax
 23035 00011246 488B5D18                	mov rbx, COUNT
 23036 0001124A 4883C303                	add rbx,3
 23037 0001124E 48C1E303                	shl rbx,3
 23038 00011252 4801EB                  	add rbx, rbp
 23039 00011255 488B6D00                	mov rbp, [rbp]
 23040 00011259 B900000000              	mov rcx,0
 23041 0001125E BA05000000              	mov rdx, 5
 23042 00011263 4889D0                  	mov rax, rdx
 23043 00011266 48FFC8                  	dec rax
 23044 00011269 48C1E003                	shl rax,3
 23045 0001126D 4801E0                  	add rax, rsp
 23046                                  	.L_tc_recycle_frame_loop_0982:
 23047 00011270 4839D1                  	cmp rcx, rdx
 23048 00011273 7414                    	je .L_tc_recycle_frame_done_0982
 23049 00011275 4C8B08                  	mov r9, qword [rax]
 23050 00011278 4C890B                  	mov qword [rbx],r9
 23051 0001127B 4883E808                	sub rax,8
 23052 0001127F 4883EB08                	sub rbx,8
 23053 00011283 4883C101                	add rcx,1
 23054 00011287 EBE7                    	jmp .L_tc_recycle_frame_loop_0982
 23055                                  	.L_tc_recycle_frame_done_0982:
 23056 00011289 4883C308                	add rbx,8
 23057 0001128D 4889DC                  	mov rsp,rbx
 23058 00011290 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23059 00011294 C9                      	leave
 23060 00011295 C21800                  	ret AND_KILL_FRAME(1)
 23061                                  .L_lambda_simple_end_0779:	; new closure is in rax
 23062 00011298 C9                      	leave
 23063 00011299 C21800                  	ret AND_KILL_FRAME(1)
 23064                                  .L_lambda_simple_end_0776:	; new closure is in rax
 23065 0001129C 803804                  	cmp byte [rax], T_closure
 23066 0001129F 0F85E2610000            	jne L_error_non_closure
 23067 000112A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23068 000112A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23069 000112AB 48890425[A9140000]      	mov qword [free_var_95], rax
 23070 000112B3 48B8-                   	mov rax, sob_void
 23070 000112B5 [0000000000000000] 
 23071                                  
 23072 000112BD 4889C7                  	mov rdi, rax
 23073 000112C0 E8C0640000              	call print_sexpr_if_not_void
 23074                                  	; preparing a non-tail-call
 23075 000112C5 48B8-                   	mov rax, L_constants + 1993
 23075 000112C7 [C907000000000000] 
 23076 000112CF 50                      	push rax
 23077 000112D0 6A01                    	push 1	; arg count
 23078 000112D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23079 000112D7 E854620000              	call malloc
 23080 000112DC 50                      	push rax
 23081 000112DD BF00000000              	mov rdi, 8 * 0	; new rib
 23082 000112E2 E849620000              	call malloc
 23083 000112E7 50                      	push rax
 23084 000112E8 BF08000000              	mov rdi, 8 * 1	; extended env
 23085 000112ED E83E620000              	call malloc
 23086 000112F2 488B7D10                	mov rdi, ENV
 23087 000112F6 BE00000000              	mov rsi, 0
 23088 000112FB BA01000000              	mov rdx, 1
 23089                                  .L_lambda_simple_env_loop_077a:	; ext_env[i + 1] <-- env[i]
 23090 00011300 4883FE00                	cmp rsi, 0
 23091 00011304 7410                    	je .L_lambda_simple_env_end_077a
 23092 00011306 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23093 0001130A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23094 0001130E 48FFC6                  	inc rsi
 23095 00011311 48FFC2                  	inc rdx
 23096 00011314 EBEA                    	jmp .L_lambda_simple_env_loop_077a
 23097                                  .L_lambda_simple_env_end_077a:
 23098 00011316 5B                      	pop rbx
 23099 00011317 BE00000000              	mov rsi, 0
 23100                                  .L_lambda_simple_params_loop_077a:	; copy params
 23101 0001131C 4883FE00                	cmp rsi, 0
 23102 00011320 740E                    	je .L_lambda_simple_params_end_077a
 23103 00011322 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23104 00011327 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23105 0001132B 48FFC6                  	inc rsi
 23106 0001132E EBEC                    	jmp .L_lambda_simple_params_loop_077a
 23107                                  .L_lambda_simple_params_end_077a:
 23108 00011330 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23109 00011333 4889C3                  	mov rbx, rax
 23110 00011336 58                      	pop rax
 23111 00011337 C60004                  	mov byte [rax], T_closure
 23112 0001133A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23113 0001133E 48C74009[4B130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077a
 23114 00011346 E982040000              	jmp .L_lambda_simple_end_077a
 23115                                  .L_lambda_simple_code_077a:	; lambda-simple body
 23116 0001134B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23117 00011351 740B                    	je .L_lambda_simple_arity_check_ok_086a
 23118 00011353 FF742410                	push qword [rsp + 8 * 2]
 23119 00011357 6A01                    	push 1
 23120 00011359 E98B610000              	jmp L_error_incorrect_arity_simple
 23121                                  .L_lambda_simple_arity_check_ok_086a:
 23122 0001135E C8000000                	enter 0, 0
 23123 00011362 BF08000000              	mov rdi, 8
 23124 00011367 E8C4610000              	call malloc
 23125 0001136C 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 23126 00011370 488918                  	mov qword [rax], rbx
 23127 00011373 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 23128 00011377 48B8-                   	mov rax, sob_void
 23128 00011379 [0000000000000000] 
 23129                                  
 23130 00011381 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23131 00011386 E8A5610000              	call malloc
 23132 0001138B 50                      	push rax
 23133 0001138C BF08000000              	mov rdi, 8 * 1	; new rib
 23134 00011391 E89A610000              	call malloc
 23135 00011396 50                      	push rax
 23136 00011397 BF10000000              	mov rdi, 8 * 2	; extended env
 23137 0001139C E88F610000              	call malloc
 23138 000113A1 488B7D10                	mov rdi, ENV
 23139 000113A5 BE00000000              	mov rsi, 0
 23140 000113AA BA01000000              	mov rdx, 1
 23141                                  .L_lambda_simple_env_loop_077b:	; ext_env[i + 1] <-- env[i]
 23142 000113AF 4883FE01                	cmp rsi, 1
 23143 000113B3 7410                    	je .L_lambda_simple_env_end_077b
 23144 000113B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23145 000113B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23146 000113BD 48FFC6                  	inc rsi
 23147 000113C0 48FFC2                  	inc rdx
 23148 000113C3 EBEA                    	jmp .L_lambda_simple_env_loop_077b
 23149                                  .L_lambda_simple_env_end_077b:
 23150 000113C5 5B                      	pop rbx
 23151 000113C6 BE00000000              	mov rsi, 0
 23152                                  .L_lambda_simple_params_loop_077b:	; copy params
 23153 000113CB 4883FE01                	cmp rsi, 1
 23154 000113CF 740E                    	je .L_lambda_simple_params_end_077b
 23155 000113D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23156 000113D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23157 000113DA 48FFC6                  	inc rsi
 23158 000113DD EBEC                    	jmp .L_lambda_simple_params_loop_077b
 23159                                  .L_lambda_simple_params_end_077b:
 23160 000113DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23161 000113E2 4889C3                  	mov rbx, rax
 23162 000113E5 58                      	pop rax
 23163 000113E6 C60004                  	mov byte [rax], T_closure
 23164 000113E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23165 000113ED 48C74009[FA130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077b
 23166 000113F5 E9AB020000              	jmp .L_lambda_simple_end_077b
 23167                                  .L_lambda_simple_code_077b:	; lambda-simple body
 23168 000113FA 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23169 00011400 740B                    	je .L_lambda_simple_arity_check_ok_086b
 23170 00011402 FF742410                	push qword [rsp + 8 * 2]
 23171 00011406 6A02                    	push 2
 23172 00011408 E9DC600000              	jmp L_error_incorrect_arity_simple
 23173                                  .L_lambda_simple_arity_check_ok_086b:
 23174 0001140D C8000000                	enter 0, 0
 23175                                  	; preparing a non-tail-call
 23176 00011411 488B4520                	mov rax, PARAM(0)	; param s
 23177 00011415 50                      	push rax
 23178 00011416 6A01                    	push 1	; arg count
 23179 00011418 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 23180 00011420 803805                  	cmp byte [rax], T_undefined
 23181 00011423 0F84DA5F0000            	je L_error_fvar_undefined
 23182 00011429 803804                  	cmp byte [rax], T_closure
 23183 0001142C 0F8555600000            	jne L_error_non_closure
 23184 00011432 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23185 00011435 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23186 00011438 483D[02000000]          	cmp rax, sob_boolean_false
 23187 0001143E 0F8488000000            	je .L_if_else_0537
 23188                                  	; preparing a tail-call
 23189 00011444 48B8-                   	mov rax, L_constants + 4
 23189 00011446 [0400000000000000] 
 23190 0001144E 50                      	push rax
 23191 0001144F 488B4528                	mov rax, PARAM(1)	; param i
 23192 00011453 50                      	push rax
 23193 00011454 6A02                    	push 2	; arg count
 23194 00011456 488B0425[ED140000]      	mov rax, qword [free_var_99]	; free var make-string
 23195 0001145E 803805                  	cmp byte [rax], T_undefined
 23196 00011461 0F849C5F0000            	je L_error_fvar_undefined
 23197 00011467 803804                  	cmp byte [rax], T_closure
 23198 0001146A 0F8517600000            	jne L_error_non_closure
 23199 00011470 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23200 00011473 FF7508                  	push qword [rbp + 8 *1]
 23201 00011476 4989C0                  	mov r8, rax
 23202 00011479 488B5D18                	mov rbx, COUNT
 23203 0001147D 4883C303                	add rbx,3
 23204 00011481 48C1E303                	shl rbx,3
 23205 00011485 4801EB                  	add rbx, rbp
 23206 00011488 488B6D00                	mov rbp, [rbp]
 23207 0001148C B900000000              	mov rcx,0
 23208 00011491 BA05000000              	mov rdx, 5
 23209 00011496 4889D0                  	mov rax, rdx
 23210 00011499 48FFC8                  	dec rax
 23211 0001149C 48C1E003                	shl rax,3
 23212 000114A0 4801E0                  	add rax, rsp
 23213                                  	.L_tc_recycle_frame_loop_0983:
 23214 000114A3 4839D1                  	cmp rcx, rdx
 23215 000114A6 7414                    	je .L_tc_recycle_frame_done_0983
 23216 000114A8 4C8B08                  	mov r9, qword [rax]
 23217 000114AB 4C890B                  	mov qword [rbx],r9
 23218 000114AE 4883E808                	sub rax,8
 23219 000114B2 4883EB08                	sub rbx,8
 23220 000114B6 4883C101                	add rcx,1
 23221 000114BA EBE7                    	jmp .L_tc_recycle_frame_loop_0983
 23222                                  	.L_tc_recycle_frame_done_0983:
 23223 000114BC 4883C308                	add rbx,8
 23224 000114C0 4889DC                  	mov rsp,rbx
 23225 000114C3 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23226 000114C7 E9D5010000              	jmp .L_if_end_05c5
 23227                                  .L_if_else_0537:
 23228                                  	; preparing a tail-call
 23229                                  	; preparing a non-tail-call
 23230                                  	; preparing a non-tail-call
 23231 000114CC 48B8-                   	mov rax, L_constants + 2270
 23231 000114CE [DE08000000000000] 
 23232 000114D6 50                      	push rax
 23233 000114D7 488B4528                	mov rax, PARAM(1)	; param i
 23234 000114DB 50                      	push rax
 23235 000114DC 6A02                    	push 2	; arg count
 23236 000114DE 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 23237 000114E6 803805                  	cmp byte [rax], T_undefined
 23238 000114E9 0F84145F0000            	je L_error_fvar_undefined
 23239 000114EF 803804                  	cmp byte [rax], T_closure
 23240 000114F2 0F858F5F0000            	jne L_error_non_closure
 23241 000114F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23242 000114FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 23243 000114FE 50                      	push rax
 23244                                  	; preparing a non-tail-call
 23245 000114FF 488B4520                	mov rax, PARAM(0)	; param s
 23246 00011503 50                      	push rax
 23247 00011504 6A01                    	push 1	; arg count
 23248 00011506 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 23249 0001150E 803805                  	cmp byte [rax], T_undefined
 23250 00011511 0F84EC5E0000            	je L_error_fvar_undefined
 23251 00011517 803804                  	cmp byte [rax], T_closure
 23252 0001151A 0F85675F0000            	jne L_error_non_closure
 23253 00011520 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23254 00011523 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23255 00011526 50                      	push rax
 23256 00011527 6A02                    	push 2	; arg count
 23257 00011529 488B4510                	mov rax, ENV
 23258 0001152D 488B00                  	mov rax, qword [rax + 8 * 0]
 23259 00011530 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23260 00011533 488B00                  	mov rax, qword [rax]
 23261 00011536 803804                  	cmp byte [rax], T_closure
 23262 00011539 0F85485F0000            	jne L_error_non_closure
 23263 0001153F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23264 00011542 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23265 00011545 50                      	push rax
 23266 00011546 6A01                    	push 1	; arg count
 23267 00011548 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23268 0001154D E8DE5F0000              	call malloc
 23269 00011552 50                      	push rax
 23270 00011553 BF10000000              	mov rdi, 8 * 2	; new rib
 23271 00011558 E8D35F0000              	call malloc
 23272 0001155D 50                      	push rax
 23273 0001155E BF18000000              	mov rdi, 8 * 3	; extended env
 23274 00011563 E8C85F0000              	call malloc
 23275 00011568 488B7D10                	mov rdi, ENV
 23276 0001156C BE00000000              	mov rsi, 0
 23277 00011571 BA01000000              	mov rdx, 1
 23278                                  .L_lambda_simple_env_loop_077c:	; ext_env[i + 1] <-- env[i]
 23279 00011576 4883FE02                	cmp rsi, 2
 23280 0001157A 7410                    	je .L_lambda_simple_env_end_077c
 23281 0001157C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23282 00011580 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23283 00011584 48FFC6                  	inc rsi
 23284 00011587 48FFC2                  	inc rdx
 23285 0001158A EBEA                    	jmp .L_lambda_simple_env_loop_077c
 23286                                  .L_lambda_simple_env_end_077c:
 23287 0001158C 5B                      	pop rbx
 23288 0001158D BE00000000              	mov rsi, 0
 23289                                  .L_lambda_simple_params_loop_077c:	; copy params
 23290 00011592 4883FE02                	cmp rsi, 2
 23291 00011596 740E                    	je .L_lambda_simple_params_end_077c
 23292 00011598 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23293 0001159D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23294 000115A1 48FFC6                  	inc rsi
 23295 000115A4 EBEC                    	jmp .L_lambda_simple_params_loop_077c
 23296                                  .L_lambda_simple_params_end_077c:
 23297 000115A6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23298 000115A9 4889C3                  	mov rbx, rax
 23299 000115AC 58                      	pop rax
 23300 000115AD C60004                  	mov byte [rax], T_closure
 23301 000115B0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23302 000115B4 48C74009[C1150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077c
 23303 000115BC E980000000              	jmp .L_lambda_simple_end_077c
 23304                                  .L_lambda_simple_code_077c:	; lambda-simple body
 23305 000115C1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23306 000115C7 740B                    	je .L_lambda_simple_arity_check_ok_086c
 23307 000115C9 FF742410                	push qword [rsp + 8 * 2]
 23308 000115CD 6A01                    	push 1
 23309 000115CF E9155F0000              	jmp L_error_incorrect_arity_simple
 23310                                  .L_lambda_simple_arity_check_ok_086c:
 23311 000115D4 C8000000                	enter 0, 0
 23312                                  	; preparing a non-tail-call
 23313                                  	; preparing a non-tail-call
 23314 000115D8 488B4510                	mov rax, ENV
 23315 000115DC 488B00                  	mov rax, qword [rax + 8 * 0]
 23316 000115DF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 23317 000115E2 50                      	push rax
 23318 000115E3 6A01                    	push 1	; arg count
 23319 000115E5 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 23320 000115ED 803805                  	cmp byte [rax], T_undefined
 23321 000115F0 0F840D5E0000            	je L_error_fvar_undefined
 23322 000115F6 803804                  	cmp byte [rax], T_closure
 23323 000115F9 0F85885E0000            	jne L_error_non_closure
 23324 000115FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23325 00011602 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23326 00011605 50                      	push rax
 23327 00011606 488B4510                	mov rax, ENV
 23328 0001160A 488B00                  	mov rax, qword [rax + 8 * 0]
 23329 0001160D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23330 00011611 50                      	push rax
 23331 00011612 488B4520                	mov rax, PARAM(0)	; param str
 23332 00011616 50                      	push rax
 23333 00011617 6A03                    	push 3	; arg count
 23334 00011619 488B0425[0D170000]      	mov rax, qword [free_var_131]	; free var string-set!
 23335 00011621 803805                  	cmp byte [rax], T_undefined
 23336 00011624 0F84D95D0000            	je L_error_fvar_undefined
 23337 0001162A 803804                  	cmp byte [rax], T_closure
 23338 0001162D 0F85545E0000            	jne L_error_non_closure
 23339 00011633 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23340 00011636 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23341                                  
 23342 00011639 488B4520                	mov rax, PARAM(0)	; param str
 23343 0001163D C9                      	leave
 23344 0001163E C21800                  	ret AND_KILL_FRAME(1)
 23345                                  .L_lambda_simple_end_077c:	; new closure is in rax
 23346 00011641 803804                  	cmp byte [rax], T_closure
 23347 00011644 0F853D5E0000            	jne L_error_non_closure
 23348 0001164A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23349 0001164D FF7508                  	push qword [rbp + 8 *1]
 23350 00011650 4989C0                  	mov r8, rax
 23351 00011653 488B5D18                	mov rbx, COUNT
 23352 00011657 4883C303                	add rbx,3
 23353 0001165B 48C1E303                	shl rbx,3
 23354 0001165F 4801EB                  	add rbx, rbp
 23355 00011662 488B6D00                	mov rbp, [rbp]
 23356 00011666 B900000000              	mov rcx,0
 23357 0001166B BA04000000              	mov rdx, 4
 23358 00011670 4889D0                  	mov rax, rdx
 23359 00011673 48FFC8                  	dec rax
 23360 00011676 48C1E003                	shl rax,3
 23361 0001167A 4801E0                  	add rax, rsp
 23362                                  	.L_tc_recycle_frame_loop_0984:
 23363 0001167D 4839D1                  	cmp rcx, rdx
 23364 00011680 7414                    	je .L_tc_recycle_frame_done_0984
 23365 00011682 4C8B08                  	mov r9, qword [rax]
 23366 00011685 4C890B                  	mov qword [rbx],r9
 23367 00011688 4883E808                	sub rax,8
 23368 0001168C 4883EB08                	sub rbx,8
 23369 00011690 4883C101                	add rcx,1
 23370 00011694 EBE7                    	jmp .L_tc_recycle_frame_loop_0984
 23371                                  	.L_tc_recycle_frame_done_0984:
 23372 00011696 4883C308                	add rbx,8
 23373 0001169A 4889DC                  	mov rsp,rbx
 23374 0001169D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23375                                  .L_if_end_05c5:
 23376 000116A1 C9                      	leave
 23377 000116A2 C22000                  	ret AND_KILL_FRAME(2)
 23378                                  .L_lambda_simple_end_077b:	; new closure is in rax
 23379 000116A5 50                      	push rax
 23380 000116A6 488B4520                	mov rax, PARAM(0)	; param run
 23381 000116AA 8F00                    	pop qword [rax]
 23382 000116AC 48B8-                   	mov rax, sob_void
 23382 000116AE [0000000000000000] 
 23383                                  
 23384 000116B6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23385 000116BB E8705E0000              	call malloc
 23386 000116C0 50                      	push rax
 23387 000116C1 BF08000000              	mov rdi, 8 * 1	; new rib
 23388 000116C6 E8655E0000              	call malloc
 23389 000116CB 50                      	push rax
 23390 000116CC BF10000000              	mov rdi, 8 * 2	; extended env
 23391 000116D1 E85A5E0000              	call malloc
 23392 000116D6 488B7D10                	mov rdi, ENV
 23393 000116DA BE00000000              	mov rsi, 0
 23394 000116DF BA01000000              	mov rdx, 1
 23395                                  .L_lambda_simple_env_loop_077d:	; ext_env[i + 1] <-- env[i]
 23396 000116E4 4883FE01                	cmp rsi, 1
 23397 000116E8 7410                    	je .L_lambda_simple_env_end_077d
 23398 000116EA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23399 000116EE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23400 000116F2 48FFC6                  	inc rsi
 23401 000116F5 48FFC2                  	inc rdx
 23402 000116F8 EBEA                    	jmp .L_lambda_simple_env_loop_077d
 23403                                  .L_lambda_simple_env_end_077d:
 23404 000116FA 5B                      	pop rbx
 23405 000116FB BE00000000              	mov rsi, 0
 23406                                  .L_lambda_simple_params_loop_077d:	; copy params
 23407 00011700 4883FE01                	cmp rsi, 1
 23408 00011704 740E                    	je .L_lambda_simple_params_end_077d
 23409 00011706 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23410 0001170B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23411 0001170F 48FFC6                  	inc rsi
 23412 00011712 EBEC                    	jmp .L_lambda_simple_params_loop_077d
 23413                                  .L_lambda_simple_params_end_077d:
 23414 00011714 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23415 00011717 4889C3                  	mov rbx, rax
 23416 0001171A 58                      	pop rax
 23417 0001171B C60004                  	mov byte [rax], T_closure
 23418 0001171E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23419 00011722 48C74009[2F170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077d
 23420 0001172A E99A000000              	jmp .L_lambda_simple_end_077d
 23421                                  .L_lambda_simple_code_077d:	; lambda-simple body
 23422 0001172F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23423 00011735 740B                    	je .L_lambda_simple_arity_check_ok_086d
 23424 00011737 FF742410                	push qword [rsp + 8 * 2]
 23425 0001173B 6A01                    	push 1
 23426 0001173D E9A75D0000              	jmp L_error_incorrect_arity_simple
 23427                                  .L_lambda_simple_arity_check_ok_086d:
 23428 00011742 C8000000                	enter 0, 0
 23429                                  	; preparing a tail-call
 23430 00011746 48B8-                   	mov rax, L_constants + 2135
 23430 00011748 [5708000000000000] 
 23431 00011750 50                      	push rax
 23432 00011751 488B4520                	mov rax, PARAM(0)	; param s
 23433 00011755 50                      	push rax
 23434 00011756 6A02                    	push 2	; arg count
 23435 00011758 488B4510                	mov rax, ENV
 23436 0001175C 488B00                  	mov rax, qword [rax + 8 * 0]
 23437 0001175F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23438 00011762 488B00                  	mov rax, qword [rax]
 23439 00011765 803804                  	cmp byte [rax], T_closure
 23440 00011768 0F85195D0000            	jne L_error_non_closure
 23441 0001176E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23442 00011771 FF7508                  	push qword [rbp + 8 *1]
 23443 00011774 4989C0                  	mov r8, rax
 23444 00011777 488B5D18                	mov rbx, COUNT
 23445 0001177B 4883C303                	add rbx,3
 23446 0001177F 48C1E303                	shl rbx,3
 23447 00011783 4801EB                  	add rbx, rbp
 23448 00011786 488B6D00                	mov rbp, [rbp]
 23449 0001178A B900000000              	mov rcx,0
 23450 0001178F BA05000000              	mov rdx, 5
 23451 00011794 4889D0                  	mov rax, rdx
 23452 00011797 48FFC8                  	dec rax
 23453 0001179A 48C1E003                	shl rax,3
 23454 0001179E 4801E0                  	add rax, rsp
 23455                                  	.L_tc_recycle_frame_loop_0985:
 23456 000117A1 4839D1                  	cmp rcx, rdx
 23457 000117A4 7414                    	je .L_tc_recycle_frame_done_0985
 23458 000117A6 4C8B08                  	mov r9, qword [rax]
 23459 000117A9 4C890B                  	mov qword [rbx],r9
 23460 000117AC 4883E808                	sub rax,8
 23461 000117B0 4883EB08                	sub rbx,8
 23462 000117B4 4883C101                	add rcx,1
 23463 000117B8 EBE7                    	jmp .L_tc_recycle_frame_loop_0985
 23464                                  	.L_tc_recycle_frame_done_0985:
 23465 000117BA 4883C308                	add rbx,8
 23466 000117BE 4889DC                  	mov rsp,rbx
 23467 000117C1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23468 000117C5 C9                      	leave
 23469 000117C6 C21800                  	ret AND_KILL_FRAME(1)
 23470                                  .L_lambda_simple_end_077d:	; new closure is in rax
 23471 000117C9 C9                      	leave
 23472 000117CA C21800                  	ret AND_KILL_FRAME(1)
 23473                                  .L_lambda_simple_end_077a:	; new closure is in rax
 23474 000117CD 803804                  	cmp byte [rax], T_closure
 23475 000117D0 0F85B15C0000            	jne L_error_non_closure
 23476 000117D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23477 000117D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23478 000117DC 48890425[98140000]      	mov qword [free_var_94], rax
 23479 000117E4 48B8-                   	mov rax, sob_void
 23479 000117E6 [0000000000000000] 
 23480                                  
 23481 000117EE 4889C7                  	mov rdi, rax
 23482 000117F1 E88F5F0000              	call print_sexpr_if_not_void
 23483 000117F6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23484 000117FB E8305D0000              	call malloc
 23485 00011800 50                      	push rax
 23486 00011801 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 23487 00011805 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23488 00011809 BF00000000              	mov rdi, 8 * 0	; new rib for optional parameters
 23489 0001180E E81D5D0000              	call malloc
 23490 00011813 50                      	push rax
 23491 00011814 BF08000000              	mov rdi, 8 * 1	; extended env
 23492 00011819 E8125D0000              	call malloc
 23493 0001181E 488B7D10                	mov rdi, ENV
 23494 00011822 BE00000000              	mov rsi, 0
 23495 00011827 BA01000000              	mov rdx, 1
 23496                                  .L_lambda_opt_env_loop_00f1:	; ext_env[i + 1] <-- env[i] copy all the array
 23497 0001182C 4883FE00                	cmp rsi, 0
 23498 00011830 7410                    	je .L_lambda_opt_env_end_00f1
 23499 00011832 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23500 00011836 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23501 0001183A 48FFC6                  	inc rsi
 23502 0001183D 48FFC2                  	inc rdx
 23503 00011840 EBEA                    	jmp .L_lambda_opt_env_loop_00f1
 23504                                  .L_lambda_opt_env_end_00f1:
 23505 00011842 5B                      	pop rbx
 23506 00011843 BE00000000              	mov rsi, 0
 23507                                  .L_lambda_opt_params_loop_02d1:	; copy params
 23508 00011848 4883FE00                	cmp rsi, 0
 23509 0001184C 740E                    	je .L_lambda_opt_params_end_01e1
 23510 0001184E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23511 00011853 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23512 00011857 48FFC6                  	inc rsi
 23513 0001185A EBEC                    	jmp .L_lambda_opt_params_loop_02d1
 23514                                  .L_lambda_opt_params_end_01e1:
 23515 0001185C 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 23516 0001185F 4889C3                  	mov rbx, rax
 23517 00011862 58                      	pop rax
 23518 00011863 C60004                  	mov byte [rax], T_closure
 23519 00011866 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23520 0001186A 48C74009[77180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00f1
 23521 00011872 E97C010000              	jmp .L_lambda_opt_end_01e1
 23522                                  .L_lambda_opt_code_00f1:	; lambda-opt body
 23523 00011877 48837C241000            	cmp qword [rsp + 8 * 2], 0
 23524 0001187D 7D0B                    	jge .L_lambda_simple_arity_check_ok_086e
 23525 0001187F FF742410                	push qword [rsp + 8 * 2]
 23526 00011883 6A00                    	push 0
 23527 00011885 E95F5C0000              	jmp L_error_incorrect_arity_simple
 23528                                  .L_lambda_simple_arity_check_ok_086e:
 23529 0001188A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 23530 0001188F 4983E800                	sub r8, 0
 23531 00011893 4C89C3                  	mov rbx,r8
 23532 00011896 4983F800                	cmp r8, 0
 23533 0001189A 7535                    	jne .L_lambda_opt_params_loop_02d3
 23534 0001189C 488B542410              	mov rdx, qword [rsp + 8 * 2]
 23535 000118A1 4883C203                	add rdx , 3
 23536 000118A5 4883EC08                	sub rsp , 8
 23537 000118A9 4889E1                  	mov rcx, rsp
 23538                                  .L_lambda_opt_stack_adjusted_02d2: ;pushing down the stack of the current function
 23539 000118AC 488B5908                	mov rbx, qword [rcx + 8 * 1]
 23540 000118B0 488919                  	mov qword[rcx] , rbx
 23541 000118B3 4883C108                	add rcx , 8
 23542 000118B7 48FFCA                  	dec rdx
 23543 000118BA 4883FA00                	cmp rdx, 0
 23544 000118BE 75EC                    	jne .L_lambda_opt_stack_adjusted_02d2
 23545 000118C0 48FF442410              	inc qword [rsp + 8 * 2]
 23546 000118C5 48C701[01000000]        	mov qword [rcx], sob_nil 
 23547 000118CC E9A2000000              	jmp .L_lambda_opt_end_01e2
 23548                                  	.L_lambda_opt_params_loop_02d3:
 23549 000118D1 488B542410              	mov rdx, qword [rsp + 8*2]
 23550 000118D6 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 23551 000118DB 4C89C2                  	mov rdx, r8
 23552 000118DE 49B9-                   	mov r9, sob_nil
 23552 000118E0 [0100000000000000] 
 23553                                  	.L_lambda_opt_params_loop_02d2: ;loop for copying the opt into list
 23554 000118E8 BF11000000              	mov rdi, (1 + 8 + 8)
 23555 000118ED E83E5C0000              	call malloc
 23556 000118F2 C60021                  	mov byte[rax], T_pair
 23557 000118F5 488B19                  	mov rbx, qword [rcx]
 23558 000118F8 48895801                	mov SOB_PAIR_CAR(rax), rbx
 23559 000118FC 4C894809                	mov SOB_PAIR_CDR(rax), r9
 23560 00011900 4989C1                  	mov r9, rax
 23561 00011903 48FFCA                  	dec rdx
 23562 00011906 4883E908                	sub rcx, 8
 23563 0001190A 4883FA00                	cmp rdx, 0
 23564 0001190E 75D8                    	jne .L_lambda_opt_params_loop_02d2
 23565 00011910 488B542410              	mov rdx, qword [rsp + 8 * 2]
 23566 00011915 4889E0                  	mov rax, rsp
 23567 00011918 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 23568 0001191D 4C89C1                  	mov rcx, r8
 23569 00011920 48FFC9                  	dec rcx
 23570 00011923 4883C203                	add rdx, 3
 23571 00011927 4829CA                  	sub rdx,rcx
 23572 0001192A 48C1E103                	shl rcx, 3
 23573                                  	.L_lambda_opt_stack_adjusted_02d3:
 23574 0001192E 4883FA00                	cmp rdx, 0
 23575 00011932 7419                    	je .L_lambda_opt_params_end_01e2
 23576 00011934 4889D8                  	mov rax, rbx
 23577 00011937 4829C8                  	sub rax, rcx
 23578 0001193A 488B30                  	mov rsi, qword [rax]
 23579 0001193D 488933                  	mov [rbx], rsi
 23580 00011940 4883EB08                	sub rbx, 8
 23581 00011944 48FFCA                  	dec rdx
 23582 00011947 4883FA00                	cmp rdx, 0
 23583 0001194B 75E1                    	jne .L_lambda_opt_stack_adjusted_02d3
 23584                                  	.L_lambda_opt_params_end_01e2:
 23585 0001194D 4801CC                  	add rsp,rcx
 23586 00011950 BB00000000              	mov rbx, 0
 23587 00011955 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 23588 0001195A 4883C303                	add rbx,3
 23589 0001195E 4C29C3                  	sub rbx,r8
 23590 00011961 48C1E303                	shl rbx, 3
 23591 00011965 4801E3                  	add rbx, rsp
 23592 00011968 4C890B                  	mov qword[rbx] , r9
 23593 0001196B 49FFC8                  	dec r8
 23594 0001196E 4C29442410              	sub qword [rsp + 8 * 2], r8
 23595                                  	.L_lambda_opt_end_01e2:
 23596 00011973 C8000000                	enter 0, 0
 23597                                  	; preparing a tail-call
 23598 00011977 488B4520                	mov rax, PARAM(0)	; param s
 23599 0001197B 50                      	push rax
 23600 0001197C 6A01                    	push 1	; arg count
 23601 0001197E 488B0425[A9140000]      	mov rax, qword [free_var_95]	; free var list->vector
 23602 00011986 803805                  	cmp byte [rax], T_undefined
 23603 00011989 0F84745A0000            	je L_error_fvar_undefined
 23604 0001198F 803804                  	cmp byte [rax], T_closure
 23605 00011992 0F85EF5A0000            	jne L_error_non_closure
 23606 00011998 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23607 0001199B FF7508                  	push qword [rbp + 8 *1]
 23608 0001199E 4989C0                  	mov r8, rax
 23609 000119A1 488B5D18                	mov rbx, COUNT
 23610 000119A5 4883C303                	add rbx,3
 23611 000119A9 48C1E303                	shl rbx,3
 23612 000119AD 4801EB                  	add rbx, rbp
 23613 000119B0 488B6D00                	mov rbp, [rbp]
 23614 000119B4 B900000000              	mov rcx,0
 23615 000119B9 BA04000000              	mov rdx, 4
 23616 000119BE 4889D0                  	mov rax, rdx
 23617 000119C1 48FFC8                  	dec rax
 23618 000119C4 48C1E003                	shl rax,3
 23619 000119C8 4801E0                  	add rax, rsp
 23620                                  	.L_tc_recycle_frame_loop_0986:
 23621 000119CB 4839D1                  	cmp rcx, rdx
 23622 000119CE 7414                    	je .L_tc_recycle_frame_done_0986
 23623 000119D0 4C8B08                  	mov r9, qword [rax]
 23624 000119D3 4C890B                  	mov qword [rbx],r9
 23625 000119D6 4883E808                	sub rax,8
 23626 000119DA 4883EB08                	sub rbx,8
 23627 000119DE 4883C101                	add rcx,1
 23628 000119E2 EBE7                    	jmp .L_tc_recycle_frame_loop_0986
 23629                                  	.L_tc_recycle_frame_done_0986:
 23630 000119E4 4883C308                	add rbx,8
 23631 000119E8 4889DC                  	mov rsp,rbx
 23632 000119EB 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23633                                  	LEAVE
    49 000119EF C9                  <1>  leave
 23634 000119F0 C21800                  	ret AND_KILL_FRAME(1)
 23635                                  .L_lambda_opt_end_01e1:
 23636 000119F3 48890425[A6170000]      	mov qword [free_var_140], rax
 23637 000119FB 48B8-                   	mov rax, sob_void
 23637 000119FD [0000000000000000] 
 23638                                  
 23639 00011A05 4889C7                  	mov rdi, rax
 23640 00011A08 E8785D0000              	call print_sexpr_if_not_void
 23641                                  	; preparing a non-tail-call
 23642 00011A0D 48B8-                   	mov rax, L_constants + 1993
 23642 00011A0F [C907000000000000] 
 23643 00011A17 50                      	push rax
 23644 00011A18 6A01                    	push 1	; arg count
 23645 00011A1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23646 00011A1F E80C5B0000              	call malloc
 23647 00011A24 50                      	push rax
 23648 00011A25 BF00000000              	mov rdi, 8 * 0	; new rib
 23649 00011A2A E8015B0000              	call malloc
 23650 00011A2F 50                      	push rax
 23651 00011A30 BF08000000              	mov rdi, 8 * 1	; extended env
 23652 00011A35 E8F65A0000              	call malloc
 23653 00011A3A 488B7D10                	mov rdi, ENV
 23654 00011A3E BE00000000              	mov rsi, 0
 23655 00011A43 BA01000000              	mov rdx, 1
 23656                                  .L_lambda_simple_env_loop_077e:	; ext_env[i + 1] <-- env[i]
 23657 00011A48 4883FE00                	cmp rsi, 0
 23658 00011A4C 7410                    	je .L_lambda_simple_env_end_077e
 23659 00011A4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23660 00011A52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23661 00011A56 48FFC6                  	inc rsi
 23662 00011A59 48FFC2                  	inc rdx
 23663 00011A5C EBEA                    	jmp .L_lambda_simple_env_loop_077e
 23664                                  .L_lambda_simple_env_end_077e:
 23665 00011A5E 5B                      	pop rbx
 23666 00011A5F BE00000000              	mov rsi, 0
 23667                                  .L_lambda_simple_params_loop_077e:	; copy params
 23668 00011A64 4883FE00                	cmp rsi, 0
 23669 00011A68 740E                    	je .L_lambda_simple_params_end_077e
 23670 00011A6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23671 00011A6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23672 00011A73 48FFC6                  	inc rsi
 23673 00011A76 EBEC                    	jmp .L_lambda_simple_params_loop_077e
 23674                                  .L_lambda_simple_params_end_077e:
 23675 00011A78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23676 00011A7B 4889C3                  	mov rbx, rax
 23677 00011A7E 58                      	pop rax
 23678 00011A7F C60004                  	mov byte [rax], T_closure
 23679 00011A82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23680 00011A86 48C74009[931A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077e
 23681 00011A8E E95A030000              	jmp .L_lambda_simple_end_077e
 23682                                  .L_lambda_simple_code_077e:	; lambda-simple body
 23683 00011A93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23684 00011A99 740B                    	je .L_lambda_simple_arity_check_ok_086f
 23685 00011A9B FF742410                	push qword [rsp + 8 * 2]
 23686 00011A9F 6A01                    	push 1
 23687 00011AA1 E9435A0000              	jmp L_error_incorrect_arity_simple
 23688                                  .L_lambda_simple_arity_check_ok_086f:
 23689 00011AA6 C8000000                	enter 0, 0
 23690 00011AAA BF08000000              	mov rdi, 8
 23691 00011AAF E87C5A0000              	call malloc
 23692 00011AB4 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 23693 00011AB8 488918                  	mov qword [rax], rbx
 23694 00011ABB 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 23695 00011ABF 48B8-                   	mov rax, sob_void
 23695 00011AC1 [0000000000000000] 
 23696                                  
 23697 00011AC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23698 00011ACE E85D5A0000              	call malloc
 23699 00011AD3 50                      	push rax
 23700 00011AD4 BF08000000              	mov rdi, 8 * 1	; new rib
 23701 00011AD9 E8525A0000              	call malloc
 23702 00011ADE 50                      	push rax
 23703 00011ADF BF10000000              	mov rdi, 8 * 2	; extended env
 23704 00011AE4 E8475A0000              	call malloc
 23705 00011AE9 488B7D10                	mov rdi, ENV
 23706 00011AED BE00000000              	mov rsi, 0
 23707 00011AF2 BA01000000              	mov rdx, 1
 23708                                  .L_lambda_simple_env_loop_077f:	; ext_env[i + 1] <-- env[i]
 23709 00011AF7 4883FE01                	cmp rsi, 1
 23710 00011AFB 7410                    	je .L_lambda_simple_env_end_077f
 23711 00011AFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23712 00011B01 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23713 00011B05 48FFC6                  	inc rsi
 23714 00011B08 48FFC2                  	inc rdx
 23715 00011B0B EBEA                    	jmp .L_lambda_simple_env_loop_077f
 23716                                  .L_lambda_simple_env_end_077f:
 23717 00011B0D 5B                      	pop rbx
 23718 00011B0E BE00000000              	mov rsi, 0
 23719                                  .L_lambda_simple_params_loop_077f:	; copy params
 23720 00011B13 4883FE01                	cmp rsi, 1
 23721 00011B17 740E                    	je .L_lambda_simple_params_end_077f
 23722 00011B19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23723 00011B1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23724 00011B22 48FFC6                  	inc rsi
 23725 00011B25 EBEC                    	jmp .L_lambda_simple_params_loop_077f
 23726                                  .L_lambda_simple_params_end_077f:
 23727 00011B27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23728 00011B2A 4889C3                  	mov rbx, rax
 23729 00011B2D 58                      	pop rax
 23730 00011B2E C60004                  	mov byte [rax], T_closure
 23731 00011B31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23732 00011B35 48C74009[421B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_077f
 23733 00011B3D E95B010000              	jmp .L_lambda_simple_end_077f
 23734                                  .L_lambda_simple_code_077f:	; lambda-simple body
 23735 00011B42 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23736 00011B48 740B                    	je .L_lambda_simple_arity_check_ok_0870
 23737 00011B4A FF742410                	push qword [rsp + 8 * 2]
 23738 00011B4E 6A03                    	push 3
 23739 00011B50 E994590000              	jmp L_error_incorrect_arity_simple
 23740                                  .L_lambda_simple_arity_check_ok_0870:
 23741 00011B55 C8000000                	enter 0, 0
 23742                                  	; preparing a non-tail-call
 23743 00011B59 488B4530                	mov rax, PARAM(2)	; param n
 23744 00011B5D 50                      	push rax
 23745 00011B5E 488B4528                	mov rax, PARAM(1)	; param i
 23746 00011B62 50                      	push rax
 23747 00011B63 6A02                    	push 2	; arg count
 23748 00011B65 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 23749 00011B6D 803805                  	cmp byte [rax], T_undefined
 23750 00011B70 0F848D580000            	je L_error_fvar_undefined
 23751 00011B76 803804                  	cmp byte [rax], T_closure
 23752 00011B79 0F8508590000            	jne L_error_non_closure
 23753 00011B7F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23754 00011B82 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23755 00011B85 483D[02000000]          	cmp rax, sob_boolean_false
 23756 00011B8B 0F84FE000000            	je .L_if_else_0538
 23757                                  	; preparing a tail-call
 23758                                  	; preparing a non-tail-call
 23759 00011B91 488B4530                	mov rax, PARAM(2)	; param n
 23760 00011B95 50                      	push rax
 23761                                  	; preparing a non-tail-call
 23762 00011B96 48B8-                   	mov rax, L_constants + 2270
 23762 00011B98 [DE08000000000000] 
 23763 00011BA0 50                      	push rax
 23764 00011BA1 488B4528                	mov rax, PARAM(1)	; param i
 23765 00011BA5 50                      	push rax
 23766 00011BA6 6A02                    	push 2	; arg count
 23767 00011BA8 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 23768 00011BB0 803805                  	cmp byte [rax], T_undefined
 23769 00011BB3 0F844A580000            	je L_error_fvar_undefined
 23770 00011BB9 803804                  	cmp byte [rax], T_closure
 23771 00011BBC 0F85C5580000            	jne L_error_non_closure
 23772 00011BC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23773 00011BC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23774 00011BC8 50                      	push rax
 23775 00011BC9 488B4520                	mov rax, PARAM(0)	; param str
 23776 00011BCD 50                      	push rax
 23777 00011BCE 6A03                    	push 3	; arg count
 23778 00011BD0 488B4510                	mov rax, ENV
 23779 00011BD4 488B00                  	mov rax, qword [rax + 8 * 0]
 23780 00011BD7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23781 00011BDA 488B00                  	mov rax, qword [rax]
 23782 00011BDD 803804                  	cmp byte [rax], T_closure
 23783 00011BE0 0F85A1580000            	jne L_error_non_closure
 23784 00011BE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23785 00011BE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23786 00011BEC 50                      	push rax
 23787                                  	; preparing a non-tail-call
 23788 00011BED 488B4528                	mov rax, PARAM(1)	; param i
 23789 00011BF1 50                      	push rax
 23790 00011BF2 488B4520                	mov rax, PARAM(0)	; param str
 23791 00011BF6 50                      	push rax
 23792 00011BF7 6A02                    	push 2	; arg count
 23793 00011BF9 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23794 00011C01 803805                  	cmp byte [rax], T_undefined
 23795 00011C04 0F84F9570000            	je L_error_fvar_undefined
 23796 00011C0A 803804                  	cmp byte [rax], T_closure
 23797 00011C0D 0F8574580000            	jne L_error_non_closure
 23798 00011C13 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23799 00011C16 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23800 00011C19 50                      	push rax
 23801 00011C1A 6A02                    	push 2	; arg count
 23802 00011C1C 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
 23803 00011C24 803805                  	cmp byte [rax], T_undefined
 23804 00011C27 0F84D6570000            	je L_error_fvar_undefined
 23805 00011C2D 803804                  	cmp byte [rax], T_closure
 23806 00011C30 0F8551580000            	jne L_error_non_closure
 23807 00011C36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23808 00011C39 FF7508                  	push qword [rbp + 8 *1]
 23809 00011C3C 4989C0                  	mov r8, rax
 23810 00011C3F 488B5D18                	mov rbx, COUNT
 23811 00011C43 4883C303                	add rbx,3
 23812 00011C47 48C1E303                	shl rbx,3
 23813 00011C4B 4801EB                  	add rbx, rbp
 23814 00011C4E 488B6D00                	mov rbp, [rbp]
 23815 00011C52 B900000000              	mov rcx,0
 23816 00011C57 BA05000000              	mov rdx, 5
 23817 00011C5C 4889D0                  	mov rax, rdx
 23818 00011C5F 48FFC8                  	dec rax
 23819 00011C62 48C1E003                	shl rax,3
 23820 00011C66 4801E0                  	add rax, rsp
 23821                                  	.L_tc_recycle_frame_loop_0987:
 23822 00011C69 4839D1                  	cmp rcx, rdx
 23823 00011C6C 7414                    	je .L_tc_recycle_frame_done_0987
 23824 00011C6E 4C8B08                  	mov r9, qword [rax]
 23825 00011C71 4C890B                  	mov qword [rbx],r9
 23826 00011C74 4883E808                	sub rax,8
 23827 00011C78 4883EB08                	sub rbx,8
 23828 00011C7C 4883C101                	add rcx,1
 23829 00011C80 EBE7                    	jmp .L_tc_recycle_frame_loop_0987
 23830                                  	.L_tc_recycle_frame_done_0987:
 23831 00011C82 4883C308                	add rbx,8
 23832 00011C86 4889DC                  	mov rsp,rbx
 23833 00011C89 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23834 00011C8D EB0A                    	jmp .L_if_end_05c6
 23835                                  .L_if_else_0538:
 23836 00011C8F 48B8-                   	mov rax, L_constants + 1
 23836 00011C91 [0100000000000000] 
 23837                                  .L_if_end_05c6:
 23838 00011C99 C9                      	leave
 23839 00011C9A C22800                  	ret AND_KILL_FRAME(3)
 23840                                  .L_lambda_simple_end_077f:	; new closure is in rax
 23841 00011C9D 50                      	push rax
 23842 00011C9E 488B4520                	mov rax, PARAM(0)	; param run
 23843 00011CA2 8F00                    	pop qword [rax]
 23844 00011CA4 48B8-                   	mov rax, sob_void
 23844 00011CA6 [0000000000000000] 
 23845                                  
 23846 00011CAE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23847 00011CB3 E878580000              	call malloc
 23848 00011CB8 50                      	push rax
 23849 00011CB9 BF08000000              	mov rdi, 8 * 1	; new rib
 23850 00011CBE E86D580000              	call malloc
 23851 00011CC3 50                      	push rax
 23852 00011CC4 BF10000000              	mov rdi, 8 * 2	; extended env
 23853 00011CC9 E862580000              	call malloc
 23854 00011CCE 488B7D10                	mov rdi, ENV
 23855 00011CD2 BE00000000              	mov rsi, 0
 23856 00011CD7 BA01000000              	mov rdx, 1
 23857                                  .L_lambda_simple_env_loop_0780:	; ext_env[i + 1] <-- env[i]
 23858 00011CDC 4883FE01                	cmp rsi, 1
 23859 00011CE0 7410                    	je .L_lambda_simple_env_end_0780
 23860 00011CE2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23861 00011CE6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23862 00011CEA 48FFC6                  	inc rsi
 23863 00011CED 48FFC2                  	inc rdx
 23864 00011CF0 EBEA                    	jmp .L_lambda_simple_env_loop_0780
 23865                                  .L_lambda_simple_env_end_0780:
 23866 00011CF2 5B                      	pop rbx
 23867 00011CF3 BE00000000              	mov rsi, 0
 23868                                  .L_lambda_simple_params_loop_0780:	; copy params
 23869 00011CF8 4883FE01                	cmp rsi, 1
 23870 00011CFC 740E                    	je .L_lambda_simple_params_end_0780
 23871 00011CFE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23872 00011D03 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23873 00011D07 48FFC6                  	inc rsi
 23874 00011D0A EBEC                    	jmp .L_lambda_simple_params_loop_0780
 23875                                  .L_lambda_simple_params_end_0780:
 23876 00011D0C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23877 00011D0F 4889C3                  	mov rbx, rax
 23878 00011D12 58                      	pop rax
 23879 00011D13 C60004                  	mov byte [rax], T_closure
 23880 00011D16 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23881 00011D1A 48C74009[271D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0780
 23882 00011D22 E9C2000000              	jmp .L_lambda_simple_end_0780
 23883                                  .L_lambda_simple_code_0780:	; lambda-simple body
 23884 00011D27 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23885 00011D2D 740B                    	je .L_lambda_simple_arity_check_ok_0871
 23886 00011D2F FF742410                	push qword [rsp + 8 * 2]
 23887 00011D33 6A01                    	push 1
 23888 00011D35 E9AF570000              	jmp L_error_incorrect_arity_simple
 23889                                  .L_lambda_simple_arity_check_ok_0871:
 23890 00011D3A C8000000                	enter 0, 0
 23891                                  	; preparing a tail-call
 23892                                  	; preparing a non-tail-call
 23893 00011D3E 488B4520                	mov rax, PARAM(0)	; param str
 23894 00011D42 50                      	push rax
 23895 00011D43 6A01                    	push 1	; arg count
 23896 00011D45 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 23897 00011D4D 803805                  	cmp byte [rax], T_undefined
 23898 00011D50 0F84AD560000            	je L_error_fvar_undefined
 23899 00011D56 803804                  	cmp byte [rax], T_closure
 23900 00011D59 0F8528570000            	jne L_error_non_closure
 23901 00011D5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23902 00011D62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23903 00011D65 50                      	push rax
 23904 00011D66 48B8-                   	mov rax, L_constants + 2135
 23904 00011D68 [5708000000000000] 
 23905 00011D70 50                      	push rax
 23906 00011D71 488B4520                	mov rax, PARAM(0)	; param str
 23907 00011D75 50                      	push rax
 23908 00011D76 6A03                    	push 3	; arg count
 23909 00011D78 488B4510                	mov rax, ENV
 23910 00011D7C 488B00                  	mov rax, qword [rax + 8 * 0]
 23911 00011D7F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23912 00011D82 488B00                  	mov rax, qword [rax]
 23913 00011D85 803804                  	cmp byte [rax], T_closure
 23914 00011D88 0F85F9560000            	jne L_error_non_closure
 23915 00011D8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23916 00011D91 FF7508                  	push qword [rbp + 8 *1]
 23917 00011D94 4989C0                  	mov r8, rax
 23918 00011D97 488B5D18                	mov rbx, COUNT
 23919 00011D9B 4883C303                	add rbx,3
 23920 00011D9F 48C1E303                	shl rbx,3
 23921 00011DA3 4801EB                  	add rbx, rbp
 23922 00011DA6 488B6D00                	mov rbp, [rbp]
 23923 00011DAA B900000000              	mov rcx,0
 23924 00011DAF BA06000000              	mov rdx, 6
 23925 00011DB4 4889D0                  	mov rax, rdx
 23926 00011DB7 48FFC8                  	dec rax
 23927 00011DBA 48C1E003                	shl rax,3
 23928 00011DBE 4801E0                  	add rax, rsp
 23929                                  	.L_tc_recycle_frame_loop_0988:
 23930 00011DC1 4839D1                  	cmp rcx, rdx
 23931 00011DC4 7414                    	je .L_tc_recycle_frame_done_0988
 23932 00011DC6 4C8B08                  	mov r9, qword [rax]
 23933 00011DC9 4C890B                  	mov qword [rbx],r9
 23934 00011DCC 4883E808                	sub rax,8
 23935 00011DD0 4883EB08                	sub rbx,8
 23936 00011DD4 4883C101                	add rcx,1
 23937 00011DD8 EBE7                    	jmp .L_tc_recycle_frame_loop_0988
 23938                                  	.L_tc_recycle_frame_done_0988:
 23939 00011DDA 4883C308                	add rbx,8
 23940 00011DDE 4889DC                  	mov rsp,rbx
 23941 00011DE1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 23942 00011DE5 C9                      	leave
 23943 00011DE6 C21800                  	ret AND_KILL_FRAME(1)
 23944                                  .L_lambda_simple_end_0780:	; new closure is in rax
 23945 00011DE9 C9                      	leave
 23946 00011DEA C21800                  	ret AND_KILL_FRAME(1)
 23947                                  .L_lambda_simple_end_077e:	; new closure is in rax
 23948 00011DED 803804                  	cmp byte [rax], T_closure
 23949 00011DF0 0F8591560000            	jne L_error_non_closure
 23950 00011DF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23951 00011DF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23952 00011DFC 48890425[41160000]      	mov qword [free_var_119], rax
 23953 00011E04 48B8-                   	mov rax, sob_void
 23953 00011E06 [0000000000000000] 
 23954                                  
 23955 00011E0E 4889C7                  	mov rdi, rax
 23956 00011E11 E86F590000              	call print_sexpr_if_not_void
 23957                                  	; preparing a non-tail-call
 23958 00011E16 48B8-                   	mov rax, L_constants + 1993
 23958 00011E18 [C907000000000000] 
 23959 00011E20 50                      	push rax
 23960 00011E21 6A01                    	push 1	; arg count
 23961 00011E23 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23962 00011E28 E803570000              	call malloc
 23963 00011E2D 50                      	push rax
 23964 00011E2E BF00000000              	mov rdi, 8 * 0	; new rib
 23965 00011E33 E8F8560000              	call malloc
 23966 00011E38 50                      	push rax
 23967 00011E39 BF08000000              	mov rdi, 8 * 1	; extended env
 23968 00011E3E E8ED560000              	call malloc
 23969 00011E43 488B7D10                	mov rdi, ENV
 23970 00011E47 BE00000000              	mov rsi, 0
 23971 00011E4C BA01000000              	mov rdx, 1
 23972                                  .L_lambda_simple_env_loop_0781:	; ext_env[i + 1] <-- env[i]
 23973 00011E51 4883FE00                	cmp rsi, 0
 23974 00011E55 7410                    	je .L_lambda_simple_env_end_0781
 23975 00011E57 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23976 00011E5B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23977 00011E5F 48FFC6                  	inc rsi
 23978 00011E62 48FFC2                  	inc rdx
 23979 00011E65 EBEA                    	jmp .L_lambda_simple_env_loop_0781
 23980                                  .L_lambda_simple_env_end_0781:
 23981 00011E67 5B                      	pop rbx
 23982 00011E68 BE00000000              	mov rsi, 0
 23983                                  .L_lambda_simple_params_loop_0781:	; copy params
 23984 00011E6D 4883FE00                	cmp rsi, 0
 23985 00011E71 740E                    	je .L_lambda_simple_params_end_0781
 23986 00011E73 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23987 00011E78 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23988 00011E7C 48FFC6                  	inc rsi
 23989 00011E7F EBEC                    	jmp .L_lambda_simple_params_loop_0781
 23990                                  .L_lambda_simple_params_end_0781:
 23991 00011E81 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23992 00011E84 4889C3                  	mov rbx, rax
 23993 00011E87 58                      	pop rax
 23994 00011E88 C60004                  	mov byte [rax], T_closure
 23995 00011E8B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23996 00011E8F 48C74009[9C1E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0781
 23997 00011E97 E95A030000              	jmp .L_lambda_simple_end_0781
 23998                                  .L_lambda_simple_code_0781:	; lambda-simple body
 23999 00011E9C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24000 00011EA2 740B                    	je .L_lambda_simple_arity_check_ok_0872
 24001 00011EA4 FF742410                	push qword [rsp + 8 * 2]
 24002 00011EA8 6A01                    	push 1
 24003 00011EAA E93A560000              	jmp L_error_incorrect_arity_simple
 24004                                  .L_lambda_simple_arity_check_ok_0872:
 24005 00011EAF C8000000                	enter 0, 0
 24006 00011EB3 BF08000000              	mov rdi, 8
 24007 00011EB8 E873560000              	call malloc
 24008 00011EBD 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 24009 00011EC1 488918                  	mov qword [rax], rbx
 24010 00011EC4 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 24011 00011EC8 48B8-                   	mov rax, sob_void
 24011 00011ECA [0000000000000000] 
 24012                                  
 24013 00011ED2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24014 00011ED7 E854560000              	call malloc
 24015 00011EDC 50                      	push rax
 24016 00011EDD BF08000000              	mov rdi, 8 * 1	; new rib
 24017 00011EE2 E849560000              	call malloc
 24018 00011EE7 50                      	push rax
 24019 00011EE8 BF10000000              	mov rdi, 8 * 2	; extended env
 24020 00011EED E83E560000              	call malloc
 24021 00011EF2 488B7D10                	mov rdi, ENV
 24022 00011EF6 BE00000000              	mov rsi, 0
 24023 00011EFB BA01000000              	mov rdx, 1
 24024                                  .L_lambda_simple_env_loop_0782:	; ext_env[i + 1] <-- env[i]
 24025 00011F00 4883FE01                	cmp rsi, 1
 24026 00011F04 7410                    	je .L_lambda_simple_env_end_0782
 24027 00011F06 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24028 00011F0A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24029 00011F0E 48FFC6                  	inc rsi
 24030 00011F11 48FFC2                  	inc rdx
 24031 00011F14 EBEA                    	jmp .L_lambda_simple_env_loop_0782
 24032                                  .L_lambda_simple_env_end_0782:
 24033 00011F16 5B                      	pop rbx
 24034 00011F17 BE00000000              	mov rsi, 0
 24035                                  .L_lambda_simple_params_loop_0782:	; copy params
 24036 00011F1C 4883FE01                	cmp rsi, 1
 24037 00011F20 740E                    	je .L_lambda_simple_params_end_0782
 24038 00011F22 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24039 00011F27 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24040 00011F2B 48FFC6                  	inc rsi
 24041 00011F2E EBEC                    	jmp .L_lambda_simple_params_loop_0782
 24042                                  .L_lambda_simple_params_end_0782:
 24043 00011F30 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24044 00011F33 4889C3                  	mov rbx, rax
 24045 00011F36 58                      	pop rax
 24046 00011F37 C60004                  	mov byte [rax], T_closure
 24047 00011F3A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24048 00011F3E 48C74009[4B1F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0782
 24049 00011F46 E95B010000              	jmp .L_lambda_simple_end_0782
 24050                                  .L_lambda_simple_code_0782:	; lambda-simple body
 24051 00011F4B 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24052 00011F51 740B                    	je .L_lambda_simple_arity_check_ok_0873
 24053 00011F53 FF742410                	push qword [rsp + 8 * 2]
 24054 00011F57 6A03                    	push 3
 24055 00011F59 E98B550000              	jmp L_error_incorrect_arity_simple
 24056                                  .L_lambda_simple_arity_check_ok_0873:
 24057 00011F5E C8000000                	enter 0, 0
 24058                                  	; preparing a non-tail-call
 24059 00011F62 488B4530                	mov rax, PARAM(2)	; param n
 24060 00011F66 50                      	push rax
 24061 00011F67 488B4528                	mov rax, PARAM(1)	; param i
 24062 00011F6B 50                      	push rax
 24063 00011F6C 6A02                    	push 2	; arg count
 24064 00011F6E 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 24065 00011F76 803805                  	cmp byte [rax], T_undefined
 24066 00011F79 0F8484540000            	je L_error_fvar_undefined
 24067 00011F7F 803804                  	cmp byte [rax], T_closure
 24068 00011F82 0F85FF540000            	jne L_error_non_closure
 24069 00011F88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24070 00011F8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24071 00011F8E 483D[02000000]          	cmp rax, sob_boolean_false
 24072 00011F94 0F84FE000000            	je .L_if_else_0539
 24073                                  	; preparing a tail-call
 24074                                  	; preparing a non-tail-call
 24075 00011F9A 488B4530                	mov rax, PARAM(2)	; param n
 24076 00011F9E 50                      	push rax
 24077                                  	; preparing a non-tail-call
 24078 00011F9F 48B8-                   	mov rax, L_constants + 2270
 24078 00011FA1 [DE08000000000000] 
 24079 00011FA9 50                      	push rax
 24080 00011FAA 488B4528                	mov rax, PARAM(1)	; param i
 24081 00011FAE 50                      	push rax
 24082 00011FAF 6A02                    	push 2	; arg count
 24083 00011FB1 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 24084 00011FB9 803805                  	cmp byte [rax], T_undefined
 24085 00011FBC 0F8441540000            	je L_error_fvar_undefined
 24086 00011FC2 803804                  	cmp byte [rax], T_closure
 24087 00011FC5 0F85BC540000            	jne L_error_non_closure
 24088 00011FCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24089 00011FCE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24090 00011FD1 50                      	push rax
 24091 00011FD2 488B4520                	mov rax, PARAM(0)	; param v
 24092 00011FD6 50                      	push rax
 24093 00011FD7 6A03                    	push 3	; arg count
 24094 00011FD9 488B4510                	mov rax, ENV
 24095 00011FDD 488B00                  	mov rax, qword [rax + 8 * 0]
 24096 00011FE0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24097 00011FE3 488B00                  	mov rax, qword [rax]
 24098 00011FE6 803804                  	cmp byte [rax], T_closure
 24099 00011FE9 0F8598540000            	jne L_error_non_closure
 24100 00011FEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24101 00011FF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24102 00011FF5 50                      	push rax
 24103                                  	; preparing a non-tail-call
 24104 00011FF6 488B4528                	mov rax, PARAM(1)	; param i
 24105 00011FFA 50                      	push rax
 24106 00011FFB 488B4520                	mov rax, PARAM(0)	; param v
 24107 00011FFF 50                      	push rax
 24108 00012000 6A02                    	push 2	; arg count
 24109 00012002 488B0425[EA170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 24110 0001200A 803805                  	cmp byte [rax], T_undefined
 24111 0001200D 0F84F0530000            	je L_error_fvar_undefined
 24112 00012013 803804                  	cmp byte [rax], T_closure
 24113 00012016 0F856B540000            	jne L_error_non_closure
 24114 0001201C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24115 0001201F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24116 00012022 50                      	push rax
 24117 00012023 6A02                    	push 2	; arg count
 24118 00012025 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
 24119 0001202D 803805                  	cmp byte [rax], T_undefined
 24120 00012030 0F84CD530000            	je L_error_fvar_undefined
 24121 00012036 803804                  	cmp byte [rax], T_closure
 24122 00012039 0F8548540000            	jne L_error_non_closure
 24123 0001203F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24124 00012042 FF7508                  	push qword [rbp + 8 *1]
 24125 00012045 4989C0                  	mov r8, rax
 24126 00012048 488B5D18                	mov rbx, COUNT
 24127 0001204C 4883C303                	add rbx,3
 24128 00012050 48C1E303                	shl rbx,3
 24129 00012054 4801EB                  	add rbx, rbp
 24130 00012057 488B6D00                	mov rbp, [rbp]
 24131 0001205B B900000000              	mov rcx,0
 24132 00012060 BA05000000              	mov rdx, 5
 24133 00012065 4889D0                  	mov rax, rdx
 24134 00012068 48FFC8                  	dec rax
 24135 0001206B 48C1E003                	shl rax,3
 24136 0001206F 4801E0                  	add rax, rsp
 24137                                  	.L_tc_recycle_frame_loop_0989:
 24138 00012072 4839D1                  	cmp rcx, rdx
 24139 00012075 7414                    	je .L_tc_recycle_frame_done_0989
 24140 00012077 4C8B08                  	mov r9, qword [rax]
 24141 0001207A 4C890B                  	mov qword [rbx],r9
 24142 0001207D 4883E808                	sub rax,8
 24143 00012081 4883EB08                	sub rbx,8
 24144 00012085 4883C101                	add rcx,1
 24145 00012089 EBE7                    	jmp .L_tc_recycle_frame_loop_0989
 24146                                  	.L_tc_recycle_frame_done_0989:
 24147 0001208B 4883C308                	add rbx,8
 24148 0001208F 4889DC                  	mov rsp,rbx
 24149 00012092 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24150 00012096 EB0A                    	jmp .L_if_end_05c7
 24151                                  .L_if_else_0539:
 24152 00012098 48B8-                   	mov rax, L_constants + 1
 24152 0001209A [0100000000000000] 
 24153                                  .L_if_end_05c7:
 24154 000120A2 C9                      	leave
 24155 000120A3 C22800                  	ret AND_KILL_FRAME(3)
 24156                                  .L_lambda_simple_end_0782:	; new closure is in rax
 24157 000120A6 50                      	push rax
 24158 000120A7 488B4520                	mov rax, PARAM(0)	; param run
 24159 000120AB 8F00                    	pop qword [rax]
 24160 000120AD 48B8-                   	mov rax, sob_void
 24160 000120AF [0000000000000000] 
 24161                                  
 24162 000120B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24163 000120BC E86F540000              	call malloc
 24164 000120C1 50                      	push rax
 24165 000120C2 BF08000000              	mov rdi, 8 * 1	; new rib
 24166 000120C7 E864540000              	call malloc
 24167 000120CC 50                      	push rax
 24168 000120CD BF10000000              	mov rdi, 8 * 2	; extended env
 24169 000120D2 E859540000              	call malloc
 24170 000120D7 488B7D10                	mov rdi, ENV
 24171 000120DB BE00000000              	mov rsi, 0
 24172 000120E0 BA01000000              	mov rdx, 1
 24173                                  .L_lambda_simple_env_loop_0783:	; ext_env[i + 1] <-- env[i]
 24174 000120E5 4883FE01                	cmp rsi, 1
 24175 000120E9 7410                    	je .L_lambda_simple_env_end_0783
 24176 000120EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24177 000120EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24178 000120F3 48FFC6                  	inc rsi
 24179 000120F6 48FFC2                  	inc rdx
 24180 000120F9 EBEA                    	jmp .L_lambda_simple_env_loop_0783
 24181                                  .L_lambda_simple_env_end_0783:
 24182 000120FB 5B                      	pop rbx
 24183 000120FC BE00000000              	mov rsi, 0
 24184                                  .L_lambda_simple_params_loop_0783:	; copy params
 24185 00012101 4883FE01                	cmp rsi, 1
 24186 00012105 740E                    	je .L_lambda_simple_params_end_0783
 24187 00012107 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24188 0001210C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24189 00012110 48FFC6                  	inc rsi
 24190 00012113 EBEC                    	jmp .L_lambda_simple_params_loop_0783
 24191                                  .L_lambda_simple_params_end_0783:
 24192 00012115 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24193 00012118 4889C3                  	mov rbx, rax
 24194 0001211B 58                      	pop rax
 24195 0001211C C60004                  	mov byte [rax], T_closure
 24196 0001211F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24197 00012123 48C74009[30210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0783
 24198 0001212B E9C2000000              	jmp .L_lambda_simple_end_0783
 24199                                  .L_lambda_simple_code_0783:	; lambda-simple body
 24200 00012130 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24201 00012136 740B                    	je .L_lambda_simple_arity_check_ok_0874
 24202 00012138 FF742410                	push qword [rsp + 8 * 2]
 24203 0001213C 6A01                    	push 1
 24204 0001213E E9A6530000              	jmp L_error_incorrect_arity_simple
 24205                                  .L_lambda_simple_arity_check_ok_0874:
 24206 00012143 C8000000                	enter 0, 0
 24207                                  	; preparing a tail-call
 24208                                  	; preparing a non-tail-call
 24209 00012147 488B4520                	mov rax, PARAM(0)	; param v
 24210 0001214B 50                      	push rax
 24211 0001214C 6A01                    	push 1	; arg count
 24212 0001214E 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24213 00012156 803805                  	cmp byte [rax], T_undefined
 24214 00012159 0F84A4520000            	je L_error_fvar_undefined
 24215 0001215F 803804                  	cmp byte [rax], T_closure
 24216 00012162 0F851F530000            	jne L_error_non_closure
 24217 00012168 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24218 0001216B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24219 0001216E 50                      	push rax
 24220 0001216F 48B8-                   	mov rax, L_constants + 2135
 24220 00012171 [5708000000000000] 
 24221 00012179 50                      	push rax
 24222 0001217A 488B4520                	mov rax, PARAM(0)	; param v
 24223 0001217E 50                      	push rax
 24224 0001217F 6A03                    	push 3	; arg count
 24225 00012181 488B4510                	mov rax, ENV
 24226 00012185 488B00                  	mov rax, qword [rax + 8 * 0]
 24227 00012188 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24228 0001218B 488B00                  	mov rax, qword [rax]
 24229 0001218E 803804                  	cmp byte [rax], T_closure
 24230 00012191 0F85F0520000            	jne L_error_non_closure
 24231 00012197 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24232 0001219A FF7508                  	push qword [rbp + 8 *1]
 24233 0001219D 4989C0                  	mov r8, rax
 24234 000121A0 488B5D18                	mov rbx, COUNT
 24235 000121A4 4883C303                	add rbx,3
 24236 000121A8 48C1E303                	shl rbx,3
 24237 000121AC 4801EB                  	add rbx, rbp
 24238 000121AF 488B6D00                	mov rbp, [rbp]
 24239 000121B3 B900000000              	mov rcx,0
 24240 000121B8 BA06000000              	mov rdx, 6
 24241 000121BD 4889D0                  	mov rax, rdx
 24242 000121C0 48FFC8                  	dec rax
 24243 000121C3 48C1E003                	shl rax,3
 24244 000121C7 4801E0                  	add rax, rsp
 24245                                  	.L_tc_recycle_frame_loop_098a:
 24246 000121CA 4839D1                  	cmp rcx, rdx
 24247 000121CD 7414                    	je .L_tc_recycle_frame_done_098a
 24248 000121CF 4C8B08                  	mov r9, qword [rax]
 24249 000121D2 4C890B                  	mov qword [rbx],r9
 24250 000121D5 4883E808                	sub rax,8
 24251 000121D9 4883EB08                	sub rbx,8
 24252 000121DD 4883C101                	add rcx,1
 24253 000121E1 EBE7                    	jmp .L_tc_recycle_frame_loop_098a
 24254                                  	.L_tc_recycle_frame_done_098a:
 24255 000121E3 4883C308                	add rbx,8
 24256 000121E7 4889DC                  	mov rsp,rbx
 24257 000121EA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24258 000121EE C9                      	leave
 24259 000121EF C21800                  	ret AND_KILL_FRAME(1)
 24260                                  .L_lambda_simple_end_0783:	; new closure is in rax
 24261 000121F2 C9                      	leave
 24262 000121F3 C21800                  	ret AND_KILL_FRAME(1)
 24263                                  .L_lambda_simple_end_0781:	; new closure is in rax
 24264 000121F6 803804                  	cmp byte [rax], T_closure
 24265 000121F9 0F8588520000            	jne L_error_non_closure
 24266 000121FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24267 00012202 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24268 00012205 48890425[B7170000]      	mov qword [free_var_141], rax
 24269 0001220D 48B8-                   	mov rax, sob_void
 24269 0001220F [0000000000000000] 
 24270                                  
 24271 00012217 4889C7                  	mov rdi, rax
 24272 0001221A E866550000              	call print_sexpr_if_not_void
 24273 0001221F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24274 00012224 E807530000              	call malloc
 24275 00012229 50                      	push rax
 24276 0001222A BF00000000              	mov rdi, 8 * 0	; new rib
 24277 0001222F E8FC520000              	call malloc
 24278 00012234 50                      	push rax
 24279 00012235 BF08000000              	mov rdi, 8 * 1	; extended env
 24280 0001223A E8F1520000              	call malloc
 24281 0001223F 488B7D10                	mov rdi, ENV
 24282 00012243 BE00000000              	mov rsi, 0
 24283 00012248 BA01000000              	mov rdx, 1
 24284                                  .L_lambda_simple_env_loop_0784:	; ext_env[i + 1] <-- env[i]
 24285 0001224D 4883FE00                	cmp rsi, 0
 24286 00012251 7410                    	je .L_lambda_simple_env_end_0784
 24287 00012253 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24288 00012257 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24289 0001225B 48FFC6                  	inc rsi
 24290 0001225E 48FFC2                  	inc rdx
 24291 00012261 EBEA                    	jmp .L_lambda_simple_env_loop_0784
 24292                                  .L_lambda_simple_env_end_0784:
 24293 00012263 5B                      	pop rbx
 24294 00012264 BE00000000              	mov rsi, 0
 24295                                  .L_lambda_simple_params_loop_0784:	; copy params
 24296 00012269 4883FE00                	cmp rsi, 0
 24297 0001226D 740E                    	je .L_lambda_simple_params_end_0784
 24298 0001226F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24299 00012274 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24300 00012278 48FFC6                  	inc rsi
 24301 0001227B EBEC                    	jmp .L_lambda_simple_params_loop_0784
 24302                                  .L_lambda_simple_params_end_0784:
 24303 0001227D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24304 00012280 4889C3                  	mov rbx, rax
 24305 00012283 58                      	pop rax
 24306 00012284 C60004                  	mov byte [rax], T_closure
 24307 00012287 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24308 0001228B 48C74009[98220100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0784
 24309 00012293 E9B6000000              	jmp .L_lambda_simple_end_0784
 24310                                  .L_lambda_simple_code_0784:	; lambda-simple body
 24311 00012298 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24312 0001229E 740B                    	je .L_lambda_simple_arity_check_ok_0875
 24313 000122A0 FF742410                	push qword [rsp + 8 * 2]
 24314 000122A4 6A01                    	push 1
 24315 000122A6 E93E520000              	jmp L_error_incorrect_arity_simple
 24316                                  .L_lambda_simple_arity_check_ok_0875:
 24317 000122AB C8000000                	enter 0, 0
 24318                                  	; preparing a tail-call
 24319 000122AF 488B4520                	mov rax, PARAM(0)	; param n
 24320 000122B3 50                      	push rax
 24321                                  	; preparing a non-tail-call
 24322 000122B4 6A00                    	push 0	; arg count
 24323 000122B6 488B0425[95170000]      	mov rax, qword [free_var_139]	; free var trng
 24324 000122BE 803805                  	cmp byte [rax], T_undefined
 24325 000122C1 0F843C510000            	je L_error_fvar_undefined
 24326 000122C7 803804                  	cmp byte [rax], T_closure
 24327 000122CA 0F85B7510000            	jne L_error_non_closure
 24328 000122D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24329 000122D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24330 000122D6 50                      	push rax
 24331 000122D7 6A02                    	push 2	; arg count
 24332 000122D9 488B0425[1F160000]      	mov rax, qword [free_var_117]	; free var remainder
 24333 000122E1 803805                  	cmp byte [rax], T_undefined
 24334 000122E4 0F8419510000            	je L_error_fvar_undefined
 24335 000122EA 803804                  	cmp byte [rax], T_closure
 24336 000122ED 0F8594510000            	jne L_error_non_closure
 24337 000122F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24338 000122F6 FF7508                  	push qword [rbp + 8 *1]
 24339 000122F9 4989C0                  	mov r8, rax
 24340 000122FC 488B5D18                	mov rbx, COUNT
 24341 00012300 4883C303                	add rbx,3
 24342 00012304 48C1E303                	shl rbx,3
 24343 00012308 4801EB                  	add rbx, rbp
 24344 0001230B 488B6D00                	mov rbp, [rbp]
 24345 0001230F B900000000              	mov rcx,0
 24346 00012314 BA05000000              	mov rdx, 5
 24347 00012319 4889D0                  	mov rax, rdx
 24348 0001231C 48FFC8                  	dec rax
 24349 0001231F 48C1E003                	shl rax,3
 24350 00012323 4801E0                  	add rax, rsp
 24351                                  	.L_tc_recycle_frame_loop_098b:
 24352 00012326 4839D1                  	cmp rcx, rdx
 24353 00012329 7414                    	je .L_tc_recycle_frame_done_098b
 24354 0001232B 4C8B08                  	mov r9, qword [rax]
 24355 0001232E 4C890B                  	mov qword [rbx],r9
 24356 00012331 4883E808                	sub rax,8
 24357 00012335 4883EB08                	sub rbx,8
 24358 00012339 4883C101                	add rcx,1
 24359 0001233D EBE7                    	jmp .L_tc_recycle_frame_loop_098b
 24360                                  	.L_tc_recycle_frame_done_098b:
 24361 0001233F 4883C308                	add rbx,8
 24362 00012343 4889DC                  	mov rsp,rbx
 24363 00012346 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24364 0001234A C9                      	leave
 24365 0001234B C21800                  	ret AND_KILL_FRAME(1)
 24366                                  .L_lambda_simple_end_0784:	; new closure is in rax
 24367 0001234E 48890425[DB150000]      	mov qword [free_var_113], rax
 24368 00012356 48B8-                   	mov rax, sob_void
 24368 00012358 [0000000000000000] 
 24369                                  
 24370 00012360 4889C7                  	mov rdi, rax
 24371 00012363 E81D540000              	call print_sexpr_if_not_void
 24372 00012368 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24373 0001236D E8BE510000              	call malloc
 24374 00012372 50                      	push rax
 24375 00012373 BF00000000              	mov rdi, 8 * 0	; new rib
 24376 00012378 E8B3510000              	call malloc
 24377 0001237D 50                      	push rax
 24378 0001237E BF08000000              	mov rdi, 8 * 1	; extended env
 24379 00012383 E8A8510000              	call malloc
 24380 00012388 488B7D10                	mov rdi, ENV
 24381 0001238C BE00000000              	mov rsi, 0
 24382 00012391 BA01000000              	mov rdx, 1
 24383                                  .L_lambda_simple_env_loop_0785:	; ext_env[i + 1] <-- env[i]
 24384 00012396 4883FE00                	cmp rsi, 0
 24385 0001239A 7410                    	je .L_lambda_simple_env_end_0785
 24386 0001239C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24387 000123A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24388 000123A4 48FFC6                  	inc rsi
 24389 000123A7 48FFC2                  	inc rdx
 24390 000123AA EBEA                    	jmp .L_lambda_simple_env_loop_0785
 24391                                  .L_lambda_simple_env_end_0785:
 24392 000123AC 5B                      	pop rbx
 24393 000123AD BE00000000              	mov rsi, 0
 24394                                  .L_lambda_simple_params_loop_0785:	; copy params
 24395 000123B2 4883FE00                	cmp rsi, 0
 24396 000123B6 740E                    	je .L_lambda_simple_params_end_0785
 24397 000123B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24398 000123BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24399 000123C1 48FFC6                  	inc rsi
 24400 000123C4 EBEC                    	jmp .L_lambda_simple_params_loop_0785
 24401                                  .L_lambda_simple_params_end_0785:
 24402 000123C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24403 000123C9 4889C3                  	mov rbx, rax
 24404 000123CC 58                      	pop rax
 24405 000123CD C60004                  	mov byte [rax], T_closure
 24406 000123D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24407 000123D4 48C74009[E1230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0785
 24408 000123DC E99E000000              	jmp .L_lambda_simple_end_0785
 24409                                  .L_lambda_simple_code_0785:	; lambda-simple body
 24410 000123E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24411 000123E7 740B                    	je .L_lambda_simple_arity_check_ok_0876
 24412 000123E9 FF742410                	push qword [rsp + 8 * 2]
 24413 000123ED 6A01                    	push 1
 24414 000123EF E9F5500000              	jmp L_error_incorrect_arity_simple
 24415                                  .L_lambda_simple_arity_check_ok_0876:
 24416 000123F4 C8000000                	enter 0, 0
 24417                                  	; preparing a tail-call
 24418 000123F8 488B4520                	mov rax, PARAM(0)	; param x
 24419 000123FC 50                      	push rax
 24420 000123FD 48B8-                   	mov rax, L_constants + 2135
 24420 000123FF [5708000000000000] 
 24421 00012407 50                      	push rax
 24422 00012408 6A02                    	push 2	; arg count
 24423 0001240A 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 24424 00012412 803805                  	cmp byte [rax], T_undefined
 24425 00012415 0F84E84F0000            	je L_error_fvar_undefined
 24426 0001241B 803804                  	cmp byte [rax], T_closure
 24427 0001241E 0F8563500000            	jne L_error_non_closure
 24428 00012424 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24429 00012427 FF7508                  	push qword [rbp + 8 *1]
 24430 0001242A 4989C0                  	mov r8, rax
 24431 0001242D 488B5D18                	mov rbx, COUNT
 24432 00012431 4883C303                	add rbx,3
 24433 00012435 48C1E303                	shl rbx,3
 24434 00012439 4801EB                  	add rbx, rbp
 24435 0001243C 488B6D00                	mov rbp, [rbp]
 24436 00012440 B900000000              	mov rcx,0
 24437 00012445 BA05000000              	mov rdx, 5
 24438 0001244A 4889D0                  	mov rax, rdx
 24439 0001244D 48FFC8                  	dec rax
 24440 00012450 48C1E003                	shl rax,3
 24441 00012454 4801E0                  	add rax, rsp
 24442                                  	.L_tc_recycle_frame_loop_098c:
 24443 00012457 4839D1                  	cmp rcx, rdx
 24444 0001245A 7414                    	je .L_tc_recycle_frame_done_098c
 24445 0001245C 4C8B08                  	mov r9, qword [rax]
 24446 0001245F 4C890B                  	mov qword [rbx],r9
 24447 00012462 4883E808                	sub rax,8
 24448 00012466 4883EB08                	sub rbx,8
 24449 0001246A 4883C101                	add rcx,1
 24450 0001246E EBE7                    	jmp .L_tc_recycle_frame_loop_098c
 24451                                  	.L_tc_recycle_frame_done_098c:
 24452 00012470 4883C308                	add rbx,8
 24453 00012474 4889DC                  	mov rsp,rbx
 24454 00012477 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24455 0001247B C9                      	leave
 24456 0001247C C21800                  	ret AND_KILL_FRAME(1)
 24457                                  .L_lambda_simple_end_0785:	; new closure is in rax
 24458 0001247F 48890425[CA150000]      	mov qword [free_var_112], rax
 24459 00012487 48B8-                   	mov rax, sob_void
 24459 00012489 [0000000000000000] 
 24460                                  
 24461 00012491 4889C7                  	mov rdi, rax
 24462 00012494 E8EC520000              	call print_sexpr_if_not_void
 24463 00012499 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24464 0001249E E88D500000              	call malloc
 24465 000124A3 50                      	push rax
 24466 000124A4 BF00000000              	mov rdi, 8 * 0	; new rib
 24467 000124A9 E882500000              	call malloc
 24468 000124AE 50                      	push rax
 24469 000124AF BF08000000              	mov rdi, 8 * 1	; extended env
 24470 000124B4 E877500000              	call malloc
 24471 000124B9 488B7D10                	mov rdi, ENV
 24472 000124BD BE00000000              	mov rsi, 0
 24473 000124C2 BA01000000              	mov rdx, 1
 24474                                  .L_lambda_simple_env_loop_0786:	; ext_env[i + 1] <-- env[i]
 24475 000124C7 4883FE00                	cmp rsi, 0
 24476 000124CB 7410                    	je .L_lambda_simple_env_end_0786
 24477 000124CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24478 000124D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24479 000124D5 48FFC6                  	inc rsi
 24480 000124D8 48FFC2                  	inc rdx
 24481 000124DB EBEA                    	jmp .L_lambda_simple_env_loop_0786
 24482                                  .L_lambda_simple_env_end_0786:
 24483 000124DD 5B                      	pop rbx
 24484 000124DE BE00000000              	mov rsi, 0
 24485                                  .L_lambda_simple_params_loop_0786:	; copy params
 24486 000124E3 4883FE00                	cmp rsi, 0
 24487 000124E7 740E                    	je .L_lambda_simple_params_end_0786
 24488 000124E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24489 000124EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24490 000124F2 48FFC6                  	inc rsi
 24491 000124F5 EBEC                    	jmp .L_lambda_simple_params_loop_0786
 24492                                  .L_lambda_simple_params_end_0786:
 24493 000124F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24494 000124FA 4889C3                  	mov rbx, rax
 24495 000124FD 58                      	pop rax
 24496 000124FE C60004                  	mov byte [rax], T_closure
 24497 00012501 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24498 00012505 48C74009[12250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0786
 24499 0001250D E99E000000              	jmp .L_lambda_simple_end_0786
 24500                                  .L_lambda_simple_code_0786:	; lambda-simple body
 24501 00012512 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24502 00012518 740B                    	je .L_lambda_simple_arity_check_ok_0877
 24503 0001251A FF742410                	push qword [rsp + 8 * 2]
 24504 0001251E 6A01                    	push 1
 24505 00012520 E9C44F0000              	jmp L_error_incorrect_arity_simple
 24506                                  .L_lambda_simple_arity_check_ok_0877:
 24507 00012525 C8000000                	enter 0, 0
 24508                                  	; preparing a tail-call
 24509 00012529 48B8-                   	mov rax, L_constants + 2135
 24509 0001252B [5708000000000000] 
 24510 00012533 50                      	push rax
 24511 00012534 488B4520                	mov rax, PARAM(0)	; param x
 24512 00012538 50                      	push rax
 24513 00012539 6A02                    	push 2	; arg count
 24514 0001253B 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 24515 00012543 803805                  	cmp byte [rax], T_undefined
 24516 00012546 0F84B74E0000            	je L_error_fvar_undefined
 24517 0001254C 803804                  	cmp byte [rax], T_closure
 24518 0001254F 0F85324F0000            	jne L_error_non_closure
 24519 00012555 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24520 00012558 FF7508                  	push qword [rbp + 8 *1]
 24521 0001255B 4989C0                  	mov r8, rax
 24522 0001255E 488B5D18                	mov rbx, COUNT
 24523 00012562 4883C303                	add rbx,3
 24524 00012566 48C1E303                	shl rbx,3
 24525 0001256A 4801EB                  	add rbx, rbp
 24526 0001256D 488B6D00                	mov rbp, [rbp]
 24527 00012571 B900000000              	mov rcx,0
 24528 00012576 BA05000000              	mov rdx, 5
 24529 0001257B 4889D0                  	mov rax, rdx
 24530 0001257E 48FFC8                  	dec rax
 24531 00012581 48C1E003                	shl rax,3
 24532 00012585 4801E0                  	add rax, rsp
 24533                                  	.L_tc_recycle_frame_loop_098d:
 24534 00012588 4839D1                  	cmp rcx, rdx
 24535 0001258B 7414                    	je .L_tc_recycle_frame_done_098d
 24536 0001258D 4C8B08                  	mov r9, qword [rax]
 24537 00012590 4C890B                  	mov qword [rbx],r9
 24538 00012593 4883E808                	sub rax,8
 24539 00012597 4883EB08                	sub rbx,8
 24540 0001259B 4883C101                	add rcx,1
 24541 0001259F EBE7                    	jmp .L_tc_recycle_frame_loop_098d
 24542                                  	.L_tc_recycle_frame_done_098d:
 24543 000125A1 4883C308                	add rbx,8
 24544 000125A5 4889DC                  	mov rsp,rbx
 24545 000125A8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24546 000125AC C9                      	leave
 24547 000125AD C21800                  	ret AND_KILL_FRAME(1)
 24548                                  .L_lambda_simple_end_0786:	; new closure is in rax
 24549 000125B0 48890425[42150000]      	mov qword [free_var_104], rax
 24550 000125B8 48B8-                   	mov rax, sob_void
 24550 000125BA [0000000000000000] 
 24551                                  
 24552 000125C2 4889C7                  	mov rdi, rax
 24553 000125C5 E8BB510000              	call print_sexpr_if_not_void
 24554 000125CA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24555 000125CF E85C4F0000              	call malloc
 24556 000125D4 50                      	push rax
 24557 000125D5 BF00000000              	mov rdi, 8 * 0	; new rib
 24558 000125DA E8514F0000              	call malloc
 24559 000125DF 50                      	push rax
 24560 000125E0 BF08000000              	mov rdi, 8 * 1	; extended env
 24561 000125E5 E8464F0000              	call malloc
 24562 000125EA 488B7D10                	mov rdi, ENV
 24563 000125EE BE00000000              	mov rsi, 0
 24564 000125F3 BA01000000              	mov rdx, 1
 24565                                  .L_lambda_simple_env_loop_0787:	; ext_env[i + 1] <-- env[i]
 24566 000125F8 4883FE00                	cmp rsi, 0
 24567 000125FC 7410                    	je .L_lambda_simple_env_end_0787
 24568 000125FE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24569 00012602 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24570 00012606 48FFC6                  	inc rsi
 24571 00012609 48FFC2                  	inc rdx
 24572 0001260C EBEA                    	jmp .L_lambda_simple_env_loop_0787
 24573                                  .L_lambda_simple_env_end_0787:
 24574 0001260E 5B                      	pop rbx
 24575 0001260F BE00000000              	mov rsi, 0
 24576                                  .L_lambda_simple_params_loop_0787:	; copy params
 24577 00012614 4883FE00                	cmp rsi, 0
 24578 00012618 740E                    	je .L_lambda_simple_params_end_0787
 24579 0001261A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24580 0001261F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24581 00012623 48FFC6                  	inc rsi
 24582 00012626 EBEC                    	jmp .L_lambda_simple_params_loop_0787
 24583                                  .L_lambda_simple_params_end_0787:
 24584 00012628 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24585 0001262B 4889C3                  	mov rbx, rax
 24586 0001262E 58                      	pop rax
 24587 0001262F C60004                  	mov byte [rax], T_closure
 24588 00012632 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24589 00012636 48C74009[43260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0787
 24590 0001263E E9C1000000              	jmp .L_lambda_simple_end_0787
 24591                                  .L_lambda_simple_code_0787:	; lambda-simple body
 24592 00012643 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24593 00012649 740B                    	je .L_lambda_simple_arity_check_ok_0878
 24594 0001264B FF742410                	push qword [rsp + 8 * 2]
 24595 0001264F 6A01                    	push 1
 24596 00012651 E9934E0000              	jmp L_error_incorrect_arity_simple
 24597                                  .L_lambda_simple_arity_check_ok_0878:
 24598 00012656 C8000000                	enter 0, 0
 24599                                  	; preparing a tail-call
 24600                                  	; preparing a non-tail-call
 24601 0001265A 48B8-                   	mov rax, L_constants + 3190
 24601 0001265C [760C000000000000] 
 24602 00012664 50                      	push rax
 24603 00012665 488B4520                	mov rax, PARAM(0)	; param n
 24604 00012669 50                      	push rax
 24605 0001266A 6A02                    	push 2	; arg count
 24606 0001266C 488B0425[1F160000]      	mov rax, qword [free_var_117]	; free var remainder
 24607 00012674 803805                  	cmp byte [rax], T_undefined
 24608 00012677 0F84864D0000            	je L_error_fvar_undefined
 24609 0001267D 803804                  	cmp byte [rax], T_closure
 24610 00012680 0F85014E0000            	jne L_error_non_closure
 24611 00012686 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24612 00012689 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24613 0001268C 50                      	push rax
 24614 0001268D 6A01                    	push 1	; arg count
 24615 0001268F 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 24616 00012697 803805                  	cmp byte [rax], T_undefined
 24617 0001269A 0F84634D0000            	je L_error_fvar_undefined
 24618 000126A0 803804                  	cmp byte [rax], T_closure
 24619 000126A3 0F85DE4D0000            	jne L_error_non_closure
 24620 000126A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24621 000126AC FF7508                  	push qword [rbp + 8 *1]
 24622 000126AF 4989C0                  	mov r8, rax
 24623 000126B2 488B5D18                	mov rbx, COUNT
 24624 000126B6 4883C303                	add rbx,3
 24625 000126BA 48C1E303                	shl rbx,3
 24626 000126BE 4801EB                  	add rbx, rbp
 24627 000126C1 488B6D00                	mov rbp, [rbp]
 24628 000126C5 B900000000              	mov rcx,0
 24629 000126CA BA04000000              	mov rdx, 4
 24630 000126CF 4889D0                  	mov rax, rdx
 24631 000126D2 48FFC8                  	dec rax
 24632 000126D5 48C1E003                	shl rax,3
 24633 000126D9 4801E0                  	add rax, rsp
 24634                                  	.L_tc_recycle_frame_loop_098e:
 24635 000126DC 4839D1                  	cmp rcx, rdx
 24636 000126DF 7414                    	je .L_tc_recycle_frame_done_098e
 24637 000126E1 4C8B08                  	mov r9, qword [rax]
 24638 000126E4 4C890B                  	mov qword [rbx],r9
 24639 000126E7 4883E808                	sub rax,8
 24640 000126EB 4883EB08                	sub rbx,8
 24641 000126EF 4883C101                	add rcx,1
 24642 000126F3 EBE7                    	jmp .L_tc_recycle_frame_loop_098e
 24643                                  	.L_tc_recycle_frame_done_098e:
 24644 000126F5 4883C308                	add rbx,8
 24645 000126F9 4889DC                  	mov rsp,rbx
 24646 000126FC 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24647 00012700 C9                      	leave
 24648 00012701 C21800                  	ret AND_KILL_FRAME(1)
 24649                                  .L_lambda_simple_end_0787:	; new closure is in rax
 24650 00012704 48890425[DD130000]      	mov qword [free_var_83], rax
 24651 0001270C 48B8-                   	mov rax, sob_void
 24651 0001270E [0000000000000000] 
 24652                                  
 24653 00012716 4889C7                  	mov rdi, rax
 24654 00012719 E867500000              	call print_sexpr_if_not_void
 24655 0001271E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24656 00012723 E8084E0000              	call malloc
 24657 00012728 50                      	push rax
 24658 00012729 BF00000000              	mov rdi, 8 * 0	; new rib
 24659 0001272E E8FD4D0000              	call malloc
 24660 00012733 50                      	push rax
 24661 00012734 BF08000000              	mov rdi, 8 * 1	; extended env
 24662 00012739 E8F24D0000              	call malloc
 24663 0001273E 488B7D10                	mov rdi, ENV
 24664 00012742 BE00000000              	mov rsi, 0
 24665 00012747 BA01000000              	mov rdx, 1
 24666                                  .L_lambda_simple_env_loop_0788:	; ext_env[i + 1] <-- env[i]
 24667 0001274C 4883FE00                	cmp rsi, 0
 24668 00012750 7410                    	je .L_lambda_simple_env_end_0788
 24669 00012752 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24670 00012756 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24671 0001275A 48FFC6                  	inc rsi
 24672 0001275D 48FFC2                  	inc rdx
 24673 00012760 EBEA                    	jmp .L_lambda_simple_env_loop_0788
 24674                                  .L_lambda_simple_env_end_0788:
 24675 00012762 5B                      	pop rbx
 24676 00012763 BE00000000              	mov rsi, 0
 24677                                  .L_lambda_simple_params_loop_0788:	; copy params
 24678 00012768 4883FE00                	cmp rsi, 0
 24679 0001276C 740E                    	je .L_lambda_simple_params_end_0788
 24680 0001276E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24681 00012773 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24682 00012777 48FFC6                  	inc rsi
 24683 0001277A EBEC                    	jmp .L_lambda_simple_params_loop_0788
 24684                                  .L_lambda_simple_params_end_0788:
 24685 0001277C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24686 0001277F 4889C3                  	mov rbx, rax
 24687 00012782 58                      	pop rax
 24688 00012783 C60004                  	mov byte [rax], T_closure
 24689 00012786 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24690 0001278A 48C74009[97270100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0788
 24691 00012792 E9B6000000              	jmp .L_lambda_simple_end_0788
 24692                                  .L_lambda_simple_code_0788:	; lambda-simple body
 24693 00012797 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24694 0001279D 740B                    	je .L_lambda_simple_arity_check_ok_0879
 24695 0001279F FF742410                	push qword [rsp + 8 * 2]
 24696 000127A3 6A01                    	push 1
 24697 000127A5 E93F4D0000              	jmp L_error_incorrect_arity_simple
 24698                                  .L_lambda_simple_arity_check_ok_0879:
 24699 000127AA C8000000                	enter 0, 0
 24700                                  	; preparing a tail-call
 24701                                  	; preparing a non-tail-call
 24702 000127AE 488B4520                	mov rax, PARAM(0)	; param n
 24703 000127B2 50                      	push rax
 24704 000127B3 6A01                    	push 1	; arg count
 24705 000127B5 488B0425[DD130000]      	mov rax, qword [free_var_83]	; free var even?
 24706 000127BD 803805                  	cmp byte [rax], T_undefined
 24707 000127C0 0F843D4C0000            	je L_error_fvar_undefined
 24708 000127C6 803804                  	cmp byte [rax], T_closure
 24709 000127C9 0F85B84C0000            	jne L_error_non_closure
 24710 000127CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24711 000127D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24712 000127D5 50                      	push rax
 24713 000127D6 6A01                    	push 1	; arg count
 24714 000127D8 488B0425[64150000]      	mov rax, qword [free_var_106]	; free var not
 24715 000127E0 803805                  	cmp byte [rax], T_undefined
 24716 000127E3 0F841A4C0000            	je L_error_fvar_undefined
 24717 000127E9 803804                  	cmp byte [rax], T_closure
 24718 000127EC 0F85954C0000            	jne L_error_non_closure
 24719 000127F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24720 000127F5 FF7508                  	push qword [rbp + 8 *1]
 24721 000127F8 4989C0                  	mov r8, rax
 24722 000127FB 488B5D18                	mov rbx, COUNT
 24723 000127FF 4883C303                	add rbx,3
 24724 00012803 48C1E303                	shl rbx,3
 24725 00012807 4801EB                  	add rbx, rbp
 24726 0001280A 488B6D00                	mov rbp, [rbp]
 24727 0001280E B900000000              	mov rcx,0
 24728 00012813 BA04000000              	mov rdx, 4
 24729 00012818 4889D0                  	mov rax, rdx
 24730 0001281B 48FFC8                  	dec rax
 24731 0001281E 48C1E003                	shl rax,3
 24732 00012822 4801E0                  	add rax, rsp
 24733                                  	.L_tc_recycle_frame_loop_098f:
 24734 00012825 4839D1                  	cmp rcx, rdx
 24735 00012828 7414                    	je .L_tc_recycle_frame_done_098f
 24736 0001282A 4C8B08                  	mov r9, qword [rax]
 24737 0001282D 4C890B                  	mov qword [rbx],r9
 24738 00012830 4883E808                	sub rax,8
 24739 00012834 4883EB08                	sub rbx,8
 24740 00012838 4883C101                	add rcx,1
 24741 0001283C EBE7                    	jmp .L_tc_recycle_frame_loop_098f
 24742                                  	.L_tc_recycle_frame_done_098f:
 24743 0001283E 4883C308                	add rbx,8
 24744 00012842 4889DC                  	mov rsp,rbx
 24745 00012845 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24746 00012849 C9                      	leave
 24747 0001284A C21800                  	ret AND_KILL_FRAME(1)
 24748                                  .L_lambda_simple_end_0788:	; new closure is in rax
 24749 0001284D 48890425[97150000]      	mov qword [free_var_109], rax
 24750 00012855 48B8-                   	mov rax, sob_void
 24750 00012857 [0000000000000000] 
 24751                                  
 24752 0001285F 4889C7                  	mov rdi, rax
 24753 00012862 E81E4F0000              	call print_sexpr_if_not_void
 24754 00012867 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24755 0001286C E8BF4C0000              	call malloc
 24756 00012871 50                      	push rax
 24757 00012872 BF00000000              	mov rdi, 8 * 0	; new rib
 24758 00012877 E8B44C0000              	call malloc
 24759 0001287C 50                      	push rax
 24760 0001287D BF08000000              	mov rdi, 8 * 1	; extended env
 24761 00012882 E8A94C0000              	call malloc
 24762 00012887 488B7D10                	mov rdi, ENV
 24763 0001288B BE00000000              	mov rsi, 0
 24764 00012890 BA01000000              	mov rdx, 1
 24765                                  .L_lambda_simple_env_loop_0789:	; ext_env[i + 1] <-- env[i]
 24766 00012895 4883FE00                	cmp rsi, 0
 24767 00012899 7410                    	je .L_lambda_simple_env_end_0789
 24768 0001289B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24769 0001289F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24770 000128A3 48FFC6                  	inc rsi
 24771 000128A6 48FFC2                  	inc rdx
 24772 000128A9 EBEA                    	jmp .L_lambda_simple_env_loop_0789
 24773                                  .L_lambda_simple_env_end_0789:
 24774 000128AB 5B                      	pop rbx
 24775 000128AC BE00000000              	mov rsi, 0
 24776                                  .L_lambda_simple_params_loop_0789:	; copy params
 24777 000128B1 4883FE00                	cmp rsi, 0
 24778 000128B5 740E                    	je .L_lambda_simple_params_end_0789
 24779 000128B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24780 000128BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24781 000128C0 48FFC6                  	inc rsi
 24782 000128C3 EBEC                    	jmp .L_lambda_simple_params_loop_0789
 24783                                  .L_lambda_simple_params_end_0789:
 24784 000128C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24785 000128C8 4889C3                  	mov rbx, rax
 24786 000128CB 58                      	pop rax
 24787 000128CC C60004                  	mov byte [rax], T_closure
 24788 000128CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24789 000128D3 48C74009[E0280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0789
 24790 000128DB E9C8000000              	jmp .L_lambda_simple_end_0789
 24791                                  .L_lambda_simple_code_0789:	; lambda-simple body
 24792 000128E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24793 000128E6 740B                    	je .L_lambda_simple_arity_check_ok_087a
 24794 000128E8 FF742410                	push qword [rsp + 8 * 2]
 24795 000128EC 6A01                    	push 1
 24796 000128EE E9F64B0000              	jmp L_error_incorrect_arity_simple
 24797                                  .L_lambda_simple_arity_check_ok_087a:
 24798 000128F3 C8000000                	enter 0, 0
 24799                                  	; preparing a non-tail-call
 24800 000128F7 488B4520                	mov rax, PARAM(0)	; param x
 24801 000128FB 50                      	push rax
 24802 000128FC 6A01                    	push 1	; arg count
 24803 000128FE 488B0425[42150000]      	mov rax, qword [free_var_104]	; free var negative?
 24804 00012906 803805                  	cmp byte [rax], T_undefined
 24805 00012909 0F84F44A0000            	je L_error_fvar_undefined
 24806 0001290F 803804                  	cmp byte [rax], T_closure
 24807 00012912 0F856F4B0000            	jne L_error_non_closure
 24808 00012918 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24809 0001291B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24810 0001291E 483D[02000000]          	cmp rax, sob_boolean_false
 24811 00012924 747A                    	je .L_if_else_053a
 24812                                  	; preparing a tail-call
 24813 00012926 488B4520                	mov rax, PARAM(0)	; param x
 24814 0001292A 50                      	push rax
 24815 0001292B 6A01                    	push 1	; arg count
 24816 0001292D 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 24817 00012935 803805                  	cmp byte [rax], T_undefined
 24818 00012938 0F84C54A0000            	je L_error_fvar_undefined
 24819 0001293E 803804                  	cmp byte [rax], T_closure
 24820 00012941 0F85404B0000            	jne L_error_non_closure
 24821 00012947 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24822 0001294A FF7508                  	push qword [rbp + 8 *1]
 24823 0001294D 4989C0                  	mov r8, rax
 24824 00012950 488B5D18                	mov rbx, COUNT
 24825 00012954 4883C303                	add rbx,3
 24826 00012958 48C1E303                	shl rbx,3
 24827 0001295C 4801EB                  	add rbx, rbp
 24828 0001295F 488B6D00                	mov rbp, [rbp]
 24829 00012963 B900000000              	mov rcx,0
 24830 00012968 BA04000000              	mov rdx, 4
 24831 0001296D 4889D0                  	mov rax, rdx
 24832 00012970 48FFC8                  	dec rax
 24833 00012973 48C1E003                	shl rax,3
 24834 00012977 4801E0                  	add rax, rsp
 24835                                  	.L_tc_recycle_frame_loop_0990:
 24836 0001297A 4839D1                  	cmp rcx, rdx
 24837 0001297D 7414                    	je .L_tc_recycle_frame_done_0990
 24838 0001297F 4C8B08                  	mov r9, qword [rax]
 24839 00012982 4C890B                  	mov qword [rbx],r9
 24840 00012985 4883E808                	sub rax,8
 24841 00012989 4883EB08                	sub rbx,8
 24842 0001298D 4883C101                	add rcx,1
 24843 00012991 EBE7                    	jmp .L_tc_recycle_frame_loop_0990
 24844                                  	.L_tc_recycle_frame_done_0990:
 24845 00012993 4883C308                	add rbx,8
 24846 00012997 4889DC                  	mov rsp,rbx
 24847 0001299A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 24848 0001299E EB04                    	jmp .L_if_end_05c8
 24849                                  .L_if_else_053a:
 24850 000129A0 488B4520                	mov rax, PARAM(0)	; param x
 24851                                  .L_if_end_05c8:
 24852 000129A4 C9                      	leave
 24853 000129A5 C21800                  	ret AND_KILL_FRAME(1)
 24854                                  .L_lambda_simple_end_0789:	; new closure is in rax
 24855 000129A8 48890425[58100000]      	mov qword [free_var_30], rax
 24856 000129B0 48B8-                   	mov rax, sob_void
 24856 000129B2 [0000000000000000] 
 24857                                  
 24858 000129BA 4889C7                  	mov rdi, rax
 24859 000129BD E8C34D0000              	call print_sexpr_if_not_void
 24860 000129C2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24861 000129C7 E8644B0000              	call malloc
 24862 000129CC 50                      	push rax
 24863 000129CD BF00000000              	mov rdi, 8 * 0	; new rib
 24864 000129D2 E8594B0000              	call malloc
 24865 000129D7 50                      	push rax
 24866 000129D8 BF08000000              	mov rdi, 8 * 1	; extended env
 24867 000129DD E84E4B0000              	call malloc
 24868 000129E2 488B7D10                	mov rdi, ENV
 24869 000129E6 BE00000000              	mov rsi, 0
 24870 000129EB BA01000000              	mov rdx, 1
 24871                                  .L_lambda_simple_env_loop_078a:	; ext_env[i + 1] <-- env[i]
 24872 000129F0 4883FE00                	cmp rsi, 0
 24873 000129F4 7410                    	je .L_lambda_simple_env_end_078a
 24874 000129F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24875 000129FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24876 000129FE 48FFC6                  	inc rsi
 24877 00012A01 48FFC2                  	inc rdx
 24878 00012A04 EBEA                    	jmp .L_lambda_simple_env_loop_078a
 24879                                  .L_lambda_simple_env_end_078a:
 24880 00012A06 5B                      	pop rbx
 24881 00012A07 BE00000000              	mov rsi, 0
 24882                                  .L_lambda_simple_params_loop_078a:	; copy params
 24883 00012A0C 4883FE00                	cmp rsi, 0
 24884 00012A10 740E                    	je .L_lambda_simple_params_end_078a
 24885 00012A12 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24886 00012A17 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24887 00012A1B 48FFC6                  	inc rsi
 24888 00012A1E EBEC                    	jmp .L_lambda_simple_params_loop_078a
 24889                                  .L_lambda_simple_params_end_078a:
 24890 00012A20 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24891 00012A23 4889C3                  	mov rbx, rax
 24892 00012A26 58                      	pop rax
 24893 00012A27 C60004                  	mov byte [rax], T_closure
 24894 00012A2A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24895 00012A2E 48C74009[3B2A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078a
 24896 00012A36 E972070000              	jmp .L_lambda_simple_end_078a
 24897                                  .L_lambda_simple_code_078a:	; lambda-simple body
 24898 00012A3B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24899 00012A41 740B                    	je .L_lambda_simple_arity_check_ok_087b
 24900 00012A43 FF742410                	push qword [rsp + 8 * 2]
 24901 00012A47 6A02                    	push 2
 24902 00012A49 E99B4A0000              	jmp L_error_incorrect_arity_simple
 24903                                  .L_lambda_simple_arity_check_ok_087b:
 24904 00012A4E C8000000                	enter 0, 0
 24905                                  	; preparing a non-tail-call
 24906 00012A52 488B4520                	mov rax, PARAM(0)	; param e1
 24907 00012A56 50                      	push rax
 24908 00012A57 6A01                    	push 1	; arg count
 24909 00012A59 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
 24910 00012A61 803805                  	cmp byte [rax], T_undefined
 24911 00012A64 0F8499490000            	je L_error_fvar_undefined
 24912 00012A6A 803804                  	cmp byte [rax], T_closure
 24913 00012A6D 0F85144A0000            	jne L_error_non_closure
 24914 00012A73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24915 00012A76 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24916 00012A79 483D[02000000]          	cmp rax, sob_boolean_false
 24917 00012A7F 7429                    	je .L_if_else_053b
 24918                                  	; preparing a non-tail-call
 24919 00012A81 488B4528                	mov rax, PARAM(1)	; param e2
 24920 00012A85 50                      	push rax
 24921 00012A86 6A01                    	push 1	; arg count
 24922 00012A88 488B0425[B9150000]      	mov rax, qword [free_var_111]	; free var pair?
 24923 00012A90 803805                  	cmp byte [rax], T_undefined
 24924 00012A93 0F846A490000            	je L_error_fvar_undefined
 24925 00012A99 803804                  	cmp byte [rax], T_closure
 24926 00012A9C 0F85E5490000            	jne L_error_non_closure
 24927 00012AA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24928 00012AA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24929 00012AA8 EB0A                    	jmp .L_if_end_05c9
 24930                                  .L_if_else_053b:
 24931 00012AAA 48B8-                   	mov rax, L_constants + 2
 24931 00012AAC [0200000000000000] 
 24932                                  .L_if_end_05c9:
 24933 00012AB4 483D[02000000]          	cmp rax, sob_boolean_false
 24934 00012ABA 0F8452010000            	je .L_if_else_0547
 24935                                  	; preparing a non-tail-call
 24936                                  	; preparing a non-tail-call
 24937 00012AC0 488B4528                	mov rax, PARAM(1)	; param e2
 24938 00012AC4 50                      	push rax
 24939 00012AC5 6A01                    	push 1	; arg count
 24940 00012AC7 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 24941 00012ACF 803805                  	cmp byte [rax], T_undefined
 24942 00012AD2 0F842B490000            	je L_error_fvar_undefined
 24943 00012AD8 803804                  	cmp byte [rax], T_closure
 24944 00012ADB 0F85A6490000            	jne L_error_non_closure
 24945 00012AE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24946 00012AE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24947 00012AE7 50                      	push rax
 24948                                  	; preparing a non-tail-call
 24949 00012AE8 488B4520                	mov rax, PARAM(0)	; param e1
 24950 00012AEC 50                      	push rax
 24951 00012AED 6A01                    	push 1	; arg count
 24952 00012AEF 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 24953 00012AF7 803805                  	cmp byte [rax], T_undefined
 24954 00012AFA 0F8403490000            	je L_error_fvar_undefined
 24955 00012B00 803804                  	cmp byte [rax], T_closure
 24956 00012B03 0F857E490000            	jne L_error_non_closure
 24957 00012B09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24958 00012B0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24959 00012B0F 50                      	push rax
 24960 00012B10 6A02                    	push 2	; arg count
 24961 00012B12 488B0425[BB130000]      	mov rax, qword [free_var_81]	; free var equal?
 24962 00012B1A 803805                  	cmp byte [rax], T_undefined
 24963 00012B1D 0F84E0480000            	je L_error_fvar_undefined
 24964 00012B23 803804                  	cmp byte [rax], T_closure
 24965 00012B26 0F855B490000            	jne L_error_non_closure
 24966 00012B2C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24967 00012B2F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24968 00012B32 483D[02000000]          	cmp rax, sob_boolean_false
 24969 00012B38 0F84C5000000            	je .L_if_else_053c
 24970                                  	; preparing a tail-call
 24971                                  	; preparing a non-tail-call
 24972 00012B3E 488B4528                	mov rax, PARAM(1)	; param e2
 24973 00012B42 50                      	push rax
 24974 00012B43 6A01                    	push 1	; arg count
 24975 00012B45 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 24976 00012B4D 803805                  	cmp byte [rax], T_undefined
 24977 00012B50 0F84AD480000            	je L_error_fvar_undefined
 24978 00012B56 803804                  	cmp byte [rax], T_closure
 24979 00012B59 0F8528490000            	jne L_error_non_closure
 24980 00012B5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24981 00012B62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24982 00012B65 50                      	push rax
 24983                                  	; preparing a non-tail-call
 24984 00012B66 488B4520                	mov rax, PARAM(0)	; param e1
 24985 00012B6A 50                      	push rax
 24986 00012B6B 6A01                    	push 1	; arg count
 24987 00012B6D 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 24988 00012B75 803805                  	cmp byte [rax], T_undefined
 24989 00012B78 0F8485480000            	je L_error_fvar_undefined
 24990 00012B7E 803804                  	cmp byte [rax], T_closure
 24991 00012B81 0F8500490000            	jne L_error_non_closure
 24992 00012B87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24993 00012B8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24994 00012B8D 50                      	push rax
 24995 00012B8E 6A02                    	push 2	; arg count
 24996 00012B90 488B0425[BB130000]      	mov rax, qword [free_var_81]	; free var equal?
 24997 00012B98 803805                  	cmp byte [rax], T_undefined
 24998 00012B9B 0F8462480000            	je L_error_fvar_undefined
 24999 00012BA1 803804                  	cmp byte [rax], T_closure
 25000 00012BA4 0F85DD480000            	jne L_error_non_closure
 25001 00012BAA FF7001                  	push SOB_CLOSURE_ENV(rax)
 25002 00012BAD FF7508                  	push qword [rbp + 8 *1]
 25003 00012BB0 4989C0                  	mov r8, rax
 25004 00012BB3 488B5D18                	mov rbx, COUNT
 25005 00012BB7 4883C303                	add rbx,3
 25006 00012BBB 48C1E303                	shl rbx,3
 25007 00012BBF 4801EB                  	add rbx, rbp
 25008 00012BC2 488B6D00                	mov rbp, [rbp]
 25009 00012BC6 B900000000              	mov rcx,0
 25010 00012BCB BA05000000              	mov rdx, 5
 25011 00012BD0 4889D0                  	mov rax, rdx
 25012 00012BD3 48FFC8                  	dec rax
 25013 00012BD6 48C1E003                	shl rax,3
 25014 00012BDA 4801E0                  	add rax, rsp
 25015                                  	.L_tc_recycle_frame_loop_0991:
 25016 00012BDD 4839D1                  	cmp rcx, rdx
 25017 00012BE0 7414                    	je .L_tc_recycle_frame_done_0991
 25018 00012BE2 4C8B08                  	mov r9, qword [rax]
 25019 00012BE5 4C890B                  	mov qword [rbx],r9
 25020 00012BE8 4883E808                	sub rax,8
 25021 00012BEC 4883EB08                	sub rbx,8
 25022 00012BF0 4883C101                	add rcx,1
 25023 00012BF4 EBE7                    	jmp .L_tc_recycle_frame_loop_0991
 25024                                  	.L_tc_recycle_frame_done_0991:
 25025 00012BF6 4883C308                	add rbx,8
 25026 00012BFA 4889DC                  	mov rsp,rbx
 25027 00012BFD 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25028 00012C01 EB0A                    	jmp .L_if_end_05ca
 25029                                  .L_if_else_053c:
 25030 00012C03 48B8-                   	mov rax, L_constants + 2
 25030 00012C05 [0200000000000000] 
 25031                                  .L_if_end_05ca:
 25032 00012C0D E997050000              	jmp .L_if_end_05d5
 25033                                  .L_if_else_0547:
 25034                                  	; preparing a non-tail-call
 25035 00012C12 488B4520                	mov rax, PARAM(0)	; param e1
 25036 00012C16 50                      	push rax
 25037 00012C17 6A01                    	push 1	; arg count
 25038 00012C19 488B0425[2E180000]      	mov rax, qword [free_var_148]	; free var vector?
 25039 00012C21 803805                  	cmp byte [rax], T_undefined
 25040 00012C24 0F84D9470000            	je L_error_fvar_undefined
 25041 00012C2A 803804                  	cmp byte [rax], T_closure
 25042 00012C2D 0F8554480000            	jne L_error_non_closure
 25043 00012C33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25044 00012C36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25045 00012C39 483D[02000000]          	cmp rax, sob_boolean_false
 25046 00012C3F 0F84AF000000            	je .L_if_else_053e
 25047                                  	; preparing a non-tail-call
 25048 00012C45 488B4528                	mov rax, PARAM(1)	; param e2
 25049 00012C49 50                      	push rax
 25050 00012C4A 6A01                    	push 1	; arg count
 25051 00012C4C 488B0425[2E180000]      	mov rax, qword [free_var_148]	; free var vector?
 25052 00012C54 803805                  	cmp byte [rax], T_undefined
 25053 00012C57 0F84A6470000            	je L_error_fvar_undefined
 25054 00012C5D 803804                  	cmp byte [rax], T_closure
 25055 00012C60 0F8521480000            	jne L_error_non_closure
 25056 00012C66 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25057 00012C69 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25058 00012C6C 483D[02000000]          	cmp rax, sob_boolean_false
 25059 00012C72 7474                    	je .L_if_else_053d
 25060                                  	; preparing a non-tail-call
 25061                                  	; preparing a non-tail-call
 25062 00012C74 488B4528                	mov rax, PARAM(1)	; param e2
 25063 00012C78 50                      	push rax
 25064 00012C79 6A01                    	push 1	; arg count
 25065 00012C7B 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25066 00012C83 803805                  	cmp byte [rax], T_undefined
 25067 00012C86 0F8477470000            	je L_error_fvar_undefined
 25068 00012C8C 803804                  	cmp byte [rax], T_closure
 25069 00012C8F 0F85F2470000            	jne L_error_non_closure
 25070 00012C95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25071 00012C98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25072 00012C9B 50                      	push rax
 25073                                  	; preparing a non-tail-call
 25074 00012C9C 488B4520                	mov rax, PARAM(0)	; param e1
 25075 00012CA0 50                      	push rax
 25076 00012CA1 6A01                    	push 1	; arg count
 25077 00012CA3 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25078 00012CAB 803805                  	cmp byte [rax], T_undefined
 25079 00012CAE 0F844F470000            	je L_error_fvar_undefined
 25080 00012CB4 803804                  	cmp byte [rax], T_closure
 25081 00012CB7 0F85CA470000            	jne L_error_non_closure
 25082 00012CBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25083 00012CC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25084 00012CC3 50                      	push rax
 25085 00012CC4 6A02                    	push 2	; arg count
 25086 00012CC6 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 25087 00012CCE 803805                  	cmp byte [rax], T_undefined
 25088 00012CD1 0F842C470000            	je L_error_fvar_undefined
 25089 00012CD7 803804                  	cmp byte [rax], T_closure
 25090 00012CDA 0F85A7470000            	jne L_error_non_closure
 25091 00012CE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25092 00012CE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25093 00012CE6 EB0A                    	jmp .L_if_end_05cb
 25094                                  .L_if_else_053d:
 25095 00012CE8 48B8-                   	mov rax, L_constants + 2
 25095 00012CEA [0200000000000000] 
 25096                                  .L_if_end_05cb:
 25097 00012CF2 EB0A                    	jmp .L_if_end_05cc
 25098                                  .L_if_else_053e:
 25099 00012CF4 48B8-                   	mov rax, L_constants + 2
 25099 00012CF6 [0200000000000000] 
 25100                                  .L_if_end_05cc:
 25101 00012CFE 483D[02000000]          	cmp rax, sob_boolean_false
 25102 00012D04 0F84C8000000            	je .L_if_else_0546
 25103                                  	; preparing a tail-call
 25104                                  	; preparing a non-tail-call
 25105 00012D0A 488B4528                	mov rax, PARAM(1)	; param e2
 25106 00012D0E 50                      	push rax
 25107 00012D0F 6A01                    	push 1	; arg count
 25108 00012D11 488B0425[B7170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25109 00012D19 803805                  	cmp byte [rax], T_undefined
 25110 00012D1C 0F84E1460000            	je L_error_fvar_undefined
 25111 00012D22 803804                  	cmp byte [rax], T_closure
 25112 00012D25 0F855C470000            	jne L_error_non_closure
 25113 00012D2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25114 00012D2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25115 00012D31 50                      	push rax
 25116                                  	; preparing a non-tail-call
 25117 00012D32 488B4520                	mov rax, PARAM(0)	; param e1
 25118 00012D36 50                      	push rax
 25119 00012D37 6A01                    	push 1	; arg count
 25120 00012D39 488B0425[B7170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25121 00012D41 803805                  	cmp byte [rax], T_undefined
 25122 00012D44 0F84B9460000            	je L_error_fvar_undefined
 25123 00012D4A 803804                  	cmp byte [rax], T_closure
 25124 00012D4D 0F8534470000            	jne L_error_non_closure
 25125 00012D53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25126 00012D56 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25127 00012D59 50                      	push rax
 25128 00012D5A 6A02                    	push 2	; arg count
 25129 00012D5C 488B0425[BB130000]      	mov rax, qword [free_var_81]	; free var equal?
 25130 00012D64 803805                  	cmp byte [rax], T_undefined
 25131 00012D67 0F8496460000            	je L_error_fvar_undefined
 25132 00012D6D 803804                  	cmp byte [rax], T_closure
 25133 00012D70 0F8511470000            	jne L_error_non_closure
 25134 00012D76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25135 00012D79 FF7508                  	push qword [rbp + 8 *1]
 25136 00012D7C 4989C0                  	mov r8, rax
 25137 00012D7F 488B5D18                	mov rbx, COUNT
 25138 00012D83 4883C303                	add rbx,3
 25139 00012D87 48C1E303                	shl rbx,3
 25140 00012D8B 4801EB                  	add rbx, rbp
 25141 00012D8E 488B6D00                	mov rbp, [rbp]
 25142 00012D92 B900000000              	mov rcx,0
 25143 00012D97 BA05000000              	mov rdx, 5
 25144 00012D9C 4889D0                  	mov rax, rdx
 25145 00012D9F 48FFC8                  	dec rax
 25146 00012DA2 48C1E003                	shl rax,3
 25147 00012DA6 4801E0                  	add rax, rsp
 25148                                  	.L_tc_recycle_frame_loop_0992:
 25149 00012DA9 4839D1                  	cmp rcx, rdx
 25150 00012DAC 7414                    	je .L_tc_recycle_frame_done_0992
 25151 00012DAE 4C8B08                  	mov r9, qword [rax]
 25152 00012DB1 4C890B                  	mov qword [rbx],r9
 25153 00012DB4 4883E808                	sub rax,8
 25154 00012DB8 4883EB08                	sub rbx,8
 25155 00012DBC 4883C101                	add rcx,1
 25156 00012DC0 EBE7                    	jmp .L_tc_recycle_frame_loop_0992
 25157                                  	.L_tc_recycle_frame_done_0992:
 25158 00012DC2 4883C308                	add rbx,8
 25159 00012DC6 4889DC                  	mov rsp,rbx
 25160 00012DC9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25161 00012DCD E9D7030000              	jmp .L_if_end_05d4
 25162                                  .L_if_else_0546:
 25163                                  	; preparing a non-tail-call
 25164 00012DD2 488B4520                	mov rax, PARAM(0)	; param e1
 25165 00012DD6 50                      	push rax
 25166 00012DD7 6A01                    	push 1	; arg count
 25167 00012DD9 488B0425[84170000]      	mov rax, qword [free_var_138]	; free var string?
 25168 00012DE1 803805                  	cmp byte [rax], T_undefined
 25169 00012DE4 0F8419460000            	je L_error_fvar_undefined
 25170 00012DEA 803804                  	cmp byte [rax], T_closure
 25171 00012DED 0F8594460000            	jne L_error_non_closure
 25172 00012DF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25173 00012DF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25174 00012DF9 483D[02000000]          	cmp rax, sob_boolean_false
 25175 00012DFF 0F84AF000000            	je .L_if_else_0540
 25176                                  	; preparing a non-tail-call
 25177 00012E05 488B4528                	mov rax, PARAM(1)	; param e2
 25178 00012E09 50                      	push rax
 25179 00012E0A 6A01                    	push 1	; arg count
 25180 00012E0C 488B0425[84170000]      	mov rax, qword [free_var_138]	; free var string?
 25181 00012E14 803805                  	cmp byte [rax], T_undefined
 25182 00012E17 0F84E6450000            	je L_error_fvar_undefined
 25183 00012E1D 803804                  	cmp byte [rax], T_closure
 25184 00012E20 0F8561460000            	jne L_error_non_closure
 25185 00012E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25186 00012E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25187 00012E2C 483D[02000000]          	cmp rax, sob_boolean_false
 25188 00012E32 7474                    	je .L_if_else_053f
 25189                                  	; preparing a non-tail-call
 25190                                  	; preparing a non-tail-call
 25191 00012E34 488B4528                	mov rax, PARAM(1)	; param e2
 25192 00012E38 50                      	push rax
 25193 00012E39 6A01                    	push 1	; arg count
 25194 00012E3B 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 25195 00012E43 803805                  	cmp byte [rax], T_undefined
 25196 00012E46 0F84B7450000            	je L_error_fvar_undefined
 25197 00012E4C 803804                  	cmp byte [rax], T_closure
 25198 00012E4F 0F8532460000            	jne L_error_non_closure
 25199 00012E55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25200 00012E58 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25201 00012E5B 50                      	push rax
 25202                                  	; preparing a non-tail-call
 25203 00012E5C 488B4520                	mov rax, PARAM(0)	; param e1
 25204 00012E60 50                      	push rax
 25205 00012E61 6A01                    	push 1	; arg count
 25206 00012E63 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 25207 00012E6B 803805                  	cmp byte [rax], T_undefined
 25208 00012E6E 0F848F450000            	je L_error_fvar_undefined
 25209 00012E74 803804                  	cmp byte [rax], T_closure
 25210 00012E77 0F850A460000            	jne L_error_non_closure
 25211 00012E7D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25212 00012E80 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25213 00012E83 50                      	push rax
 25214 00012E84 6A02                    	push 2	; arg count
 25215 00012E86 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 25216 00012E8E 803805                  	cmp byte [rax], T_undefined
 25217 00012E91 0F846C450000            	je L_error_fvar_undefined
 25218 00012E97 803804                  	cmp byte [rax], T_closure
 25219 00012E9A 0F85E7450000            	jne L_error_non_closure
 25220 00012EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25221 00012EA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25222 00012EA6 EB0A                    	jmp .L_if_end_05cd
 25223                                  .L_if_else_053f:
 25224 00012EA8 48B8-                   	mov rax, L_constants + 2
 25224 00012EAA [0200000000000000] 
 25225                                  .L_if_end_05cd:
 25226 00012EB2 EB0A                    	jmp .L_if_end_05ce
 25227                                  .L_if_else_0540:
 25228 00012EB4 48B8-                   	mov rax, L_constants + 2
 25228 00012EB6 [0200000000000000] 
 25229                                  .L_if_end_05ce:
 25230 00012EBE 483D[02000000]          	cmp rax, sob_boolean_false
 25231 00012EC4 0F8482000000            	je .L_if_else_0545
 25232                                  	; preparing a tail-call
 25233 00012ECA 488B4528                	mov rax, PARAM(1)	; param e2
 25234 00012ECE 50                      	push rax
 25235 00012ECF 488B4520                	mov rax, PARAM(0)	; param e1
 25236 00012ED3 50                      	push rax
 25237 00012ED4 6A02                    	push 2	; arg count
 25238 00012ED6 488B0425[51170000]      	mov rax, qword [free_var_135]	; free var string=?
 25239 00012EDE 803805                  	cmp byte [rax], T_undefined
 25240 00012EE1 0F841C450000            	je L_error_fvar_undefined
 25241 00012EE7 803804                  	cmp byte [rax], T_closure
 25242 00012EEA 0F8597450000            	jne L_error_non_closure
 25243 00012EF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25244 00012EF3 FF7508                  	push qword [rbp + 8 *1]
 25245 00012EF6 4989C0                  	mov r8, rax
 25246 00012EF9 488B5D18                	mov rbx, COUNT
 25247 00012EFD 4883C303                	add rbx,3
 25248 00012F01 48C1E303                	shl rbx,3
 25249 00012F05 4801EB                  	add rbx, rbp
 25250 00012F08 488B6D00                	mov rbp, [rbp]
 25251 00012F0C B900000000              	mov rcx,0
 25252 00012F11 BA05000000              	mov rdx, 5
 25253 00012F16 4889D0                  	mov rax, rdx
 25254 00012F19 48FFC8                  	dec rax
 25255 00012F1C 48C1E003                	shl rax,3
 25256 00012F20 4801E0                  	add rax, rsp
 25257                                  	.L_tc_recycle_frame_loop_0993:
 25258 00012F23 4839D1                  	cmp rcx, rdx
 25259 00012F26 7414                    	je .L_tc_recycle_frame_done_0993
 25260 00012F28 4C8B08                  	mov r9, qword [rax]
 25261 00012F2B 4C890B                  	mov qword [rbx],r9
 25262 00012F2E 4883E808                	sub rax,8
 25263 00012F32 4883EB08                	sub rbx,8
 25264 00012F36 4883C101                	add rcx,1
 25265 00012F3A EBE7                    	jmp .L_tc_recycle_frame_loop_0993
 25266                                  	.L_tc_recycle_frame_done_0993:
 25267 00012F3C 4883C308                	add rbx,8
 25268 00012F40 4889DC                  	mov rsp,rbx
 25269 00012F43 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25270 00012F47 E95D020000              	jmp .L_if_end_05d3
 25271                                  .L_if_else_0545:
 25272                                  	; preparing a non-tail-call
 25273 00012F4C 488B4520                	mov rax, PARAM(0)	; param e1
 25274 00012F50 50                      	push rax
 25275 00012F51 6A01                    	push 1	; arg count
 25276 00012F53 488B0425[86150000]      	mov rax, qword [free_var_108]	; free var number?
 25277 00012F5B 803805                  	cmp byte [rax], T_undefined
 25278 00012F5E 0F849F440000            	je L_error_fvar_undefined
 25279 00012F64 803804                  	cmp byte [rax], T_closure
 25280 00012F67 0F851A450000            	jne L_error_non_closure
 25281 00012F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25282 00012F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25283 00012F73 483D[02000000]          	cmp rax, sob_boolean_false
 25284 00012F79 7429                    	je .L_if_else_0541
 25285                                  	; preparing a non-tail-call
 25286 00012F7B 488B4528                	mov rax, PARAM(1)	; param e2
 25287 00012F7F 50                      	push rax
 25288 00012F80 6A01                    	push 1	; arg count
 25289 00012F82 488B0425[86150000]      	mov rax, qword [free_var_108]	; free var number?
 25290 00012F8A 803805                  	cmp byte [rax], T_undefined
 25291 00012F8D 0F8470440000            	je L_error_fvar_undefined
 25292 00012F93 803804                  	cmp byte [rax], T_closure
 25293 00012F96 0F85EB440000            	jne L_error_non_closure
 25294 00012F9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25295 00012F9F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25296 00012FA2 EB0A                    	jmp .L_if_end_05cf
 25297                                  .L_if_else_0541:
 25298 00012FA4 48B8-                   	mov rax, L_constants + 2
 25298 00012FA6 [0200000000000000] 
 25299                                  .L_if_end_05cf:
 25300 00012FAE 483D[02000000]          	cmp rax, sob_boolean_false
 25301 00012FB4 0F8482000000            	je .L_if_else_0544
 25302                                  	; preparing a tail-call
 25303 00012FBA 488B4528                	mov rax, PARAM(1)	; param e2
 25304 00012FBE 50                      	push rax
 25305 00012FBF 488B4520                	mov rax, PARAM(0)	; param e1
 25306 00012FC3 50                      	push rax
 25307 00012FC4 6A02                    	push 2	; arg count
 25308 00012FC6 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 25309 00012FCE 803805                  	cmp byte [rax], T_undefined
 25310 00012FD1 0F842C440000            	je L_error_fvar_undefined
 25311 00012FD7 803804                  	cmp byte [rax], T_closure
 25312 00012FDA 0F85A7440000            	jne L_error_non_closure
 25313 00012FE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25314 00012FE3 FF7508                  	push qword [rbp + 8 *1]
 25315 00012FE6 4989C0                  	mov r8, rax
 25316 00012FE9 488B5D18                	mov rbx, COUNT
 25317 00012FED 4883C303                	add rbx,3
 25318 00012FF1 48C1E303                	shl rbx,3
 25319 00012FF5 4801EB                  	add rbx, rbp
 25320 00012FF8 488B6D00                	mov rbp, [rbp]
 25321 00012FFC B900000000              	mov rcx,0
 25322 00013001 BA05000000              	mov rdx, 5
 25323 00013006 4889D0                  	mov rax, rdx
 25324 00013009 48FFC8                  	dec rax
 25325 0001300C 48C1E003                	shl rax,3
 25326 00013010 4801E0                  	add rax, rsp
 25327                                  	.L_tc_recycle_frame_loop_0994:
 25328 00013013 4839D1                  	cmp rcx, rdx
 25329 00013016 7414                    	je .L_tc_recycle_frame_done_0994
 25330 00013018 4C8B08                  	mov r9, qword [rax]
 25331 0001301B 4C890B                  	mov qword [rbx],r9
 25332 0001301E 4883E808                	sub rax,8
 25333 00013022 4883EB08                	sub rbx,8
 25334 00013026 4883C101                	add rcx,1
 25335 0001302A EBE7                    	jmp .L_tc_recycle_frame_loop_0994
 25336                                  	.L_tc_recycle_frame_done_0994:
 25337 0001302C 4883C308                	add rbx,8
 25338 00013030 4889DC                  	mov rsp,rbx
 25339 00013033 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25340 00013037 E96D010000              	jmp .L_if_end_05d2
 25341                                  .L_if_else_0544:
 25342                                  	; preparing a non-tail-call
 25343 0001303C 488B4520                	mov rax, PARAM(0)	; param e1
 25344 00013040 50                      	push rax
 25345 00013041 6A01                    	push 1	; arg count
 25346 00013043 488B0425[88130000]      	mov rax, qword [free_var_78]	; free var char?
 25347 0001304B 803805                  	cmp byte [rax], T_undefined
 25348 0001304E 0F84AF430000            	je L_error_fvar_undefined
 25349 00013054 803804                  	cmp byte [rax], T_closure
 25350 00013057 0F852A440000            	jne L_error_non_closure
 25351 0001305D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25352 00013060 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25353 00013063 483D[02000000]          	cmp rax, sob_boolean_false
 25354 00013069 7429                    	je .L_if_else_0542
 25355                                  	; preparing a non-tail-call
 25356 0001306B 488B4528                	mov rax, PARAM(1)	; param e2
 25357 0001306F 50                      	push rax
 25358 00013070 6A01                    	push 1	; arg count
 25359 00013072 488B0425[88130000]      	mov rax, qword [free_var_78]	; free var char?
 25360 0001307A 803805                  	cmp byte [rax], T_undefined
 25361 0001307D 0F8480430000            	je L_error_fvar_undefined
 25362 00013083 803804                  	cmp byte [rax], T_closure
 25363 00013086 0F85FB430000            	jne L_error_non_closure
 25364 0001308C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25365 0001308F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25366 00013092 EB0A                    	jmp .L_if_end_05d0
 25367                                  .L_if_else_0542:
 25368 00013094 48B8-                   	mov rax, L_constants + 2
 25368 00013096 [0200000000000000] 
 25369                                  .L_if_end_05d0:
 25370 0001309E 483D[02000000]          	cmp rax, sob_boolean_false
 25371 000130A4 0F8482000000            	je .L_if_else_0543
 25372                                  	; preparing a tail-call
 25373 000130AA 488B4528                	mov rax, PARAM(1)	; param e2
 25374 000130AE 50                      	push rax
 25375 000130AF 488B4520                	mov rax, PARAM(0)	; param e1
 25376 000130B3 50                      	push rax
 25377 000130B4 6A02                    	push 2	; arg count
 25378 000130B6 488B0425[55130000]      	mov rax, qword [free_var_75]	; free var char=?
 25379 000130BE 803805                  	cmp byte [rax], T_undefined
 25380 000130C1 0F843C430000            	je L_error_fvar_undefined
 25381 000130C7 803804                  	cmp byte [rax], T_closure
 25382 000130CA 0F85B7430000            	jne L_error_non_closure
 25383 000130D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25384 000130D3 FF7508                  	push qword [rbp + 8 *1]
 25385 000130D6 4989C0                  	mov r8, rax
 25386 000130D9 488B5D18                	mov rbx, COUNT
 25387 000130DD 4883C303                	add rbx,3
 25388 000130E1 48C1E303                	shl rbx,3
 25389 000130E5 4801EB                  	add rbx, rbp
 25390 000130E8 488B6D00                	mov rbp, [rbp]
 25391 000130EC B900000000              	mov rcx,0
 25392 000130F1 BA05000000              	mov rdx, 5
 25393 000130F6 4889D0                  	mov rax, rdx
 25394 000130F9 48FFC8                  	dec rax
 25395 000130FC 48C1E003                	shl rax,3
 25396 00013100 4801E0                  	add rax, rsp
 25397                                  	.L_tc_recycle_frame_loop_0995:
 25398 00013103 4839D1                  	cmp rcx, rdx
 25399 00013106 7414                    	je .L_tc_recycle_frame_done_0995
 25400 00013108 4C8B08                  	mov r9, qword [rax]
 25401 0001310B 4C890B                  	mov qword [rbx],r9
 25402 0001310E 4883E808                	sub rax,8
 25403 00013112 4883EB08                	sub rbx,8
 25404 00013116 4883C101                	add rcx,1
 25405 0001311A EBE7                    	jmp .L_tc_recycle_frame_loop_0995
 25406                                  	.L_tc_recycle_frame_done_0995:
 25407 0001311C 4883C308                	add rbx,8
 25408 00013120 4889DC                  	mov rsp,rbx
 25409 00013123 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25410 00013127 E97D000000              	jmp .L_if_end_05d1
 25411                                  .L_if_else_0543:
 25412                                  	; preparing a tail-call
 25413 0001312C 488B4528                	mov rax, PARAM(1)	; param e2
 25414 00013130 50                      	push rax
 25415 00013131 488B4520                	mov rax, PARAM(0)	; param e1
 25416 00013135 50                      	push rax
 25417 00013136 6A02                    	push 2	; arg count
 25418 00013138 488B0425[AA130000]      	mov rax, qword [free_var_80]	; free var eq?
 25419 00013140 803805                  	cmp byte [rax], T_undefined
 25420 00013143 0F84BA420000            	je L_error_fvar_undefined
 25421 00013149 803804                  	cmp byte [rax], T_closure
 25422 0001314C 0F8535430000            	jne L_error_non_closure
 25423 00013152 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25424 00013155 FF7508                  	push qword [rbp + 8 *1]
 25425 00013158 4989C0                  	mov r8, rax
 25426 0001315B 488B5D18                	mov rbx, COUNT
 25427 0001315F 4883C303                	add rbx,3
 25428 00013163 48C1E303                	shl rbx,3
 25429 00013167 4801EB                  	add rbx, rbp
 25430 0001316A 488B6D00                	mov rbp, [rbp]
 25431 0001316E B900000000              	mov rcx,0
 25432 00013173 BA05000000              	mov rdx, 5
 25433 00013178 4889D0                  	mov rax, rdx
 25434 0001317B 48FFC8                  	dec rax
 25435 0001317E 48C1E003                	shl rax,3
 25436 00013182 4801E0                  	add rax, rsp
 25437                                  	.L_tc_recycle_frame_loop_0996:
 25438 00013185 4839D1                  	cmp rcx, rdx
 25439 00013188 7414                    	je .L_tc_recycle_frame_done_0996
 25440 0001318A 4C8B08                  	mov r9, qword [rax]
 25441 0001318D 4C890B                  	mov qword [rbx],r9
 25442 00013190 4883E808                	sub rax,8
 25443 00013194 4883EB08                	sub rbx,8
 25444 00013198 4883C101                	add rcx,1
 25445 0001319C EBE7                    	jmp .L_tc_recycle_frame_loop_0996
 25446                                  	.L_tc_recycle_frame_done_0996:
 25447 0001319E 4883C308                	add rbx,8
 25448 000131A2 4889DC                  	mov rsp,rbx
 25449 000131A5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25450                                  .L_if_end_05d1:
 25451                                  .L_if_end_05d2:
 25452                                  .L_if_end_05d3:
 25453                                  .L_if_end_05d4:
 25454                                  .L_if_end_05d5:
 25455 000131A9 C9                      	leave
 25456 000131AA C22000                  	ret AND_KILL_FRAME(2)
 25457                                  .L_lambda_simple_end_078a:	; new closure is in rax
 25458 000131AD 48890425[BB130000]      	mov qword [free_var_81], rax
 25459 000131B5 48B8-                   	mov rax, sob_void
 25459 000131B7 [0000000000000000] 
 25460                                  
 25461 000131BF 4889C7                  	mov rdi, rax
 25462 000131C2 E8BE450000              	call print_sexpr_if_not_void
 25463 000131C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25464 000131CC E85F430000              	call malloc
 25465 000131D1 50                      	push rax
 25466 000131D2 BF00000000              	mov rdi, 8 * 0	; new rib
 25467 000131D7 E854430000              	call malloc
 25468 000131DC 50                      	push rax
 25469 000131DD BF08000000              	mov rdi, 8 * 1	; extended env
 25470 000131E2 E849430000              	call malloc
 25471 000131E7 488B7D10                	mov rdi, ENV
 25472 000131EB BE00000000              	mov rsi, 0
 25473 000131F0 BA01000000              	mov rdx, 1
 25474                                  .L_lambda_simple_env_loop_078b:	; ext_env[i + 1] <-- env[i]
 25475 000131F5 4883FE00                	cmp rsi, 0
 25476 000131F9 7410                    	je .L_lambda_simple_env_end_078b
 25477 000131FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25478 000131FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25479 00013203 48FFC6                  	inc rsi
 25480 00013206 48FFC2                  	inc rdx
 25481 00013209 EBEA                    	jmp .L_lambda_simple_env_loop_078b
 25482                                  .L_lambda_simple_env_end_078b:
 25483 0001320B 5B                      	pop rbx
 25484 0001320C BE00000000              	mov rsi, 0
 25485                                  .L_lambda_simple_params_loop_078b:	; copy params
 25486 00013211 4883FE00                	cmp rsi, 0
 25487 00013215 740E                    	je .L_lambda_simple_params_end_078b
 25488 00013217 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25489 0001321C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25490 00013220 48FFC6                  	inc rsi
 25491 00013223 EBEC                    	jmp .L_lambda_simple_params_loop_078b
 25492                                  .L_lambda_simple_params_end_078b:
 25493 00013225 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25494 00013228 4889C3                  	mov rbx, rax
 25495 0001322B 58                      	pop rax
 25496 0001322C C60004                  	mov byte [rax], T_closure
 25497 0001322F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25498 00013233 48C74009[40320100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078b
 25499 0001323B E9D1010000              	jmp .L_lambda_simple_end_078b
 25500                                  .L_lambda_simple_code_078b:	; lambda-simple body
 25501 00013240 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25502 00013246 740B                    	je .L_lambda_simple_arity_check_ok_087c
 25503 00013248 FF742410                	push qword [rsp + 8 * 2]
 25504 0001324C 6A02                    	push 2
 25505 0001324E E996420000              	jmp L_error_incorrect_arity_simple
 25506                                  .L_lambda_simple_arity_check_ok_087c:
 25507 00013253 C8000000                	enter 0, 0
 25508                                  	; preparing a non-tail-call
 25509 00013257 488B4528                	mov rax, PARAM(1)	; param s
 25510 0001325B 50                      	push rax
 25511 0001325C 6A01                    	push 1	; arg count
 25512 0001325E 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 25513 00013266 803805                  	cmp byte [rax], T_undefined
 25514 00013269 0F8494410000            	je L_error_fvar_undefined
 25515 0001326F 803804                  	cmp byte [rax], T_closure
 25516 00013272 0F850F420000            	jne L_error_non_closure
 25517 00013278 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25518 0001327B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25519 0001327E 483D[02000000]          	cmp rax, sob_boolean_false
 25520 00013284 740F                    	je .L_if_else_0549
 25521 00013286 48B8-                   	mov rax, L_constants + 2
 25521 00013288 [0200000000000000] 
 25522 00013290 E978010000              	jmp .L_if_end_05d7
 25523                                  .L_if_else_0549:
 25524                                  	; preparing a non-tail-call
 25525 00013295 488B4520                	mov rax, PARAM(0)	; param a
 25526 00013299 50                      	push rax
 25527                                  	; preparing a non-tail-call
 25528 0001329A 488B4528                	mov rax, PARAM(1)	; param s
 25529 0001329E 50                      	push rax
 25530 0001329F 6A01                    	push 1	; arg count
 25531 000132A1 488B0425[13110000]      	mov rax, qword [free_var_41]	; free var caar
 25532 000132A9 803805                  	cmp byte [rax], T_undefined
 25533 000132AC 0F8451410000            	je L_error_fvar_undefined
 25534 000132B2 803804                  	cmp byte [rax], T_closure
 25535 000132B5 0F85CC410000            	jne L_error_non_closure
 25536 000132BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25537 000132BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25538 000132C1 50                      	push rax
 25539 000132C2 6A02                    	push 2	; arg count
 25540 000132C4 488B0425[AA130000]      	mov rax, qword [free_var_80]	; free var eq?
 25541 000132CC 803805                  	cmp byte [rax], T_undefined
 25542 000132CF 0F842E410000            	je L_error_fvar_undefined
 25543 000132D5 803804                  	cmp byte [rax], T_closure
 25544 000132D8 0F85A9410000            	jne L_error_non_closure
 25545 000132DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 25546 000132E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25547 000132E4 483D[02000000]          	cmp rax, sob_boolean_false
 25548 000132EA 0F847D000000            	je .L_if_else_0548
 25549                                  	; preparing a tail-call
 25550 000132F0 488B4528                	mov rax, PARAM(1)	; param s
 25551 000132F4 50                      	push rax
 25552 000132F5 6A01                    	push 1	; arg count
 25553 000132F7 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 25554 000132FF 803805                  	cmp byte [rax], T_undefined
 25555 00013302 0F84FB400000            	je L_error_fvar_undefined
 25556 00013308 803804                  	cmp byte [rax], T_closure
 25557 0001330B 0F8576410000            	jne L_error_non_closure
 25558 00013311 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25559 00013314 FF7508                  	push qword [rbp + 8 *1]
 25560 00013317 4989C0                  	mov r8, rax
 25561 0001331A 488B5D18                	mov rbx, COUNT
 25562 0001331E 4883C303                	add rbx,3
 25563 00013322 48C1E303                	shl rbx,3
 25564 00013326 4801EB                  	add rbx, rbp
 25565 00013329 488B6D00                	mov rbp, [rbp]
 25566 0001332D B900000000              	mov rcx,0
 25567 00013332 BA04000000              	mov rdx, 4
 25568 00013337 4889D0                  	mov rax, rdx
 25569 0001333A 48FFC8                  	dec rax
 25570 0001333D 48C1E003                	shl rax,3
 25571 00013341 4801E0                  	add rax, rsp
 25572                                  	.L_tc_recycle_frame_loop_0997:
 25573 00013344 4839D1                  	cmp rcx, rdx
 25574 00013347 7414                    	je .L_tc_recycle_frame_done_0997
 25575 00013349 4C8B08                  	mov r9, qword [rax]
 25576 0001334C 4C890B                  	mov qword [rbx],r9
 25577 0001334F 4883E808                	sub rax,8
 25578 00013353 4883EB08                	sub rbx,8
 25579 00013357 4883C101                	add rcx,1
 25580 0001335B EBE7                    	jmp .L_tc_recycle_frame_loop_0997
 25581                                  	.L_tc_recycle_frame_done_0997:
 25582 0001335D 4883C308                	add rbx,8
 25583 00013361 4889DC                  	mov rsp,rbx
 25584 00013364 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25585 00013368 E9A0000000              	jmp .L_if_end_05d6
 25586                                  .L_if_else_0548:
 25587                                  	; preparing a tail-call
 25588                                  	; preparing a non-tail-call
 25589 0001336D 488B4528                	mov rax, PARAM(1)	; param s
 25590 00013371 50                      	push rax
 25591 00013372 6A01                    	push 1	; arg count
 25592 00013374 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 25593 0001337C 803805                  	cmp byte [rax], T_undefined
 25594 0001337F 0F847E400000            	je L_error_fvar_undefined
 25595 00013385 803804                  	cmp byte [rax], T_closure
 25596 00013388 0F85F9400000            	jne L_error_non_closure
 25597 0001338E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25598 00013391 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25599 00013394 50                      	push rax
 25600 00013395 488B4520                	mov rax, PARAM(0)	; param a
 25601 00013399 50                      	push rax
 25602 0001339A 6A02                    	push 2	; arg count
 25603 0001339C 488B0425[9C100000]      	mov rax, qword [free_var_34]	; free var assoc
 25604 000133A4 803805                  	cmp byte [rax], T_undefined
 25605 000133A7 0F8456400000            	je L_error_fvar_undefined
 25606 000133AD 803804                  	cmp byte [rax], T_closure
 25607 000133B0 0F85D1400000            	jne L_error_non_closure
 25608 000133B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25609 000133B9 FF7508                  	push qword [rbp + 8 *1]
 25610 000133BC 4989C0                  	mov r8, rax
 25611 000133BF 488B5D18                	mov rbx, COUNT
 25612 000133C3 4883C303                	add rbx,3
 25613 000133C7 48C1E303                	shl rbx,3
 25614 000133CB 4801EB                  	add rbx, rbp
 25615 000133CE 488B6D00                	mov rbp, [rbp]
 25616 000133D2 B900000000              	mov rcx,0
 25617 000133D7 BA05000000              	mov rdx, 5
 25618 000133DC 4889D0                  	mov rax, rdx
 25619 000133DF 48FFC8                  	dec rax
 25620 000133E2 48C1E003                	shl rax,3
 25621 000133E6 4801E0                  	add rax, rsp
 25622                                  	.L_tc_recycle_frame_loop_0998:
 25623 000133E9 4839D1                  	cmp rcx, rdx
 25624 000133EC 7414                    	je .L_tc_recycle_frame_done_0998
 25625 000133EE 4C8B08                  	mov r9, qword [rax]
 25626 000133F1 4C890B                  	mov qword [rbx],r9
 25627 000133F4 4883E808                	sub rax,8
 25628 000133F8 4883EB08                	sub rbx,8
 25629 000133FC 4883C101                	add rcx,1
 25630 00013400 EBE7                    	jmp .L_tc_recycle_frame_loop_0998
 25631                                  	.L_tc_recycle_frame_done_0998:
 25632 00013402 4883C308                	add rbx,8
 25633 00013406 4889DC                  	mov rsp,rbx
 25634 00013409 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25635                                  .L_if_end_05d6:
 25636                                  .L_if_end_05d7:
 25637 0001340D C9                      	leave
 25638 0001340E C22000                  	ret AND_KILL_FRAME(2)
 25639                                  .L_lambda_simple_end_078b:	; new closure is in rax
 25640 00013411 48890425[9C100000]      	mov qword [free_var_34], rax
 25641 00013419 48B8-                   	mov rax, sob_void
 25641 0001341B [0000000000000000] 
 25642                                  
 25643 00013423 4889C7                  	mov rdi, rax
 25644 00013426 E85A430000              	call print_sexpr_if_not_void
 25645                                  	; preparing a non-tail-call
 25646 0001342B 48B8-                   	mov rax, L_constants + 1993
 25646 0001342D [C907000000000000] 
 25647 00013435 50                      	push rax
 25648 00013436 48B8-                   	mov rax, L_constants + 1993
 25648 00013438 [C907000000000000] 
 25649 00013440 50                      	push rax
 25650 00013441 6A02                    	push 2	; arg count
 25651 00013443 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25652 00013448 E8E3400000              	call malloc
 25653 0001344D 50                      	push rax
 25654 0001344E BF00000000              	mov rdi, 8 * 0	; new rib
 25655 00013453 E8D8400000              	call malloc
 25656 00013458 50                      	push rax
 25657 00013459 BF08000000              	mov rdi, 8 * 1	; extended env
 25658 0001345E E8CD400000              	call malloc
 25659 00013463 488B7D10                	mov rdi, ENV
 25660 00013467 BE00000000              	mov rsi, 0
 25661 0001346C BA01000000              	mov rdx, 1
 25662                                  .L_lambda_simple_env_loop_078c:	; ext_env[i + 1] <-- env[i]
 25663 00013471 4883FE00                	cmp rsi, 0
 25664 00013475 7410                    	je .L_lambda_simple_env_end_078c
 25665 00013477 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25666 0001347B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25667 0001347F 48FFC6                  	inc rsi
 25668 00013482 48FFC2                  	inc rdx
 25669 00013485 EBEA                    	jmp .L_lambda_simple_env_loop_078c
 25670                                  .L_lambda_simple_env_end_078c:
 25671 00013487 5B                      	pop rbx
 25672 00013488 BE00000000              	mov rsi, 0
 25673                                  .L_lambda_simple_params_loop_078c:	; copy params
 25674 0001348D 4883FE00                	cmp rsi, 0
 25675 00013491 740E                    	je .L_lambda_simple_params_end_078c
 25676 00013493 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25677 00013498 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25678 0001349C 48FFC6                  	inc rsi
 25679 0001349F EBEC                    	jmp .L_lambda_simple_params_loop_078c
 25680                                  .L_lambda_simple_params_end_078c:
 25681 000134A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25682 000134A4 4889C3                  	mov rbx, rax
 25683 000134A7 58                      	pop rax
 25684 000134A8 C60004                  	mov byte [rax], T_closure
 25685 000134AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25686 000134AF 48C74009[BC340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078c
 25687 000134B7 E93A080000              	jmp .L_lambda_simple_end_078c
 25688                                  .L_lambda_simple_code_078c:	; lambda-simple body
 25689 000134BC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25690 000134C2 740B                    	je .L_lambda_simple_arity_check_ok_087d
 25691 000134C4 FF742410                	push qword [rsp + 8 * 2]
 25692 000134C8 6A02                    	push 2
 25693 000134CA E91A400000              	jmp L_error_incorrect_arity_simple
 25694                                  .L_lambda_simple_arity_check_ok_087d:
 25695 000134CF C8000000                	enter 0, 0
 25696 000134D3 BF08000000              	mov rdi, 8
 25697 000134D8 E853400000              	call malloc
 25698 000134DD 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 25699 000134E1 488918                  	mov qword [rax], rbx
 25700 000134E4 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 25701 000134E8 48B8-                   	mov rax, sob_void
 25701 000134EA [0000000000000000] 
 25702                                  
 25703 000134F2 BF08000000              	mov rdi, 8
 25704 000134F7 E834400000              	call malloc
 25705 000134FC 488B5D28                	 mov rbx, qword [rbp + 8 * (4 +1)]
 25706 00013500 488918                  	mov qword [rax], rbx
 25707 00013503 48894528                	mov qword [rbp + 8 * (4 +1)], rax
 25708 00013507 48B8-                   	mov rax, sob_void
 25708 00013509 [0000000000000000] 
 25709                                  
 25710 00013511 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25711 00013516 E815400000              	call malloc
 25712 0001351B 50                      	push rax
 25713 0001351C BF10000000              	mov rdi, 8 * 2	; new rib
 25714 00013521 E80A400000              	call malloc
 25715 00013526 50                      	push rax
 25716 00013527 BF10000000              	mov rdi, 8 * 2	; extended env
 25717 0001352C E8FF3F0000              	call malloc
 25718 00013531 488B7D10                	mov rdi, ENV
 25719 00013535 BE00000000              	mov rsi, 0
 25720 0001353A BA01000000              	mov rdx, 1
 25721                                  .L_lambda_simple_env_loop_078d:	; ext_env[i + 1] <-- env[i]
 25722 0001353F 4883FE01                	cmp rsi, 1
 25723 00013543 7410                    	je .L_lambda_simple_env_end_078d
 25724 00013545 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25725 00013549 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25726 0001354D 48FFC6                  	inc rsi
 25727 00013550 48FFC2                  	inc rdx
 25728 00013553 EBEA                    	jmp .L_lambda_simple_env_loop_078d
 25729                                  .L_lambda_simple_env_end_078d:
 25730 00013555 5B                      	pop rbx
 25731 00013556 BE00000000              	mov rsi, 0
 25732                                  .L_lambda_simple_params_loop_078d:	; copy params
 25733 0001355B 4883FE02                	cmp rsi, 2
 25734 0001355F 740E                    	je .L_lambda_simple_params_end_078d
 25735 00013561 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25736 00013566 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25737 0001356A 48FFC6                  	inc rsi
 25738 0001356D EBEC                    	jmp .L_lambda_simple_params_loop_078d
 25739                                  .L_lambda_simple_params_end_078d:
 25740 0001356F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25741 00013572 4889C3                  	mov rbx, rax
 25742 00013575 58                      	pop rax
 25743 00013576 C60004                  	mov byte [rax], T_closure
 25744 00013579 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25745 0001357D 48C74009[8A350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078d
 25746 00013585 E9A0020000              	jmp .L_lambda_simple_end_078d
 25747                                  .L_lambda_simple_code_078d:	; lambda-simple body
 25748 0001358A 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25749 00013590 740B                    	je .L_lambda_simple_arity_check_ok_087e
 25750 00013592 FF742410                	push qword [rsp + 8 * 2]
 25751 00013596 6A03                    	push 3
 25752 00013598 E94C3F0000              	jmp L_error_incorrect_arity_simple
 25753                                  .L_lambda_simple_arity_check_ok_087e:
 25754 0001359D C8000000                	enter 0, 0
 25755                                  	; preparing a non-tail-call
 25756 000135A1 488B4530                	mov rax, PARAM(2)	; param s
 25757 000135A5 50                      	push rax
 25758 000135A6 6A01                    	push 1	; arg count
 25759 000135A8 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 25760 000135B0 803805                  	cmp byte [rax], T_undefined
 25761 000135B3 0F844A3E0000            	je L_error_fvar_undefined
 25762 000135B9 803804                  	cmp byte [rax], T_closure
 25763 000135BC 0F85C53E0000            	jne L_error_non_closure
 25764 000135C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25765 000135C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25766 000135C8 483D[02000000]          	cmp rax, sob_boolean_false
 25767 000135CE 7409                    	je .L_if_else_054a
 25768 000135D0 488B4520                	mov rax, PARAM(0)	; param target
 25769 000135D4 E94D020000              	jmp .L_if_end_05d8
 25770                                  .L_if_else_054a:
 25771                                  	; preparing a tail-call
 25772                                  	; preparing a non-tail-call
 25773                                  	; preparing a non-tail-call
 25774                                  	; preparing a non-tail-call
 25775 000135D9 488B4530                	mov rax, PARAM(2)	; param s
 25776 000135DD 50                      	push rax
 25777 000135DE 6A01                    	push 1	; arg count
 25778 000135E0 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 25779 000135E8 803805                  	cmp byte [rax], T_undefined
 25780 000135EB 0F84123E0000            	je L_error_fvar_undefined
 25781 000135F1 803804                  	cmp byte [rax], T_closure
 25782 000135F4 0F858D3E0000            	jne L_error_non_closure
 25783 000135FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 25784 000135FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 25785 00013600 50                      	push rax
 25786 00013601 6A01                    	push 1	; arg count
 25787 00013603 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 25788 0001360B 803805                  	cmp byte [rax], T_undefined
 25789 0001360E 0F84EF3D0000            	je L_error_fvar_undefined
 25790 00013614 803804                  	cmp byte [rax], T_closure
 25791 00013617 0F856A3E0000            	jne L_error_non_closure
 25792 0001361D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25793 00013620 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25794 00013623 50                      	push rax
 25795 00013624 48B8-                   	mov rax, L_constants + 2135
 25795 00013626 [5708000000000000] 
 25796 0001362E 50                      	push rax
 25797                                  	; preparing a non-tail-call
 25798 0001362F 488B4530                	mov rax, PARAM(2)	; param s
 25799 00013633 50                      	push rax
 25800 00013634 6A01                    	push 1	; arg count
 25801 00013636 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 25802 0001363E 803805                  	cmp byte [rax], T_undefined
 25803 00013641 0F84BC3D0000            	je L_error_fvar_undefined
 25804 00013647 803804                  	cmp byte [rax], T_closure
 25805 0001364A 0F85373E0000            	jne L_error_non_closure
 25806 00013650 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25807 00013653 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25808 00013656 50                      	push rax
 25809 00013657 488B4528                	mov rax, PARAM(1)	; param i
 25810 0001365B 50                      	push rax
 25811 0001365C 488B4520                	mov rax, PARAM(0)	; param target
 25812 00013660 50                      	push rax
 25813 00013661 6A05                    	push 5	; arg count
 25814 00013663 488B4510                	mov rax, ENV
 25815 00013667 488B00                  	mov rax, qword [rax + 8 * 0]
 25816 0001366A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25817 0001366E 488B00                  	mov rax, qword [rax]
 25818 00013671 803804                  	cmp byte [rax], T_closure
 25819 00013674 0F850D3E0000            	jne L_error_non_closure
 25820 0001367A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25821 0001367D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25822 00013680 50                      	push rax
 25823 00013681 6A01                    	push 1	; arg count
 25824 00013683 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25825 00013688 E8A33E0000              	call malloc
 25826 0001368D 50                      	push rax
 25827 0001368E BF18000000              	mov rdi, 8 * 3	; new rib
 25828 00013693 E8983E0000              	call malloc
 25829 00013698 50                      	push rax
 25830 00013699 BF18000000              	mov rdi, 8 * 3	; extended env
 25831 0001369E E88D3E0000              	call malloc
 25832 000136A3 488B7D10                	mov rdi, ENV
 25833 000136A7 BE00000000              	mov rsi, 0
 25834 000136AC BA01000000              	mov rdx, 1
 25835                                  .L_lambda_simple_env_loop_078e:	; ext_env[i + 1] <-- env[i]
 25836 000136B1 4883FE02                	cmp rsi, 2
 25837 000136B5 7410                    	je .L_lambda_simple_env_end_078e
 25838 000136B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25839 000136BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25840 000136BF 48FFC6                  	inc rsi
 25841 000136C2 48FFC2                  	inc rdx
 25842 000136C5 EBEA                    	jmp .L_lambda_simple_env_loop_078e
 25843                                  .L_lambda_simple_env_end_078e:
 25844 000136C7 5B                      	pop rbx
 25845 000136C8 BE00000000              	mov rsi, 0
 25846                                  .L_lambda_simple_params_loop_078e:	; copy params
 25847 000136CD 4883FE03                	cmp rsi, 3
 25848 000136D1 740E                    	je .L_lambda_simple_params_end_078e
 25849 000136D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25850 000136D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25851 000136DC 48FFC6                  	inc rsi
 25852 000136DF EBEC                    	jmp .L_lambda_simple_params_loop_078e
 25853                                  .L_lambda_simple_params_end_078e:
 25854 000136E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25855 000136E4 4889C3                  	mov rbx, rax
 25856 000136E7 58                      	pop rax
 25857 000136E8 C60004                  	mov byte [rax], T_closure
 25858 000136EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25859 000136EF 48C74009[FC360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078e
 25860 000136F7 E9CA000000              	jmp .L_lambda_simple_end_078e
 25861                                  .L_lambda_simple_code_078e:	; lambda-simple body
 25862 000136FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25863 00013702 740B                    	je .L_lambda_simple_arity_check_ok_087f
 25864 00013704 FF742410                	push qword [rsp + 8 * 2]
 25865 00013708 6A01                    	push 1
 25866 0001370A E9DA3D0000              	jmp L_error_incorrect_arity_simple
 25867                                  .L_lambda_simple_arity_check_ok_087f:
 25868 0001370F C8000000                	enter 0, 0
 25869                                  	; preparing a tail-call
 25870                                  	; preparing a non-tail-call
 25871 00013713 488B4510                	mov rax, ENV
 25872 00013717 488B00                  	mov rax, qword [rax + 8 * 0]
 25873 0001371A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25874 0001371E 50                      	push rax
 25875 0001371F 6A01                    	push 1	; arg count
 25876 00013721 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 25877 00013729 803805                  	cmp byte [rax], T_undefined
 25878 0001372C 0F84D13C0000            	je L_error_fvar_undefined
 25879 00013732 803804                  	cmp byte [rax], T_closure
 25880 00013735 0F854C3D0000            	jne L_error_non_closure
 25881 0001373B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25882 0001373E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25883 00013741 50                      	push rax
 25884 00013742 488B4520                	mov rax, PARAM(0)	; param i
 25885 00013746 50                      	push rax
 25886 00013747 488B4510                	mov rax, ENV
 25887 0001374B 488B00                  	mov rax, qword [rax + 8 * 0]
 25888 0001374E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25889 00013751 50                      	push rax
 25890 00013752 6A03                    	push 3	; arg count
 25891 00013754 488B4510                	mov rax, ENV
 25892 00013758 488B4008                	mov rax, qword [rax + 8 * 1]
 25893 0001375C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25894 0001375F 488B00                  	mov rax, qword [rax]
 25895 00013762 803804                  	cmp byte [rax], T_closure
 25896 00013765 0F851C3D0000            	jne L_error_non_closure
 25897 0001376B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25898 0001376E FF7508                  	push qword [rbp + 8 *1]
 25899 00013771 4989C0                  	mov r8, rax
 25900 00013774 488B5D18                	mov rbx, COUNT
 25901 00013778 4883C303                	add rbx,3
 25902 0001377C 48C1E303                	shl rbx,3
 25903 00013780 4801EB                  	add rbx, rbp
 25904 00013783 488B6D00                	mov rbp, [rbp]
 25905 00013787 B900000000              	mov rcx,0
 25906 0001378C BA06000000              	mov rdx, 6
 25907 00013791 4889D0                  	mov rax, rdx
 25908 00013794 48FFC8                  	dec rax
 25909 00013797 48C1E003                	shl rax,3
 25910 0001379B 4801E0                  	add rax, rsp
 25911                                  	.L_tc_recycle_frame_loop_099a:
 25912 0001379E 4839D1                  	cmp rcx, rdx
 25913 000137A1 7414                    	je .L_tc_recycle_frame_done_099a
 25914 000137A3 4C8B08                  	mov r9, qword [rax]
 25915 000137A6 4C890B                  	mov qword [rbx],r9
 25916 000137A9 4883E808                	sub rax,8
 25917 000137AD 4883EB08                	sub rbx,8
 25918 000137B1 4883C101                	add rcx,1
 25919 000137B5 EBE7                    	jmp .L_tc_recycle_frame_loop_099a
 25920                                  	.L_tc_recycle_frame_done_099a:
 25921 000137B7 4883C308                	add rbx,8
 25922 000137BB 4889DC                  	mov rsp,rbx
 25923 000137BE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25924 000137C2 C9                      	leave
 25925 000137C3 C21800                  	ret AND_KILL_FRAME(1)
 25926                                  .L_lambda_simple_end_078e:	; new closure is in rax
 25927 000137C6 803804                  	cmp byte [rax], T_closure
 25928 000137C9 0F85B83C0000            	jne L_error_non_closure
 25929 000137CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25930 000137D2 FF7508                  	push qword [rbp + 8 *1]
 25931 000137D5 4989C0                  	mov r8, rax
 25932 000137D8 488B5D18                	mov rbx, COUNT
 25933 000137DC 4883C303                	add rbx,3
 25934 000137E0 48C1E303                	shl rbx,3
 25935 000137E4 4801EB                  	add rbx, rbp
 25936 000137E7 488B6D00                	mov rbp, [rbp]
 25937 000137EB B900000000              	mov rcx,0
 25938 000137F0 BA04000000              	mov rdx, 4
 25939 000137F5 4889D0                  	mov rax, rdx
 25940 000137F8 48FFC8                  	dec rax
 25941 000137FB 48C1E003                	shl rax,3
 25942 000137FF 4801E0                  	add rax, rsp
 25943                                  	.L_tc_recycle_frame_loop_0999:
 25944 00013802 4839D1                  	cmp rcx, rdx
 25945 00013805 7414                    	je .L_tc_recycle_frame_done_0999
 25946 00013807 4C8B08                  	mov r9, qword [rax]
 25947 0001380A 4C890B                  	mov qword [rbx],r9
 25948 0001380D 4883E808                	sub rax,8
 25949 00013811 4883EB08                	sub rbx,8
 25950 00013815 4883C101                	add rcx,1
 25951 00013819 EBE7                    	jmp .L_tc_recycle_frame_loop_0999
 25952                                  	.L_tc_recycle_frame_done_0999:
 25953 0001381B 4883C308                	add rbx,8
 25954 0001381F 4889DC                  	mov rsp,rbx
 25955 00013822 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 25956                                  .L_if_end_05d8:
 25957 00013826 C9                      	leave
 25958 00013827 C22800                  	ret AND_KILL_FRAME(3)
 25959                                  .L_lambda_simple_end_078d:	; new closure is in rax
 25960 0001382A 50                      	push rax
 25961 0001382B 488B4520                	mov rax, PARAM(0)	; param run
 25962 0001382F 8F00                    	pop qword [rax]
 25963 00013831 48B8-                   	mov rax, sob_void
 25963 00013833 [0000000000000000] 
 25964                                  
 25965 0001383B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25966 00013840 E8EB3C0000              	call malloc
 25967 00013845 50                      	push rax
 25968 00013846 BF10000000              	mov rdi, 8 * 2	; new rib
 25969 0001384B E8E03C0000              	call malloc
 25970 00013850 50                      	push rax
 25971 00013851 BF10000000              	mov rdi, 8 * 2	; extended env
 25972 00013856 E8D53C0000              	call malloc
 25973 0001385B 488B7D10                	mov rdi, ENV
 25974 0001385F BE00000000              	mov rsi, 0
 25975 00013864 BA01000000              	mov rdx, 1
 25976                                  .L_lambda_simple_env_loop_078f:	; ext_env[i + 1] <-- env[i]
 25977 00013869 4883FE01                	cmp rsi, 1
 25978 0001386D 7410                    	je .L_lambda_simple_env_end_078f
 25979 0001386F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25980 00013873 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25981 00013877 48FFC6                  	inc rsi
 25982 0001387A 48FFC2                  	inc rdx
 25983 0001387D EBEA                    	jmp .L_lambda_simple_env_loop_078f
 25984                                  .L_lambda_simple_env_end_078f:
 25985 0001387F 5B                      	pop rbx
 25986 00013880 BE00000000              	mov rsi, 0
 25987                                  .L_lambda_simple_params_loop_078f:	; copy params
 25988 00013885 4883FE02                	cmp rsi, 2
 25989 00013889 740E                    	je .L_lambda_simple_params_end_078f
 25990 0001388B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25991 00013890 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25992 00013894 48FFC6                  	inc rsi
 25993 00013897 EBEC                    	jmp .L_lambda_simple_params_loop_078f
 25994                                  .L_lambda_simple_params_end_078f:
 25995 00013899 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25996 0001389C 4889C3                  	mov rbx, rax
 25997 0001389F 58                      	pop rax
 25998 000138A0 C60004                  	mov byte [rax], T_closure
 25999 000138A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26000 000138A7 48C74009[B4380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_078f
 26001 000138AF E997010000              	jmp .L_lambda_simple_end_078f
 26002                                  .L_lambda_simple_code_078f:	; lambda-simple body
 26003 000138B4 48837C241005            	cmp qword [rsp + 8 * 2], 5
 26004 000138BA 740B                    	je .L_lambda_simple_arity_check_ok_0880
 26005 000138BC FF742410                	push qword [rsp + 8 * 2]
 26006 000138C0 6A05                    	push 5
 26007 000138C2 E9223C0000              	jmp L_error_incorrect_arity_simple
 26008                                  .L_lambda_simple_arity_check_ok_0880:
 26009 000138C7 C8000000                	enter 0, 0
 26010                                  	; preparing a non-tail-call
 26011 000138CB 488B4540                	mov rax, PARAM(4)	; param limit
 26012 000138CF 50                      	push rax
 26013 000138D0 488B4538                	mov rax, PARAM(3)	; param j
 26014 000138D4 50                      	push rax
 26015 000138D5 6A02                    	push 2	; arg count
 26016 000138D7 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 26017 000138DF 803805                  	cmp byte [rax], T_undefined
 26018 000138E2 0F841B3B0000            	je L_error_fvar_undefined
 26019 000138E8 803804                  	cmp byte [rax], T_closure
 26020 000138EB 0F85963B0000            	jne L_error_non_closure
 26021 000138F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26022 000138F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26023 000138F7 483D[02000000]          	cmp rax, sob_boolean_false
 26024 000138FD 0F8440010000            	je .L_if_else_054b
 26025                                  	; preparing a non-tail-call
 26026                                  	; preparing a non-tail-call
 26027 00013903 488B4538                	mov rax, PARAM(3)	; param j
 26028 00013907 50                      	push rax
 26029 00013908 488B4530                	mov rax, PARAM(2)	; param str
 26030 0001390C 50                      	push rax
 26031 0001390D 6A02                    	push 2	; arg count
 26032 0001390F 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26033 00013917 803805                  	cmp byte [rax], T_undefined
 26034 0001391A 0F84E33A0000            	je L_error_fvar_undefined
 26035 00013920 803804                  	cmp byte [rax], T_closure
 26036 00013923 0F855E3B0000            	jne L_error_non_closure
 26037 00013929 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26038 0001392C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26039 0001392F 50                      	push rax
 26040 00013930 488B4528                	mov rax, PARAM(1)	; param i
 26041 00013934 50                      	push rax
 26042 00013935 488B4520                	mov rax, PARAM(0)	; param target
 26043 00013939 50                      	push rax
 26044 0001393A 6A03                    	push 3	; arg count
 26045 0001393C 488B0425[0D170000]      	mov rax, qword [free_var_131]	; free var string-set!
 26046 00013944 803805                  	cmp byte [rax], T_undefined
 26047 00013947 0F84B63A0000            	je L_error_fvar_undefined
 26048 0001394D 803804                  	cmp byte [rax], T_closure
 26049 00013950 0F85313B0000            	jne L_error_non_closure
 26050 00013956 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26051 00013959 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26052                                  
 26053                                  	; preparing a tail-call
 26054 0001395C 488B4540                	mov rax, PARAM(4)	; param limit
 26055 00013960 50                      	push rax
 26056                                  	; preparing a non-tail-call
 26057 00013961 48B8-                   	mov rax, L_constants + 2270
 26057 00013963 [DE08000000000000] 
 26058 0001396B 50                      	push rax
 26059 0001396C 488B4538                	mov rax, PARAM(3)	; param j
 26060 00013970 50                      	push rax
 26061 00013971 6A02                    	push 2	; arg count
 26062 00013973 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26063 0001397B 803805                  	cmp byte [rax], T_undefined
 26064 0001397E 0F847F3A0000            	je L_error_fvar_undefined
 26065 00013984 803804                  	cmp byte [rax], T_closure
 26066 00013987 0F85FA3A0000            	jne L_error_non_closure
 26067 0001398D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26068 00013990 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26069 00013993 50                      	push rax
 26070 00013994 488B4530                	mov rax, PARAM(2)	; param str
 26071 00013998 50                      	push rax
 26072                                  	; preparing a non-tail-call
 26073 00013999 48B8-                   	mov rax, L_constants + 2270
 26073 0001399B [DE08000000000000] 
 26074 000139A3 50                      	push rax
 26075 000139A4 488B4528                	mov rax, PARAM(1)	; param i
 26076 000139A8 50                      	push rax
 26077 000139A9 6A02                    	push 2	; arg count
 26078 000139AB 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26079 000139B3 803805                  	cmp byte [rax], T_undefined
 26080 000139B6 0F84473A0000            	je L_error_fvar_undefined
 26081 000139BC 803804                  	cmp byte [rax], T_closure
 26082 000139BF 0F85C23A0000            	jne L_error_non_closure
 26083 000139C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26084 000139C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26085 000139CB 50                      	push rax
 26086 000139CC 488B4520                	mov rax, PARAM(0)	; param target
 26087 000139D0 50                      	push rax
 26088 000139D1 6A05                    	push 5	; arg count
 26089 000139D3 488B4510                	mov rax, ENV
 26090 000139D7 488B00                  	mov rax, qword [rax + 8 * 0]
 26091 000139DA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26092 000139DE 488B00                  	mov rax, qword [rax]
 26093 000139E1 803804                  	cmp byte [rax], T_closure
 26094 000139E4 0F859D3A0000            	jne L_error_non_closure
 26095 000139EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26096 000139ED FF7508                  	push qword [rbp + 8 *1]
 26097 000139F0 4989C0                  	mov r8, rax
 26098 000139F3 488B5D18                	mov rbx, COUNT
 26099 000139F7 4883C303                	add rbx,3
 26100 000139FB 48C1E303                	shl rbx,3
 26101 000139FF 4801EB                  	add rbx, rbp
 26102 00013A02 488B6D00                	mov rbp, [rbp]
 26103 00013A06 B900000000              	mov rcx,0
 26104 00013A0B BA08000000              	mov rdx, 8
 26105 00013A10 4889D0                  	mov rax, rdx
 26106 00013A13 48FFC8                  	dec rax
 26107 00013A16 48C1E003                	shl rax,3
 26108 00013A1A 4801E0                  	add rax, rsp
 26109                                  	.L_tc_recycle_frame_loop_099b:
 26110 00013A1D 4839D1                  	cmp rcx, rdx
 26111 00013A20 7414                    	je .L_tc_recycle_frame_done_099b
 26112 00013A22 4C8B08                  	mov r9, qword [rax]
 26113 00013A25 4C890B                  	mov qword [rbx],r9
 26114 00013A28 4883E808                	sub rax,8
 26115 00013A2C 4883EB08                	sub rbx,8
 26116 00013A30 4883C101                	add rcx,1
 26117 00013A34 EBE7                    	jmp .L_tc_recycle_frame_loop_099b
 26118                                  	.L_tc_recycle_frame_done_099b:
 26119 00013A36 4883C308                	add rbx,8
 26120 00013A3A 4889DC                  	mov rsp,rbx
 26121 00013A3D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 26122 00013A41 EB04                    	jmp .L_if_end_05d9
 26123                                  .L_if_else_054b:
 26124 00013A43 488B4528                	mov rax, PARAM(1)	; param i
 26125                                  .L_if_end_05d9:
 26126 00013A47 C9                      	leave
 26127 00013A48 C23800                  	ret AND_KILL_FRAME(5)
 26128                                  .L_lambda_simple_end_078f:	; new closure is in rax
 26129 00013A4B 50                      	push rax
 26130 00013A4C 488B4528                	mov rax, PARAM(1)	; param add
 26131 00013A50 8F00                    	pop qword [rax]
 26132 00013A52 48B8-                   	mov rax, sob_void
 26132 00013A54 [0000000000000000] 
 26133                                  
 26134 00013A5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26135 00013A61 E8CA3A0000              	call malloc
 26136 00013A66 50                      	push rax
 26137 00013A67 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 26138 00013A6B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26139 00013A6F BF10000000              	mov rdi, 8 * 2	; new rib for optional parameters
 26140 00013A74 E8B73A0000              	call malloc
 26141 00013A79 50                      	push rax
 26142 00013A7A BF10000000              	mov rdi, 8 * 2	; extended env
 26143 00013A7F E8AC3A0000              	call malloc
 26144 00013A84 488B7D10                	mov rdi, ENV
 26145 00013A88 BE00000000              	mov rsi, 0
 26146 00013A8D BA01000000              	mov rdx, 1
 26147                                  .L_lambda_opt_env_loop_00f2:	; ext_env[i + 1] <-- env[i] copy all the array
 26148 00013A92 4883FE01                	cmp rsi, 1
 26149 00013A96 7410                    	je .L_lambda_opt_env_end_00f2
 26150 00013A98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26151 00013A9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26152 00013AA0 48FFC6                  	inc rsi
 26153 00013AA3 48FFC2                  	inc rdx
 26154 00013AA6 EBEA                    	jmp .L_lambda_opt_env_loop_00f2
 26155                                  .L_lambda_opt_env_end_00f2:
 26156 00013AA8 5B                      	pop rbx
 26157 00013AA9 BE00000000              	mov rsi, 0
 26158                                  .L_lambda_opt_params_loop_02d4:	; copy params
 26159 00013AAE 4883FE02                	cmp rsi, 2
 26160 00013AB2 740E                    	je .L_lambda_opt_params_end_01e3
 26161 00013AB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26162 00013AB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26163 00013ABD 48FFC6                  	inc rsi
 26164 00013AC0 EBEC                    	jmp .L_lambda_opt_params_loop_02d4
 26165                                  .L_lambda_opt_params_end_01e3:
 26166 00013AC2 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 26167 00013AC5 4889C3                  	mov rbx, rax
 26168 00013AC8 58                      	pop rax
 26169 00013AC9 C60004                  	mov byte [rax], T_closure
 26170 00013ACC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26171 00013AD0 48C74009[DD3A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00f2
 26172 00013AD8 E915020000              	jmp .L_lambda_opt_end_01e3
 26173                                  .L_lambda_opt_code_00f2:	; lambda-opt body
 26174 00013ADD 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26175 00013AE3 7D0B                    	jge .L_lambda_simple_arity_check_ok_0881
 26176 00013AE5 FF742410                	push qword [rsp + 8 * 2]
 26177 00013AE9 6A00                    	push 0
 26178 00013AEB E9F9390000              	jmp L_error_incorrect_arity_simple
 26179                                  .L_lambda_simple_arity_check_ok_0881:
 26180 00013AF0 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 26181 00013AF5 4983E800                	sub r8, 0
 26182 00013AF9 4C89C3                  	mov rbx,r8
 26183 00013AFC 4983F800                	cmp r8, 0
 26184 00013B00 7535                    	jne .L_lambda_opt_params_loop_02d6
 26185 00013B02 488B542410              	mov rdx, qword [rsp + 8 * 2]
 26186 00013B07 4883C203                	add rdx , 3
 26187 00013B0B 4883EC08                	sub rsp , 8
 26188 00013B0F 4889E1                  	mov rcx, rsp
 26189                                  .L_lambda_opt_stack_adjusted_02d5: ;pushing down the stack of the current function
 26190 00013B12 488B5908                	mov rbx, qword [rcx + 8 * 1]
 26191 00013B16 488919                  	mov qword[rcx] , rbx
 26192 00013B19 4883C108                	add rcx , 8
 26193 00013B1D 48FFCA                  	dec rdx
 26194 00013B20 4883FA00                	cmp rdx, 0
 26195 00013B24 75EC                    	jne .L_lambda_opt_stack_adjusted_02d5
 26196 00013B26 48FF442410              	inc qword [rsp + 8 * 2]
 26197 00013B2B 48C701[01000000]        	mov qword [rcx], sob_nil 
 26198 00013B32 E9A2000000              	jmp .L_lambda_opt_end_01e4
 26199                                  	.L_lambda_opt_params_loop_02d6:
 26200 00013B37 488B542410              	mov rdx, qword [rsp + 8*2]
 26201 00013B3C 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 26202 00013B41 4C89C2                  	mov rdx, r8
 26203 00013B44 49B9-                   	mov r9, sob_nil
 26203 00013B46 [0100000000000000] 
 26204                                  	.L_lambda_opt_params_loop_02d5: ;loop for copying the opt into list
 26205 00013B4E BF11000000              	mov rdi, (1 + 8 + 8)
 26206 00013B53 E8D8390000              	call malloc
 26207 00013B58 C60021                  	mov byte[rax], T_pair
 26208 00013B5B 488B19                  	mov rbx, qword [rcx]
 26209 00013B5E 48895801                	mov SOB_PAIR_CAR(rax), rbx
 26210 00013B62 4C894809                	mov SOB_PAIR_CDR(rax), r9
 26211 00013B66 4989C1                  	mov r9, rax
 26212 00013B69 48FFCA                  	dec rdx
 26213 00013B6C 4883E908                	sub rcx, 8
 26214 00013B70 4883FA00                	cmp rdx, 0
 26215 00013B74 75D8                    	jne .L_lambda_opt_params_loop_02d5
 26216 00013B76 488B542410              	mov rdx, qword [rsp + 8 * 2]
 26217 00013B7B 4889E0                  	mov rax, rsp
 26218 00013B7E 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 26219 00013B83 4C89C1                  	mov rcx, r8
 26220 00013B86 48FFC9                  	dec rcx
 26221 00013B89 4883C203                	add rdx, 3
 26222 00013B8D 4829CA                  	sub rdx,rcx
 26223 00013B90 48C1E103                	shl rcx, 3
 26224                                  	.L_lambda_opt_stack_adjusted_02d6:
 26225 00013B94 4883FA00                	cmp rdx, 0
 26226 00013B98 7419                    	je .L_lambda_opt_params_end_01e4
 26227 00013B9A 4889D8                  	mov rax, rbx
 26228 00013B9D 4829C8                  	sub rax, rcx
 26229 00013BA0 488B30                  	mov rsi, qword [rax]
 26230 00013BA3 488933                  	mov [rbx], rsi
 26231 00013BA6 4883EB08                	sub rbx, 8
 26232 00013BAA 48FFCA                  	dec rdx
 26233 00013BAD 4883FA00                	cmp rdx, 0
 26234 00013BB1 75E1                    	jne .L_lambda_opt_stack_adjusted_02d6
 26235                                  	.L_lambda_opt_params_end_01e4:
 26236 00013BB3 4801CC                  	add rsp,rcx
 26237 00013BB6 BB00000000              	mov rbx, 0
 26238 00013BBB 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 26239 00013BC0 4883C303                	add rbx,3
 26240 00013BC4 4C29C3                  	sub rbx,r8
 26241 00013BC7 48C1E303                	shl rbx, 3
 26242 00013BCB 4801E3                  	add rbx, rsp
 26243 00013BCE 4C890B                  	mov qword[rbx] , r9
 26244 00013BD1 49FFC8                  	dec r8
 26245 00013BD4 4C29442410              	sub qword [rsp + 8 * 2], r8
 26246                                  	.L_lambda_opt_end_01e4:
 26247 00013BD9 C8000000                	enter 0, 0
 26248                                  	; preparing a tail-call
 26249 00013BDD 488B4520                	mov rax, PARAM(0)	; param strings
 26250 00013BE1 50                      	push rax
 26251 00013BE2 48B8-                   	mov rax, L_constants + 2135
 26251 00013BE4 [5708000000000000] 
 26252 00013BEC 50                      	push rax
 26253                                  	; preparing a non-tail-call
 26254                                  	; preparing a non-tail-call
 26255                                  	; preparing a non-tail-call
 26256 00013BED 488B4520                	mov rax, PARAM(0)	; param strings
 26257 00013BF1 50                      	push rax
 26258 00013BF2 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 26259 00013BFA 803805                  	cmp byte [rax], T_undefined
 26260 00013BFD 0F8400380000            	je L_error_fvar_undefined
 26261 00013C03 50                      	push rax
 26262 00013C04 6A02                    	push 2	; arg count
 26263 00013C06 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
 26264 00013C0E 803805                  	cmp byte [rax], T_undefined
 26265 00013C11 0F84EC370000            	je L_error_fvar_undefined
 26266 00013C17 803804                  	cmp byte [rax], T_closure
 26267 00013C1A 0F8567380000            	jne L_error_non_closure
 26268 00013C20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26269 00013C23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26270 00013C26 50                      	push rax
 26271 00013C27 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26272 00013C2F 803805                  	cmp byte [rax], T_undefined
 26273 00013C32 0F84CB370000            	je L_error_fvar_undefined
 26274 00013C38 50                      	push rax
 26275 00013C39 6A02                    	push 2	; arg count
 26276 00013C3B 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
 26277 00013C43 803805                  	cmp byte [rax], T_undefined
 26278 00013C46 0F84B7370000            	je L_error_fvar_undefined
 26279 00013C4C 803804                  	cmp byte [rax], T_closure
 26280 00013C4F 0F8532380000            	jne L_error_non_closure
 26281 00013C55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26282 00013C58 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26283 00013C5B 50                      	push rax
 26284 00013C5C 6A01                    	push 1	; arg count
 26285 00013C5E 488B0425[ED140000]      	mov rax, qword [free_var_99]	; free var make-string
 26286 00013C66 803805                  	cmp byte [rax], T_undefined
 26287 00013C69 0F8494370000            	je L_error_fvar_undefined
 26288 00013C6F 803804                  	cmp byte [rax], T_closure
 26289 00013C72 0F850F380000            	jne L_error_non_closure
 26290 00013C78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26291 00013C7B FF5009                  	call SOB_CLOSURE_CODE(rax)
 26292 00013C7E 50                      	push rax
 26293 00013C7F 6A03                    	push 3	; arg count
 26294 00013C81 488B4510                	mov rax, ENV
 26295 00013C85 488B00                  	mov rax, qword [rax + 8 * 0]
 26296 00013C88 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26297 00013C8B 488B00                  	mov rax, qword [rax]
 26298 00013C8E 803804                  	cmp byte [rax], T_closure
 26299 00013C91 0F85F0370000            	jne L_error_non_closure
 26300 00013C97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26301 00013C9A FF7508                  	push qword [rbp + 8 *1]
 26302 00013C9D 4989C0                  	mov r8, rax
 26303 00013CA0 488B5D18                	mov rbx, COUNT
 26304 00013CA4 4883C303                	add rbx,3
 26305 00013CA8 48C1E303                	shl rbx,3
 26306 00013CAC 4801EB                  	add rbx, rbp
 26307 00013CAF 488B6D00                	mov rbp, [rbp]
 26308 00013CB3 B900000000              	mov rcx,0
 26309 00013CB8 BA06000000              	mov rdx, 6
 26310 00013CBD 4889D0                  	mov rax, rdx
 26311 00013CC0 48FFC8                  	dec rax
 26312 00013CC3 48C1E003                	shl rax,3
 26313 00013CC7 4801E0                  	add rax, rsp
 26314                                  	.L_tc_recycle_frame_loop_099c:
 26315 00013CCA 4839D1                  	cmp rcx, rdx
 26316 00013CCD 7414                    	je .L_tc_recycle_frame_done_099c
 26317 00013CCF 4C8B08                  	mov r9, qword [rax]
 26318 00013CD2 4C890B                  	mov qword [rbx],r9
 26319 00013CD5 4883E808                	sub rax,8
 26320 00013CD9 4883EB08                	sub rbx,8
 26321 00013CDD 4883C101                	add rcx,1
 26322 00013CE1 EBE7                    	jmp .L_tc_recycle_frame_loop_099c
 26323                                  	.L_tc_recycle_frame_done_099c:
 26324 00013CE3 4883C308                	add rbx,8
 26325 00013CE7 4889DC                  	mov rsp,rbx
 26326 00013CEA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 26327                                  	LEAVE
    49 00013CEE C9                  <1>  leave
 26328 00013CEF C21800                  	ret AND_KILL_FRAME(1)
 26329                                  .L_lambda_opt_end_01e3:
 26330 00013CF2 C9                      	leave
 26331 00013CF3 C22000                  	ret AND_KILL_FRAME(2)
 26332                                  .L_lambda_simple_end_078c:	; new closure is in rax
 26333 00013CF6 803804                  	cmp byte [rax], T_closure
 26334 00013CF9 0F8588370000            	jne L_error_non_closure
 26335 00013CFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 26336 00013D02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26337 00013D05 48890425[52160000]      	mov qword [free_var_120], rax
 26338 00013D0D 48B8-                   	mov rax, sob_void
 26338 00013D0F [0000000000000000] 
 26339                                  
 26340 00013D17 4889C7                  	mov rdi, rax
 26341 00013D1A E8663A0000              	call print_sexpr_if_not_void
 26342                                  	; preparing a non-tail-call
 26343 00013D1F 48B8-                   	mov rax, L_constants + 1993
 26343 00013D21 [C907000000000000] 
 26344 00013D29 50                      	push rax
 26345 00013D2A 48B8-                   	mov rax, L_constants + 1993
 26345 00013D2C [C907000000000000] 
 26346 00013D34 50                      	push rax
 26347 00013D35 6A02                    	push 2	; arg count
 26348 00013D37 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26349 00013D3C E8EF370000              	call malloc
 26350 00013D41 50                      	push rax
 26351 00013D42 BF00000000              	mov rdi, 8 * 0	; new rib
 26352 00013D47 E8E4370000              	call malloc
 26353 00013D4C 50                      	push rax
 26354 00013D4D BF08000000              	mov rdi, 8 * 1	; extended env
 26355 00013D52 E8D9370000              	call malloc
 26356 00013D57 488B7D10                	mov rdi, ENV
 26357 00013D5B BE00000000              	mov rsi, 0
 26358 00013D60 BA01000000              	mov rdx, 1
 26359                                  .L_lambda_simple_env_loop_0790:	; ext_env[i + 1] <-- env[i]
 26360 00013D65 4883FE00                	cmp rsi, 0
 26361 00013D69 7410                    	je .L_lambda_simple_env_end_0790
 26362 00013D6B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26363 00013D6F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26364 00013D73 48FFC6                  	inc rsi
 26365 00013D76 48FFC2                  	inc rdx
 26366 00013D79 EBEA                    	jmp .L_lambda_simple_env_loop_0790
 26367                                  .L_lambda_simple_env_end_0790:
 26368 00013D7B 5B                      	pop rbx
 26369 00013D7C BE00000000              	mov rsi, 0
 26370                                  .L_lambda_simple_params_loop_0790:	; copy params
 26371 00013D81 4883FE00                	cmp rsi, 0
 26372 00013D85 740E                    	je .L_lambda_simple_params_end_0790
 26373 00013D87 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26374 00013D8C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26375 00013D90 48FFC6                  	inc rsi
 26376 00013D93 EBEC                    	jmp .L_lambda_simple_params_loop_0790
 26377                                  .L_lambda_simple_params_end_0790:
 26378 00013D95 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26379 00013D98 4889C3                  	mov rbx, rax
 26380 00013D9B 58                      	pop rax
 26381 00013D9C C60004                  	mov byte [rax], T_closure
 26382 00013D9F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26383 00013DA3 48C74009[B03D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0790
 26384 00013DAB E93A080000              	jmp .L_lambda_simple_end_0790
 26385                                  .L_lambda_simple_code_0790:	; lambda-simple body
 26386 00013DB0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26387 00013DB6 740B                    	je .L_lambda_simple_arity_check_ok_0882
 26388 00013DB8 FF742410                	push qword [rsp + 8 * 2]
 26389 00013DBC 6A02                    	push 2
 26390 00013DBE E926370000              	jmp L_error_incorrect_arity_simple
 26391                                  .L_lambda_simple_arity_check_ok_0882:
 26392 00013DC3 C8000000                	enter 0, 0
 26393 00013DC7 BF08000000              	mov rdi, 8
 26394 00013DCC E85F370000              	call malloc
 26395 00013DD1 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 26396 00013DD5 488918                  	mov qword [rax], rbx
 26397 00013DD8 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 26398 00013DDC 48B8-                   	mov rax, sob_void
 26398 00013DDE [0000000000000000] 
 26399                                  
 26400 00013DE6 BF08000000              	mov rdi, 8
 26401 00013DEB E840370000              	call malloc
 26402 00013DF0 488B5D28                	 mov rbx, qword [rbp + 8 * (4 +1)]
 26403 00013DF4 488918                  	mov qword [rax], rbx
 26404 00013DF7 48894528                	mov qword [rbp + 8 * (4 +1)], rax
 26405 00013DFB 48B8-                   	mov rax, sob_void
 26405 00013DFD [0000000000000000] 
 26406                                  
 26407 00013E05 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26408 00013E0A E821370000              	call malloc
 26409 00013E0F 50                      	push rax
 26410 00013E10 BF10000000              	mov rdi, 8 * 2	; new rib
 26411 00013E15 E816370000              	call malloc
 26412 00013E1A 50                      	push rax
 26413 00013E1B BF10000000              	mov rdi, 8 * 2	; extended env
 26414 00013E20 E80B370000              	call malloc
 26415 00013E25 488B7D10                	mov rdi, ENV
 26416 00013E29 BE00000000              	mov rsi, 0
 26417 00013E2E BA01000000              	mov rdx, 1
 26418                                  .L_lambda_simple_env_loop_0791:	; ext_env[i + 1] <-- env[i]
 26419 00013E33 4883FE01                	cmp rsi, 1
 26420 00013E37 7410                    	je .L_lambda_simple_env_end_0791
 26421 00013E39 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26422 00013E3D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26423 00013E41 48FFC6                  	inc rsi
 26424 00013E44 48FFC2                  	inc rdx
 26425 00013E47 EBEA                    	jmp .L_lambda_simple_env_loop_0791
 26426                                  .L_lambda_simple_env_end_0791:
 26427 00013E49 5B                      	pop rbx
 26428 00013E4A BE00000000              	mov rsi, 0
 26429                                  .L_lambda_simple_params_loop_0791:	; copy params
 26430 00013E4F 4883FE02                	cmp rsi, 2
 26431 00013E53 740E                    	je .L_lambda_simple_params_end_0791
 26432 00013E55 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26433 00013E5A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26434 00013E5E 48FFC6                  	inc rsi
 26435 00013E61 EBEC                    	jmp .L_lambda_simple_params_loop_0791
 26436                                  .L_lambda_simple_params_end_0791:
 26437 00013E63 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26438 00013E66 4889C3                  	mov rbx, rax
 26439 00013E69 58                      	pop rax
 26440 00013E6A C60004                  	mov byte [rax], T_closure
 26441 00013E6D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26442 00013E71 48C74009[7E3E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0791
 26443 00013E79 E9A0020000              	jmp .L_lambda_simple_end_0791
 26444                                  .L_lambda_simple_code_0791:	; lambda-simple body
 26445 00013E7E 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26446 00013E84 740B                    	je .L_lambda_simple_arity_check_ok_0883
 26447 00013E86 FF742410                	push qword [rsp + 8 * 2]
 26448 00013E8A 6A03                    	push 3
 26449 00013E8C E958360000              	jmp L_error_incorrect_arity_simple
 26450                                  .L_lambda_simple_arity_check_ok_0883:
 26451 00013E91 C8000000                	enter 0, 0
 26452                                  	; preparing a non-tail-call
 26453 00013E95 488B4530                	mov rax, PARAM(2)	; param s
 26454 00013E99 50                      	push rax
 26455 00013E9A 6A01                    	push 1	; arg count
 26456 00013E9C 488B0425[75150000]      	mov rax, qword [free_var_107]	; free var null?
 26457 00013EA4 803805                  	cmp byte [rax], T_undefined
 26458 00013EA7 0F8456350000            	je L_error_fvar_undefined
 26459 00013EAD 803804                  	cmp byte [rax], T_closure
 26460 00013EB0 0F85D1350000            	jne L_error_non_closure
 26461 00013EB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26462 00013EB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26463 00013EBC 483D[02000000]          	cmp rax, sob_boolean_false
 26464 00013EC2 7409                    	je .L_if_else_054c
 26465 00013EC4 488B4520                	mov rax, PARAM(0)	; param target
 26466 00013EC8 E94D020000              	jmp .L_if_end_05da
 26467                                  .L_if_else_054c:
 26468                                  	; preparing a tail-call
 26469                                  	; preparing a non-tail-call
 26470                                  	; preparing a non-tail-call
 26471                                  	; preparing a non-tail-call
 26472 00013ECD 488B4530                	mov rax, PARAM(2)	; param s
 26473 00013ED1 50                      	push rax
 26474 00013ED2 6A01                    	push 1	; arg count
 26475 00013ED4 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 26476 00013EDC 803805                  	cmp byte [rax], T_undefined
 26477 00013EDF 0F841E350000            	je L_error_fvar_undefined
 26478 00013EE5 803804                  	cmp byte [rax], T_closure
 26479 00013EE8 0F8599350000            	jne L_error_non_closure
 26480 00013EEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 26481 00013EF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26482 00013EF4 50                      	push rax
 26483 00013EF5 6A01                    	push 1	; arg count
 26484 00013EF7 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26485 00013EFF 803805                  	cmp byte [rax], T_undefined
 26486 00013F02 0F84FB340000            	je L_error_fvar_undefined
 26487 00013F08 803804                  	cmp byte [rax], T_closure
 26488 00013F0B 0F8576350000            	jne L_error_non_closure
 26489 00013F11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26490 00013F14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26491 00013F17 50                      	push rax
 26492 00013F18 48B8-                   	mov rax, L_constants + 2135
 26492 00013F1A [5708000000000000] 
 26493 00013F22 50                      	push rax
 26494                                  	; preparing a non-tail-call
 26495 00013F23 488B4530                	mov rax, PARAM(2)	; param s
 26496 00013F27 50                      	push rax
 26497 00013F28 6A01                    	push 1	; arg count
 26498 00013F2A 488B0425[9B110000]      	mov rax, qword [free_var_49]	; free var car
 26499 00013F32 803805                  	cmp byte [rax], T_undefined
 26500 00013F35 0F84C8340000            	je L_error_fvar_undefined
 26501 00013F3B 803804                  	cmp byte [rax], T_closure
 26502 00013F3E 0F8543350000            	jne L_error_non_closure
 26503 00013F44 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26504 00013F47 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26505 00013F4A 50                      	push rax
 26506 00013F4B 488B4528                	mov rax, PARAM(1)	; param i
 26507 00013F4F 50                      	push rax
 26508 00013F50 488B4520                	mov rax, PARAM(0)	; param target
 26509 00013F54 50                      	push rax
 26510 00013F55 6A05                    	push 5	; arg count
 26511 00013F57 488B4510                	mov rax, ENV
 26512 00013F5B 488B00                  	mov rax, qword [rax + 8 * 0]
 26513 00013F5E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26514 00013F62 488B00                  	mov rax, qword [rax]
 26515 00013F65 803804                  	cmp byte [rax], T_closure
 26516 00013F68 0F8519350000            	jne L_error_non_closure
 26517 00013F6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26518 00013F71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26519 00013F74 50                      	push rax
 26520 00013F75 6A01                    	push 1	; arg count
 26521 00013F77 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26522 00013F7C E8AF350000              	call malloc
 26523 00013F81 50                      	push rax
 26524 00013F82 BF18000000              	mov rdi, 8 * 3	; new rib
 26525 00013F87 E8A4350000              	call malloc
 26526 00013F8C 50                      	push rax
 26527 00013F8D BF18000000              	mov rdi, 8 * 3	; extended env
 26528 00013F92 E899350000              	call malloc
 26529 00013F97 488B7D10                	mov rdi, ENV
 26530 00013F9B BE00000000              	mov rsi, 0
 26531 00013FA0 BA01000000              	mov rdx, 1
 26532                                  .L_lambda_simple_env_loop_0792:	; ext_env[i + 1] <-- env[i]
 26533 00013FA5 4883FE02                	cmp rsi, 2
 26534 00013FA9 7410                    	je .L_lambda_simple_env_end_0792
 26535 00013FAB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26536 00013FAF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26537 00013FB3 48FFC6                  	inc rsi
 26538 00013FB6 48FFC2                  	inc rdx
 26539 00013FB9 EBEA                    	jmp .L_lambda_simple_env_loop_0792
 26540                                  .L_lambda_simple_env_end_0792:
 26541 00013FBB 5B                      	pop rbx
 26542 00013FBC BE00000000              	mov rsi, 0
 26543                                  .L_lambda_simple_params_loop_0792:	; copy params
 26544 00013FC1 4883FE03                	cmp rsi, 3
 26545 00013FC5 740E                    	je .L_lambda_simple_params_end_0792
 26546 00013FC7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26547 00013FCC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26548 00013FD0 48FFC6                  	inc rsi
 26549 00013FD3 EBEC                    	jmp .L_lambda_simple_params_loop_0792
 26550                                  .L_lambda_simple_params_end_0792:
 26551 00013FD5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26552 00013FD8 4889C3                  	mov rbx, rax
 26553 00013FDB 58                      	pop rax
 26554 00013FDC C60004                  	mov byte [rax], T_closure
 26555 00013FDF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26556 00013FE3 48C74009[F03F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0792
 26557 00013FEB E9CA000000              	jmp .L_lambda_simple_end_0792
 26558                                  .L_lambda_simple_code_0792:	; lambda-simple body
 26559 00013FF0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26560 00013FF6 740B                    	je .L_lambda_simple_arity_check_ok_0884
 26561 00013FF8 FF742410                	push qword [rsp + 8 * 2]
 26562 00013FFC 6A01                    	push 1
 26563 00013FFE E9E6340000              	jmp L_error_incorrect_arity_simple
 26564                                  .L_lambda_simple_arity_check_ok_0884:
 26565 00014003 C8000000                	enter 0, 0
 26566                                  	; preparing a tail-call
 26567                                  	; preparing a non-tail-call
 26568 00014007 488B4510                	mov rax, ENV
 26569 0001400B 488B00                  	mov rax, qword [rax + 8 * 0]
 26570 0001400E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 26571 00014012 50                      	push rax
 26572 00014013 6A01                    	push 1	; arg count
 26573 00014015 488B0425[9A120000]      	mov rax, qword [free_var_64]	; free var cdr
 26574 0001401D 803805                  	cmp byte [rax], T_undefined
 26575 00014020 0F84DD330000            	je L_error_fvar_undefined
 26576 00014026 803804                  	cmp byte [rax], T_closure
 26577 00014029 0F8558340000            	jne L_error_non_closure
 26578 0001402F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26579 00014032 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26580 00014035 50                      	push rax
 26581 00014036 488B4520                	mov rax, PARAM(0)	; param i
 26582 0001403A 50                      	push rax
 26583 0001403B 488B4510                	mov rax, ENV
 26584 0001403F 488B00                  	mov rax, qword [rax + 8 * 0]
 26585 00014042 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 26586 00014045 50                      	push rax
 26587 00014046 6A03                    	push 3	; arg count
 26588 00014048 488B4510                	mov rax, ENV
 26589 0001404C 488B4008                	mov rax, qword [rax + 8 * 1]
 26590 00014050 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26591 00014053 488B00                  	mov rax, qword [rax]
 26592 00014056 803804                  	cmp byte [rax], T_closure
 26593 00014059 0F8528340000            	jne L_error_non_closure
 26594 0001405F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26595 00014062 FF7508                  	push qword [rbp + 8 *1]
 26596 00014065 4989C0                  	mov r8, rax
 26597 00014068 488B5D18                	mov rbx, COUNT
 26598 0001406C 4883C303                	add rbx,3
 26599 00014070 48C1E303                	shl rbx,3
 26600 00014074 4801EB                  	add rbx, rbp
 26601 00014077 488B6D00                	mov rbp, [rbp]
 26602 0001407B B900000000              	mov rcx,0
 26603 00014080 BA06000000              	mov rdx, 6
 26604 00014085 4889D0                  	mov rax, rdx
 26605 00014088 48FFC8                  	dec rax
 26606 0001408B 48C1E003                	shl rax,3
 26607 0001408F 4801E0                  	add rax, rsp
 26608                                  	.L_tc_recycle_frame_loop_099e:
 26609 00014092 4839D1                  	cmp rcx, rdx
 26610 00014095 7414                    	je .L_tc_recycle_frame_done_099e
 26611 00014097 4C8B08                  	mov r9, qword [rax]
 26612 0001409A 4C890B                  	mov qword [rbx],r9
 26613 0001409D 4883E808                	sub rax,8
 26614 000140A1 4883EB08                	sub rbx,8
 26615 000140A5 4883C101                	add rcx,1
 26616 000140A9 EBE7                    	jmp .L_tc_recycle_frame_loop_099e
 26617                                  	.L_tc_recycle_frame_done_099e:
 26618 000140AB 4883C308                	add rbx,8
 26619 000140AF 4889DC                  	mov rsp,rbx
 26620 000140B2 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 26621 000140B6 C9                      	leave
 26622 000140B7 C21800                  	ret AND_KILL_FRAME(1)
 26623                                  .L_lambda_simple_end_0792:	; new closure is in rax
 26624 000140BA 803804                  	cmp byte [rax], T_closure
 26625 000140BD 0F85C4330000            	jne L_error_non_closure
 26626 000140C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26627 000140C6 FF7508                  	push qword [rbp + 8 *1]
 26628 000140C9 4989C0                  	mov r8, rax
 26629 000140CC 488B5D18                	mov rbx, COUNT
 26630 000140D0 4883C303                	add rbx,3
 26631 000140D4 48C1E303                	shl rbx,3
 26632 000140D8 4801EB                  	add rbx, rbp
 26633 000140DB 488B6D00                	mov rbp, [rbp]
 26634 000140DF B900000000              	mov rcx,0
 26635 000140E4 BA04000000              	mov rdx, 4
 26636 000140E9 4889D0                  	mov rax, rdx
 26637 000140EC 48FFC8                  	dec rax
 26638 000140EF 48C1E003                	shl rax,3
 26639 000140F3 4801E0                  	add rax, rsp
 26640                                  	.L_tc_recycle_frame_loop_099d:
 26641 000140F6 4839D1                  	cmp rcx, rdx
 26642 000140F9 7414                    	je .L_tc_recycle_frame_done_099d
 26643 000140FB 4C8B08                  	mov r9, qword [rax]
 26644 000140FE 4C890B                  	mov qword [rbx],r9
 26645 00014101 4883E808                	sub rax,8
 26646 00014105 4883EB08                	sub rbx,8
 26647 00014109 4883C101                	add rcx,1
 26648 0001410D EBE7                    	jmp .L_tc_recycle_frame_loop_099d
 26649                                  	.L_tc_recycle_frame_done_099d:
 26650 0001410F 4883C308                	add rbx,8
 26651 00014113 4889DC                  	mov rsp,rbx
 26652 00014116 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 26653                                  .L_if_end_05da:
 26654 0001411A C9                      	leave
 26655 0001411B C22800                  	ret AND_KILL_FRAME(3)
 26656                                  .L_lambda_simple_end_0791:	; new closure is in rax
 26657 0001411E 50                      	push rax
 26658 0001411F 488B4520                	mov rax, PARAM(0)	; param run
 26659 00014123 8F00                    	pop qword [rax]
 26660 00014125 48B8-                   	mov rax, sob_void
 26660 00014127 [0000000000000000] 
 26661                                  
 26662 0001412F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26663 00014134 E8F7330000              	call malloc
 26664 00014139 50                      	push rax
 26665 0001413A BF10000000              	mov rdi, 8 * 2	; new rib
 26666 0001413F E8EC330000              	call malloc
 26667 00014144 50                      	push rax
 26668 00014145 BF10000000              	mov rdi, 8 * 2	; extended env
 26669 0001414A E8E1330000              	call malloc
 26670 0001414F 488B7D10                	mov rdi, ENV
 26671 00014153 BE00000000              	mov rsi, 0
 26672 00014158 BA01000000              	mov rdx, 1
 26673                                  .L_lambda_simple_env_loop_0793:	; ext_env[i + 1] <-- env[i]
 26674 0001415D 4883FE01                	cmp rsi, 1
 26675 00014161 7410                    	je .L_lambda_simple_env_end_0793
 26676 00014163 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26677 00014167 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26678 0001416B 48FFC6                  	inc rsi
 26679 0001416E 48FFC2                  	inc rdx
 26680 00014171 EBEA                    	jmp .L_lambda_simple_env_loop_0793
 26681                                  .L_lambda_simple_env_end_0793:
 26682 00014173 5B                      	pop rbx
 26683 00014174 BE00000000              	mov rsi, 0
 26684                                  .L_lambda_simple_params_loop_0793:	; copy params
 26685 00014179 4883FE02                	cmp rsi, 2
 26686 0001417D 740E                    	je .L_lambda_simple_params_end_0793
 26687 0001417F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26688 00014184 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26689 00014188 48FFC6                  	inc rsi
 26690 0001418B EBEC                    	jmp .L_lambda_simple_params_loop_0793
 26691                                  .L_lambda_simple_params_end_0793:
 26692 0001418D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26693 00014190 4889C3                  	mov rbx, rax
 26694 00014193 58                      	pop rax
 26695 00014194 C60004                  	mov byte [rax], T_closure
 26696 00014197 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26697 0001419B 48C74009[A8410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0793
 26698 000141A3 E997010000              	jmp .L_lambda_simple_end_0793
 26699                                  .L_lambda_simple_code_0793:	; lambda-simple body
 26700 000141A8 48837C241005            	cmp qword [rsp + 8 * 2], 5
 26701 000141AE 740B                    	je .L_lambda_simple_arity_check_ok_0885
 26702 000141B0 FF742410                	push qword [rsp + 8 * 2]
 26703 000141B4 6A05                    	push 5
 26704 000141B6 E92E330000              	jmp L_error_incorrect_arity_simple
 26705                                  .L_lambda_simple_arity_check_ok_0885:
 26706 000141BB C8000000                	enter 0, 0
 26707                                  	; preparing a non-tail-call
 26708 000141BF 488B4540                	mov rax, PARAM(4)	; param limit
 26709 000141C3 50                      	push rax
 26710 000141C4 488B4538                	mov rax, PARAM(3)	; param j
 26711 000141C8 50                      	push rax
 26712 000141C9 6A02                    	push 2	; arg count
 26713 000141CB 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 26714 000141D3 803805                  	cmp byte [rax], T_undefined
 26715 000141D6 0F8427320000            	je L_error_fvar_undefined
 26716 000141DC 803804                  	cmp byte [rax], T_closure
 26717 000141DF 0F85A2320000            	jne L_error_non_closure
 26718 000141E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26719 000141E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26720 000141EB 483D[02000000]          	cmp rax, sob_boolean_false
 26721 000141F1 0F8440010000            	je .L_if_else_054d
 26722                                  	; preparing a non-tail-call
 26723                                  	; preparing a non-tail-call
 26724 000141F7 488B4538                	mov rax, PARAM(3)	; param j
 26725 000141FB 50                      	push rax
 26726 000141FC 488B4530                	mov rax, PARAM(2)	; param vec
 26727 00014200 50                      	push rax
 26728 00014201 6A02                    	push 2	; arg count
 26729 00014203 488B0425[EA170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26730 0001420B 803805                  	cmp byte [rax], T_undefined
 26731 0001420E 0F84EF310000            	je L_error_fvar_undefined
 26732 00014214 803804                  	cmp byte [rax], T_closure
 26733 00014217 0F856A320000            	jne L_error_non_closure
 26734 0001421D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26735 00014220 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26736 00014223 50                      	push rax
 26737 00014224 488B4528                	mov rax, PARAM(1)	; param i
 26738 00014228 50                      	push rax
 26739 00014229 488B4520                	mov rax, PARAM(0)	; param target
 26740 0001422D 50                      	push rax
 26741 0001422E 6A03                    	push 3	; arg count
 26742 00014230 488B0425[1D180000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26743 00014238 803805                  	cmp byte [rax], T_undefined
 26744 0001423B 0F84C2310000            	je L_error_fvar_undefined
 26745 00014241 803804                  	cmp byte [rax], T_closure
 26746 00014244 0F853D320000            	jne L_error_non_closure
 26747 0001424A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26748 0001424D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26749                                  
 26750                                  	; preparing a tail-call
 26751 00014250 488B4540                	mov rax, PARAM(4)	; param limit
 26752 00014254 50                      	push rax
 26753                                  	; preparing a non-tail-call
 26754 00014255 48B8-                   	mov rax, L_constants + 2270
 26754 00014257 [DE08000000000000] 
 26755 0001425F 50                      	push rax
 26756 00014260 488B4538                	mov rax, PARAM(3)	; param j
 26757 00014264 50                      	push rax
 26758 00014265 6A02                    	push 2	; arg count
 26759 00014267 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26760 0001426F 803805                  	cmp byte [rax], T_undefined
 26761 00014272 0F848B310000            	je L_error_fvar_undefined
 26762 00014278 803804                  	cmp byte [rax], T_closure
 26763 0001427B 0F8506320000            	jne L_error_non_closure
 26764 00014281 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26765 00014284 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26766 00014287 50                      	push rax
 26767 00014288 488B4530                	mov rax, PARAM(2)	; param vec
 26768 0001428C 50                      	push rax
 26769                                  	; preparing a non-tail-call
 26770 0001428D 48B8-                   	mov rax, L_constants + 2270
 26770 0001428F [DE08000000000000] 
 26771 00014297 50                      	push rax
 26772 00014298 488B4528                	mov rax, PARAM(1)	; param i
 26773 0001429C 50                      	push rax
 26774 0001429D 6A02                    	push 2	; arg count
 26775 0001429F 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26776 000142A7 803805                  	cmp byte [rax], T_undefined
 26777 000142AA 0F8453310000            	je L_error_fvar_undefined
 26778 000142B0 803804                  	cmp byte [rax], T_closure
 26779 000142B3 0F85CE310000            	jne L_error_non_closure
 26780 000142B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26781 000142BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 26782 000142BF 50                      	push rax
 26783 000142C0 488B4520                	mov rax, PARAM(0)	; param target
 26784 000142C4 50                      	push rax
 26785 000142C5 6A05                    	push 5	; arg count
 26786 000142C7 488B4510                	mov rax, ENV
 26787 000142CB 488B00                  	mov rax, qword [rax + 8 * 0]
 26788 000142CE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26789 000142D2 488B00                  	mov rax, qword [rax]
 26790 000142D5 803804                  	cmp byte [rax], T_closure
 26791 000142D8 0F85A9310000            	jne L_error_non_closure
 26792 000142DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 26793 000142E1 FF7508                  	push qword [rbp + 8 *1]
 26794 000142E4 4989C0                  	mov r8, rax
 26795 000142E7 488B5D18                	mov rbx, COUNT
 26796 000142EB 4883C303                	add rbx,3
 26797 000142EF 48C1E303                	shl rbx,3
 26798 000142F3 4801EB                  	add rbx, rbp
 26799 000142F6 488B6D00                	mov rbp, [rbp]
 26800 000142FA B900000000              	mov rcx,0
 26801 000142FF BA08000000              	mov rdx, 8
 26802 00014304 4889D0                  	mov rax, rdx
 26803 00014307 48FFC8                  	dec rax
 26804 0001430A 48C1E003                	shl rax,3
 26805 0001430E 4801E0                  	add rax, rsp
 26806                                  	.L_tc_recycle_frame_loop_099f:
 26807 00014311 4839D1                  	cmp rcx, rdx
 26808 00014314 7414                    	je .L_tc_recycle_frame_done_099f
 26809 00014316 4C8B08                  	mov r9, qword [rax]
 26810 00014319 4C890B                  	mov qword [rbx],r9
 26811 0001431C 4883E808                	sub rax,8
 26812 00014320 4883EB08                	sub rbx,8
 26813 00014324 4883C101                	add rcx,1
 26814 00014328 EBE7                    	jmp .L_tc_recycle_frame_loop_099f
 26815                                  	.L_tc_recycle_frame_done_099f:
 26816 0001432A 4883C308                	add rbx,8
 26817 0001432E 4889DC                  	mov rsp,rbx
 26818 00014331 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 26819 00014335 EB04                    	jmp .L_if_end_05db
 26820                                  .L_if_else_054d:
 26821 00014337 488B4528                	mov rax, PARAM(1)	; param i
 26822                                  .L_if_end_05db:
 26823 0001433B C9                      	leave
 26824 0001433C C23800                  	ret AND_KILL_FRAME(5)
 26825                                  .L_lambda_simple_end_0793:	; new closure is in rax
 26826 0001433F 50                      	push rax
 26827 00014340 488B4528                	mov rax, PARAM(1)	; param add
 26828 00014344 8F00                    	pop qword [rax]
 26829 00014346 48B8-                   	mov rax, sob_void
 26829 00014348 [0000000000000000] 
 26830                                  
 26831 00014350 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26832 00014355 E8D6310000              	call malloc
 26833 0001435A 50                      	push rax
 26834 0001435B 4C8B4D10                	mov r9, qword [rbp + 8 * 2]
 26835 0001435F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26836 00014363 BF10000000              	mov rdi, 8 * 2	; new rib for optional parameters
 26837 00014368 E8C3310000              	call malloc
 26838 0001436D 50                      	push rax
 26839 0001436E BF10000000              	mov rdi, 8 * 2	; extended env
 26840 00014373 E8B8310000              	call malloc
 26841 00014378 488B7D10                	mov rdi, ENV
 26842 0001437C BE00000000              	mov rsi, 0
 26843 00014381 BA01000000              	mov rdx, 1
 26844                                  .L_lambda_opt_env_loop_00f3:	; ext_env[i + 1] <-- env[i] copy all the array
 26845 00014386 4883FE01                	cmp rsi, 1
 26846 0001438A 7410                    	je .L_lambda_opt_env_end_00f3
 26847 0001438C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26848 00014390 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26849 00014394 48FFC6                  	inc rsi
 26850 00014397 48FFC2                  	inc rdx
 26851 0001439A EBEA                    	jmp .L_lambda_opt_env_loop_00f3
 26852                                  .L_lambda_opt_env_end_00f3:
 26853 0001439C 5B                      	pop rbx
 26854 0001439D BE00000000              	mov rsi, 0
 26855                                  .L_lambda_opt_params_loop_02d7:	; copy params
 26856 000143A2 4883FE02                	cmp rsi, 2
 26857 000143A6 740E                    	je .L_lambda_opt_params_end_01e5
 26858 000143A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26859 000143AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26860 000143B1 48FFC6                  	inc rsi
 26861 000143B4 EBEC                    	jmp .L_lambda_opt_params_loop_02d7
 26862                                  .L_lambda_opt_params_end_01e5:
 26863 000143B6 488918                  	mov qword [rax], rbx 	; ext_env[0] <-- The new_rib 
 26864 000143B9 4889C3                  	mov rbx, rax
 26865 000143BC 58                      	pop rax
 26866 000143BD C60004                  	mov byte [rax], T_closure
 26867 000143C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26868 000143C4 48C74009[D1430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00f3
 26869 000143CC E915020000              	jmp .L_lambda_opt_end_01e5
 26870                                  .L_lambda_opt_code_00f3:	; lambda-opt body
 26871 000143D1 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26872 000143D7 7D0B                    	jge .L_lambda_simple_arity_check_ok_0886
 26873 000143D9 FF742410                	push qword [rsp + 8 * 2]
 26874 000143DD 6A00                    	push 0
 26875 000143DF E905310000              	jmp L_error_incorrect_arity_simple
 26876                                  .L_lambda_simple_arity_check_ok_0886:
 26877 000143E4 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 26878 000143E9 4983E800                	sub r8, 0
 26879 000143ED 4C89C3                  	mov rbx,r8
 26880 000143F0 4983F800                	cmp r8, 0
 26881 000143F4 7535                    	jne .L_lambda_opt_params_loop_02d9
 26882 000143F6 488B542410              	mov rdx, qword [rsp + 8 * 2]
 26883 000143FB 4883C203                	add rdx , 3
 26884 000143FF 4883EC08                	sub rsp , 8
 26885 00014403 4889E1                  	mov rcx, rsp
 26886                                  .L_lambda_opt_stack_adjusted_02d8: ;pushing down the stack of the current function
 26887 00014406 488B5908                	mov rbx, qword [rcx + 8 * 1]
 26888 0001440A 488919                  	mov qword[rcx] , rbx
 26889 0001440D 4883C108                	add rcx , 8
 26890 00014411 48FFCA                  	dec rdx
 26891 00014414 4883FA00                	cmp rdx, 0
 26892 00014418 75EC                    	jne .L_lambda_opt_stack_adjusted_02d8
 26893 0001441A 48FF442410              	inc qword [rsp + 8 * 2]
 26894 0001441F 48C701[01000000]        	mov qword [rcx], sob_nil 
 26895 00014426 E9A2000000              	jmp .L_lambda_opt_end_01e6
 26896                                  	.L_lambda_opt_params_loop_02d9:
 26897 0001442B 488B542410              	mov rdx, qword [rsp + 8*2]
 26898 00014430 488D4CD410              	lea rcx, [rsp + 16 + 8*rdx]
 26899 00014435 4C89C2                  	mov rdx, r8
 26900 00014438 49B9-                   	mov r9, sob_nil
 26900 0001443A [0100000000000000] 
 26901                                  	.L_lambda_opt_params_loop_02d8: ;loop for copying the opt into list
 26902 00014442 BF11000000              	mov rdi, (1 + 8 + 8)
 26903 00014447 E8E4300000              	call malloc
 26904 0001444C C60021                  	mov byte[rax], T_pair
 26905 0001444F 488B19                  	mov rbx, qword [rcx]
 26906 00014452 48895801                	mov SOB_PAIR_CAR(rax), rbx
 26907 00014456 4C894809                	mov SOB_PAIR_CDR(rax), r9
 26908 0001445A 4989C1                  	mov r9, rax
 26909 0001445D 48FFCA                  	dec rdx
 26910 00014460 4883E908                	sub rcx, 8
 26911 00014464 4883FA00                	cmp rdx, 0
 26912 00014468 75D8                    	jne .L_lambda_opt_params_loop_02d8
 26913 0001446A 488B542410              	mov rdx, qword [rsp + 8 * 2]
 26914 0001446F 4889E0                  	mov rax, rsp
 26915 00014472 488D5CD410              	lea rbx, [rsp + 8*(rdx + 2)]
 26916 00014477 4C89C1                  	mov rcx, r8
 26917 0001447A 48FFC9                  	dec rcx
 26918 0001447D 4883C203                	add rdx, 3
 26919 00014481 4829CA                  	sub rdx,rcx
 26920 00014484 48C1E103                	shl rcx, 3
 26921                                  	.L_lambda_opt_stack_adjusted_02d9:
 26922 00014488 4883FA00                	cmp rdx, 0
 26923 0001448C 7419                    	je .L_lambda_opt_params_end_01e6
 26924 0001448E 4889D8                  	mov rax, rbx
 26925 00014491 4829C8                  	sub rax, rcx
 26926 00014494 488B30                  	mov rsi, qword [rax]
 26927 00014497 488933                  	mov [rbx], rsi
 26928 0001449A 4883EB08                	sub rbx, 8
 26929 0001449E 48FFCA                  	dec rdx
 26930 000144A1 4883FA00                	cmp rdx, 0
 26931 000144A5 75E1                    	jne .L_lambda_opt_stack_adjusted_02d9
 26932                                  	.L_lambda_opt_params_end_01e6:
 26933 000144A7 4801CC                  	add rsp,rcx
 26934 000144AA BB00000000              	mov rbx, 0
 26935 000144AF 488B5C2410              	mov rbx, qword [rsp + 8 * 2]
 26936 000144B4 4883C303                	add rbx,3
 26937 000144B8 4C29C3                  	sub rbx,r8
 26938 000144BB 48C1E303                	shl rbx, 3
 26939 000144BF 4801E3                  	add rbx, rsp
 26940 000144C2 4C890B                  	mov qword[rbx] , r9
 26941 000144C5 49FFC8                  	dec r8
 26942 000144C8 4C29442410              	sub qword [rsp + 8 * 2], r8
 26943                                  	.L_lambda_opt_end_01e6:
 26944 000144CD C8000000                	enter 0, 0
 26945                                  	; preparing a tail-call
 26946 000144D1 488B4520                	mov rax, PARAM(0)	; param vectors
 26947 000144D5 50                      	push rax
 26948 000144D6 48B8-                   	mov rax, L_constants + 2135
 26948 000144D8 [5708000000000000] 
 26949 000144E0 50                      	push rax
 26950                                  	; preparing a non-tail-call
 26951                                  	; preparing a non-tail-call
 26952                                  	; preparing a non-tail-call
 26953 000144E1 488B4520                	mov rax, PARAM(0)	; param vectors
 26954 000144E5 50                      	push rax
 26955 000144E6 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26956 000144EE 803805                  	cmp byte [rax], T_undefined
 26957 000144F1 0F840C2F0000            	je L_error_fvar_undefined
 26958 000144F7 50                      	push rax
 26959 000144F8 6A02                    	push 2	; arg count
 26960 000144FA 488B0425[31150000]      	mov rax, qword [free_var_103]	; free var map
 26961 00014502 803805                  	cmp byte [rax], T_undefined
 26962 00014505 0F84F82E0000            	je L_error_fvar_undefined
 26963 0001450B 803804                  	cmp byte [rax], T_closure
 26964 0001450E 0F85732F0000            	jne L_error_non_closure
 26965 00014514 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26966 00014517 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26967 0001451A 50                      	push rax
 26968 0001451B 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 26969 00014523 803805                  	cmp byte [rax], T_undefined
 26970 00014526 0F84D72E0000            	je L_error_fvar_undefined
 26971 0001452C 50                      	push rax
 26972 0001452D 6A02                    	push 2	; arg count
 26973 0001452F 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
 26974 00014537 803805                  	cmp byte [rax], T_undefined
 26975 0001453A 0F84C32E0000            	je L_error_fvar_undefined
 26976 00014540 803804                  	cmp byte [rax], T_closure
 26977 00014543 0F853E2F0000            	jne L_error_non_closure
 26978 00014549 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26979 0001454C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26980 0001454F 50                      	push rax
 26981 00014550 6A01                    	push 1	; arg count
 26982 00014552 488B0425[0F150000]      	mov rax, qword [free_var_101]	; free var make-vector
 26983 0001455A 803805                  	cmp byte [rax], T_undefined
 26984 0001455D 0F84A02E0000            	je L_error_fvar_undefined
 26985 00014563 803804                  	cmp byte [rax], T_closure
 26986 00014566 0F851B2F0000            	jne L_error_non_closure
 26987 0001456C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26988 0001456F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26989 00014572 50                      	push rax
 26990 00014573 6A03                    	push 3	; arg count
 26991 00014575 488B4510                	mov rax, ENV
 26992 00014579 488B00                  	mov rax, qword [rax + 8 * 0]
 26993 0001457C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26994 0001457F 488B00                  	mov rax, qword [rax]
 26995 00014582 803804                  	cmp byte [rax], T_closure
 26996 00014585 0F85FC2E0000            	jne L_error_non_closure
 26997 0001458B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26998 0001458E FF7508                  	push qword [rbp + 8 *1]
 26999 00014591 4989C0                  	mov r8, rax
 27000 00014594 488B5D18                	mov rbx, COUNT
 27001 00014598 4883C303                	add rbx,3
 27002 0001459C 48C1E303                	shl rbx,3
 27003 000145A0 4801EB                  	add rbx, rbp
 27004 000145A3 488B6D00                	mov rbp, [rbp]
 27005 000145A7 B900000000              	mov rcx,0
 27006 000145AC BA06000000              	mov rdx, 6
 27007 000145B1 4889D0                  	mov rax, rdx
 27008 000145B4 48FFC8                  	dec rax
 27009 000145B7 48C1E003                	shl rax,3
 27010 000145BB 4801E0                  	add rax, rsp
 27011                                  	.L_tc_recycle_frame_loop_09a0:
 27012 000145BE 4839D1                  	cmp rcx, rdx
 27013 000145C1 7414                    	je .L_tc_recycle_frame_done_09a0
 27014 000145C3 4C8B08                  	mov r9, qword [rax]
 27015 000145C6 4C890B                  	mov qword [rbx],r9
 27016 000145C9 4883E808                	sub rax,8
 27017 000145CD 4883EB08                	sub rbx,8
 27018 000145D1 4883C101                	add rcx,1
 27019 000145D5 EBE7                    	jmp .L_tc_recycle_frame_loop_09a0
 27020                                  	.L_tc_recycle_frame_done_09a0:
 27021 000145D7 4883C308                	add rbx,8
 27022 000145DB 4889DC                  	mov rsp,rbx
 27023 000145DE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27024                                  	LEAVE
    49 000145E2 C9                  <1>  leave
 27025 000145E3 C21800                  	ret AND_KILL_FRAME(1)
 27026                                  .L_lambda_opt_end_01e5:
 27027 000145E6 C9                      	leave
 27028 000145E7 C22000                  	ret AND_KILL_FRAME(2)
 27029                                  .L_lambda_simple_end_0790:	; new closure is in rax
 27030 000145EA 803804                  	cmp byte [rax], T_closure
 27031 000145ED 0F85942E0000            	jne L_error_non_closure
 27032 000145F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27033 000145F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27034 000145F9 48890425[C8170000]      	mov qword [free_var_142], rax
 27035 00014601 48B8-                   	mov rax, sob_void
 27035 00014603 [0000000000000000] 
 27036                                  
 27037 0001460B 4889C7                  	mov rdi, rax
 27038 0001460E E872310000              	call print_sexpr_if_not_void
 27039 00014613 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27040 00014618 E8132F0000              	call malloc
 27041 0001461D 50                      	push rax
 27042 0001461E BF00000000              	mov rdi, 8 * 0	; new rib
 27043 00014623 E8082F0000              	call malloc
 27044 00014628 50                      	push rax
 27045 00014629 BF08000000              	mov rdi, 8 * 1	; extended env
 27046 0001462E E8FD2E0000              	call malloc
 27047 00014633 488B7D10                	mov rdi, ENV
 27048 00014637 BE00000000              	mov rsi, 0
 27049 0001463C BA01000000              	mov rdx, 1
 27050                                  .L_lambda_simple_env_loop_0794:	; ext_env[i + 1] <-- env[i]
 27051 00014641 4883FE00                	cmp rsi, 0
 27052 00014645 7410                    	je .L_lambda_simple_env_end_0794
 27053 00014647 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27054 0001464B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27055 0001464F 48FFC6                  	inc rsi
 27056 00014652 48FFC2                  	inc rdx
 27057 00014655 EBEA                    	jmp .L_lambda_simple_env_loop_0794
 27058                                  .L_lambda_simple_env_end_0794:
 27059 00014657 5B                      	pop rbx
 27060 00014658 BE00000000              	mov rsi, 0
 27061                                  .L_lambda_simple_params_loop_0794:	; copy params
 27062 0001465D 4883FE00                	cmp rsi, 0
 27063 00014661 740E                    	je .L_lambda_simple_params_end_0794
 27064 00014663 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27065 00014668 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27066 0001466C 48FFC6                  	inc rsi
 27067 0001466F EBEC                    	jmp .L_lambda_simple_params_loop_0794
 27068                                  .L_lambda_simple_params_end_0794:
 27069 00014671 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27070 00014674 4889C3                  	mov rbx, rax
 27071 00014677 58                      	pop rax
 27072 00014678 C60004                  	mov byte [rax], T_closure
 27073 0001467B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27074 0001467F 48C74009[8C460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0794
 27075 00014687 E9D9000000              	jmp .L_lambda_simple_end_0794
 27076                                  .L_lambda_simple_code_0794:	; lambda-simple body
 27077 0001468C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27078 00014692 740B                    	je .L_lambda_simple_arity_check_ok_0887
 27079 00014694 FF742410                	push qword [rsp + 8 * 2]
 27080 00014698 6A01                    	push 1
 27081 0001469A E94A2E0000              	jmp L_error_incorrect_arity_simple
 27082                                  .L_lambda_simple_arity_check_ok_0887:
 27083 0001469F C8000000                	enter 0, 0
 27084                                  	; preparing a tail-call
 27085                                  	; preparing a non-tail-call
 27086                                  	; preparing a non-tail-call
 27087 000146A3 488B4520                	mov rax, PARAM(0)	; param str
 27088 000146A7 50                      	push rax
 27089 000146A8 6A01                    	push 1	; arg count
 27090 000146AA 488B0425[41160000]      	mov rax, qword [free_var_119]	; free var string->list
 27091 000146B2 803805                  	cmp byte [rax], T_undefined
 27092 000146B5 0F84482D0000            	je L_error_fvar_undefined
 27093 000146BB 803804                  	cmp byte [rax], T_closure
 27094 000146BE 0F85C32D0000            	jne L_error_non_closure
 27095 000146C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27096 000146C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27097 000146CA 50                      	push rax
 27098 000146CB 6A01                    	push 1	; arg count
 27099 000146CD 488B0425[30160000]      	mov rax, qword [free_var_118]	; free var reverse
 27100 000146D5 803805                  	cmp byte [rax], T_undefined
 27101 000146D8 0F84252D0000            	je L_error_fvar_undefined
 27102 000146DE 803804                  	cmp byte [rax], T_closure
 27103 000146E1 0F85A02D0000            	jne L_error_non_closure
 27104 000146E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27105 000146EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27106 000146ED 50                      	push rax
 27107 000146EE 6A01                    	push 1	; arg count
 27108 000146F0 488B0425[98140000]      	mov rax, qword [free_var_94]	; free var list->string
 27109 000146F8 803805                  	cmp byte [rax], T_undefined
 27110 000146FB 0F84022D0000            	je L_error_fvar_undefined
 27111 00014701 803804                  	cmp byte [rax], T_closure
 27112 00014704 0F857D2D0000            	jne L_error_non_closure
 27113 0001470A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27114 0001470D FF7508                  	push qword [rbp + 8 *1]
 27115 00014710 4989C0                  	mov r8, rax
 27116 00014713 488B5D18                	mov rbx, COUNT
 27117 00014717 4883C303                	add rbx,3
 27118 0001471B 48C1E303                	shl rbx,3
 27119 0001471F 4801EB                  	add rbx, rbp
 27120 00014722 488B6D00                	mov rbp, [rbp]
 27121 00014726 B900000000              	mov rcx,0
 27122 0001472B BA04000000              	mov rdx, 4
 27123 00014730 4889D0                  	mov rax, rdx
 27124 00014733 48FFC8                  	dec rax
 27125 00014736 48C1E003                	shl rax,3
 27126 0001473A 4801E0                  	add rax, rsp
 27127                                  	.L_tc_recycle_frame_loop_09a1:
 27128 0001473D 4839D1                  	cmp rcx, rdx
 27129 00014740 7414                    	je .L_tc_recycle_frame_done_09a1
 27130 00014742 4C8B08                  	mov r9, qword [rax]
 27131 00014745 4C890B                  	mov qword [rbx],r9
 27132 00014748 4883E808                	sub rax,8
 27133 0001474C 4883EB08                	sub rbx,8
 27134 00014750 4883C101                	add rcx,1
 27135 00014754 EBE7                    	jmp .L_tc_recycle_frame_loop_09a1
 27136                                  	.L_tc_recycle_frame_done_09a1:
 27137 00014756 4883C308                	add rbx,8
 27138 0001475A 4889DC                  	mov rsp,rbx
 27139 0001475D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27140 00014761 C9                      	leave
 27141 00014762 C21800                  	ret AND_KILL_FRAME(1)
 27142                                  .L_lambda_simple_end_0794:	; new closure is in rax
 27143 00014765 48890425[EB160000]      	mov qword [free_var_129], rax
 27144 0001476D 48B8-                   	mov rax, sob_void
 27144 0001476F [0000000000000000] 
 27145                                  
 27146 00014777 4889C7                  	mov rdi, rax
 27147 0001477A E806300000              	call print_sexpr_if_not_void
 27148 0001477F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27149 00014784 E8A72D0000              	call malloc
 27150 00014789 50                      	push rax
 27151 0001478A BF00000000              	mov rdi, 8 * 0	; new rib
 27152 0001478F E89C2D0000              	call malloc
 27153 00014794 50                      	push rax
 27154 00014795 BF08000000              	mov rdi, 8 * 1	; extended env
 27155 0001479A E8912D0000              	call malloc
 27156 0001479F 488B7D10                	mov rdi, ENV
 27157 000147A3 BE00000000              	mov rsi, 0
 27158 000147A8 BA01000000              	mov rdx, 1
 27159                                  .L_lambda_simple_env_loop_0795:	; ext_env[i + 1] <-- env[i]
 27160 000147AD 4883FE00                	cmp rsi, 0
 27161 000147B1 7410                    	je .L_lambda_simple_env_end_0795
 27162 000147B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27163 000147B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27164 000147BB 48FFC6                  	inc rsi
 27165 000147BE 48FFC2                  	inc rdx
 27166 000147C1 EBEA                    	jmp .L_lambda_simple_env_loop_0795
 27167                                  .L_lambda_simple_env_end_0795:
 27168 000147C3 5B                      	pop rbx
 27169 000147C4 BE00000000              	mov rsi, 0
 27170                                  .L_lambda_simple_params_loop_0795:	; copy params
 27171 000147C9 4883FE00                	cmp rsi, 0
 27172 000147CD 740E                    	je .L_lambda_simple_params_end_0795
 27173 000147CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27174 000147D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27175 000147D8 48FFC6                  	inc rsi
 27176 000147DB EBEC                    	jmp .L_lambda_simple_params_loop_0795
 27177                                  .L_lambda_simple_params_end_0795:
 27178 000147DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27179 000147E0 4889C3                  	mov rbx, rax
 27180 000147E3 58                      	pop rax
 27181 000147E4 C60004                  	mov byte [rax], T_closure
 27182 000147E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27183 000147EB 48C74009[F8470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0795
 27184 000147F3 E9D9000000              	jmp .L_lambda_simple_end_0795
 27185                                  .L_lambda_simple_code_0795:	; lambda-simple body
 27186 000147F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27187 000147FE 740B                    	je .L_lambda_simple_arity_check_ok_0888
 27188 00014800 FF742410                	push qword [rsp + 8 * 2]
 27189 00014804 6A01                    	push 1
 27190 00014806 E9DE2C0000              	jmp L_error_incorrect_arity_simple
 27191                                  .L_lambda_simple_arity_check_ok_0888:
 27192 0001480B C8000000                	enter 0, 0
 27193                                  	; preparing a tail-call
 27194                                  	; preparing a non-tail-call
 27195                                  	; preparing a non-tail-call
 27196 0001480F 488B4520                	mov rax, PARAM(0)	; param vec
 27197 00014813 50                      	push rax
 27198 00014814 6A01                    	push 1	; arg count
 27199 00014816 488B0425[B7170000]      	mov rax, qword [free_var_141]	; free var vector->list
 27200 0001481E 803805                  	cmp byte [rax], T_undefined
 27201 00014821 0F84DC2B0000            	je L_error_fvar_undefined
 27202 00014827 803804                  	cmp byte [rax], T_closure
 27203 0001482A 0F85572C0000            	jne L_error_non_closure
 27204 00014830 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27205 00014833 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27206 00014836 50                      	push rax
 27207 00014837 6A01                    	push 1	; arg count
 27208 00014839 488B0425[30160000]      	mov rax, qword [free_var_118]	; free var reverse
 27209 00014841 803805                  	cmp byte [rax], T_undefined
 27210 00014844 0F84B92B0000            	je L_error_fvar_undefined
 27211 0001484A 803804                  	cmp byte [rax], T_closure
 27212 0001484D 0F85342C0000            	jne L_error_non_closure
 27213 00014853 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27214 00014856 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27215 00014859 50                      	push rax
 27216 0001485A 6A01                    	push 1	; arg count
 27217 0001485C 488B0425[A9140000]      	mov rax, qword [free_var_95]	; free var list->vector
 27218 00014864 803805                  	cmp byte [rax], T_undefined
 27219 00014867 0F84962B0000            	je L_error_fvar_undefined
 27220 0001486D 803804                  	cmp byte [rax], T_closure
 27221 00014870 0F85112C0000            	jne L_error_non_closure
 27222 00014876 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27223 00014879 FF7508                  	push qword [rbp + 8 *1]
 27224 0001487C 4989C0                  	mov r8, rax
 27225 0001487F 488B5D18                	mov rbx, COUNT
 27226 00014883 4883C303                	add rbx,3
 27227 00014887 48C1E303                	shl rbx,3
 27228 0001488B 4801EB                  	add rbx, rbp
 27229 0001488E 488B6D00                	mov rbp, [rbp]
 27230 00014892 B900000000              	mov rcx,0
 27231 00014897 BA04000000              	mov rdx, 4
 27232 0001489C 4889D0                  	mov rax, rdx
 27233 0001489F 48FFC8                  	dec rax
 27234 000148A2 48C1E003                	shl rax,3
 27235 000148A6 4801E0                  	add rax, rsp
 27236                                  	.L_tc_recycle_frame_loop_09a2:
 27237 000148A9 4839D1                  	cmp rcx, rdx
 27238 000148AC 7414                    	je .L_tc_recycle_frame_done_09a2
 27239 000148AE 4C8B08                  	mov r9, qword [rax]
 27240 000148B1 4C890B                  	mov qword [rbx],r9
 27241 000148B4 4883E808                	sub rax,8
 27242 000148B8 4883EB08                	sub rbx,8
 27243 000148BC 4883C101                	add rcx,1
 27244 000148C0 EBE7                    	jmp .L_tc_recycle_frame_loop_09a2
 27245                                  	.L_tc_recycle_frame_done_09a2:
 27246 000148C2 4883C308                	add rbx,8
 27247 000148C6 4889DC                  	mov rsp,rbx
 27248 000148C9 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27249 000148CD C9                      	leave
 27250 000148CE C21800                  	ret AND_KILL_FRAME(1)
 27251                                  .L_lambda_simple_end_0795:	; new closure is in rax
 27252 000148D1 48890425[FB170000]      	mov qword [free_var_145], rax
 27253 000148D9 48B8-                   	mov rax, sob_void
 27253 000148DB [0000000000000000] 
 27254                                  
 27255 000148E3 4889C7                  	mov rdi, rax
 27256 000148E6 E89A2E0000              	call print_sexpr_if_not_void
 27257                                  	; preparing a non-tail-call
 27258 000148EB 48B8-                   	mov rax, L_constants + 1993
 27258 000148ED [C907000000000000] 
 27259 000148F5 50                      	push rax
 27260 000148F6 6A01                    	push 1	; arg count
 27261 000148F8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27262 000148FD E82E2C0000              	call malloc
 27263 00014902 50                      	push rax
 27264 00014903 BF00000000              	mov rdi, 8 * 0	; new rib
 27265 00014908 E8232C0000              	call malloc
 27266 0001490D 50                      	push rax
 27267 0001490E BF08000000              	mov rdi, 8 * 1	; extended env
 27268 00014913 E8182C0000              	call malloc
 27269 00014918 488B7D10                	mov rdi, ENV
 27270 0001491C BE00000000              	mov rsi, 0
 27271 00014921 BA01000000              	mov rdx, 1
 27272                                  .L_lambda_simple_env_loop_0796:	; ext_env[i + 1] <-- env[i]
 27273 00014926 4883FE00                	cmp rsi, 0
 27274 0001492A 7410                    	je .L_lambda_simple_env_end_0796
 27275 0001492C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27276 00014930 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27277 00014934 48FFC6                  	inc rsi
 27278 00014937 48FFC2                  	inc rdx
 27279 0001493A EBEA                    	jmp .L_lambda_simple_env_loop_0796
 27280                                  .L_lambda_simple_env_end_0796:
 27281 0001493C 5B                      	pop rbx
 27282 0001493D BE00000000              	mov rsi, 0
 27283                                  .L_lambda_simple_params_loop_0796:	; copy params
 27284 00014942 4883FE00                	cmp rsi, 0
 27285 00014946 740E                    	je .L_lambda_simple_params_end_0796
 27286 00014948 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27287 0001494D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27288 00014951 48FFC6                  	inc rsi
 27289 00014954 EBEC                    	jmp .L_lambda_simple_params_loop_0796
 27290                                  .L_lambda_simple_params_end_0796:
 27291 00014956 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27292 00014959 4889C3                  	mov rbx, rax
 27293 0001495C 58                      	pop rax
 27294 0001495D C60004                  	mov byte [rax], T_closure
 27295 00014960 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27296 00014964 48C74009[71490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0796
 27297 0001496C E989060000              	jmp .L_lambda_simple_end_0796
 27298                                  .L_lambda_simple_code_0796:	; lambda-simple body
 27299 00014971 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27300 00014977 740B                    	je .L_lambda_simple_arity_check_ok_0889
 27301 00014979 FF742410                	push qword [rsp + 8 * 2]
 27302 0001497D 6A01                    	push 1
 27303 0001497F E9652B0000              	jmp L_error_incorrect_arity_simple
 27304                                  .L_lambda_simple_arity_check_ok_0889:
 27305 00014984 C8000000                	enter 0, 0
 27306 00014988 BF08000000              	mov rdi, 8
 27307 0001498D E89E2B0000              	call malloc
 27308 00014992 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 27309 00014996 488918                  	mov qword [rax], rbx
 27310 00014999 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 27311 0001499D 48B8-                   	mov rax, sob_void
 27311 0001499F [0000000000000000] 
 27312                                  
 27313 000149A7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27314 000149AC E87F2B0000              	call malloc
 27315 000149B1 50                      	push rax
 27316 000149B2 BF08000000              	mov rdi, 8 * 1	; new rib
 27317 000149B7 E8742B0000              	call malloc
 27318 000149BC 50                      	push rax
 27319 000149BD BF10000000              	mov rdi, 8 * 2	; extended env
 27320 000149C2 E8692B0000              	call malloc
 27321 000149C7 488B7D10                	mov rdi, ENV
 27322 000149CB BE00000000              	mov rsi, 0
 27323 000149D0 BA01000000              	mov rdx, 1
 27324                                  .L_lambda_simple_env_loop_0797:	; ext_env[i + 1] <-- env[i]
 27325 000149D5 4883FE01                	cmp rsi, 1
 27326 000149D9 7410                    	je .L_lambda_simple_env_end_0797
 27327 000149DB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27328 000149DF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27329 000149E3 48FFC6                  	inc rsi
 27330 000149E6 48FFC2                  	inc rdx
 27331 000149E9 EBEA                    	jmp .L_lambda_simple_env_loop_0797
 27332                                  .L_lambda_simple_env_end_0797:
 27333 000149EB 5B                      	pop rbx
 27334 000149EC BE00000000              	mov rsi, 0
 27335                                  .L_lambda_simple_params_loop_0797:	; copy params
 27336 000149F1 4883FE01                	cmp rsi, 1
 27337 000149F5 740E                    	je .L_lambda_simple_params_end_0797
 27338 000149F7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27339 000149FC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27340 00014A00 48FFC6                  	inc rsi
 27341 00014A03 EBEC                    	jmp .L_lambda_simple_params_loop_0797
 27342                                  .L_lambda_simple_params_end_0797:
 27343 00014A05 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27344 00014A08 4889C3                  	mov rbx, rax
 27345 00014A0B 58                      	pop rax
 27346 00014A0C C60004                  	mov byte [rax], T_closure
 27347 00014A0F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27348 00014A13 48C74009[204A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0797
 27349 00014A1B E91C030000              	jmp .L_lambda_simple_end_0797
 27350                                  .L_lambda_simple_code_0797:	; lambda-simple body
 27351 00014A20 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27352 00014A26 740B                    	je .L_lambda_simple_arity_check_ok_088a
 27353 00014A28 FF742410                	push qword [rsp + 8 * 2]
 27354 00014A2C 6A03                    	push 3
 27355 00014A2E E9B62A0000              	jmp L_error_incorrect_arity_simple
 27356                                  .L_lambda_simple_arity_check_ok_088a:
 27357 00014A33 C8000000                	enter 0, 0
 27358                                  	; preparing a non-tail-call
 27359 00014A37 488B4530                	mov rax, PARAM(2)	; param j
 27360 00014A3B 50                      	push rax
 27361 00014A3C 488B4528                	mov rax, PARAM(1)	; param i
 27362 00014A40 50                      	push rax
 27363 00014A41 6A02                    	push 2	; arg count
 27364 00014A43 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 27365 00014A4B 803805                  	cmp byte [rax], T_undefined
 27366 00014A4E 0F84AF290000            	je L_error_fvar_undefined
 27367 00014A54 803804                  	cmp byte [rax], T_closure
 27368 00014A57 0F852A2A0000            	jne L_error_non_closure
 27369 00014A5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27370 00014A60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27371 00014A63 483D[02000000]          	cmp rax, sob_boolean_false
 27372 00014A69 0F84C5020000            	je .L_if_else_054e
 27373                                  	; preparing a tail-call
 27374                                  	; preparing a non-tail-call
 27375 00014A6F 488B4528                	mov rax, PARAM(1)	; param i
 27376 00014A73 50                      	push rax
 27377 00014A74 488B4520                	mov rax, PARAM(0)	; param str
 27378 00014A78 50                      	push rax
 27379 00014A79 6A02                    	push 2	; arg count
 27380 00014A7B 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 27381 00014A83 803805                  	cmp byte [rax], T_undefined
 27382 00014A86 0F8477290000            	je L_error_fvar_undefined
 27383 00014A8C 803804                  	cmp byte [rax], T_closure
 27384 00014A8F 0F85F2290000            	jne L_error_non_closure
 27385 00014A95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27386 00014A98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27387 00014A9B 50                      	push rax
 27388 00014A9C 6A01                    	push 1	; arg count
 27389 00014A9E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27390 00014AA3 E8882A0000              	call malloc
 27391 00014AA8 50                      	push rax
 27392 00014AA9 BF18000000              	mov rdi, 8 * 3	; new rib
 27393 00014AAE E87D2A0000              	call malloc
 27394 00014AB3 50                      	push rax
 27395 00014AB4 BF18000000              	mov rdi, 8 * 3	; extended env
 27396 00014AB9 E8722A0000              	call malloc
 27397 00014ABE 488B7D10                	mov rdi, ENV
 27398 00014AC2 BE00000000              	mov rsi, 0
 27399 00014AC7 BA01000000              	mov rdx, 1
 27400                                  .L_lambda_simple_env_loop_0798:	; ext_env[i + 1] <-- env[i]
 27401 00014ACC 4883FE02                	cmp rsi, 2
 27402 00014AD0 7410                    	je .L_lambda_simple_env_end_0798
 27403 00014AD2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27404 00014AD6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27405 00014ADA 48FFC6                  	inc rsi
 27406 00014ADD 48FFC2                  	inc rdx
 27407 00014AE0 EBEA                    	jmp .L_lambda_simple_env_loop_0798
 27408                                  .L_lambda_simple_env_end_0798:
 27409 00014AE2 5B                      	pop rbx
 27410 00014AE3 BE00000000              	mov rsi, 0
 27411                                  .L_lambda_simple_params_loop_0798:	; copy params
 27412 00014AE8 4883FE03                	cmp rsi, 3
 27413 00014AEC 740E                    	je .L_lambda_simple_params_end_0798
 27414 00014AEE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27415 00014AF3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27416 00014AF7 48FFC6                  	inc rsi
 27417 00014AFA EBEC                    	jmp .L_lambda_simple_params_loop_0798
 27418                                  .L_lambda_simple_params_end_0798:
 27419 00014AFC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27420 00014AFF 4889C3                  	mov rbx, rax
 27421 00014B02 58                      	pop rax
 27422 00014B03 C60004                  	mov byte [rax], T_closure
 27423 00014B06 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27424 00014B0A 48C74009[174B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0798
 27425 00014B12 E9BB010000              	jmp .L_lambda_simple_end_0798
 27426                                  .L_lambda_simple_code_0798:	; lambda-simple body
 27427 00014B17 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27428 00014B1D 740B                    	je .L_lambda_simple_arity_check_ok_088b
 27429 00014B1F FF742410                	push qword [rsp + 8 * 2]
 27430 00014B23 6A01                    	push 1
 27431 00014B25 E9BF290000              	jmp L_error_incorrect_arity_simple
 27432                                  .L_lambda_simple_arity_check_ok_088b:
 27433 00014B2A C8000000                	enter 0, 0
 27434                                  	; preparing a non-tail-call
 27435                                  	; preparing a non-tail-call
 27436 00014B2E 488B4510                	mov rax, ENV
 27437 00014B32 488B00                  	mov rax, qword [rax + 8 * 0]
 27438 00014B35 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27439 00014B39 50                      	push rax
 27440 00014B3A 488B4510                	mov rax, ENV
 27441 00014B3E 488B00                  	mov rax, qword [rax + 8 * 0]
 27442 00014B41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27443 00014B44 50                      	push rax
 27444 00014B45 6A02                    	push 2	; arg count
 27445 00014B47 488B0425[DA160000]      	mov rax, qword [free_var_128]	; free var string-ref
 27446 00014B4F 803805                  	cmp byte [rax], T_undefined
 27447 00014B52 0F84AB280000            	je L_error_fvar_undefined
 27448 00014B58 803804                  	cmp byte [rax], T_closure
 27449 00014B5B 0F8526290000            	jne L_error_non_closure
 27450 00014B61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27451 00014B64 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27452 00014B67 50                      	push rax
 27453 00014B68 488B4510                	mov rax, ENV
 27454 00014B6C 488B00                  	mov rax, qword [rax + 8 * 0]
 27455 00014B6F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27456 00014B73 50                      	push rax
 27457 00014B74 488B4510                	mov rax, ENV
 27458 00014B78 488B00                  	mov rax, qword [rax + 8 * 0]
 27459 00014B7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27460 00014B7E 50                      	push rax
 27461 00014B7F 6A03                    	push 3	; arg count
 27462 00014B81 488B0425[0D170000]      	mov rax, qword [free_var_131]	; free var string-set!
 27463 00014B89 803805                  	cmp byte [rax], T_undefined
 27464 00014B8C 0F8471280000            	je L_error_fvar_undefined
 27465 00014B92 803804                  	cmp byte [rax], T_closure
 27466 00014B95 0F85EC280000            	jne L_error_non_closure
 27467 00014B9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 27468 00014B9E FF5009                  	call SOB_CLOSURE_CODE(rax)
 27469                                  
 27470                                  	; preparing a non-tail-call
 27471 00014BA1 488B4520                	mov rax, PARAM(0)	; param ch
 27472 00014BA5 50                      	push rax
 27473 00014BA6 488B4510                	mov rax, ENV
 27474 00014BAA 488B00                  	mov rax, qword [rax + 8 * 0]
 27475 00014BAD 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27476 00014BB1 50                      	push rax
 27477 00014BB2 488B4510                	mov rax, ENV
 27478 00014BB6 488B00                  	mov rax, qword [rax + 8 * 0]
 27479 00014BB9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27480 00014BBC 50                      	push rax
 27481 00014BBD 6A03                    	push 3	; arg count
 27482 00014BBF 488B0425[0D170000]      	mov rax, qword [free_var_131]	; free var string-set!
 27483 00014BC7 803805                  	cmp byte [rax], T_undefined
 27484 00014BCA 0F8433280000            	je L_error_fvar_undefined
 27485 00014BD0 803804                  	cmp byte [rax], T_closure
 27486 00014BD3 0F85AE280000            	jne L_error_non_closure
 27487 00014BD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27488 00014BDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27489                                  
 27490                                  	; preparing a tail-call
 27491                                  	; preparing a non-tail-call
 27492 00014BDF 48B8-                   	mov rax, L_constants + 2270
 27492 00014BE1 [DE08000000000000] 
 27493 00014BE9 50                      	push rax
 27494 00014BEA 488B4510                	mov rax, ENV
 27495 00014BEE 488B00                  	mov rax, qword [rax + 8 * 0]
 27496 00014BF1 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27497 00014BF5 50                      	push rax
 27498 00014BF6 6A02                    	push 2	; arg count
 27499 00014BF8 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 27500 00014C00 803805                  	cmp byte [rax], T_undefined
 27501 00014C03 0F84FA270000            	je L_error_fvar_undefined
 27502 00014C09 803804                  	cmp byte [rax], T_closure
 27503 00014C0C 0F8575280000            	jne L_error_non_closure
 27504 00014C12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27505 00014C15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27506 00014C18 50                      	push rax
 27507                                  	; preparing a non-tail-call
 27508 00014C19 48B8-                   	mov rax, L_constants + 2270
 27508 00014C1B [DE08000000000000] 
 27509 00014C23 50                      	push rax
 27510 00014C24 488B4510                	mov rax, ENV
 27511 00014C28 488B00                  	mov rax, qword [rax + 8 * 0]
 27512 00014C2B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27513 00014C2F 50                      	push rax
 27514 00014C30 6A02                    	push 2	; arg count
 27515 00014C32 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 27516 00014C3A 803805                  	cmp byte [rax], T_undefined
 27517 00014C3D 0F84C0270000            	je L_error_fvar_undefined
 27518 00014C43 803804                  	cmp byte [rax], T_closure
 27519 00014C46 0F853B280000            	jne L_error_non_closure
 27520 00014C4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27521 00014C4F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27522 00014C52 50                      	push rax
 27523 00014C53 488B4510                	mov rax, ENV
 27524 00014C57 488B00                  	mov rax, qword [rax + 8 * 0]
 27525 00014C5A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27526 00014C5D 50                      	push rax
 27527 00014C5E 6A03                    	push 3	; arg count
 27528 00014C60 488B4510                	mov rax, ENV
 27529 00014C64 488B4008                	mov rax, qword [rax + 8 * 1]
 27530 00014C68 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27531 00014C6B 488B00                  	mov rax, qword [rax]
 27532 00014C6E 803804                  	cmp byte [rax], T_closure
 27533 00014C71 0F8510280000            	jne L_error_non_closure
 27534 00014C77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27535 00014C7A FF7508                  	push qword [rbp + 8 *1]
 27536 00014C7D 4989C0                  	mov r8, rax
 27537 00014C80 488B5D18                	mov rbx, COUNT
 27538 00014C84 4883C303                	add rbx,3
 27539 00014C88 48C1E303                	shl rbx,3
 27540 00014C8C 4801EB                  	add rbx, rbp
 27541 00014C8F 488B6D00                	mov rbp, [rbp]
 27542 00014C93 B900000000              	mov rcx,0
 27543 00014C98 BA06000000              	mov rdx, 6
 27544 00014C9D 4889D0                  	mov rax, rdx
 27545 00014CA0 48FFC8                  	dec rax
 27546 00014CA3 48C1E003                	shl rax,3
 27547 00014CA7 4801E0                  	add rax, rsp
 27548                                  	.L_tc_recycle_frame_loop_09a4:
 27549 00014CAA 4839D1                  	cmp rcx, rdx
 27550 00014CAD 7414                    	je .L_tc_recycle_frame_done_09a4
 27551 00014CAF 4C8B08                  	mov r9, qword [rax]
 27552 00014CB2 4C890B                  	mov qword [rbx],r9
 27553 00014CB5 4883E808                	sub rax,8
 27554 00014CB9 4883EB08                	sub rbx,8
 27555 00014CBD 4883C101                	add rcx,1
 27556 00014CC1 EBE7                    	jmp .L_tc_recycle_frame_loop_09a4
 27557                                  	.L_tc_recycle_frame_done_09a4:
 27558 00014CC3 4883C308                	add rbx,8
 27559 00014CC7 4889DC                  	mov rsp,rbx
 27560 00014CCA 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27561 00014CCE C9                      	leave
 27562 00014CCF C21800                  	ret AND_KILL_FRAME(1)
 27563                                  .L_lambda_simple_end_0798:	; new closure is in rax
 27564 00014CD2 803804                  	cmp byte [rax], T_closure
 27565 00014CD5 0F85AC270000            	jne L_error_non_closure
 27566 00014CDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 27567 00014CDE FF7508                  	push qword [rbp + 8 *1]
 27568 00014CE1 4989C0                  	mov r8, rax
 27569 00014CE4 488B5D18                	mov rbx, COUNT
 27570 00014CE8 4883C303                	add rbx,3
 27571 00014CEC 48C1E303                	shl rbx,3
 27572 00014CF0 4801EB                  	add rbx, rbp
 27573 00014CF3 488B6D00                	mov rbp, [rbp]
 27574 00014CF7 B900000000              	mov rcx,0
 27575 00014CFC BA04000000              	mov rdx, 4
 27576 00014D01 4889D0                  	mov rax, rdx
 27577 00014D04 48FFC8                  	dec rax
 27578 00014D07 48C1E003                	shl rax,3
 27579 00014D0B 4801E0                  	add rax, rsp
 27580                                  	.L_tc_recycle_frame_loop_09a3:
 27581 00014D0E 4839D1                  	cmp rcx, rdx
 27582 00014D11 7414                    	je .L_tc_recycle_frame_done_09a3
 27583 00014D13 4C8B08                  	mov r9, qword [rax]
 27584 00014D16 4C890B                  	mov qword [rbx],r9
 27585 00014D19 4883E808                	sub rax,8
 27586 00014D1D 4883EB08                	sub rbx,8
 27587 00014D21 4883C101                	add rcx,1
 27588 00014D25 EBE7                    	jmp .L_tc_recycle_frame_loop_09a3
 27589                                  	.L_tc_recycle_frame_done_09a3:
 27590 00014D27 4883C308                	add rbx,8
 27591 00014D2B 4889DC                  	mov rsp,rbx
 27592 00014D2E 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27593 00014D32 EB04                    	jmp .L_if_end_05dc
 27594                                  .L_if_else_054e:
 27595 00014D34 488B4520                	mov rax, PARAM(0)	; param str
 27596                                  .L_if_end_05dc:
 27597 00014D38 C9                      	leave
 27598 00014D39 C22800                  	ret AND_KILL_FRAME(3)
 27599                                  .L_lambda_simple_end_0797:	; new closure is in rax
 27600 00014D3C 50                      	push rax
 27601 00014D3D 488B4520                	mov rax, PARAM(0)	; param run
 27602 00014D41 8F00                    	pop qword [rax]
 27603 00014D43 48B8-                   	mov rax, sob_void
 27603 00014D45 [0000000000000000] 
 27604                                  
 27605 00014D4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27606 00014D52 E8D9270000              	call malloc
 27607 00014D57 50                      	push rax
 27608 00014D58 BF08000000              	mov rdi, 8 * 1	; new rib
 27609 00014D5D E8CE270000              	call malloc
 27610 00014D62 50                      	push rax
 27611 00014D63 BF10000000              	mov rdi, 8 * 2	; extended env
 27612 00014D68 E8C3270000              	call malloc
 27613 00014D6D 488B7D10                	mov rdi, ENV
 27614 00014D71 BE00000000              	mov rsi, 0
 27615 00014D76 BA01000000              	mov rdx, 1
 27616                                  .L_lambda_simple_env_loop_0799:	; ext_env[i + 1] <-- env[i]
 27617 00014D7B 4883FE01                	cmp rsi, 1
 27618 00014D7F 7410                    	je .L_lambda_simple_env_end_0799
 27619 00014D81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27620 00014D85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27621 00014D89 48FFC6                  	inc rsi
 27622 00014D8C 48FFC2                  	inc rdx
 27623 00014D8F EBEA                    	jmp .L_lambda_simple_env_loop_0799
 27624                                  .L_lambda_simple_env_end_0799:
 27625 00014D91 5B                      	pop rbx
 27626 00014D92 BE00000000              	mov rsi, 0
 27627                                  .L_lambda_simple_params_loop_0799:	; copy params
 27628 00014D97 4883FE01                	cmp rsi, 1
 27629 00014D9B 740E                    	je .L_lambda_simple_params_end_0799
 27630 00014D9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27631 00014DA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27632 00014DA6 48FFC6                  	inc rsi
 27633 00014DA9 EBEC                    	jmp .L_lambda_simple_params_loop_0799
 27634                                  .L_lambda_simple_params_end_0799:
 27635 00014DAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27636 00014DAE 4889C3                  	mov rbx, rax
 27637 00014DB1 58                      	pop rax
 27638 00014DB2 C60004                  	mov byte [rax], T_closure
 27639 00014DB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27640 00014DB9 48C74009[C64D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0799
 27641 00014DC1 E930020000              	jmp .L_lambda_simple_end_0799
 27642                                  .L_lambda_simple_code_0799:	; lambda-simple body
 27643 00014DC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27644 00014DCC 740B                    	je .L_lambda_simple_arity_check_ok_088c
 27645 00014DCE FF742410                	push qword [rsp + 8 * 2]
 27646 00014DD2 6A01                    	push 1
 27647 00014DD4 E910270000              	jmp L_error_incorrect_arity_simple
 27648                                  .L_lambda_simple_arity_check_ok_088c:
 27649 00014DD9 C8000000                	enter 0, 0
 27650                                  	; preparing a tail-call
 27651                                  	; preparing a non-tail-call
 27652 00014DDD 488B4520                	mov rax, PARAM(0)	; param str
 27653 00014DE1 50                      	push rax
 27654 00014DE2 6A01                    	push 1	; arg count
 27655 00014DE4 488B0425[C9160000]      	mov rax, qword [free_var_127]	; free var string-length
 27656 00014DEC 803805                  	cmp byte [rax], T_undefined
 27657 00014DEF 0F840E260000            	je L_error_fvar_undefined
 27658 00014DF5 803804                  	cmp byte [rax], T_closure
 27659 00014DF8 0F8589260000            	jne L_error_non_closure
 27660 00014DFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 27661 00014E01 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27662 00014E04 50                      	push rax
 27663 00014E05 6A01                    	push 1	; arg count
 27664 00014E07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27665 00014E0C E81F270000              	call malloc
 27666 00014E11 50                      	push rax
 27667 00014E12 BF08000000              	mov rdi, 8 * 1	; new rib
 27668 00014E17 E814270000              	call malloc
 27669 00014E1C 50                      	push rax
 27670 00014E1D BF18000000              	mov rdi, 8 * 3	; extended env
 27671 00014E22 E809270000              	call malloc
 27672 00014E27 488B7D10                	mov rdi, ENV
 27673 00014E2B BE00000000              	mov rsi, 0
 27674 00014E30 BA01000000              	mov rdx, 1
 27675                                  .L_lambda_simple_env_loop_079a:	; ext_env[i + 1] <-- env[i]
 27676 00014E35 4883FE02                	cmp rsi, 2
 27677 00014E39 7410                    	je .L_lambda_simple_env_end_079a
 27678 00014E3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27679 00014E3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27680 00014E43 48FFC6                  	inc rsi
 27681 00014E46 48FFC2                  	inc rdx
 27682 00014E49 EBEA                    	jmp .L_lambda_simple_env_loop_079a
 27683                                  .L_lambda_simple_env_end_079a:
 27684 00014E4B 5B                      	pop rbx
 27685 00014E4C BE00000000              	mov rsi, 0
 27686                                  .L_lambda_simple_params_loop_079a:	; copy params
 27687 00014E51 4883FE01                	cmp rsi, 1
 27688 00014E55 740E                    	je .L_lambda_simple_params_end_079a
 27689 00014E57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27690 00014E5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27691 00014E60 48FFC6                  	inc rsi
 27692 00014E63 EBEC                    	jmp .L_lambda_simple_params_loop_079a
 27693                                  .L_lambda_simple_params_end_079a:
 27694 00014E65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27695 00014E68 4889C3                  	mov rbx, rax
 27696 00014E6B 58                      	pop rax
 27697 00014E6C C60004                  	mov byte [rax], T_closure
 27698 00014E6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27699 00014E73 48C74009[804E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079a
 27700 00014E7B E912010000              	jmp .L_lambda_simple_end_079a
 27701                                  .L_lambda_simple_code_079a:	; lambda-simple body
 27702 00014E80 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27703 00014E86 740B                    	je .L_lambda_simple_arity_check_ok_088d
 27704 00014E88 FF742410                	push qword [rsp + 8 * 2]
 27705 00014E8C 6A01                    	push 1
 27706 00014E8E E956260000              	jmp L_error_incorrect_arity_simple
 27707                                  .L_lambda_simple_arity_check_ok_088d:
 27708 00014E93 C8000000                	enter 0, 0
 27709                                  	; preparing a non-tail-call
 27710 00014E97 488B4520                	mov rax, PARAM(0)	; param n
 27711 00014E9B 50                      	push rax
 27712 00014E9C 6A01                    	push 1	; arg count
 27713 00014E9E 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 27714 00014EA6 803805                  	cmp byte [rax], T_undefined
 27715 00014EA9 0F8454250000            	je L_error_fvar_undefined
 27716 00014EAF 803804                  	cmp byte [rax], T_closure
 27717 00014EB2 0F85CF250000            	jne L_error_non_closure
 27718 00014EB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27719 00014EBB FF5009                  	call SOB_CLOSURE_CODE(rax)
 27720 00014EBE 483D[02000000]          	cmp rax, sob_boolean_false
 27721 00014EC4 740F                    	je .L_if_else_054f
 27722 00014EC6 488B4510                	mov rax, ENV
 27723 00014ECA 488B00                  	mov rax, qword [rax + 8 * 0]
 27724 00014ECD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27725 00014ED0 E9B9000000              	jmp .L_if_end_05dd
 27726                                  .L_if_else_054f:
 27727                                  	; preparing a tail-call
 27728                                  	; preparing a non-tail-call
 27729 00014ED5 48B8-                   	mov rax, L_constants + 2270
 27729 00014ED7 [DE08000000000000] 
 27730 00014EDF 50                      	push rax
 27731 00014EE0 488B4520                	mov rax, PARAM(0)	; param n
 27732 00014EE4 50                      	push rax
 27733 00014EE5 6A02                    	push 2	; arg count
 27734 00014EE7 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 27735 00014EEF 803805                  	cmp byte [rax], T_undefined
 27736 00014EF2 0F840B250000            	je L_error_fvar_undefined
 27737 00014EF8 803804                  	cmp byte [rax], T_closure
 27738 00014EFB 0F8586250000            	jne L_error_non_closure
 27739 00014F01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27740 00014F04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27741 00014F07 50                      	push rax
 27742 00014F08 48B8-                   	mov rax, L_constants + 2135
 27742 00014F0A [5708000000000000] 
 27743 00014F12 50                      	push rax
 27744 00014F13 488B4510                	mov rax, ENV
 27745 00014F17 488B00                  	mov rax, qword [rax + 8 * 0]
 27746 00014F1A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27747 00014F1D 50                      	push rax
 27748 00014F1E 6A03                    	push 3	; arg count
 27749 00014F20 488B4510                	mov rax, ENV
 27750 00014F24 488B4008                	mov rax, qword [rax + 8 * 1]
 27751 00014F28 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27752 00014F2B 488B00                  	mov rax, qword [rax]
 27753 00014F2E 803804                  	cmp byte [rax], T_closure
 27754 00014F31 0F8550250000            	jne L_error_non_closure
 27755 00014F37 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27756 00014F3A FF7508                  	push qword [rbp + 8 *1]
 27757 00014F3D 4989C0                  	mov r8, rax
 27758 00014F40 488B5D18                	mov rbx, COUNT
 27759 00014F44 4883C303                	add rbx,3
 27760 00014F48 48C1E303                	shl rbx,3
 27761 00014F4C 4801EB                  	add rbx, rbp
 27762 00014F4F 488B6D00                	mov rbp, [rbp]
 27763 00014F53 B900000000              	mov rcx,0
 27764 00014F58 BA06000000              	mov rdx, 6
 27765 00014F5D 4889D0                  	mov rax, rdx
 27766 00014F60 48FFC8                  	dec rax
 27767 00014F63 48C1E003                	shl rax,3
 27768 00014F67 4801E0                  	add rax, rsp
 27769                                  	.L_tc_recycle_frame_loop_09a6:
 27770 00014F6A 4839D1                  	cmp rcx, rdx
 27771 00014F6D 7414                    	je .L_tc_recycle_frame_done_09a6
 27772 00014F6F 4C8B08                  	mov r9, qword [rax]
 27773 00014F72 4C890B                  	mov qword [rbx],r9
 27774 00014F75 4883E808                	sub rax,8
 27775 00014F79 4883EB08                	sub rbx,8
 27776 00014F7D 4883C101                	add rcx,1
 27777 00014F81 EBE7                    	jmp .L_tc_recycle_frame_loop_09a6
 27778                                  	.L_tc_recycle_frame_done_09a6:
 27779 00014F83 4883C308                	add rbx,8
 27780 00014F87 4889DC                  	mov rsp,rbx
 27781 00014F8A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27782                                  .L_if_end_05dd:
 27783 00014F8E C9                      	leave
 27784 00014F8F C21800                  	ret AND_KILL_FRAME(1)
 27785                                  .L_lambda_simple_end_079a:	; new closure is in rax
 27786 00014F92 803804                  	cmp byte [rax], T_closure
 27787 00014F95 0F85EC240000            	jne L_error_non_closure
 27788 00014F9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 27789 00014F9E FF7508                  	push qword [rbp + 8 *1]
 27790 00014FA1 4989C0                  	mov r8, rax
 27791 00014FA4 488B5D18                	mov rbx, COUNT
 27792 00014FA8 4883C303                	add rbx,3
 27793 00014FAC 48C1E303                	shl rbx,3
 27794 00014FB0 4801EB                  	add rbx, rbp
 27795 00014FB3 488B6D00                	mov rbp, [rbp]
 27796 00014FB7 B900000000              	mov rcx,0
 27797 00014FBC BA04000000              	mov rdx, 4
 27798 00014FC1 4889D0                  	mov rax, rdx
 27799 00014FC4 48FFC8                  	dec rax
 27800 00014FC7 48C1E003                	shl rax,3
 27801 00014FCB 4801E0                  	add rax, rsp
 27802                                  	.L_tc_recycle_frame_loop_09a5:
 27803 00014FCE 4839D1                  	cmp rcx, rdx
 27804 00014FD1 7414                    	je .L_tc_recycle_frame_done_09a5
 27805 00014FD3 4C8B08                  	mov r9, qword [rax]
 27806 00014FD6 4C890B                  	mov qword [rbx],r9
 27807 00014FD9 4883E808                	sub rax,8
 27808 00014FDD 4883EB08                	sub rbx,8
 27809 00014FE1 4883C101                	add rcx,1
 27810 00014FE5 EBE7                    	jmp .L_tc_recycle_frame_loop_09a5
 27811                                  	.L_tc_recycle_frame_done_09a5:
 27812 00014FE7 4883C308                	add rbx,8
 27813 00014FEB 4889DC                  	mov rsp,rbx
 27814 00014FEE 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 27815 00014FF2 C9                      	leave
 27816 00014FF3 C21800                  	ret AND_KILL_FRAME(1)
 27817                                  .L_lambda_simple_end_0799:	; new closure is in rax
 27818 00014FF6 C9                      	leave
 27819 00014FF7 C21800                  	ret AND_KILL_FRAME(1)
 27820                                  .L_lambda_simple_end_0796:	; new closure is in rax
 27821 00014FFA 803804                  	cmp byte [rax], T_closure
 27822 00014FFD 0F8584240000            	jne L_error_non_closure
 27823 00015003 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27824 00015006 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27825 00015009 48890425[FC160000]      	mov qword [free_var_130], rax
 27826 00015011 48B8-                   	mov rax, sob_void
 27826 00015013 [0000000000000000] 
 27827                                  
 27828 0001501B 4889C7                  	mov rdi, rax
 27829 0001501E E862270000              	call print_sexpr_if_not_void
 27830                                  	; preparing a non-tail-call
 27831 00015023 48B8-                   	mov rax, L_constants + 1993
 27831 00015025 [C907000000000000] 
 27832 0001502D 50                      	push rax
 27833 0001502E 6A01                    	push 1	; arg count
 27834 00015030 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27835 00015035 E8F6240000              	call malloc
 27836 0001503A 50                      	push rax
 27837 0001503B BF00000000              	mov rdi, 8 * 0	; new rib
 27838 00015040 E8EB240000              	call malloc
 27839 00015045 50                      	push rax
 27840 00015046 BF08000000              	mov rdi, 8 * 1	; extended env
 27841 0001504B E8E0240000              	call malloc
 27842 00015050 488B7D10                	mov rdi, ENV
 27843 00015054 BE00000000              	mov rsi, 0
 27844 00015059 BA01000000              	mov rdx, 1
 27845                                  .L_lambda_simple_env_loop_079b:	; ext_env[i + 1] <-- env[i]
 27846 0001505E 4883FE00                	cmp rsi, 0
 27847 00015062 7410                    	je .L_lambda_simple_env_end_079b
 27848 00015064 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27849 00015068 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27850 0001506C 48FFC6                  	inc rsi
 27851 0001506F 48FFC2                  	inc rdx
 27852 00015072 EBEA                    	jmp .L_lambda_simple_env_loop_079b
 27853                                  .L_lambda_simple_env_end_079b:
 27854 00015074 5B                      	pop rbx
 27855 00015075 BE00000000              	mov rsi, 0
 27856                                  .L_lambda_simple_params_loop_079b:	; copy params
 27857 0001507A 4883FE00                	cmp rsi, 0
 27858 0001507E 740E                    	je .L_lambda_simple_params_end_079b
 27859 00015080 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27860 00015085 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27861 00015089 48FFC6                  	inc rsi
 27862 0001508C EBEC                    	jmp .L_lambda_simple_params_loop_079b
 27863                                  .L_lambda_simple_params_end_079b:
 27864 0001508E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27865 00015091 4889C3                  	mov rbx, rax
 27866 00015094 58                      	pop rax
 27867 00015095 C60004                  	mov byte [rax], T_closure
 27868 00015098 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27869 0001509C 48C74009[A9500100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079b
 27870 000150A4 E989060000              	jmp .L_lambda_simple_end_079b
 27871                                  .L_lambda_simple_code_079b:	; lambda-simple body
 27872 000150A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27873 000150AF 740B                    	je .L_lambda_simple_arity_check_ok_088e
 27874 000150B1 FF742410                	push qword [rsp + 8 * 2]
 27875 000150B5 6A01                    	push 1
 27876 000150B7 E92D240000              	jmp L_error_incorrect_arity_simple
 27877                                  .L_lambda_simple_arity_check_ok_088e:
 27878 000150BC C8000000                	enter 0, 0
 27879 000150C0 BF08000000              	mov rdi, 8
 27880 000150C5 E866240000              	call malloc
 27881 000150CA 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 27882 000150CE 488918                  	mov qword [rax], rbx
 27883 000150D1 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 27884 000150D5 48B8-                   	mov rax, sob_void
 27884 000150D7 [0000000000000000] 
 27885                                  
 27886 000150DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27887 000150E4 E847240000              	call malloc
 27888 000150E9 50                      	push rax
 27889 000150EA BF08000000              	mov rdi, 8 * 1	; new rib
 27890 000150EF E83C240000              	call malloc
 27891 000150F4 50                      	push rax
 27892 000150F5 BF10000000              	mov rdi, 8 * 2	; extended env
 27893 000150FA E831240000              	call malloc
 27894 000150FF 488B7D10                	mov rdi, ENV
 27895 00015103 BE00000000              	mov rsi, 0
 27896 00015108 BA01000000              	mov rdx, 1
 27897                                  .L_lambda_simple_env_loop_079c:	; ext_env[i + 1] <-- env[i]
 27898 0001510D 4883FE01                	cmp rsi, 1
 27899 00015111 7410                    	je .L_lambda_simple_env_end_079c
 27900 00015113 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27901 00015117 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27902 0001511B 48FFC6                  	inc rsi
 27903 0001511E 48FFC2                  	inc rdx
 27904 00015121 EBEA                    	jmp .L_lambda_simple_env_loop_079c
 27905                                  .L_lambda_simple_env_end_079c:
 27906 00015123 5B                      	pop rbx
 27907 00015124 BE00000000              	mov rsi, 0
 27908                                  .L_lambda_simple_params_loop_079c:	; copy params
 27909 00015129 4883FE01                	cmp rsi, 1
 27910 0001512D 740E                    	je .L_lambda_simple_params_end_079c
 27911 0001512F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27912 00015134 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27913 00015138 48FFC6                  	inc rsi
 27914 0001513B EBEC                    	jmp .L_lambda_simple_params_loop_079c
 27915                                  .L_lambda_simple_params_end_079c:
 27916 0001513D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27917 00015140 4889C3                  	mov rbx, rax
 27918 00015143 58                      	pop rax
 27919 00015144 C60004                  	mov byte [rax], T_closure
 27920 00015147 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27921 0001514B 48C74009[58510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079c
 27922 00015153 E91C030000              	jmp .L_lambda_simple_end_079c
 27923                                  .L_lambda_simple_code_079c:	; lambda-simple body
 27924 00015158 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27925 0001515E 740B                    	je .L_lambda_simple_arity_check_ok_088f
 27926 00015160 FF742410                	push qword [rsp + 8 * 2]
 27927 00015164 6A03                    	push 3
 27928 00015166 E97E230000              	jmp L_error_incorrect_arity_simple
 27929                                  .L_lambda_simple_arity_check_ok_088f:
 27930 0001516B C8000000                	enter 0, 0
 27931                                  	; preparing a non-tail-call
 27932 0001516F 488B4530                	mov rax, PARAM(2)	; param j
 27933 00015173 50                      	push rax
 27934 00015174 488B4528                	mov rax, PARAM(1)	; param i
 27935 00015178 50                      	push rax
 27936 00015179 6A02                    	push 2	; arg count
 27937 0001517B 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 27938 00015183 803805                  	cmp byte [rax], T_undefined
 27939 00015186 0F8477220000            	je L_error_fvar_undefined
 27940 0001518C 803804                  	cmp byte [rax], T_closure
 27941 0001518F 0F85F2220000            	jne L_error_non_closure
 27942 00015195 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27943 00015198 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27944 0001519B 483D[02000000]          	cmp rax, sob_boolean_false
 27945 000151A1 0F84C5020000            	je .L_if_else_0550
 27946                                  	; preparing a tail-call
 27947                                  	; preparing a non-tail-call
 27948 000151A7 488B4528                	mov rax, PARAM(1)	; param i
 27949 000151AB 50                      	push rax
 27950 000151AC 488B4520                	mov rax, PARAM(0)	; param vec
 27951 000151B0 50                      	push rax
 27952 000151B1 6A02                    	push 2	; arg count
 27953 000151B3 488B0425[EA170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27954 000151BB 803805                  	cmp byte [rax], T_undefined
 27955 000151BE 0F843F220000            	je L_error_fvar_undefined
 27956 000151C4 803804                  	cmp byte [rax], T_closure
 27957 000151C7 0F85BA220000            	jne L_error_non_closure
 27958 000151CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 27959 000151D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27960 000151D3 50                      	push rax
 27961 000151D4 6A01                    	push 1	; arg count
 27962 000151D6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27963 000151DB E850230000              	call malloc
 27964 000151E0 50                      	push rax
 27965 000151E1 BF18000000              	mov rdi, 8 * 3	; new rib
 27966 000151E6 E845230000              	call malloc
 27967 000151EB 50                      	push rax
 27968 000151EC BF18000000              	mov rdi, 8 * 3	; extended env
 27969 000151F1 E83A230000              	call malloc
 27970 000151F6 488B7D10                	mov rdi, ENV
 27971 000151FA BE00000000              	mov rsi, 0
 27972 000151FF BA01000000              	mov rdx, 1
 27973                                  .L_lambda_simple_env_loop_079d:	; ext_env[i + 1] <-- env[i]
 27974 00015204 4883FE02                	cmp rsi, 2
 27975 00015208 7410                    	je .L_lambda_simple_env_end_079d
 27976 0001520A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27977 0001520E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27978 00015212 48FFC6                  	inc rsi
 27979 00015215 48FFC2                  	inc rdx
 27980 00015218 EBEA                    	jmp .L_lambda_simple_env_loop_079d
 27981                                  .L_lambda_simple_env_end_079d:
 27982 0001521A 5B                      	pop rbx
 27983 0001521B BE00000000              	mov rsi, 0
 27984                                  .L_lambda_simple_params_loop_079d:	; copy params
 27985 00015220 4883FE03                	cmp rsi, 3
 27986 00015224 740E                    	je .L_lambda_simple_params_end_079d
 27987 00015226 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27988 0001522B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27989 0001522F 48FFC6                  	inc rsi
 27990 00015232 EBEC                    	jmp .L_lambda_simple_params_loop_079d
 27991                                  .L_lambda_simple_params_end_079d:
 27992 00015234 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27993 00015237 4889C3                  	mov rbx, rax
 27994 0001523A 58                      	pop rax
 27995 0001523B C60004                  	mov byte [rax], T_closure
 27996 0001523E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27997 00015242 48C74009[4F520100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079d
 27998 0001524A E9BB010000              	jmp .L_lambda_simple_end_079d
 27999                                  .L_lambda_simple_code_079d:	; lambda-simple body
 28000 0001524F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28001 00015255 740B                    	je .L_lambda_simple_arity_check_ok_0890
 28002 00015257 FF742410                	push qword [rsp + 8 * 2]
 28003 0001525B 6A01                    	push 1
 28004 0001525D E987220000              	jmp L_error_incorrect_arity_simple
 28005                                  .L_lambda_simple_arity_check_ok_0890:
 28006 00015262 C8000000                	enter 0, 0
 28007                                  	; preparing a non-tail-call
 28008                                  	; preparing a non-tail-call
 28009 00015266 488B4510                	mov rax, ENV
 28010 0001526A 488B00                  	mov rax, qword [rax + 8 * 0]
 28011 0001526D 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 28012 00015271 50                      	push rax
 28013 00015272 488B4510                	mov rax, ENV
 28014 00015276 488B00                  	mov rax, qword [rax + 8 * 0]
 28015 00015279 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28016 0001527C 50                      	push rax
 28017 0001527D 6A02                    	push 2	; arg count
 28018 0001527F 488B0425[EA170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 28019 00015287 803805                  	cmp byte [rax], T_undefined
 28020 0001528A 0F8473210000            	je L_error_fvar_undefined
 28021 00015290 803804                  	cmp byte [rax], T_closure
 28022 00015293 0F85EE210000            	jne L_error_non_closure
 28023 00015299 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28024 0001529C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28025 0001529F 50                      	push rax
 28026 000152A0 488B4510                	mov rax, ENV
 28027 000152A4 488B00                  	mov rax, qword [rax + 8 * 0]
 28028 000152A7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 28029 000152AB 50                      	push rax
 28030 000152AC 488B4510                	mov rax, ENV
 28031 000152B0 488B00                  	mov rax, qword [rax + 8 * 0]
 28032 000152B3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28033 000152B6 50                      	push rax
 28034 000152B7 6A03                    	push 3	; arg count
 28035 000152B9 488B0425[1D180000]      	mov rax, qword [free_var_147]	; free var vector-set!
 28036 000152C1 803805                  	cmp byte [rax], T_undefined
 28037 000152C4 0F8439210000            	je L_error_fvar_undefined
 28038 000152CA 803804                  	cmp byte [rax], T_closure
 28039 000152CD 0F85B4210000            	jne L_error_non_closure
 28040 000152D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28041 000152D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28042                                  
 28043                                  	; preparing a non-tail-call
 28044 000152D9 488B4520                	mov rax, PARAM(0)	; param ch
 28045 000152DD 50                      	push rax
 28046 000152DE 488B4510                	mov rax, ENV
 28047 000152E2 488B00                  	mov rax, qword [rax + 8 * 0]
 28048 000152E5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 28049 000152E9 50                      	push rax
 28050 000152EA 488B4510                	mov rax, ENV
 28051 000152EE 488B00                  	mov rax, qword [rax + 8 * 0]
 28052 000152F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28053 000152F4 50                      	push rax
 28054 000152F5 6A03                    	push 3	; arg count
 28055 000152F7 488B0425[1D180000]      	mov rax, qword [free_var_147]	; free var vector-set!
 28056 000152FF 803805                  	cmp byte [rax], T_undefined
 28057 00015302 0F84FB200000            	je L_error_fvar_undefined
 28058 00015308 803804                  	cmp byte [rax], T_closure
 28059 0001530B 0F8576210000            	jne L_error_non_closure
 28060 00015311 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28061 00015314 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28062                                  
 28063                                  	; preparing a tail-call
 28064                                  	; preparing a non-tail-call
 28065 00015317 48B8-                   	mov rax, L_constants + 2270
 28065 00015319 [DE08000000000000] 
 28066 00015321 50                      	push rax
 28067 00015322 488B4510                	mov rax, ENV
 28068 00015326 488B00                  	mov rax, qword [rax + 8 * 0]
 28069 00015329 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 28070 0001532D 50                      	push rax
 28071 0001532E 6A02                    	push 2	; arg count
 28072 00015330 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 28073 00015338 803805                  	cmp byte [rax], T_undefined
 28074 0001533B 0F84C2200000            	je L_error_fvar_undefined
 28075 00015341 803804                  	cmp byte [rax], T_closure
 28076 00015344 0F853D210000            	jne L_error_non_closure
 28077 0001534A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28078 0001534D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28079 00015350 50                      	push rax
 28080                                  	; preparing a non-tail-call
 28081 00015351 48B8-                   	mov rax, L_constants + 2270
 28081 00015353 [DE08000000000000] 
 28082 0001535B 50                      	push rax
 28083 0001535C 488B4510                	mov rax, ENV
 28084 00015360 488B00                  	mov rax, qword [rax + 8 * 0]
 28085 00015363 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 28086 00015367 50                      	push rax
 28087 00015368 6A02                    	push 2	; arg count
 28088 0001536A 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 28089 00015372 803805                  	cmp byte [rax], T_undefined
 28090 00015375 0F8488200000            	je L_error_fvar_undefined
 28091 0001537B 803804                  	cmp byte [rax], T_closure
 28092 0001537E 0F8503210000            	jne L_error_non_closure
 28093 00015384 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28094 00015387 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28095 0001538A 50                      	push rax
 28096 0001538B 488B4510                	mov rax, ENV
 28097 0001538F 488B00                  	mov rax, qword [rax + 8 * 0]
 28098 00015392 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28099 00015395 50                      	push rax
 28100 00015396 6A03                    	push 3	; arg count
 28101 00015398 488B4510                	mov rax, ENV
 28102 0001539C 488B4008                	mov rax, qword [rax + 8 * 1]
 28103 000153A0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28104 000153A3 488B00                  	mov rax, qword [rax]
 28105 000153A6 803804                  	cmp byte [rax], T_closure
 28106 000153A9 0F85D8200000            	jne L_error_non_closure
 28107 000153AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 28108 000153B2 FF7508                  	push qword [rbp + 8 *1]
 28109 000153B5 4989C0                  	mov r8, rax
 28110 000153B8 488B5D18                	mov rbx, COUNT
 28111 000153BC 4883C303                	add rbx,3
 28112 000153C0 48C1E303                	shl rbx,3
 28113 000153C4 4801EB                  	add rbx, rbp
 28114 000153C7 488B6D00                	mov rbp, [rbp]
 28115 000153CB B900000000              	mov rcx,0
 28116 000153D0 BA06000000              	mov rdx, 6
 28117 000153D5 4889D0                  	mov rax, rdx
 28118 000153D8 48FFC8                  	dec rax
 28119 000153DB 48C1E003                	shl rax,3
 28120 000153DF 4801E0                  	add rax, rsp
 28121                                  	.L_tc_recycle_frame_loop_09a8:
 28122 000153E2 4839D1                  	cmp rcx, rdx
 28123 000153E5 7414                    	je .L_tc_recycle_frame_done_09a8
 28124 000153E7 4C8B08                  	mov r9, qword [rax]
 28125 000153EA 4C890B                  	mov qword [rbx],r9
 28126 000153ED 4883E808                	sub rax,8
 28127 000153F1 4883EB08                	sub rbx,8
 28128 000153F5 4883C101                	add rcx,1
 28129 000153F9 EBE7                    	jmp .L_tc_recycle_frame_loop_09a8
 28130                                  	.L_tc_recycle_frame_done_09a8:
 28131 000153FB 4883C308                	add rbx,8
 28132 000153FF 4889DC                  	mov rsp,rbx
 28133 00015402 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28134 00015406 C9                      	leave
 28135 00015407 C21800                  	ret AND_KILL_FRAME(1)
 28136                                  .L_lambda_simple_end_079d:	; new closure is in rax
 28137 0001540A 803804                  	cmp byte [rax], T_closure
 28138 0001540D 0F8574200000            	jne L_error_non_closure
 28139 00015413 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28140 00015416 FF7508                  	push qword [rbp + 8 *1]
 28141 00015419 4989C0                  	mov r8, rax
 28142 0001541C 488B5D18                	mov rbx, COUNT
 28143 00015420 4883C303                	add rbx,3
 28144 00015424 48C1E303                	shl rbx,3
 28145 00015428 4801EB                  	add rbx, rbp
 28146 0001542B 488B6D00                	mov rbp, [rbp]
 28147 0001542F B900000000              	mov rcx,0
 28148 00015434 BA04000000              	mov rdx, 4
 28149 00015439 4889D0                  	mov rax, rdx
 28150 0001543C 48FFC8                  	dec rax
 28151 0001543F 48C1E003                	shl rax,3
 28152 00015443 4801E0                  	add rax, rsp
 28153                                  	.L_tc_recycle_frame_loop_09a7:
 28154 00015446 4839D1                  	cmp rcx, rdx
 28155 00015449 7414                    	je .L_tc_recycle_frame_done_09a7
 28156 0001544B 4C8B08                  	mov r9, qword [rax]
 28157 0001544E 4C890B                  	mov qword [rbx],r9
 28158 00015451 4883E808                	sub rax,8
 28159 00015455 4883EB08                	sub rbx,8
 28160 00015459 4883C101                	add rcx,1
 28161 0001545D EBE7                    	jmp .L_tc_recycle_frame_loop_09a7
 28162                                  	.L_tc_recycle_frame_done_09a7:
 28163 0001545F 4883C308                	add rbx,8
 28164 00015463 4889DC                  	mov rsp,rbx
 28165 00015466 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28166 0001546A EB04                    	jmp .L_if_end_05de
 28167                                  .L_if_else_0550:
 28168 0001546C 488B4520                	mov rax, PARAM(0)	; param vec
 28169                                  .L_if_end_05de:
 28170 00015470 C9                      	leave
 28171 00015471 C22800                  	ret AND_KILL_FRAME(3)
 28172                                  .L_lambda_simple_end_079c:	; new closure is in rax
 28173 00015474 50                      	push rax
 28174 00015475 488B4520                	mov rax, PARAM(0)	; param run
 28175 00015479 8F00                    	pop qword [rax]
 28176 0001547B 48B8-                   	mov rax, sob_void
 28176 0001547D [0000000000000000] 
 28177                                  
 28178 00015485 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28179 0001548A E8A1200000              	call malloc
 28180 0001548F 50                      	push rax
 28181 00015490 BF08000000              	mov rdi, 8 * 1	; new rib
 28182 00015495 E896200000              	call malloc
 28183 0001549A 50                      	push rax
 28184 0001549B BF10000000              	mov rdi, 8 * 2	; extended env
 28185 000154A0 E88B200000              	call malloc
 28186 000154A5 488B7D10                	mov rdi, ENV
 28187 000154A9 BE00000000              	mov rsi, 0
 28188 000154AE BA01000000              	mov rdx, 1
 28189                                  .L_lambda_simple_env_loop_079e:	; ext_env[i + 1] <-- env[i]
 28190 000154B3 4883FE01                	cmp rsi, 1
 28191 000154B7 7410                    	je .L_lambda_simple_env_end_079e
 28192 000154B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28193 000154BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28194 000154C1 48FFC6                  	inc rsi
 28195 000154C4 48FFC2                  	inc rdx
 28196 000154C7 EBEA                    	jmp .L_lambda_simple_env_loop_079e
 28197                                  .L_lambda_simple_env_end_079e:
 28198 000154C9 5B                      	pop rbx
 28199 000154CA BE00000000              	mov rsi, 0
 28200                                  .L_lambda_simple_params_loop_079e:	; copy params
 28201 000154CF 4883FE01                	cmp rsi, 1
 28202 000154D3 740E                    	je .L_lambda_simple_params_end_079e
 28203 000154D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28204 000154DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28205 000154DE 48FFC6                  	inc rsi
 28206 000154E1 EBEC                    	jmp .L_lambda_simple_params_loop_079e
 28207                                  .L_lambda_simple_params_end_079e:
 28208 000154E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28209 000154E6 4889C3                  	mov rbx, rax
 28210 000154E9 58                      	pop rax
 28211 000154EA C60004                  	mov byte [rax], T_closure
 28212 000154ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28213 000154F1 48C74009[FE540100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079e
 28214 000154F9 E930020000              	jmp .L_lambda_simple_end_079e
 28215                                  .L_lambda_simple_code_079e:	; lambda-simple body
 28216 000154FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28217 00015504 740B                    	je .L_lambda_simple_arity_check_ok_0891
 28218 00015506 FF742410                	push qword [rsp + 8 * 2]
 28219 0001550A 6A01                    	push 1
 28220 0001550C E9D81F0000              	jmp L_error_incorrect_arity_simple
 28221                                  .L_lambda_simple_arity_check_ok_0891:
 28222 00015511 C8000000                	enter 0, 0
 28223                                  	; preparing a tail-call
 28224                                  	; preparing a non-tail-call
 28225 00015515 488B4520                	mov rax, PARAM(0)	; param vec
 28226 00015519 50                      	push rax
 28227 0001551A 6A01                    	push 1	; arg count
 28228 0001551C 488B0425[D9170000]      	mov rax, qword [free_var_143]	; free var vector-length
 28229 00015524 803805                  	cmp byte [rax], T_undefined
 28230 00015527 0F84D61E0000            	je L_error_fvar_undefined
 28231 0001552D 803804                  	cmp byte [rax], T_closure
 28232 00015530 0F85511F0000            	jne L_error_non_closure
 28233 00015536 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28234 00015539 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28235 0001553C 50                      	push rax
 28236 0001553D 6A01                    	push 1	; arg count
 28237 0001553F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28238 00015544 E8E71F0000              	call malloc
 28239 00015549 50                      	push rax
 28240 0001554A BF08000000              	mov rdi, 8 * 1	; new rib
 28241 0001554F E8DC1F0000              	call malloc
 28242 00015554 50                      	push rax
 28243 00015555 BF18000000              	mov rdi, 8 * 3	; extended env
 28244 0001555A E8D11F0000              	call malloc
 28245 0001555F 488B7D10                	mov rdi, ENV
 28246 00015563 BE00000000              	mov rsi, 0
 28247 00015568 BA01000000              	mov rdx, 1
 28248                                  .L_lambda_simple_env_loop_079f:	; ext_env[i + 1] <-- env[i]
 28249 0001556D 4883FE02                	cmp rsi, 2
 28250 00015571 7410                    	je .L_lambda_simple_env_end_079f
 28251 00015573 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28252 00015577 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28253 0001557B 48FFC6                  	inc rsi
 28254 0001557E 48FFC2                  	inc rdx
 28255 00015581 EBEA                    	jmp .L_lambda_simple_env_loop_079f
 28256                                  .L_lambda_simple_env_end_079f:
 28257 00015583 5B                      	pop rbx
 28258 00015584 BE00000000              	mov rsi, 0
 28259                                  .L_lambda_simple_params_loop_079f:	; copy params
 28260 00015589 4883FE01                	cmp rsi, 1
 28261 0001558D 740E                    	je .L_lambda_simple_params_end_079f
 28262 0001558F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28263 00015594 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28264 00015598 48FFC6                  	inc rsi
 28265 0001559B EBEC                    	jmp .L_lambda_simple_params_loop_079f
 28266                                  .L_lambda_simple_params_end_079f:
 28267 0001559D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28268 000155A0 4889C3                  	mov rbx, rax
 28269 000155A3 58                      	pop rax
 28270 000155A4 C60004                  	mov byte [rax], T_closure
 28271 000155A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28272 000155AB 48C74009[B8550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_079f
 28273 000155B3 E912010000              	jmp .L_lambda_simple_end_079f
 28274                                  .L_lambda_simple_code_079f:	; lambda-simple body
 28275 000155B8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28276 000155BE 740B                    	je .L_lambda_simple_arity_check_ok_0892
 28277 000155C0 FF742410                	push qword [rsp + 8 * 2]
 28278 000155C4 6A01                    	push 1
 28279 000155C6 E91E1F0000              	jmp L_error_incorrect_arity_simple
 28280                                  .L_lambda_simple_arity_check_ok_0892:
 28281 000155CB C8000000                	enter 0, 0
 28282                                  	; preparing a non-tail-call
 28283 000155CF 488B4520                	mov rax, PARAM(0)	; param n
 28284 000155D3 50                      	push rax
 28285 000155D4 6A01                    	push 1	; arg count
 28286 000155D6 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 28287 000155DE 803805                  	cmp byte [rax], T_undefined
 28288 000155E1 0F841C1E0000            	je L_error_fvar_undefined
 28289 000155E7 803804                  	cmp byte [rax], T_closure
 28290 000155EA 0F85971E0000            	jne L_error_non_closure
 28291 000155F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28292 000155F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28293 000155F6 483D[02000000]          	cmp rax, sob_boolean_false
 28294 000155FC 740F                    	je .L_if_else_0551
 28295 000155FE 488B4510                	mov rax, ENV
 28296 00015602 488B00                  	mov rax, qword [rax + 8 * 0]
 28297 00015605 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28298 00015608 E9B9000000              	jmp .L_if_end_05df
 28299                                  .L_if_else_0551:
 28300                                  	; preparing a tail-call
 28301                                  	; preparing a non-tail-call
 28302 0001560D 48B8-                   	mov rax, L_constants + 2270
 28302 0001560F [DE08000000000000] 
 28303 00015617 50                      	push rax
 28304 00015618 488B4520                	mov rax, PARAM(0)	; param n
 28305 0001561C 50                      	push rax
 28306 0001561D 6A02                    	push 2	; arg count
 28307 0001561F 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 28308 00015627 803805                  	cmp byte [rax], T_undefined
 28309 0001562A 0F84D31D0000            	je L_error_fvar_undefined
 28310 00015630 803804                  	cmp byte [rax], T_closure
 28311 00015633 0F854E1E0000            	jne L_error_non_closure
 28312 00015639 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28313 0001563C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28314 0001563F 50                      	push rax
 28315 00015640 48B8-                   	mov rax, L_constants + 2135
 28315 00015642 [5708000000000000] 
 28316 0001564A 50                      	push rax
 28317 0001564B 488B4510                	mov rax, ENV
 28318 0001564F 488B00                  	mov rax, qword [rax + 8 * 0]
 28319 00015652 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28320 00015655 50                      	push rax
 28321 00015656 6A03                    	push 3	; arg count
 28322 00015658 488B4510                	mov rax, ENV
 28323 0001565C 488B4008                	mov rax, qword [rax + 8 * 1]
 28324 00015660 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28325 00015663 488B00                  	mov rax, qword [rax]
 28326 00015666 803804                  	cmp byte [rax], T_closure
 28327 00015669 0F85181E0000            	jne L_error_non_closure
 28328 0001566F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28329 00015672 FF7508                  	push qword [rbp + 8 *1]
 28330 00015675 4989C0                  	mov r8, rax
 28331 00015678 488B5D18                	mov rbx, COUNT
 28332 0001567C 4883C303                	add rbx,3
 28333 00015680 48C1E303                	shl rbx,3
 28334 00015684 4801EB                  	add rbx, rbp
 28335 00015687 488B6D00                	mov rbp, [rbp]
 28336 0001568B B900000000              	mov rcx,0
 28337 00015690 BA06000000              	mov rdx, 6
 28338 00015695 4889D0                  	mov rax, rdx
 28339 00015698 48FFC8                  	dec rax
 28340 0001569B 48C1E003                	shl rax,3
 28341 0001569F 4801E0                  	add rax, rsp
 28342                                  	.L_tc_recycle_frame_loop_09aa:
 28343 000156A2 4839D1                  	cmp rcx, rdx
 28344 000156A5 7414                    	je .L_tc_recycle_frame_done_09aa
 28345 000156A7 4C8B08                  	mov r9, qword [rax]
 28346 000156AA 4C890B                  	mov qword [rbx],r9
 28347 000156AD 4883E808                	sub rax,8
 28348 000156B1 4883EB08                	sub rbx,8
 28349 000156B5 4883C101                	add rcx,1
 28350 000156B9 EBE7                    	jmp .L_tc_recycle_frame_loop_09aa
 28351                                  	.L_tc_recycle_frame_done_09aa:
 28352 000156BB 4883C308                	add rbx,8
 28353 000156BF 4889DC                  	mov rsp,rbx
 28354 000156C2 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28355                                  .L_if_end_05df:
 28356 000156C6 C9                      	leave
 28357 000156C7 C21800                  	ret AND_KILL_FRAME(1)
 28358                                  .L_lambda_simple_end_079f:	; new closure is in rax
 28359 000156CA 803804                  	cmp byte [rax], T_closure
 28360 000156CD 0F85B41D0000            	jne L_error_non_closure
 28361 000156D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28362 000156D6 FF7508                  	push qword [rbp + 8 *1]
 28363 000156D9 4989C0                  	mov r8, rax
 28364 000156DC 488B5D18                	mov rbx, COUNT
 28365 000156E0 4883C303                	add rbx,3
 28366 000156E4 48C1E303                	shl rbx,3
 28367 000156E8 4801EB                  	add rbx, rbp
 28368 000156EB 488B6D00                	mov rbp, [rbp]
 28369 000156EF B900000000              	mov rcx,0
 28370 000156F4 BA04000000              	mov rdx, 4
 28371 000156F9 4889D0                  	mov rax, rdx
 28372 000156FC 48FFC8                  	dec rax
 28373 000156FF 48C1E003                	shl rax,3
 28374 00015703 4801E0                  	add rax, rsp
 28375                                  	.L_tc_recycle_frame_loop_09a9:
 28376 00015706 4839D1                  	cmp rcx, rdx
 28377 00015709 7414                    	je .L_tc_recycle_frame_done_09a9
 28378 0001570B 4C8B08                  	mov r9, qword [rax]
 28379 0001570E 4C890B                  	mov qword [rbx],r9
 28380 00015711 4883E808                	sub rax,8
 28381 00015715 4883EB08                	sub rbx,8
 28382 00015719 4883C101                	add rcx,1
 28383 0001571D EBE7                    	jmp .L_tc_recycle_frame_loop_09a9
 28384                                  	.L_tc_recycle_frame_done_09a9:
 28385 0001571F 4883C308                	add rbx,8
 28386 00015723 4889DC                  	mov rsp,rbx
 28387 00015726 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28388 0001572A C9                      	leave
 28389 0001572B C21800                  	ret AND_KILL_FRAME(1)
 28390                                  .L_lambda_simple_end_079e:	; new closure is in rax
 28391 0001572E C9                      	leave
 28392 0001572F C21800                  	ret AND_KILL_FRAME(1)
 28393                                  .L_lambda_simple_end_079b:	; new closure is in rax
 28394 00015732 803804                  	cmp byte [rax], T_closure
 28395 00015735 0F854C1D0000            	jne L_error_non_closure
 28396 0001573B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28397 0001573E FF5009                  	call SOB_CLOSURE_CODE(rax)
 28398 00015741 48890425[0C180000]      	mov qword [free_var_146], rax
 28399 00015749 48B8-                   	mov rax, sob_void
 28399 0001574B [0000000000000000] 
 28400                                  
 28401 00015753 4889C7                  	mov rdi, rax
 28402 00015756 E82A200000              	call print_sexpr_if_not_void
 28403 0001575B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28404 00015760 E8CB1D0000              	call malloc
 28405 00015765 50                      	push rax
 28406 00015766 BF00000000              	mov rdi, 8 * 0	; new rib
 28407 0001576B E8C01D0000              	call malloc
 28408 00015770 50                      	push rax
 28409 00015771 BF08000000              	mov rdi, 8 * 1	; extended env
 28410 00015776 E8B51D0000              	call malloc
 28411 0001577B 488B7D10                	mov rdi, ENV
 28412 0001577F BE00000000              	mov rsi, 0
 28413 00015784 BA01000000              	mov rdx, 1
 28414                                  .L_lambda_simple_env_loop_07a0:	; ext_env[i + 1] <-- env[i]
 28415 00015789 4883FE00                	cmp rsi, 0
 28416 0001578D 7410                    	je .L_lambda_simple_env_end_07a0
 28417 0001578F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28418 00015793 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28419 00015797 48FFC6                  	inc rsi
 28420 0001579A 48FFC2                  	inc rdx
 28421 0001579D EBEA                    	jmp .L_lambda_simple_env_loop_07a0
 28422                                  .L_lambda_simple_env_end_07a0:
 28423 0001579F 5B                      	pop rbx
 28424 000157A0 BE00000000              	mov rsi, 0
 28425                                  .L_lambda_simple_params_loop_07a0:	; copy params
 28426 000157A5 4883FE00                	cmp rsi, 0
 28427 000157A9 740E                    	je .L_lambda_simple_params_end_07a0
 28428 000157AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28429 000157B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28430 000157B4 48FFC6                  	inc rsi
 28431 000157B7 EBEC                    	jmp .L_lambda_simple_params_loop_07a0
 28432                                  .L_lambda_simple_params_end_07a0:
 28433 000157B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28434 000157BC 4889C3                  	mov rbx, rax
 28435 000157BF 58                      	pop rax
 28436 000157C0 C60004                  	mov byte [rax], T_closure
 28437 000157C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28438 000157C7 48C74009[D4570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a0
 28439 000157CF E987030000              	jmp .L_lambda_simple_end_07a0
 28440                                  .L_lambda_simple_code_07a0:	; lambda-simple body
 28441 000157D4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28442 000157DA 740B                    	je .L_lambda_simple_arity_check_ok_0893
 28443 000157DC FF742410                	push qword [rsp + 8 * 2]
 28444 000157E0 6A02                    	push 2
 28445 000157E2 E9021D0000              	jmp L_error_incorrect_arity_simple
 28446                                  .L_lambda_simple_arity_check_ok_0893:
 28447 000157E7 C8000000                	enter 0, 0
 28448                                  	; preparing a tail-call
 28449 000157EB 48B8-                   	mov rax, L_constants + 1993
 28449 000157ED [C907000000000000] 
 28450 000157F5 50                      	push rax
 28451 000157F6 6A01                    	push 1	; arg count
 28452 000157F8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28453 000157FD E82E1D0000              	call malloc
 28454 00015802 50                      	push rax
 28455 00015803 BF10000000              	mov rdi, 8 * 2	; new rib
 28456 00015808 E8231D0000              	call malloc
 28457 0001580D 50                      	push rax
 28458 0001580E BF10000000              	mov rdi, 8 * 2	; extended env
 28459 00015813 E8181D0000              	call malloc
 28460 00015818 488B7D10                	mov rdi, ENV
 28461 0001581C BE00000000              	mov rsi, 0
 28462 00015821 BA01000000              	mov rdx, 1
 28463                                  .L_lambda_simple_env_loop_07a1:	; ext_env[i + 1] <-- env[i]
 28464 00015826 4883FE01                	cmp rsi, 1
 28465 0001582A 7410                    	je .L_lambda_simple_env_end_07a1
 28466 0001582C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28467 00015830 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28468 00015834 48FFC6                  	inc rsi
 28469 00015837 48FFC2                  	inc rdx
 28470 0001583A EBEA                    	jmp .L_lambda_simple_env_loop_07a1
 28471                                  .L_lambda_simple_env_end_07a1:
 28472 0001583C 5B                      	pop rbx
 28473 0001583D BE00000000              	mov rsi, 0
 28474                                  .L_lambda_simple_params_loop_07a1:	; copy params
 28475 00015842 4883FE02                	cmp rsi, 2
 28476 00015846 740E                    	je .L_lambda_simple_params_end_07a1
 28477 00015848 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28478 0001584D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28479 00015851 48FFC6                  	inc rsi
 28480 00015854 EBEC                    	jmp .L_lambda_simple_params_loop_07a1
 28481                                  .L_lambda_simple_params_end_07a1:
 28482 00015856 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28483 00015859 4889C3                  	mov rbx, rax
 28484 0001585C 58                      	pop rax
 28485 0001585D C60004                  	mov byte [rax], T_closure
 28486 00015860 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28487 00015864 48C74009[71580100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a1
 28488 0001586C E986020000              	jmp .L_lambda_simple_end_07a1
 28489                                  .L_lambda_simple_code_07a1:	; lambda-simple body
 28490 00015871 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28491 00015877 740B                    	je .L_lambda_simple_arity_check_ok_0894
 28492 00015879 FF742410                	push qword [rsp + 8 * 2]
 28493 0001587D 6A01                    	push 1
 28494 0001587F E9651C0000              	jmp L_error_incorrect_arity_simple
 28495                                  .L_lambda_simple_arity_check_ok_0894:
 28496 00015884 C8000000                	enter 0, 0
 28497 00015888 BF08000000              	mov rdi, 8
 28498 0001588D E89E1C0000              	call malloc
 28499 00015892 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 28500 00015896 488918                  	mov qword [rax], rbx
 28501 00015899 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 28502 0001589D 48B8-                   	mov rax, sob_void
 28502 0001589F [0000000000000000] 
 28503                                  
 28504 000158A7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28505 000158AC E87F1C0000              	call malloc
 28506 000158B1 50                      	push rax
 28507 000158B2 BF08000000              	mov rdi, 8 * 1	; new rib
 28508 000158B7 E8741C0000              	call malloc
 28509 000158BC 50                      	push rax
 28510 000158BD BF18000000              	mov rdi, 8 * 3	; extended env
 28511 000158C2 E8691C0000              	call malloc
 28512 000158C7 488B7D10                	mov rdi, ENV
 28513 000158CB BE00000000              	mov rsi, 0
 28514 000158D0 BA01000000              	mov rdx, 1
 28515                                  .L_lambda_simple_env_loop_07a2:	; ext_env[i + 1] <-- env[i]
 28516 000158D5 4883FE02                	cmp rsi, 2
 28517 000158D9 7410                    	je .L_lambda_simple_env_end_07a2
 28518 000158DB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28519 000158DF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28520 000158E3 48FFC6                  	inc rsi
 28521 000158E6 48FFC2                  	inc rdx
 28522 000158E9 EBEA                    	jmp .L_lambda_simple_env_loop_07a2
 28523                                  .L_lambda_simple_env_end_07a2:
 28524 000158EB 5B                      	pop rbx
 28525 000158EC BE00000000              	mov rsi, 0
 28526                                  .L_lambda_simple_params_loop_07a2:	; copy params
 28527 000158F1 4883FE01                	cmp rsi, 1
 28528 000158F5 740E                    	je .L_lambda_simple_params_end_07a2
 28529 000158F7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28530 000158FC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28531 00015900 48FFC6                  	inc rsi
 28532 00015903 EBEC                    	jmp .L_lambda_simple_params_loop_07a2
 28533                                  .L_lambda_simple_params_end_07a2:
 28534 00015905 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28535 00015908 4889C3                  	mov rbx, rax
 28536 0001590B 58                      	pop rax
 28537 0001590C C60004                  	mov byte [rax], T_closure
 28538 0001590F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28539 00015913 48C74009[20590100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a2
 28540 0001591B E94E010000              	jmp .L_lambda_simple_end_07a2
 28541                                  .L_lambda_simple_code_07a2:	; lambda-simple body
 28542 00015920 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28543 00015926 740B                    	je .L_lambda_simple_arity_check_ok_0895
 28544 00015928 FF742410                	push qword [rsp + 8 * 2]
 28545 0001592C 6A01                    	push 1
 28546 0001592E E9B61B0000              	jmp L_error_incorrect_arity_simple
 28547                                  .L_lambda_simple_arity_check_ok_0895:
 28548 00015933 C8000000                	enter 0, 0
 28549                                  	; preparing a non-tail-call
 28550 00015937 488B4510                	mov rax, ENV
 28551 0001593B 488B4008                	mov rax, qword [rax + 8 * 1]
 28552 0001593F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28553 00015942 50                      	push rax
 28554 00015943 488B4520                	mov rax, PARAM(0)	; param i
 28555 00015947 50                      	push rax
 28556 00015948 6A02                    	push 2	; arg count
 28557 0001594A 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 28558 00015952 803805                  	cmp byte [rax], T_undefined
 28559 00015955 0F84A81A0000            	je L_error_fvar_undefined
 28560 0001595B 803804                  	cmp byte [rax], T_closure
 28561 0001595E 0F85231B0000            	jne L_error_non_closure
 28562 00015964 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28563 00015967 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28564 0001596A 483D[02000000]          	cmp rax, sob_boolean_false
 28565 00015970 0F84EA000000            	je .L_if_else_0552
 28566                                  	; preparing a tail-call
 28567                                  	; preparing a non-tail-call
 28568                                  	; preparing a non-tail-call
 28569 00015976 48B8-                   	mov rax, L_constants + 2270
 28569 00015978 [DE08000000000000] 
 28570 00015980 50                      	push rax
 28571 00015981 488B4520                	mov rax, PARAM(0)	; param i
 28572 00015985 50                      	push rax
 28573 00015986 6A02                    	push 2	; arg count
 28574 00015988 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 28575 00015990 803805                  	cmp byte [rax], T_undefined
 28576 00015993 0F846A1A0000            	je L_error_fvar_undefined
 28577 00015999 803804                  	cmp byte [rax], T_closure
 28578 0001599C 0F85E51A0000            	jne L_error_non_closure
 28579 000159A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28580 000159A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28581 000159A8 50                      	push rax
 28582 000159A9 6A01                    	push 1	; arg count
 28583 000159AB 488B4510                	mov rax, ENV
 28584 000159AF 488B00                  	mov rax, qword [rax + 8 * 0]
 28585 000159B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28586 000159B5 488B00                  	mov rax, qword [rax]
 28587 000159B8 803804                  	cmp byte [rax], T_closure
 28588 000159BB 0F85C61A0000            	jne L_error_non_closure
 28589 000159C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28590 000159C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28591 000159C7 50                      	push rax
 28592                                  	; preparing a non-tail-call
 28593 000159C8 488B4520                	mov rax, PARAM(0)	; param i
 28594 000159CC 50                      	push rax
 28595 000159CD 6A01                    	push 1	; arg count
 28596 000159CF 488B4510                	mov rax, ENV
 28597 000159D3 488B4008                	mov rax, qword [rax + 8 * 1]
 28598 000159D7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28599 000159DB 803804                  	cmp byte [rax], T_closure
 28600 000159DE 0F85A31A0000            	jne L_error_non_closure
 28601 000159E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28602 000159E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28603 000159EA 50                      	push rax
 28604 000159EB 6A02                    	push 2	; arg count
 28605 000159ED 488B0425[99130000]      	mov rax, qword [free_var_79]	; free var cons
 28606 000159F5 803805                  	cmp byte [rax], T_undefined
 28607 000159F8 0F84051A0000            	je L_error_fvar_undefined
 28608 000159FE 803804                  	cmp byte [rax], T_closure
 28609 00015A01 0F85801A0000            	jne L_error_non_closure
 28610 00015A07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28611 00015A0A FF7508                  	push qword [rbp + 8 *1]
 28612 00015A0D 4989C0                  	mov r8, rax
 28613 00015A10 488B5D18                	mov rbx, COUNT
 28614 00015A14 4883C303                	add rbx,3
 28615 00015A18 48C1E303                	shl rbx,3
 28616 00015A1C 4801EB                  	add rbx, rbp
 28617 00015A1F 488B6D00                	mov rbp, [rbp]
 28618 00015A23 B900000000              	mov rcx,0
 28619 00015A28 BA05000000              	mov rdx, 5
 28620 00015A2D 4889D0                  	mov rax, rdx
 28621 00015A30 48FFC8                  	dec rax
 28622 00015A33 48C1E003                	shl rax,3
 28623 00015A37 4801E0                  	add rax, rsp
 28624                                  	.L_tc_recycle_frame_loop_09ac:
 28625 00015A3A 4839D1                  	cmp rcx, rdx
 28626 00015A3D 7414                    	je .L_tc_recycle_frame_done_09ac
 28627 00015A3F 4C8B08                  	mov r9, qword [rax]
 28628 00015A42 4C890B                  	mov qword [rbx],r9
 28629 00015A45 4883E808                	sub rax,8
 28630 00015A49 4883EB08                	sub rbx,8
 28631 00015A4D 4883C101                	add rcx,1
 28632 00015A51 EBE7                    	jmp .L_tc_recycle_frame_loop_09ac
 28633                                  	.L_tc_recycle_frame_done_09ac:
 28634 00015A53 4883C308                	add rbx,8
 28635 00015A57 4889DC                  	mov rsp,rbx
 28636 00015A5A 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28637 00015A5E EB0A                    	jmp .L_if_end_05e0
 28638                                  .L_if_else_0552:
 28639 00015A60 48B8-                   	mov rax, L_constants + 1
 28639 00015A62 [0100000000000000] 
 28640                                  .L_if_end_05e0:
 28641 00015A6A C9                      	leave
 28642 00015A6B C21800                  	ret AND_KILL_FRAME(1)
 28643                                  .L_lambda_simple_end_07a2:	; new closure is in rax
 28644 00015A6E 50                      	push rax
 28645 00015A6F 488B4520                	mov rax, PARAM(0)	; param run
 28646 00015A73 8F00                    	pop qword [rax]
 28647 00015A75 48B8-                   	mov rax, sob_void
 28647 00015A77 [0000000000000000] 
 28648                                  
 28649                                  	; preparing a tail-call
 28650 00015A7F 48B8-                   	mov rax, L_constants + 2135
 28650 00015A81 [5708000000000000] 
 28651 00015A89 50                      	push rax
 28652 00015A8A 6A01                    	push 1	; arg count
 28653 00015A8C 488B4520                	mov rax, PARAM(0)	; param run
 28654 00015A90 488B00                  	mov rax, qword [rax]
 28655 00015A93 803804                  	cmp byte [rax], T_closure
 28656 00015A96 0F85EB190000            	jne L_error_non_closure
 28657 00015A9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28658 00015A9F FF7508                  	push qword [rbp + 8 *1]
 28659 00015AA2 4989C0                  	mov r8, rax
 28660 00015AA5 488B5D18                	mov rbx, COUNT
 28661 00015AA9 4883C303                	add rbx,3
 28662 00015AAD 48C1E303                	shl rbx,3
 28663 00015AB1 4801EB                  	add rbx, rbp
 28664 00015AB4 488B6D00                	mov rbp, [rbp]
 28665 00015AB8 B900000000              	mov rcx,0
 28666 00015ABD BA04000000              	mov rdx, 4
 28667 00015AC2 4889D0                  	mov rax, rdx
 28668 00015AC5 48FFC8                  	dec rax
 28669 00015AC8 48C1E003                	shl rax,3
 28670 00015ACC 4801E0                  	add rax, rsp
 28671                                  	.L_tc_recycle_frame_loop_09ad:
 28672 00015ACF 4839D1                  	cmp rcx, rdx
 28673 00015AD2 7414                    	je .L_tc_recycle_frame_done_09ad
 28674 00015AD4 4C8B08                  	mov r9, qword [rax]
 28675 00015AD7 4C890B                  	mov qword [rbx],r9
 28676 00015ADA 4883E808                	sub rax,8
 28677 00015ADE 4883EB08                	sub rbx,8
 28678 00015AE2 4883C101                	add rcx,1
 28679 00015AE6 EBE7                    	jmp .L_tc_recycle_frame_loop_09ad
 28680                                  	.L_tc_recycle_frame_done_09ad:
 28681 00015AE8 4883C308                	add rbx,8
 28682 00015AEC 4889DC                  	mov rsp,rbx
 28683 00015AEF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28684 00015AF3 C9                      	leave
 28685 00015AF4 C21800                  	ret AND_KILL_FRAME(1)
 28686                                  .L_lambda_simple_end_07a1:	; new closure is in rax
 28687 00015AF7 803804                  	cmp byte [rax], T_closure
 28688 00015AFA 0F8587190000            	jne L_error_non_closure
 28689 00015B00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28690 00015B03 FF7508                  	push qword [rbp + 8 *1]
 28691 00015B06 4989C0                  	mov r8, rax
 28692 00015B09 488B5D18                	mov rbx, COUNT
 28693 00015B0D 4883C303                	add rbx,3
 28694 00015B11 48C1E303                	shl rbx,3
 28695 00015B15 4801EB                  	add rbx, rbp
 28696 00015B18 488B6D00                	mov rbp, [rbp]
 28697 00015B1C B900000000              	mov rcx,0
 28698 00015B21 BA04000000              	mov rdx, 4
 28699 00015B26 4889D0                  	mov rax, rdx
 28700 00015B29 48FFC8                  	dec rax
 28701 00015B2C 48C1E003                	shl rax,3
 28702 00015B30 4801E0                  	add rax, rsp
 28703                                  	.L_tc_recycle_frame_loop_09ab:
 28704 00015B33 4839D1                  	cmp rcx, rdx
 28705 00015B36 7414                    	je .L_tc_recycle_frame_done_09ab
 28706 00015B38 4C8B08                  	mov r9, qword [rax]
 28707 00015B3B 4C890B                  	mov qword [rbx],r9
 28708 00015B3E 4883E808                	sub rax,8
 28709 00015B42 4883EB08                	sub rbx,8
 28710 00015B46 4883C101                	add rcx,1
 28711 00015B4A EBE7                    	jmp .L_tc_recycle_frame_loop_09ab
 28712                                  	.L_tc_recycle_frame_done_09ab:
 28713 00015B4C 4883C308                	add rbx,8
 28714 00015B50 4889DC                  	mov rsp,rbx
 28715 00015B53 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 28716 00015B57 C9                      	leave
 28717 00015B58 C22000                  	ret AND_KILL_FRAME(2)
 28718                                  .L_lambda_simple_end_07a0:	; new closure is in rax
 28719 00015B5B 48890425[DC140000]      	mov qword [free_var_98], rax
 28720 00015B63 48B8-                   	mov rax, sob_void
 28720 00015B65 [0000000000000000] 
 28721                                  
 28722 00015B6D 4889C7                  	mov rdi, rax
 28723 00015B70 E8101C0000              	call print_sexpr_if_not_void
 28724 00015B75 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28725 00015B7A E8B1190000              	call malloc
 28726 00015B7F 50                      	push rax
 28727 00015B80 BF00000000              	mov rdi, 8 * 0	; new rib
 28728 00015B85 E8A6190000              	call malloc
 28729 00015B8A 50                      	push rax
 28730 00015B8B BF08000000              	mov rdi, 8 * 1	; extended env
 28731 00015B90 E89B190000              	call malloc
 28732 00015B95 488B7D10                	mov rdi, ENV
 28733 00015B99 BE00000000              	mov rsi, 0
 28734 00015B9E BA01000000              	mov rdx, 1
 28735                                  .L_lambda_simple_env_loop_07a3:	; ext_env[i + 1] <-- env[i]
 28736 00015BA3 4883FE00                	cmp rsi, 0
 28737 00015BA7 7410                    	je .L_lambda_simple_env_end_07a3
 28738 00015BA9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28739 00015BAD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28740 00015BB1 48FFC6                  	inc rsi
 28741 00015BB4 48FFC2                  	inc rdx
 28742 00015BB7 EBEA                    	jmp .L_lambda_simple_env_loop_07a3
 28743                                  .L_lambda_simple_env_end_07a3:
 28744 00015BB9 5B                      	pop rbx
 28745 00015BBA BE00000000              	mov rsi, 0
 28746                                  .L_lambda_simple_params_loop_07a3:	; copy params
 28747 00015BBF 4883FE00                	cmp rsi, 0
 28748 00015BC3 740E                    	je .L_lambda_simple_params_end_07a3
 28749 00015BC5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28750 00015BCA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28751 00015BCE 48FFC6                  	inc rsi
 28752 00015BD1 EBEC                    	jmp .L_lambda_simple_params_loop_07a3
 28753                                  .L_lambda_simple_params_end_07a3:
 28754 00015BD3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28755 00015BD6 4889C3                  	mov rbx, rax
 28756 00015BD9 58                      	pop rax
 28757 00015BDA C60004                  	mov byte [rax], T_closure
 28758 00015BDD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28759 00015BE1 48C74009[EE5B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a3
 28760 00015BE9 E9B6040000              	jmp .L_lambda_simple_end_07a3
 28761                                  .L_lambda_simple_code_07a3:	; lambda-simple body
 28762 00015BEE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28763 00015BF4 740B                    	je .L_lambda_simple_arity_check_ok_0896
 28764 00015BF6 FF742410                	push qword [rsp + 8 * 2]
 28765 00015BFA 6A02                    	push 2
 28766 00015BFC E9E8180000              	jmp L_error_incorrect_arity_simple
 28767                                  .L_lambda_simple_arity_check_ok_0896:
 28768 00015C01 C8000000                	enter 0, 0
 28769                                  	; preparing a tail-call
 28770                                  	; preparing a non-tail-call
 28771 00015C05 488B4520                	mov rax, PARAM(0)	; param n
 28772 00015C09 50                      	push rax
 28773 00015C0A 6A01                    	push 1	; arg count
 28774 00015C0C 488B0425[ED140000]      	mov rax, qword [free_var_99]	; free var make-string
 28775 00015C14 803805                  	cmp byte [rax], T_undefined
 28776 00015C17 0F84E6170000            	je L_error_fvar_undefined
 28777 00015C1D 803804                  	cmp byte [rax], T_closure
 28778 00015C20 0F8561180000            	jne L_error_non_closure
 28779 00015C26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28780 00015C29 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28781 00015C2C 50                      	push rax
 28782 00015C2D 6A01                    	push 1	; arg count
 28783 00015C2F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28784 00015C34 E8F7180000              	call malloc
 28785 00015C39 50                      	push rax
 28786 00015C3A BF10000000              	mov rdi, 8 * 2	; new rib
 28787 00015C3F E8EC180000              	call malloc
 28788 00015C44 50                      	push rax
 28789 00015C45 BF10000000              	mov rdi, 8 * 2	; extended env
 28790 00015C4A E8E1180000              	call malloc
 28791 00015C4F 488B7D10                	mov rdi, ENV
 28792 00015C53 BE00000000              	mov rsi, 0
 28793 00015C58 BA01000000              	mov rdx, 1
 28794                                  .L_lambda_simple_env_loop_07a4:	; ext_env[i + 1] <-- env[i]
 28795 00015C5D 4883FE01                	cmp rsi, 1
 28796 00015C61 7410                    	je .L_lambda_simple_env_end_07a4
 28797 00015C63 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28798 00015C67 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28799 00015C6B 48FFC6                  	inc rsi
 28800 00015C6E 48FFC2                  	inc rdx
 28801 00015C71 EBEA                    	jmp .L_lambda_simple_env_loop_07a4
 28802                                  .L_lambda_simple_env_end_07a4:
 28803 00015C73 5B                      	pop rbx
 28804 00015C74 BE00000000              	mov rsi, 0
 28805                                  .L_lambda_simple_params_loop_07a4:	; copy params
 28806 00015C79 4883FE02                	cmp rsi, 2
 28807 00015C7D 740E                    	je .L_lambda_simple_params_end_07a4
 28808 00015C7F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28809 00015C84 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28810 00015C88 48FFC6                  	inc rsi
 28811 00015C8B EBEC                    	jmp .L_lambda_simple_params_loop_07a4
 28812                                  .L_lambda_simple_params_end_07a4:
 28813 00015C8D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28814 00015C90 4889C3                  	mov rbx, rax
 28815 00015C93 58                      	pop rax
 28816 00015C94 C60004                  	mov byte [rax], T_closure
 28817 00015C97 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28818 00015C9B 48C74009[A85C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a4
 28819 00015CA3 E998030000              	jmp .L_lambda_simple_end_07a4
 28820                                  .L_lambda_simple_code_07a4:	; lambda-simple body
 28821 00015CA8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28822 00015CAE 740B                    	je .L_lambda_simple_arity_check_ok_0897
 28823 00015CB0 FF742410                	push qword [rsp + 8 * 2]
 28824 00015CB4 6A01                    	push 1
 28825 00015CB6 E92E180000              	jmp L_error_incorrect_arity_simple
 28826                                  .L_lambda_simple_arity_check_ok_0897:
 28827 00015CBB C8000000                	enter 0, 0
 28828                                  	; preparing a tail-call
 28829 00015CBF 48B8-                   	mov rax, L_constants + 1993
 28829 00015CC1 [C907000000000000] 
 28830 00015CC9 50                      	push rax
 28831 00015CCA 6A01                    	push 1	; arg count
 28832 00015CCC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28833 00015CD1 E85A180000              	call malloc
 28834 00015CD6 50                      	push rax
 28835 00015CD7 BF08000000              	mov rdi, 8 * 1	; new rib
 28836 00015CDC E84F180000              	call malloc
 28837 00015CE1 50                      	push rax
 28838 00015CE2 BF18000000              	mov rdi, 8 * 3	; extended env
 28839 00015CE7 E844180000              	call malloc
 28840 00015CEC 488B7D10                	mov rdi, ENV
 28841 00015CF0 BE00000000              	mov rsi, 0
 28842 00015CF5 BA01000000              	mov rdx, 1
 28843                                  .L_lambda_simple_env_loop_07a5:	; ext_env[i + 1] <-- env[i]
 28844 00015CFA 4883FE02                	cmp rsi, 2
 28845 00015CFE 7410                    	je .L_lambda_simple_env_end_07a5
 28846 00015D00 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28847 00015D04 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28848 00015D08 48FFC6                  	inc rsi
 28849 00015D0B 48FFC2                  	inc rdx
 28850 00015D0E EBEA                    	jmp .L_lambda_simple_env_loop_07a5
 28851                                  .L_lambda_simple_env_end_07a5:
 28852 00015D10 5B                      	pop rbx
 28853 00015D11 BE00000000              	mov rsi, 0
 28854                                  .L_lambda_simple_params_loop_07a5:	; copy params
 28855 00015D16 4883FE01                	cmp rsi, 1
 28856 00015D1A 740E                    	je .L_lambda_simple_params_end_07a5
 28857 00015D1C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28858 00015D21 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28859 00015D25 48FFC6                  	inc rsi
 28860 00015D28 EBEC                    	jmp .L_lambda_simple_params_loop_07a5
 28861                                  .L_lambda_simple_params_end_07a5:
 28862 00015D2A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28863 00015D2D 4889C3                  	mov rbx, rax
 28864 00015D30 58                      	pop rax
 28865 00015D31 C60004                  	mov byte [rax], T_closure
 28866 00015D34 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28867 00015D38 48C74009[455D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a5
 28868 00015D40 E997020000              	jmp .L_lambda_simple_end_07a5
 28869                                  .L_lambda_simple_code_07a5:	; lambda-simple body
 28870 00015D45 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28871 00015D4B 740B                    	je .L_lambda_simple_arity_check_ok_0898
 28872 00015D4D FF742410                	push qword [rsp + 8 * 2]
 28873 00015D51 6A01                    	push 1
 28874 00015D53 E991170000              	jmp L_error_incorrect_arity_simple
 28875                                  .L_lambda_simple_arity_check_ok_0898:
 28876 00015D58 C8000000                	enter 0, 0
 28877 00015D5C BF08000000              	mov rdi, 8
 28878 00015D61 E8CA170000              	call malloc
 28879 00015D66 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 28880 00015D6A 488918                  	mov qword [rax], rbx
 28881 00015D6D 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 28882 00015D71 48B8-                   	mov rax, sob_void
 28882 00015D73 [0000000000000000] 
 28883                                  
 28884 00015D7B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28885 00015D80 E8AB170000              	call malloc
 28886 00015D85 50                      	push rax
 28887 00015D86 BF08000000              	mov rdi, 8 * 1	; new rib
 28888 00015D8B E8A0170000              	call malloc
 28889 00015D90 50                      	push rax
 28890 00015D91 BF20000000              	mov rdi, 8 * 4	; extended env
 28891 00015D96 E895170000              	call malloc
 28892 00015D9B 488B7D10                	mov rdi, ENV
 28893 00015D9F BE00000000              	mov rsi, 0
 28894 00015DA4 BA01000000              	mov rdx, 1
 28895                                  .L_lambda_simple_env_loop_07a6:	; ext_env[i + 1] <-- env[i]
 28896 00015DA9 4883FE03                	cmp rsi, 3
 28897 00015DAD 7410                    	je .L_lambda_simple_env_end_07a6
 28898 00015DAF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28899 00015DB3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28900 00015DB7 48FFC6                  	inc rsi
 28901 00015DBA 48FFC2                  	inc rdx
 28902 00015DBD EBEA                    	jmp .L_lambda_simple_env_loop_07a6
 28903                                  .L_lambda_simple_env_end_07a6:
 28904 00015DBF 5B                      	pop rbx
 28905 00015DC0 BE00000000              	mov rsi, 0
 28906                                  .L_lambda_simple_params_loop_07a6:	; copy params
 28907 00015DC5 4883FE01                	cmp rsi, 1
 28908 00015DC9 740E                    	je .L_lambda_simple_params_end_07a6
 28909 00015DCB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28910 00015DD0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28911 00015DD4 48FFC6                  	inc rsi
 28912 00015DD7 EBEC                    	jmp .L_lambda_simple_params_loop_07a6
 28913                                  .L_lambda_simple_params_end_07a6:
 28914 00015DD9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28915 00015DDC 4889C3                  	mov rbx, rax
 28916 00015DDF 58                      	pop rax
 28917 00015DE0 C60004                  	mov byte [rax], T_closure
 28918 00015DE3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28919 00015DE7 48C74009[F45D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a6
 28920 00015DEF E95F010000              	jmp .L_lambda_simple_end_07a6
 28921                                  .L_lambda_simple_code_07a6:	; lambda-simple body
 28922 00015DF4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28923 00015DFA 740B                    	je .L_lambda_simple_arity_check_ok_0899
 28924 00015DFC FF742410                	push qword [rsp + 8 * 2]
 28925 00015E00 6A01                    	push 1
 28926 00015E02 E9E2160000              	jmp L_error_incorrect_arity_simple
 28927                                  .L_lambda_simple_arity_check_ok_0899:
 28928 00015E07 C8000000                	enter 0, 0
 28929                                  	; preparing a non-tail-call
 28930 00015E0B 488B4510                	mov rax, ENV
 28931 00015E0F 488B4010                	mov rax, qword [rax + 8 * 2]
 28932 00015E13 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28933 00015E16 50                      	push rax
 28934 00015E17 488B4520                	mov rax, PARAM(0)	; param i
 28935 00015E1B 50                      	push rax
 28936 00015E1C 6A02                    	push 2	; arg count
 28937 00015E1E 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 28938 00015E26 803805                  	cmp byte [rax], T_undefined
 28939 00015E29 0F84D4150000            	je L_error_fvar_undefined
 28940 00015E2F 803804                  	cmp byte [rax], T_closure
 28941 00015E32 0F854F160000            	jne L_error_non_closure
 28942 00015E38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28943 00015E3B FF5009                  	call SOB_CLOSURE_CODE(rax)
 28944 00015E3E 483D[02000000]          	cmp rax, sob_boolean_false
 28945 00015E44 0F84FA000000            	je .L_if_else_0553
 28946                                  	; preparing a non-tail-call
 28947                                  	; preparing a non-tail-call
 28948 00015E4A 488B4520                	mov rax, PARAM(0)	; param i
 28949 00015E4E 50                      	push rax
 28950 00015E4F 6A01                    	push 1	; arg count
 28951 00015E51 488B4510                	mov rax, ENV
 28952 00015E55 488B4010                	mov rax, qword [rax + 8 * 2]
 28953 00015E59 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28954 00015E5D 803804                  	cmp byte [rax], T_closure
 28955 00015E60 0F8521160000            	jne L_error_non_closure
 28956 00015E66 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28957 00015E69 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28958 00015E6C 50                      	push rax
 28959 00015E6D 488B4520                	mov rax, PARAM(0)	; param i
 28960 00015E71 50                      	push rax
 28961 00015E72 488B4510                	mov rax, ENV
 28962 00015E76 488B4008                	mov rax, qword [rax + 8 * 1]
 28963 00015E7A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28964 00015E7D 50                      	push rax
 28965 00015E7E 6A03                    	push 3	; arg count
 28966 00015E80 488B0425[0D170000]      	mov rax, qword [free_var_131]	; free var string-set!
 28967 00015E88 803805                  	cmp byte [rax], T_undefined
 28968 00015E8B 0F8472150000            	je L_error_fvar_undefined
 28969 00015E91 803804                  	cmp byte [rax], T_closure
 28970 00015E94 0F85ED150000            	jne L_error_non_closure
 28971 00015E9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28972 00015E9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28973                                  
 28974                                  	; preparing a tail-call
 28975                                  	; preparing a non-tail-call
 28976 00015EA0 48B8-                   	mov rax, L_constants + 2270
 28976 00015EA2 [DE08000000000000] 
 28977 00015EAA 50                      	push rax
 28978 00015EAB 488B4520                	mov rax, PARAM(0)	; param i
 28979 00015EAF 50                      	push rax
 28980 00015EB0 6A02                    	push 2	; arg count
 28981 00015EB2 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 28982 00015EBA 803805                  	cmp byte [rax], T_undefined
 28983 00015EBD 0F8440150000            	je L_error_fvar_undefined
 28984 00015EC3 803804                  	cmp byte [rax], T_closure
 28985 00015EC6 0F85BB150000            	jne L_error_non_closure
 28986 00015ECC FF7001                  	push SOB_CLOSURE_ENV(rax)
 28987 00015ECF FF5009                  	call SOB_CLOSURE_CODE(rax)
 28988 00015ED2 50                      	push rax
 28989 00015ED3 6A01                    	push 1	; arg count
 28990 00015ED5 488B4510                	mov rax, ENV
 28991 00015ED9 488B00                  	mov rax, qword [rax + 8 * 0]
 28992 00015EDC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28993 00015EDF 488B00                  	mov rax, qword [rax]
 28994 00015EE2 803804                  	cmp byte [rax], T_closure
 28995 00015EE5 0F859C150000            	jne L_error_non_closure
 28996 00015EEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28997 00015EEE FF7508                  	push qword [rbp + 8 *1]
 28998 00015EF1 4989C0                  	mov r8, rax
 28999 00015EF4 488B5D18                	mov rbx, COUNT
 29000 00015EF8 4883C303                	add rbx,3
 29001 00015EFC 48C1E303                	shl rbx,3
 29002 00015F00 4801EB                  	add rbx, rbp
 29003 00015F03 488B6D00                	mov rbp, [rbp]
 29004 00015F07 B900000000              	mov rcx,0
 29005 00015F0C BA04000000              	mov rdx, 4
 29006 00015F11 4889D0                  	mov rax, rdx
 29007 00015F14 48FFC8                  	dec rax
 29008 00015F17 48C1E003                	shl rax,3
 29009 00015F1B 4801E0                  	add rax, rsp
 29010                                  	.L_tc_recycle_frame_loop_09b0:
 29011 00015F1E 4839D1                  	cmp rcx, rdx
 29012 00015F21 7414                    	je .L_tc_recycle_frame_done_09b0
 29013 00015F23 4C8B08                  	mov r9, qword [rax]
 29014 00015F26 4C890B                  	mov qword [rbx],r9
 29015 00015F29 4883E808                	sub rax,8
 29016 00015F2D 4883EB08                	sub rbx,8
 29017 00015F31 4883C101                	add rcx,1
 29018 00015F35 EBE7                    	jmp .L_tc_recycle_frame_loop_09b0
 29019                                  	.L_tc_recycle_frame_done_09b0:
 29020 00015F37 4883C308                	add rbx,8
 29021 00015F3B 4889DC                  	mov rsp,rbx
 29022 00015F3E 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29023 00015F42 EB0B                    	jmp .L_if_end_05e1
 29024                                  .L_if_else_0553:
 29025 00015F44 488B4510                	mov rax, ENV
 29026 00015F48 488B4008                	mov rax, qword [rax + 8 * 1]
 29027 00015F4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 29028                                  .L_if_end_05e1:
 29029 00015F4F C9                      	leave
 29030 00015F50 C21800                  	ret AND_KILL_FRAME(1)
 29031                                  .L_lambda_simple_end_07a6:	; new closure is in rax
 29032 00015F53 50                      	push rax
 29033 00015F54 488B4520                	mov rax, PARAM(0)	; param run
 29034 00015F58 8F00                    	pop qword [rax]
 29035 00015F5A 48B8-                   	mov rax, sob_void
 29035 00015F5C [0000000000000000] 
 29036                                  
 29037                                  	; preparing a tail-call
 29038 00015F64 48B8-                   	mov rax, L_constants + 2135
 29038 00015F66 [5708000000000000] 
 29039 00015F6E 50                      	push rax
 29040 00015F6F 6A01                    	push 1	; arg count
 29041 00015F71 488B4520                	mov rax, PARAM(0)	; param run
 29042 00015F75 488B00                  	mov rax, qword [rax]
 29043 00015F78 803804                  	cmp byte [rax], T_closure
 29044 00015F7B 0F8506150000            	jne L_error_non_closure
 29045 00015F81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29046 00015F84 FF7508                  	push qword [rbp + 8 *1]
 29047 00015F87 4989C0                  	mov r8, rax
 29048 00015F8A 488B5D18                	mov rbx, COUNT
 29049 00015F8E 4883C303                	add rbx,3
 29050 00015F92 48C1E303                	shl rbx,3
 29051 00015F96 4801EB                  	add rbx, rbp
 29052 00015F99 488B6D00                	mov rbp, [rbp]
 29053 00015F9D B900000000              	mov rcx,0
 29054 00015FA2 BA04000000              	mov rdx, 4
 29055 00015FA7 4889D0                  	mov rax, rdx
 29056 00015FAA 48FFC8                  	dec rax
 29057 00015FAD 48C1E003                	shl rax,3
 29058 00015FB1 4801E0                  	add rax, rsp
 29059                                  	.L_tc_recycle_frame_loop_09b1:
 29060 00015FB4 4839D1                  	cmp rcx, rdx
 29061 00015FB7 7414                    	je .L_tc_recycle_frame_done_09b1
 29062 00015FB9 4C8B08                  	mov r9, qword [rax]
 29063 00015FBC 4C890B                  	mov qword [rbx],r9
 29064 00015FBF 4883E808                	sub rax,8
 29065 00015FC3 4883EB08                	sub rbx,8
 29066 00015FC7 4883C101                	add rcx,1
 29067 00015FCB EBE7                    	jmp .L_tc_recycle_frame_loop_09b1
 29068                                  	.L_tc_recycle_frame_done_09b1:
 29069 00015FCD 4883C308                	add rbx,8
 29070 00015FD1 4889DC                  	mov rsp,rbx
 29071 00015FD4 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29072 00015FD8 C9                      	leave
 29073 00015FD9 C21800                  	ret AND_KILL_FRAME(1)
 29074                                  .L_lambda_simple_end_07a5:	; new closure is in rax
 29075 00015FDC 803804                  	cmp byte [rax], T_closure
 29076 00015FDF 0F85A2140000            	jne L_error_non_closure
 29077 00015FE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29078 00015FE8 FF7508                  	push qword [rbp + 8 *1]
 29079 00015FEB 4989C0                  	mov r8, rax
 29080 00015FEE 488B5D18                	mov rbx, COUNT
 29081 00015FF2 4883C303                	add rbx,3
 29082 00015FF6 48C1E303                	shl rbx,3
 29083 00015FFA 4801EB                  	add rbx, rbp
 29084 00015FFD 488B6D00                	mov rbp, [rbp]
 29085 00016001 B900000000              	mov rcx,0
 29086 00016006 BA04000000              	mov rdx, 4
 29087 0001600B 4889D0                  	mov rax, rdx
 29088 0001600E 48FFC8                  	dec rax
 29089 00016011 48C1E003                	shl rax,3
 29090 00016015 4801E0                  	add rax, rsp
 29091                                  	.L_tc_recycle_frame_loop_09af:
 29092 00016018 4839D1                  	cmp rcx, rdx
 29093 0001601B 7414                    	je .L_tc_recycle_frame_done_09af
 29094 0001601D 4C8B08                  	mov r9, qword [rax]
 29095 00016020 4C890B                  	mov qword [rbx],r9
 29096 00016023 4883E808                	sub rax,8
 29097 00016027 4883EB08                	sub rbx,8
 29098 0001602B 4883C101                	add rcx,1
 29099 0001602F EBE7                    	jmp .L_tc_recycle_frame_loop_09af
 29100                                  	.L_tc_recycle_frame_done_09af:
 29101 00016031 4883C308                	add rbx,8
 29102 00016035 4889DC                  	mov rsp,rbx
 29103 00016038 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29104 0001603C C9                      	leave
 29105 0001603D C21800                  	ret AND_KILL_FRAME(1)
 29106                                  .L_lambda_simple_end_07a4:	; new closure is in rax
 29107 00016040 803804                  	cmp byte [rax], T_closure
 29108 00016043 0F853E140000            	jne L_error_non_closure
 29109 00016049 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29110 0001604C FF7508                  	push qword [rbp + 8 *1]
 29111 0001604F 4989C0                  	mov r8, rax
 29112 00016052 488B5D18                	mov rbx, COUNT
 29113 00016056 4883C303                	add rbx,3
 29114 0001605A 48C1E303                	shl rbx,3
 29115 0001605E 4801EB                  	add rbx, rbp
 29116 00016061 488B6D00                	mov rbp, [rbp]
 29117 00016065 B900000000              	mov rcx,0
 29118 0001606A BA04000000              	mov rdx, 4
 29119 0001606F 4889D0                  	mov rax, rdx
 29120 00016072 48FFC8                  	dec rax
 29121 00016075 48C1E003                	shl rax,3
 29122 00016079 4801E0                  	add rax, rsp
 29123                                  	.L_tc_recycle_frame_loop_09ae:
 29124 0001607C 4839D1                  	cmp rcx, rdx
 29125 0001607F 7414                    	je .L_tc_recycle_frame_done_09ae
 29126 00016081 4C8B08                  	mov r9, qword [rax]
 29127 00016084 4C890B                  	mov qword [rbx],r9
 29128 00016087 4883E808                	sub rax,8
 29129 0001608B 4883EB08                	sub rbx,8
 29130 0001608F 4883C101                	add rcx,1
 29131 00016093 EBE7                    	jmp .L_tc_recycle_frame_loop_09ae
 29132                                  	.L_tc_recycle_frame_done_09ae:
 29133 00016095 4883C308                	add rbx,8
 29134 00016099 4889DC                  	mov rsp,rbx
 29135 0001609C 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29136 000160A0 C9                      	leave
 29137 000160A1 C22000                  	ret AND_KILL_FRAME(2)
 29138                                  .L_lambda_simple_end_07a3:	; new closure is in rax
 29139 000160A4 48890425[FE140000]      	mov qword [free_var_100], rax
 29140 000160AC 48B8-                   	mov rax, sob_void
 29140 000160AE [0000000000000000] 
 29141                                  
 29142 000160B6 4889C7                  	mov rdi, rax
 29143 000160B9 E8C7160000              	call print_sexpr_if_not_void
 29144 000160BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29145 000160C3 E868140000              	call malloc
 29146 000160C8 50                      	push rax
 29147 000160C9 BF00000000              	mov rdi, 8 * 0	; new rib
 29148 000160CE E85D140000              	call malloc
 29149 000160D3 50                      	push rax
 29150 000160D4 BF08000000              	mov rdi, 8 * 1	; extended env
 29151 000160D9 E852140000              	call malloc
 29152 000160DE 488B7D10                	mov rdi, ENV
 29153 000160E2 BE00000000              	mov rsi, 0
 29154 000160E7 BA01000000              	mov rdx, 1
 29155                                  .L_lambda_simple_env_loop_07a7:	; ext_env[i + 1] <-- env[i]
 29156 000160EC 4883FE00                	cmp rsi, 0
 29157 000160F0 7410                    	je .L_lambda_simple_env_end_07a7
 29158 000160F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29159 000160F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29160 000160FA 48FFC6                  	inc rsi
 29161 000160FD 48FFC2                  	inc rdx
 29162 00016100 EBEA                    	jmp .L_lambda_simple_env_loop_07a7
 29163                                  .L_lambda_simple_env_end_07a7:
 29164 00016102 5B                      	pop rbx
 29165 00016103 BE00000000              	mov rsi, 0
 29166                                  .L_lambda_simple_params_loop_07a7:	; copy params
 29167 00016108 4883FE00                	cmp rsi, 0
 29168 0001610C 740E                    	je .L_lambda_simple_params_end_07a7
 29169 0001610E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29170 00016113 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29171 00016117 48FFC6                  	inc rsi
 29172 0001611A EBEC                    	jmp .L_lambda_simple_params_loop_07a7
 29173                                  .L_lambda_simple_params_end_07a7:
 29174 0001611C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29175 0001611F 4889C3                  	mov rbx, rax
 29176 00016122 58                      	pop rax
 29177 00016123 C60004                  	mov byte [rax], T_closure
 29178 00016126 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29179 0001612A 48C74009[37610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a7
 29180 00016132 E9B6040000              	jmp .L_lambda_simple_end_07a7
 29181                                  .L_lambda_simple_code_07a7:	; lambda-simple body
 29182 00016137 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29183 0001613D 740B                    	je .L_lambda_simple_arity_check_ok_089a
 29184 0001613F FF742410                	push qword [rsp + 8 * 2]
 29185 00016143 6A02                    	push 2
 29186 00016145 E99F130000              	jmp L_error_incorrect_arity_simple
 29187                                  .L_lambda_simple_arity_check_ok_089a:
 29188 0001614A C8000000                	enter 0, 0
 29189                                  	; preparing a tail-call
 29190                                  	; preparing a non-tail-call
 29191 0001614E 488B4520                	mov rax, PARAM(0)	; param n
 29192 00016152 50                      	push rax
 29193 00016153 6A01                    	push 1	; arg count
 29194 00016155 488B0425[0F150000]      	mov rax, qword [free_var_101]	; free var make-vector
 29195 0001615D 803805                  	cmp byte [rax], T_undefined
 29196 00016160 0F849D120000            	je L_error_fvar_undefined
 29197 00016166 803804                  	cmp byte [rax], T_closure
 29198 00016169 0F8518130000            	jne L_error_non_closure
 29199 0001616F FF7001                  	push SOB_CLOSURE_ENV(rax)
 29200 00016172 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29201 00016175 50                      	push rax
 29202 00016176 6A01                    	push 1	; arg count
 29203 00016178 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29204 0001617D E8AE130000              	call malloc
 29205 00016182 50                      	push rax
 29206 00016183 BF10000000              	mov rdi, 8 * 2	; new rib
 29207 00016188 E8A3130000              	call malloc
 29208 0001618D 50                      	push rax
 29209 0001618E BF10000000              	mov rdi, 8 * 2	; extended env
 29210 00016193 E898130000              	call malloc
 29211 00016198 488B7D10                	mov rdi, ENV
 29212 0001619C BE00000000              	mov rsi, 0
 29213 000161A1 BA01000000              	mov rdx, 1
 29214                                  .L_lambda_simple_env_loop_07a8:	; ext_env[i + 1] <-- env[i]
 29215 000161A6 4883FE01                	cmp rsi, 1
 29216 000161AA 7410                    	je .L_lambda_simple_env_end_07a8
 29217 000161AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29218 000161B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29219 000161B4 48FFC6                  	inc rsi
 29220 000161B7 48FFC2                  	inc rdx
 29221 000161BA EBEA                    	jmp .L_lambda_simple_env_loop_07a8
 29222                                  .L_lambda_simple_env_end_07a8:
 29223 000161BC 5B                      	pop rbx
 29224 000161BD BE00000000              	mov rsi, 0
 29225                                  .L_lambda_simple_params_loop_07a8:	; copy params
 29226 000161C2 4883FE02                	cmp rsi, 2
 29227 000161C6 740E                    	je .L_lambda_simple_params_end_07a8
 29228 000161C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29229 000161CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29230 000161D1 48FFC6                  	inc rsi
 29231 000161D4 EBEC                    	jmp .L_lambda_simple_params_loop_07a8
 29232                                  .L_lambda_simple_params_end_07a8:
 29233 000161D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29234 000161D9 4889C3                  	mov rbx, rax
 29235 000161DC 58                      	pop rax
 29236 000161DD C60004                  	mov byte [rax], T_closure
 29237 000161E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29238 000161E4 48C74009[F1610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a8
 29239 000161EC E998030000              	jmp .L_lambda_simple_end_07a8
 29240                                  .L_lambda_simple_code_07a8:	; lambda-simple body
 29241 000161F1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29242 000161F7 740B                    	je .L_lambda_simple_arity_check_ok_089b
 29243 000161F9 FF742410                	push qword [rsp + 8 * 2]
 29244 000161FD 6A01                    	push 1
 29245 000161FF E9E5120000              	jmp L_error_incorrect_arity_simple
 29246                                  .L_lambda_simple_arity_check_ok_089b:
 29247 00016204 C8000000                	enter 0, 0
 29248                                  	; preparing a tail-call
 29249 00016208 48B8-                   	mov rax, L_constants + 1993
 29249 0001620A [C907000000000000] 
 29250 00016212 50                      	push rax
 29251 00016213 6A01                    	push 1	; arg count
 29252 00016215 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29253 0001621A E811130000              	call malloc
 29254 0001621F 50                      	push rax
 29255 00016220 BF08000000              	mov rdi, 8 * 1	; new rib
 29256 00016225 E806130000              	call malloc
 29257 0001622A 50                      	push rax
 29258 0001622B BF18000000              	mov rdi, 8 * 3	; extended env
 29259 00016230 E8FB120000              	call malloc
 29260 00016235 488B7D10                	mov rdi, ENV
 29261 00016239 BE00000000              	mov rsi, 0
 29262 0001623E BA01000000              	mov rdx, 1
 29263                                  .L_lambda_simple_env_loop_07a9:	; ext_env[i + 1] <-- env[i]
 29264 00016243 4883FE02                	cmp rsi, 2
 29265 00016247 7410                    	je .L_lambda_simple_env_end_07a9
 29266 00016249 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29267 0001624D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29268 00016251 48FFC6                  	inc rsi
 29269 00016254 48FFC2                  	inc rdx
 29270 00016257 EBEA                    	jmp .L_lambda_simple_env_loop_07a9
 29271                                  .L_lambda_simple_env_end_07a9:
 29272 00016259 5B                      	pop rbx
 29273 0001625A BE00000000              	mov rsi, 0
 29274                                  .L_lambda_simple_params_loop_07a9:	; copy params
 29275 0001625F 4883FE01                	cmp rsi, 1
 29276 00016263 740E                    	je .L_lambda_simple_params_end_07a9
 29277 00016265 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29278 0001626A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29279 0001626E 48FFC6                  	inc rsi
 29280 00016271 EBEC                    	jmp .L_lambda_simple_params_loop_07a9
 29281                                  .L_lambda_simple_params_end_07a9:
 29282 00016273 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29283 00016276 4889C3                  	mov rbx, rax
 29284 00016279 58                      	pop rax
 29285 0001627A C60004                  	mov byte [rax], T_closure
 29286 0001627D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29287 00016281 48C74009[8E620100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07a9
 29288 00016289 E997020000              	jmp .L_lambda_simple_end_07a9
 29289                                  .L_lambda_simple_code_07a9:	; lambda-simple body
 29290 0001628E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29291 00016294 740B                    	je .L_lambda_simple_arity_check_ok_089c
 29292 00016296 FF742410                	push qword [rsp + 8 * 2]
 29293 0001629A 6A01                    	push 1
 29294 0001629C E948120000              	jmp L_error_incorrect_arity_simple
 29295                                  .L_lambda_simple_arity_check_ok_089c:
 29296 000162A1 C8000000                	enter 0, 0
 29297 000162A5 BF08000000              	mov rdi, 8
 29298 000162AA E881120000              	call malloc
 29299 000162AF 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 29300 000162B3 488918                  	mov qword [rax], rbx
 29301 000162B6 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 29302 000162BA 48B8-                   	mov rax, sob_void
 29302 000162BC [0000000000000000] 
 29303                                  
 29304 000162C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29305 000162C9 E862120000              	call malloc
 29306 000162CE 50                      	push rax
 29307 000162CF BF08000000              	mov rdi, 8 * 1	; new rib
 29308 000162D4 E857120000              	call malloc
 29309 000162D9 50                      	push rax
 29310 000162DA BF20000000              	mov rdi, 8 * 4	; extended env
 29311 000162DF E84C120000              	call malloc
 29312 000162E4 488B7D10                	mov rdi, ENV
 29313 000162E8 BE00000000              	mov rsi, 0
 29314 000162ED BA01000000              	mov rdx, 1
 29315                                  .L_lambda_simple_env_loop_07aa:	; ext_env[i + 1] <-- env[i]
 29316 000162F2 4883FE03                	cmp rsi, 3
 29317 000162F6 7410                    	je .L_lambda_simple_env_end_07aa
 29318 000162F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29319 000162FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29320 00016300 48FFC6                  	inc rsi
 29321 00016303 48FFC2                  	inc rdx
 29322 00016306 EBEA                    	jmp .L_lambda_simple_env_loop_07aa
 29323                                  .L_lambda_simple_env_end_07aa:
 29324 00016308 5B                      	pop rbx
 29325 00016309 BE00000000              	mov rsi, 0
 29326                                  .L_lambda_simple_params_loop_07aa:	; copy params
 29327 0001630E 4883FE01                	cmp rsi, 1
 29328 00016312 740E                    	je .L_lambda_simple_params_end_07aa
 29329 00016314 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29330 00016319 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29331 0001631D 48FFC6                  	inc rsi
 29332 00016320 EBEC                    	jmp .L_lambda_simple_params_loop_07aa
 29333                                  .L_lambda_simple_params_end_07aa:
 29334 00016322 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29335 00016325 4889C3                  	mov rbx, rax
 29336 00016328 58                      	pop rax
 29337 00016329 C60004                  	mov byte [rax], T_closure
 29338 0001632C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29339 00016330 48C74009[3D630100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07aa
 29340 00016338 E95F010000              	jmp .L_lambda_simple_end_07aa
 29341                                  .L_lambda_simple_code_07aa:	; lambda-simple body
 29342 0001633D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29343 00016343 740B                    	je .L_lambda_simple_arity_check_ok_089d
 29344 00016345 FF742410                	push qword [rsp + 8 * 2]
 29345 00016349 6A01                    	push 1
 29346 0001634B E999110000              	jmp L_error_incorrect_arity_simple
 29347                                  .L_lambda_simple_arity_check_ok_089d:
 29348 00016350 C8000000                	enter 0, 0
 29349                                  	; preparing a non-tail-call
 29350 00016354 488B4510                	mov rax, ENV
 29351 00016358 488B4010                	mov rax, qword [rax + 8 * 2]
 29352 0001635C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 29353 0001635F 50                      	push rax
 29354 00016360 488B4520                	mov rax, PARAM(0)	; param i
 29355 00016364 50                      	push rax
 29356 00016365 6A02                    	push 2	; arg count
 29357 00016367 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 29358 0001636F 803805                  	cmp byte [rax], T_undefined
 29359 00016372 0F848B100000            	je L_error_fvar_undefined
 29360 00016378 803804                  	cmp byte [rax], T_closure
 29361 0001637B 0F8506110000            	jne L_error_non_closure
 29362 00016381 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29363 00016384 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29364 00016387 483D[02000000]          	cmp rax, sob_boolean_false
 29365 0001638D 0F84FA000000            	je .L_if_else_0554
 29366                                  	; preparing a non-tail-call
 29367                                  	; preparing a non-tail-call
 29368 00016393 488B4520                	mov rax, PARAM(0)	; param i
 29369 00016397 50                      	push rax
 29370 00016398 6A01                    	push 1	; arg count
 29371 0001639A 488B4510                	mov rax, ENV
 29372 0001639E 488B4010                	mov rax, qword [rax + 8 * 2]
 29373 000163A2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 29374 000163A6 803804                  	cmp byte [rax], T_closure
 29375 000163A9 0F85D8100000            	jne L_error_non_closure
 29376 000163AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 29377 000163B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29378 000163B5 50                      	push rax
 29379 000163B6 488B4520                	mov rax, PARAM(0)	; param i
 29380 000163BA 50                      	push rax
 29381 000163BB 488B4510                	mov rax, ENV
 29382 000163BF 488B4008                	mov rax, qword [rax + 8 * 1]
 29383 000163C3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 29384 000163C6 50                      	push rax
 29385 000163C7 6A03                    	push 3	; arg count
 29386 000163C9 488B0425[1D180000]      	mov rax, qword [free_var_147]	; free var vector-set!
 29387 000163D1 803805                  	cmp byte [rax], T_undefined
 29388 000163D4 0F8429100000            	je L_error_fvar_undefined
 29389 000163DA 803804                  	cmp byte [rax], T_closure
 29390 000163DD 0F85A4100000            	jne L_error_non_closure
 29391 000163E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29392 000163E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29393                                  
 29394                                  	; preparing a tail-call
 29395                                  	; preparing a non-tail-call
 29396 000163E9 48B8-                   	mov rax, L_constants + 2270
 29396 000163EB [DE08000000000000] 
 29397 000163F3 50                      	push rax
 29398 000163F4 488B4520                	mov rax, PARAM(0)	; param i
 29399 000163F8 50                      	push rax
 29400 000163F9 6A02                    	push 2	; arg count
 29401 000163FB 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 29402 00016403 803805                  	cmp byte [rax], T_undefined
 29403 00016406 0F84F70F0000            	je L_error_fvar_undefined
 29404 0001640C 803804                  	cmp byte [rax], T_closure
 29405 0001640F 0F8572100000            	jne L_error_non_closure
 29406 00016415 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29407 00016418 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29408 0001641B 50                      	push rax
 29409 0001641C 6A01                    	push 1	; arg count
 29410 0001641E 488B4510                	mov rax, ENV
 29411 00016422 488B00                  	mov rax, qword [rax + 8 * 0]
 29412 00016425 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 29413 00016428 488B00                  	mov rax, qword [rax]
 29414 0001642B 803804                  	cmp byte [rax], T_closure
 29415 0001642E 0F8553100000            	jne L_error_non_closure
 29416 00016434 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29417 00016437 FF7508                  	push qword [rbp + 8 *1]
 29418 0001643A 4989C0                  	mov r8, rax
 29419 0001643D 488B5D18                	mov rbx, COUNT
 29420 00016441 4883C303                	add rbx,3
 29421 00016445 48C1E303                	shl rbx,3
 29422 00016449 4801EB                  	add rbx, rbp
 29423 0001644C 488B6D00                	mov rbp, [rbp]
 29424 00016450 B900000000              	mov rcx,0
 29425 00016455 BA04000000              	mov rdx, 4
 29426 0001645A 4889D0                  	mov rax, rdx
 29427 0001645D 48FFC8                  	dec rax
 29428 00016460 48C1E003                	shl rax,3
 29429 00016464 4801E0                  	add rax, rsp
 29430                                  	.L_tc_recycle_frame_loop_09b4:
 29431 00016467 4839D1                  	cmp rcx, rdx
 29432 0001646A 7414                    	je .L_tc_recycle_frame_done_09b4
 29433 0001646C 4C8B08                  	mov r9, qword [rax]
 29434 0001646F 4C890B                  	mov qword [rbx],r9
 29435 00016472 4883E808                	sub rax,8
 29436 00016476 4883EB08                	sub rbx,8
 29437 0001647A 4883C101                	add rcx,1
 29438 0001647E EBE7                    	jmp .L_tc_recycle_frame_loop_09b4
 29439                                  	.L_tc_recycle_frame_done_09b4:
 29440 00016480 4883C308                	add rbx,8
 29441 00016484 4889DC                  	mov rsp,rbx
 29442 00016487 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29443 0001648B EB0B                    	jmp .L_if_end_05e2
 29444                                  .L_if_else_0554:
 29445 0001648D 488B4510                	mov rax, ENV
 29446 00016491 488B4008                	mov rax, qword [rax + 8 * 1]
 29447 00016495 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 29448                                  .L_if_end_05e2:
 29449 00016498 C9                      	leave
 29450 00016499 C21800                  	ret AND_KILL_FRAME(1)
 29451                                  .L_lambda_simple_end_07aa:	; new closure is in rax
 29452 0001649C 50                      	push rax
 29453 0001649D 488B4520                	mov rax, PARAM(0)	; param run
 29454 000164A1 8F00                    	pop qword [rax]
 29455 000164A3 48B8-                   	mov rax, sob_void
 29455 000164A5 [0000000000000000] 
 29456                                  
 29457                                  	; preparing a tail-call
 29458 000164AD 48B8-                   	mov rax, L_constants + 2135
 29458 000164AF [5708000000000000] 
 29459 000164B7 50                      	push rax
 29460 000164B8 6A01                    	push 1	; arg count
 29461 000164BA 488B4520                	mov rax, PARAM(0)	; param run
 29462 000164BE 488B00                  	mov rax, qword [rax]
 29463 000164C1 803804                  	cmp byte [rax], T_closure
 29464 000164C4 0F85BD0F0000            	jne L_error_non_closure
 29465 000164CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 29466 000164CD FF7508                  	push qword [rbp + 8 *1]
 29467 000164D0 4989C0                  	mov r8, rax
 29468 000164D3 488B5D18                	mov rbx, COUNT
 29469 000164D7 4883C303                	add rbx,3
 29470 000164DB 48C1E303                	shl rbx,3
 29471 000164DF 4801EB                  	add rbx, rbp
 29472 000164E2 488B6D00                	mov rbp, [rbp]
 29473 000164E6 B900000000              	mov rcx,0
 29474 000164EB BA04000000              	mov rdx, 4
 29475 000164F0 4889D0                  	mov rax, rdx
 29476 000164F3 48FFC8                  	dec rax
 29477 000164F6 48C1E003                	shl rax,3
 29478 000164FA 4801E0                  	add rax, rsp
 29479                                  	.L_tc_recycle_frame_loop_09b5:
 29480 000164FD 4839D1                  	cmp rcx, rdx
 29481 00016500 7414                    	je .L_tc_recycle_frame_done_09b5
 29482 00016502 4C8B08                  	mov r9, qword [rax]
 29483 00016505 4C890B                  	mov qword [rbx],r9
 29484 00016508 4883E808                	sub rax,8
 29485 0001650C 4883EB08                	sub rbx,8
 29486 00016510 4883C101                	add rcx,1
 29487 00016514 EBE7                    	jmp .L_tc_recycle_frame_loop_09b5
 29488                                  	.L_tc_recycle_frame_done_09b5:
 29489 00016516 4883C308                	add rbx,8
 29490 0001651A 4889DC                  	mov rsp,rbx
 29491 0001651D 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29492 00016521 C9                      	leave
 29493 00016522 C21800                  	ret AND_KILL_FRAME(1)
 29494                                  .L_lambda_simple_end_07a9:	; new closure is in rax
 29495 00016525 803804                  	cmp byte [rax], T_closure
 29496 00016528 0F85590F0000            	jne L_error_non_closure
 29497 0001652E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29498 00016531 FF7508                  	push qword [rbp + 8 *1]
 29499 00016534 4989C0                  	mov r8, rax
 29500 00016537 488B5D18                	mov rbx, COUNT
 29501 0001653B 4883C303                	add rbx,3
 29502 0001653F 48C1E303                	shl rbx,3
 29503 00016543 4801EB                  	add rbx, rbp
 29504 00016546 488B6D00                	mov rbp, [rbp]
 29505 0001654A B900000000              	mov rcx,0
 29506 0001654F BA04000000              	mov rdx, 4
 29507 00016554 4889D0                  	mov rax, rdx
 29508 00016557 48FFC8                  	dec rax
 29509 0001655A 48C1E003                	shl rax,3
 29510 0001655E 4801E0                  	add rax, rsp
 29511                                  	.L_tc_recycle_frame_loop_09b3:
 29512 00016561 4839D1                  	cmp rcx, rdx
 29513 00016564 7414                    	je .L_tc_recycle_frame_done_09b3
 29514 00016566 4C8B08                  	mov r9, qword [rax]
 29515 00016569 4C890B                  	mov qword [rbx],r9
 29516 0001656C 4883E808                	sub rax,8
 29517 00016570 4883EB08                	sub rbx,8
 29518 00016574 4883C101                	add rcx,1
 29519 00016578 EBE7                    	jmp .L_tc_recycle_frame_loop_09b3
 29520                                  	.L_tc_recycle_frame_done_09b3:
 29521 0001657A 4883C308                	add rbx,8
 29522 0001657E 4889DC                  	mov rsp,rbx
 29523 00016581 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29524 00016585 C9                      	leave
 29525 00016586 C21800                  	ret AND_KILL_FRAME(1)
 29526                                  .L_lambda_simple_end_07a8:	; new closure is in rax
 29527 00016589 803804                  	cmp byte [rax], T_closure
 29528 0001658C 0F85F50E0000            	jne L_error_non_closure
 29529 00016592 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29530 00016595 FF7508                  	push qword [rbp + 8 *1]
 29531 00016598 4989C0                  	mov r8, rax
 29532 0001659B 488B5D18                	mov rbx, COUNT
 29533 0001659F 4883C303                	add rbx,3
 29534 000165A3 48C1E303                	shl rbx,3
 29535 000165A7 4801EB                  	add rbx, rbp
 29536 000165AA 488B6D00                	mov rbp, [rbp]
 29537 000165AE B900000000              	mov rcx,0
 29538 000165B3 BA04000000              	mov rdx, 4
 29539 000165B8 4889D0                  	mov rax, rdx
 29540 000165BB 48FFC8                  	dec rax
 29541 000165BE 48C1E003                	shl rax,3
 29542 000165C2 4801E0                  	add rax, rsp
 29543                                  	.L_tc_recycle_frame_loop_09b2:
 29544 000165C5 4839D1                  	cmp rcx, rdx
 29545 000165C8 7414                    	je .L_tc_recycle_frame_done_09b2
 29546 000165CA 4C8B08                  	mov r9, qword [rax]
 29547 000165CD 4C890B                  	mov qword [rbx],r9
 29548 000165D0 4883E808                	sub rax,8
 29549 000165D4 4883EB08                	sub rbx,8
 29550 000165D8 4883C101                	add rcx,1
 29551 000165DC EBE7                    	jmp .L_tc_recycle_frame_loop_09b2
 29552                                  	.L_tc_recycle_frame_done_09b2:
 29553 000165DE 4883C308                	add rbx,8
 29554 000165E2 4889DC                  	mov rsp,rbx
 29555 000165E5 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29556 000165E9 C9                      	leave
 29557 000165EA C22000                  	ret AND_KILL_FRAME(2)
 29558                                  .L_lambda_simple_end_07a7:	; new closure is in rax
 29559 000165ED 48890425[20150000]      	mov qword [free_var_102], rax
 29560 000165F5 48B8-                   	mov rax, sob_void
 29560 000165F7 [0000000000000000] 
 29561                                  
 29562 000165FF 4889C7                  	mov rdi, rax
 29563 00016602 E87E110000              	call print_sexpr_if_not_void
 29564 00016607 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29565 0001660C E81F0F0000              	call malloc
 29566 00016611 50                      	push rax
 29567 00016612 BF00000000              	mov rdi, 8 * 0	; new rib
 29568 00016617 E8140F0000              	call malloc
 29569 0001661C 50                      	push rax
 29570 0001661D BF08000000              	mov rdi, 8 * 1	; extended env
 29571 00016622 E8090F0000              	call malloc
 29572 00016627 488B7D10                	mov rdi, ENV
 29573 0001662B BE00000000              	mov rsi, 0
 29574 00016630 BA01000000              	mov rdx, 1
 29575                                  .L_lambda_simple_env_loop_07ab:	; ext_env[i + 1] <-- env[i]
 29576 00016635 4883FE00                	cmp rsi, 0
 29577 00016639 7410                    	je .L_lambda_simple_env_end_07ab
 29578 0001663B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29579 0001663F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29580 00016643 48FFC6                  	inc rsi
 29581 00016646 48FFC2                  	inc rdx
 29582 00016649 EBEA                    	jmp .L_lambda_simple_env_loop_07ab
 29583                                  .L_lambda_simple_env_end_07ab:
 29584 0001664B 5B                      	pop rbx
 29585 0001664C BE00000000              	mov rsi, 0
 29586                                  .L_lambda_simple_params_loop_07ab:	; copy params
 29587 00016651 4883FE00                	cmp rsi, 0
 29588 00016655 740E                    	je .L_lambda_simple_params_end_07ab
 29589 00016657 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29590 0001665C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29591 00016660 48FFC6                  	inc rsi
 29592 00016663 EBEC                    	jmp .L_lambda_simple_params_loop_07ab
 29593                                  .L_lambda_simple_params_end_07ab:
 29594 00016665 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29595 00016668 4889C3                  	mov rbx, rax
 29596 0001666B 58                      	pop rax
 29597 0001666C C60004                  	mov byte [rax], T_closure
 29598 0001666F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29599 00016673 48C74009[80660100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07ab
 29600 0001667B E98F020000              	jmp .L_lambda_simple_end_07ab
 29601                                  .L_lambda_simple_code_07ab:	; lambda-simple body
 29602 00016680 48837C241003            	cmp qword [rsp + 8 * 2], 3
 29603 00016686 740B                    	je .L_lambda_simple_arity_check_ok_089e
 29604 00016688 FF742410                	push qword [rsp + 8 * 2]
 29605 0001668C 6A03                    	push 3
 29606 0001668E E9560E0000              	jmp L_error_incorrect_arity_simple
 29607                                  .L_lambda_simple_arity_check_ok_089e:
 29608 00016693 C8000000                	enter 0, 0
 29609                                  	; preparing a non-tail-call
 29610 00016697 488B4530                	mov rax, PARAM(2)	; param n
 29611 0001669B 50                      	push rax
 29612 0001669C 6A01                    	push 1	; arg count
 29613 0001669E 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 29614 000166A6 803805                  	cmp byte [rax], T_undefined
 29615 000166A9 0F84540D0000            	je L_error_fvar_undefined
 29616 000166AF 803804                  	cmp byte [rax], T_closure
 29617 000166B2 0F85CF0D0000            	jne L_error_non_closure
 29618 000166B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29619 000166BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 29620 000166BE 483D[02000000]          	cmp rax, sob_boolean_false
 29621 000166C4 740F                    	je .L_if_else_0557
 29622 000166C6 48B8-                   	mov rax, L_constants + 3485
 29622 000166C8 [9D0D000000000000] 
 29623 000166D0 E936020000              	jmp .L_if_end_05e5
 29624                                  .L_if_else_0557:
 29625                                  	; preparing a non-tail-call
 29626 000166D5 488B4528                	mov rax, PARAM(1)	; param b
 29627 000166D9 50                      	push rax
 29628 000166DA 488B4520                	mov rax, PARAM(0)	; param a
 29629 000166DE 50                      	push rax
 29630 000166DF 6A02                    	push 2	; arg count
 29631 000166E1 488B0425[9E0E0000]      	mov rax, qword [free_var_4]	; free var <
 29632 000166E9 803805                  	cmp byte [rax], T_undefined
 29633 000166EC 0F84110D0000            	je L_error_fvar_undefined
 29634 000166F2 803804                  	cmp byte [rax], T_closure
 29635 000166F5 0F858C0D0000            	jne L_error_non_closure
 29636 000166FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 29637 000166FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 29638 00016701 483D[02000000]          	cmp rax, sob_boolean_false
 29639 00016707 0F84DD000000            	je .L_if_else_0556
 29640                                  	; preparing a tail-call
 29641                                  	; preparing a non-tail-call
 29642 0001670D 488B4530                	mov rax, PARAM(2)	; param n
 29643 00016711 50                      	push rax
 29644                                  	; preparing a non-tail-call
 29645 00016712 488B4520                	mov rax, PARAM(0)	; param a
 29646 00016716 50                      	push rax
 29647 00016717 488B4528                	mov rax, PARAM(1)	; param b
 29648 0001671B 50                      	push rax
 29649 0001671C 6A02                    	push 2	; arg count
 29650 0001671E 488B0425[8D0E0000]      	mov rax, qword [free_var_3]	; free var /
 29651 00016726 803805                  	cmp byte [rax], T_undefined
 29652 00016729 0F84D40C0000            	je L_error_fvar_undefined
 29653 0001672F 803804                  	cmp byte [rax], T_closure
 29654 00016732 0F854F0D0000            	jne L_error_non_closure
 29655 00016738 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29656 0001673B FF5009                  	call SOB_CLOSURE_CODE(rax)
 29657 0001673E 50                      	push rax
 29658 0001673F 488B4520                	mov rax, PARAM(0)	; param a
 29659 00016743 50                      	push rax
 29660 00016744 6A03                    	push 3	; arg count
 29661 00016746 488B0425[CB140000]      	mov rax, qword [free_var_97]	; free var logarithm
 29662 0001674E 803805                  	cmp byte [rax], T_undefined
 29663 00016751 0F84AC0C0000            	je L_error_fvar_undefined
 29664 00016757 803804                  	cmp byte [rax], T_closure
 29665 0001675A 0F85270D0000            	jne L_error_non_closure
 29666 00016760 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29667 00016763 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29668 00016766 50                      	push rax
 29669 00016767 48B8-                   	mov rax, L_constants + 3485
 29669 00016769 [9D0D000000000000] 
 29670 00016771 50                      	push rax
 29671 00016772 6A02                    	push 2	; arg count
 29672 00016774 488B0425[6B0E0000]      	mov rax, qword [free_var_1]	; free var +
 29673 0001677C 803805                  	cmp byte [rax], T_undefined
 29674 0001677F 0F847E0C0000            	je L_error_fvar_undefined
 29675 00016785 803804                  	cmp byte [rax], T_closure
 29676 00016788 0F85F90C0000            	jne L_error_non_closure
 29677 0001678E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29678 00016791 FF7508                  	push qword [rbp + 8 *1]
 29679 00016794 4989C0                  	mov r8, rax
 29680 00016797 488B5D18                	mov rbx, COUNT
 29681 0001679B 4883C303                	add rbx,3
 29682 0001679F 48C1E303                	shl rbx,3
 29683 000167A3 4801EB                  	add rbx, rbp
 29684 000167A6 488B6D00                	mov rbp, [rbp]
 29685 000167AA B900000000              	mov rcx,0
 29686 000167AF BA05000000              	mov rdx, 5
 29687 000167B4 4889D0                  	mov rax, rdx
 29688 000167B7 48FFC8                  	dec rax
 29689 000167BA 48C1E003                	shl rax,3
 29690 000167BE 4801E0                  	add rax, rsp
 29691                                  	.L_tc_recycle_frame_loop_09b6:
 29692 000167C1 4839D1                  	cmp rcx, rdx
 29693 000167C4 7414                    	je .L_tc_recycle_frame_done_09b6
 29694 000167C6 4C8B08                  	mov r9, qword [rax]
 29695 000167C9 4C890B                  	mov qword [rbx],r9
 29696 000167CC 4883E808                	sub rax,8
 29697 000167D0 4883EB08                	sub rbx,8
 29698 000167D4 4883C101                	add rcx,1
 29699 000167D8 EBE7                    	jmp .L_tc_recycle_frame_loop_09b6
 29700                                  	.L_tc_recycle_frame_done_09b6:
 29701 000167DA 4883C308                	add rbx,8
 29702 000167DE 4889DC                  	mov rsp,rbx
 29703 000167E1 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29704 000167E5 E921010000              	jmp .L_if_end_05e4
 29705                                  .L_if_else_0556:
 29706                                  	; preparing a non-tail-call
 29707 000167EA 488B4528                	mov rax, PARAM(1)	; param b
 29708 000167EE 50                      	push rax
 29709 000167EF 488B4520                	mov rax, PARAM(0)	; param a
 29710 000167F3 50                      	push rax
 29711 000167F4 6A02                    	push 2	; arg count
 29712 000167F6 488B0425[C00E0000]      	mov rax, qword [free_var_6]	; free var =
 29713 000167FE 803805                  	cmp byte [rax], T_undefined
 29714 00016801 0F84FC0B0000            	je L_error_fvar_undefined
 29715 00016807 803804                  	cmp byte [rax], T_closure
 29716 0001680A 0F85770C0000            	jne L_error_non_closure
 29717 00016810 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29718 00016813 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29719 00016816 483D[02000000]          	cmp rax, sob_boolean_false
 29720 0001681C 740F                    	je .L_if_else_0555
 29721 0001681E 48B8-                   	mov rax, L_constants + 3485
 29721 00016820 [9D0D000000000000] 
 29722 00016828 E9DE000000              	jmp .L_if_end_05e3
 29723                                  .L_if_else_0555:
 29724                                  	; preparing a tail-call
 29725                                  	; preparing a non-tail-call
 29726                                  	; preparing a non-tail-call
 29727 0001682D 48B8-                   	mov rax, L_constants + 2270
 29727 0001682F [DE08000000000000] 
 29728 00016837 50                      	push rax
 29729 00016838 488B4530                	mov rax, PARAM(2)	; param n
 29730 0001683C 50                      	push rax
 29731 0001683D 6A02                    	push 2	; arg count
 29732 0001683F 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 29733 00016847 803805                  	cmp byte [rax], T_undefined
 29734 0001684A 0F84B30B0000            	je L_error_fvar_undefined
 29735 00016850 803804                  	cmp byte [rax], T_closure
 29736 00016853 0F852E0C0000            	jne L_error_non_closure
 29737 00016859 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29738 0001685C FF5009                  	call SOB_CLOSURE_CODE(rax)
 29739 0001685F 50                      	push rax
 29740 00016860 488B4520                	mov rax, PARAM(0)	; param a
 29741 00016864 50                      	push rax
 29742 00016865 488B4528                	mov rax, PARAM(1)	; param b
 29743 00016869 50                      	push rax
 29744 0001686A 6A03                    	push 3	; arg count
 29745 0001686C 488B0425[CB140000]      	mov rax, qword [free_var_97]	; free var logarithm
 29746 00016874 803805                  	cmp byte [rax], T_undefined
 29747 00016877 0F84860B0000            	je L_error_fvar_undefined
 29748 0001687D 803804                  	cmp byte [rax], T_closure
 29749 00016880 0F85010C0000            	jne L_error_non_closure
 29750 00016886 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29751 00016889 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29752 0001688C 50                      	push rax
 29753 0001688D 48B8-                   	mov rax, L_constants + 3485
 29753 0001688F [9D0D000000000000] 
 29754 00016897 50                      	push rax
 29755 00016898 6A02                    	push 2	; arg count
 29756 0001689A 488B0425[8D0E0000]      	mov rax, qword [free_var_3]	; free var /
 29757 000168A2 803805                  	cmp byte [rax], T_undefined
 29758 000168A5 0F84580B0000            	je L_error_fvar_undefined
 29759 000168AB 803804                  	cmp byte [rax], T_closure
 29760 000168AE 0F85D30B0000            	jne L_error_non_closure
 29761 000168B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29762 000168B7 FF7508                  	push qword [rbp + 8 *1]
 29763 000168BA 4989C0                  	mov r8, rax
 29764 000168BD 488B5D18                	mov rbx, COUNT
 29765 000168C1 4883C303                	add rbx,3
 29766 000168C5 48C1E303                	shl rbx,3
 29767 000168C9 4801EB                  	add rbx, rbp
 29768 000168CC 488B6D00                	mov rbp, [rbp]
 29769 000168D0 B900000000              	mov rcx,0
 29770 000168D5 BA05000000              	mov rdx, 5
 29771 000168DA 4889D0                  	mov rax, rdx
 29772 000168DD 48FFC8                  	dec rax
 29773 000168E0 48C1E003                	shl rax,3
 29774 000168E4 4801E0                  	add rax, rsp
 29775                                  	.L_tc_recycle_frame_loop_09b7:
 29776 000168E7 4839D1                  	cmp rcx, rdx
 29777 000168EA 7414                    	je .L_tc_recycle_frame_done_09b7
 29778 000168EC 4C8B08                  	mov r9, qword [rax]
 29779 000168EF 4C890B                  	mov qword [rbx],r9
 29780 000168F2 4883E808                	sub rax,8
 29781 000168F6 4883EB08                	sub rbx,8
 29782 000168FA 4883C101                	add rcx,1
 29783 000168FE EBE7                    	jmp .L_tc_recycle_frame_loop_09b7
 29784                                  	.L_tc_recycle_frame_done_09b7:
 29785 00016900 4883C308                	add rbx,8
 29786 00016904 4889DC                  	mov rsp,rbx
 29787 00016907 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29788                                  .L_if_end_05e3:
 29789                                  .L_if_end_05e4:
 29790                                  .L_if_end_05e5:
 29791 0001690B C9                      	leave
 29792 0001690C C22800                  	ret AND_KILL_FRAME(3)
 29793                                  .L_lambda_simple_end_07ab:	; new closure is in rax
 29794 0001690F 48890425[CB140000]      	mov qword [free_var_97], rax
 29795 00016917 48B8-                   	mov rax, sob_void
 29795 00016919 [0000000000000000] 
 29796                                  
 29797 00016921 4889C7                  	mov rdi, rax
 29798 00016924 E85C0E0000              	call print_sexpr_if_not_void
 29799 00016929 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29800 0001692E E8FD0B0000              	call malloc
 29801 00016933 50                      	push rax
 29802 00016934 BF00000000              	mov rdi, 8 * 0	; new rib
 29803 00016939 E8F20B0000              	call malloc
 29804 0001693E 50                      	push rax
 29805 0001693F BF08000000              	mov rdi, 8 * 1	; extended env
 29806 00016944 E8E70B0000              	call malloc
 29807 00016949 488B7D10                	mov rdi, ENV
 29808 0001694D BE00000000              	mov rsi, 0
 29809 00016952 BA01000000              	mov rdx, 1
 29810                                  .L_lambda_simple_env_loop_07ac:	; ext_env[i + 1] <-- env[i]
 29811 00016957 4883FE00                	cmp rsi, 0
 29812 0001695B 7410                    	je .L_lambda_simple_env_end_07ac
 29813 0001695D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29814 00016961 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29815 00016965 48FFC6                  	inc rsi
 29816 00016968 48FFC2                  	inc rdx
 29817 0001696B EBEA                    	jmp .L_lambda_simple_env_loop_07ac
 29818                                  .L_lambda_simple_env_end_07ac:
 29819 0001696D 5B                      	pop rbx
 29820 0001696E BE00000000              	mov rsi, 0
 29821                                  .L_lambda_simple_params_loop_07ac:	; copy params
 29822 00016973 4883FE00                	cmp rsi, 0
 29823 00016977 740E                    	je .L_lambda_simple_params_end_07ac
 29824 00016979 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29825 0001697E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29826 00016982 48FFC6                  	inc rsi
 29827 00016985 EBEC                    	jmp .L_lambda_simple_params_loop_07ac
 29828                                  .L_lambda_simple_params_end_07ac:
 29829 00016987 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29830 0001698A 4889C3                  	mov rbx, rax
 29831 0001698D 58                      	pop rax
 29832 0001698E C60004                  	mov byte [rax], T_closure
 29833 00016991 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29834 00016995 48C74009[A2690100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07ac
 29835 0001699D E999000000              	jmp .L_lambda_simple_end_07ac
 29836                                  .L_lambda_simple_code_07ac:	; lambda-simple body
 29837 000169A2 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29838 000169A8 740B                    	je .L_lambda_simple_arity_check_ok_089f
 29839 000169AA FF742410                	push qword [rsp + 8 * 2]
 29840 000169AE 6A00                    	push 0
 29841 000169B0 E9340B0000              	jmp L_error_incorrect_arity_simple
 29842                                  .L_lambda_simple_arity_check_ok_089f:
 29843 000169B5 C8000000                	enter 0, 0
 29844                                  	; preparing a tail-call
 29845 000169B9 48B8-                   	mov rax, L_constants + 3510
 29845 000169BB [B60D000000000000] 
 29846 000169C3 50                      	push rax
 29847 000169C4 6A01                    	push 1	; arg count
 29848 000169C6 488B0425[61180000]      	mov rax, qword [free_var_151]	; free var write-char
 29849 000169CE 803805                  	cmp byte [rax], T_undefined
 29850 000169D1 0F842C0A0000            	je L_error_fvar_undefined
 29851 000169D7 803804                  	cmp byte [rax], T_closure
 29852 000169DA 0F85A70A0000            	jne L_error_non_closure
 29853 000169E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29854 000169E3 FF7508                  	push qword [rbp + 8 *1]
 29855 000169E6 4989C0                  	mov r8, rax
 29856 000169E9 488B5D18                	mov rbx, COUNT
 29857 000169ED 4883C303                	add rbx,3
 29858 000169F1 48C1E303                	shl rbx,3
 29859 000169F5 4801EB                  	add rbx, rbp
 29860 000169F8 488B6D00                	mov rbp, [rbp]
 29861 000169FC B900000000              	mov rcx,0
 29862 00016A01 BA04000000              	mov rdx, 4
 29863 00016A06 4889D0                  	mov rax, rdx
 29864 00016A09 48FFC8                  	dec rax
 29865 00016A0C 48C1E003                	shl rax,3
 29866 00016A10 4801E0                  	add rax, rsp
 29867                                  	.L_tc_recycle_frame_loop_09b8:
 29868 00016A13 4839D1                  	cmp rcx, rdx
 29869 00016A16 7414                    	je .L_tc_recycle_frame_done_09b8
 29870 00016A18 4C8B08                  	mov r9, qword [rax]
 29871 00016A1B 4C890B                  	mov qword [rbx],r9
 29872 00016A1E 4883E808                	sub rax,8
 29873 00016A22 4883EB08                	sub rbx,8
 29874 00016A26 4883C101                	add rcx,1
 29875 00016A2A EBE7                    	jmp .L_tc_recycle_frame_loop_09b8
 29876                                  	.L_tc_recycle_frame_done_09b8:
 29877 00016A2C 4883C308                	add rbx,8
 29878 00016A30 4889DC                  	mov rsp,rbx
 29879 00016A33 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 29880 00016A37 C9                      	leave
 29881 00016A38 C21000                  	ret AND_KILL_FRAME(0)
 29882                                  .L_lambda_simple_end_07ac:	; new closure is in rax
 29883 00016A3B 48890425[53150000]      	mov qword [free_var_105], rax
 29884 00016A43 48B8-                   	mov rax, sob_void
 29884 00016A45 [0000000000000000] 
 29885                                  
 29886 00016A4D 4889C7                  	mov rdi, rax
 29887 00016A50 E8300D0000              	call print_sexpr_if_not_void
 29888 00016A55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29889 00016A5A E8D10A0000              	call malloc
 29890 00016A5F 50                      	push rax
 29891 00016A60 BF00000000              	mov rdi, 8 * 0	; new rib
 29892 00016A65 E8C60A0000              	call malloc
 29893 00016A6A 50                      	push rax
 29894 00016A6B BF08000000              	mov rdi, 8 * 1	; extended env
 29895 00016A70 E8BB0A0000              	call malloc
 29896 00016A75 488B7D10                	mov rdi, ENV
 29897 00016A79 BE00000000              	mov rsi, 0
 29898 00016A7E BA01000000              	mov rdx, 1
 29899                                  .L_lambda_simple_env_loop_07ad:	; ext_env[i + 1] <-- env[i]
 29900 00016A83 4883FE00                	cmp rsi, 0
 29901 00016A87 7410                    	je .L_lambda_simple_env_end_07ad
 29902 00016A89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29903 00016A8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29904 00016A91 48FFC6                  	inc rsi
 29905 00016A94 48FFC2                  	inc rdx
 29906 00016A97 EBEA                    	jmp .L_lambda_simple_env_loop_07ad
 29907                                  .L_lambda_simple_env_end_07ad:
 29908 00016A99 5B                      	pop rbx
 29909 00016A9A BE00000000              	mov rsi, 0
 29910                                  .L_lambda_simple_params_loop_07ad:	; copy params
 29911 00016A9F 4883FE00                	cmp rsi, 0
 29912 00016AA3 740E                    	je .L_lambda_simple_params_end_07ad
 29913 00016AA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29914 00016AAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29915 00016AAE 48FFC6                  	inc rsi
 29916 00016AB1 EBEC                    	jmp .L_lambda_simple_params_loop_07ad
 29917                                  .L_lambda_simple_params_end_07ad:
 29918 00016AB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29919 00016AB6 4889C3                  	mov rbx, rax
 29920 00016AB9 58                      	pop rax
 29921 00016ABA C60004                  	mov byte [rax], T_closure
 29922 00016ABD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29923 00016AC1 48C74009[CB6A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07ad
 29924 00016AC9 EB25                    	jmp .L_lambda_simple_end_07ad
 29925                                  .L_lambda_simple_code_07ad:	; lambda-simple body
 29926 00016ACB 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29927 00016AD1 740B                    	je .L_lambda_simple_arity_check_ok_08a0
 29928 00016AD3 FF742410                	push qword [rsp + 8 * 2]
 29929 00016AD7 6A00                    	push 0
 29930 00016AD9 E90B0A0000              	jmp L_error_incorrect_arity_simple
 29931                                  .L_lambda_simple_arity_check_ok_08a0:
 29932 00016ADE C8000000                	enter 0, 0
 29933 00016AE2 48B8-                   	mov rax, L_constants + 0
 29933 00016AE4 [0000000000000000] 
 29934 00016AEC C9                      	leave
 29935 00016AED C21000                  	ret AND_KILL_FRAME(0)
 29936                                  .L_lambda_simple_end_07ad:	; new closure is in rax
 29937 00016AF0 48890425[3F180000]      	mov qword [free_var_149], rax
 29938 00016AF8 48B8-                   	mov rax, sob_void
 29938 00016AFA [0000000000000000] 
 29939                                  
 29940 00016B02 4889C7                  	mov rdi, rax
 29941 00016B05 E87B0C0000              	call print_sexpr_if_not_void
 29942 00016B0A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29943 00016B0F E81C0A0000              	call malloc
 29944 00016B14 50                      	push rax
 29945 00016B15 BF00000000              	mov rdi, 8 * 0	; new rib
 29946 00016B1A E8110A0000              	call malloc
 29947 00016B1F 50                      	push rax
 29948 00016B20 BF08000000              	mov rdi, 8 * 1	; extended env
 29949 00016B25 E8060A0000              	call malloc
 29950 00016B2A 488B7D10                	mov rdi, ENV
 29951 00016B2E BE00000000              	mov rsi, 0
 29952 00016B33 BA01000000              	mov rdx, 1
 29953                                  .L_lambda_simple_env_loop_07ae:	; ext_env[i + 1] <-- env[i]
 29954 00016B38 4883FE00                	cmp rsi, 0
 29955 00016B3C 7410                    	je .L_lambda_simple_env_end_07ae
 29956 00016B3E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29957 00016B42 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29958 00016B46 48FFC6                  	inc rsi
 29959 00016B49 48FFC2                  	inc rdx
 29960 00016B4C EBEA                    	jmp .L_lambda_simple_env_loop_07ae
 29961                                  .L_lambda_simple_env_end_07ae:
 29962 00016B4E 5B                      	pop rbx
 29963 00016B4F BE00000000              	mov rsi, 0
 29964                                  .L_lambda_simple_params_loop_07ae:	; copy params
 29965 00016B54 4883FE00                	cmp rsi, 0
 29966 00016B58 740E                    	je .L_lambda_simple_params_end_07ae
 29967 00016B5A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29968 00016B5F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29969 00016B63 48FFC6                  	inc rsi
 29970 00016B66 EBEC                    	jmp .L_lambda_simple_params_loop_07ae
 29971                                  .L_lambda_simple_params_end_07ae:
 29972 00016B68 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29973 00016B6B 4889C3                  	mov rbx, rax
 29974 00016B6E 58                      	pop rax
 29975 00016B6F C60004                  	mov byte [rax], T_closure
 29976 00016B72 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29977 00016B76 48C74009[836B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07ae
 29978 00016B7E E998000000              	jmp .L_lambda_simple_end_07ae
 29979                                  .L_lambda_simple_code_07ae:	; lambda-simple body
 29980 00016B83 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29981 00016B89 740B                    	je .L_lambda_simple_arity_check_ok_08a1
 29982 00016B8B FF742410                	push qword [rsp + 8 * 2]
 29983 00016B8F 6A02                    	push 2
 29984 00016B91 E953090000              	jmp L_error_incorrect_arity_simple
 29985                                  .L_lambda_simple_arity_check_ok_08a1:
 29986 00016B96 C8000000                	enter 0, 0
 29987                                  	; preparing a tail-call
 29988 00016B9A 488B4520                	mov rax, PARAM(0)	; param s
 29989 00016B9E 50                      	push rax
 29990 00016B9F 488B4528                	mov rax, PARAM(1)	; param f
 29991 00016BA3 50                      	push rax
 29992 00016BA4 6A02                    	push 2	; arg count
 29993 00016BA6 488B0425[8B100000]      	mov rax, qword [free_var_33]	; free var apply
 29994 00016BAE 803805                  	cmp byte [rax], T_undefined
 29995 00016BB1 0F844C080000            	je L_error_fvar_undefined
 29996 00016BB7 803804                  	cmp byte [rax], T_closure
 29997 00016BBA 0F85C7080000            	jne L_error_non_closure
 29998 00016BC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29999 00016BC3 FF7508                  	push qword [rbp + 8 *1]
 30000 00016BC6 4989C0                  	mov r8, rax
 30001 00016BC9 488B5D18                	mov rbx, COUNT
 30002 00016BCD 4883C303                	add rbx,3
 30003 00016BD1 48C1E303                	shl rbx,3
 30004 00016BD5 4801EB                  	add rbx, rbp
 30005 00016BD8 488B6D00                	mov rbp, [rbp]
 30006 00016BDC B900000000              	mov rcx,0
 30007 00016BE1 BA05000000              	mov rdx, 5
 30008 00016BE6 4889D0                  	mov rax, rdx
 30009 00016BE9 48FFC8                  	dec rax
 30010 00016BEC 48C1E003                	shl rax,3
 30011 00016BF0 4801E0                  	add rax, rsp
 30012                                  	.L_tc_recycle_frame_loop_09b9:
 30013 00016BF3 4839D1                  	cmp rcx, rdx
 30014 00016BF6 7414                    	je .L_tc_recycle_frame_done_09b9
 30015 00016BF8 4C8B08                  	mov r9, qword [rax]
 30016 00016BFB 4C890B                  	mov qword [rbx],r9
 30017 00016BFE 4883E808                	sub rax,8
 30018 00016C02 4883EB08                	sub rbx,8
 30019 00016C06 4883C101                	add rcx,1
 30020 00016C0A EBE7                    	jmp .L_tc_recycle_frame_loop_09b9
 30021                                  	.L_tc_recycle_frame_done_09b9:
 30022 00016C0C 4883C308                	add rbx,8
 30023 00016C10 4889DC                  	mov rsp,rbx
 30024 00016C13 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 30025 00016C17 C9                      	leave
 30026 00016C18 C22000                  	ret AND_KILL_FRAME(2)
 30027                                  .L_lambda_simple_end_07ae:	; new closure is in rax
 30028 00016C1B 48890425[50180000]      	mov qword [free_var_150], rax
 30029 00016C23 48B8-                   	mov rax, sob_void
 30029 00016C25 [0000000000000000] 
 30030                                  
 30031 00016C2D 4889C7                  	mov rdi, rax
 30032 00016C30 E8500B0000              	call print_sexpr_if_not_void
 30033                                  	; preparing a non-tail-call
 30034 00016C35 48B8-                   	mov rax, L_constants + 1993
 30034 00016C37 [C907000000000000] 
 30035 00016C3F 50                      	push rax
 30036 00016C40 48B8-                   	mov rax, L_constants + 1993
 30036 00016C42 [C907000000000000] 
 30037 00016C4A 50                      	push rax
 30038 00016C4B 48B8-                   	mov rax, L_constants + 1993
 30038 00016C4D [C907000000000000] 
 30039 00016C55 50                      	push rax
 30040 00016C56 6A03                    	push 3	; arg count
 30041 00016C58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30042 00016C5D E8CE080000              	call malloc
 30043 00016C62 50                      	push rax
 30044 00016C63 BF00000000              	mov rdi, 8 * 0	; new rib
 30045 00016C68 E8C3080000              	call malloc
 30046 00016C6D 50                      	push rax
 30047 00016C6E BF08000000              	mov rdi, 8 * 1	; extended env
 30048 00016C73 E8B8080000              	call malloc
 30049 00016C78 488B7D10                	mov rdi, ENV
 30050 00016C7C BE00000000              	mov rsi, 0
 30051 00016C81 BA01000000              	mov rdx, 1
 30052                                  .L_lambda_simple_env_loop_07af:	; ext_env[i + 1] <-- env[i]
 30053 00016C86 4883FE00                	cmp rsi, 0
 30054 00016C8A 7410                    	je .L_lambda_simple_env_end_07af
 30055 00016C8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30056 00016C90 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30057 00016C94 48FFC6                  	inc rsi
 30058 00016C97 48FFC2                  	inc rdx
 30059 00016C9A EBEA                    	jmp .L_lambda_simple_env_loop_07af
 30060                                  .L_lambda_simple_env_end_07af:
 30061 00016C9C 5B                      	pop rbx
 30062 00016C9D BE00000000              	mov rsi, 0
 30063                                  .L_lambda_simple_params_loop_07af:	; copy params
 30064 00016CA2 4883FE00                	cmp rsi, 0
 30065 00016CA6 740E                    	je .L_lambda_simple_params_end_07af
 30066 00016CA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30067 00016CAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30068 00016CB1 48FFC6                  	inc rsi
 30069 00016CB4 EBEC                    	jmp .L_lambda_simple_params_loop_07af
 30070                                  .L_lambda_simple_params_end_07af:
 30071 00016CB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30072 00016CB9 4889C3                  	mov rbx, rax
 30073 00016CBC 58                      	pop rax
 30074 00016CBD C60004                  	mov byte [rax], T_closure
 30075 00016CC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30076 00016CC4 48C74009[D16C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07af
 30077 00016CCC E9D3060000              	jmp .L_lambda_simple_end_07af
 30078                                  .L_lambda_simple_code_07af:	; lambda-simple body
 30079 00016CD1 48837C241003            	cmp qword [rsp + 8 * 2], 3
 30080 00016CD7 740B                    	je .L_lambda_simple_arity_check_ok_08a2
 30081 00016CD9 FF742410                	push qword [rsp + 8 * 2]
 30082 00016CDD 6A03                    	push 3
 30083 00016CDF E905080000              	jmp L_error_incorrect_arity_simple
 30084                                  .L_lambda_simple_arity_check_ok_08a2:
 30085 00016CE4 C8000000                	enter 0, 0
 30086 00016CE8 BF08000000              	mov rdi, 8
 30087 00016CED E83E080000              	call malloc
 30088 00016CF2 488B5D20                	 mov rbx, qword [rbp + 8 * (4 +0)]
 30089 00016CF6 488918                  	mov qword [rax], rbx
 30090 00016CF9 48894520                	mov qword [rbp + 8 * (4 +0)], rax
 30091 00016CFD 48B8-                   	mov rax, sob_void
 30091 00016CFF [0000000000000000] 
 30092                                  
 30093 00016D07 BF08000000              	mov rdi, 8
 30094 00016D0C E81F080000              	call malloc
 30095 00016D11 488B5D28                	 mov rbx, qword [rbp + 8 * (4 +1)]
 30096 00016D15 488918                  	mov qword [rax], rbx
 30097 00016D18 48894528                	mov qword [rbp + 8 * (4 +1)], rax
 30098 00016D1C 48B8-                   	mov rax, sob_void
 30098 00016D1E [0000000000000000] 
 30099                                  
 30100 00016D26 BF08000000              	mov rdi, 8
 30101 00016D2B E800080000              	call malloc
 30102 00016D30 488B5D30                	 mov rbx, qword [rbp + 8 * (4 +2)]
 30103 00016D34 488918                  	mov qword [rax], rbx
 30104 00016D37 48894530                	mov qword [rbp + 8 * (4 +2)], rax
 30105 00016D3B 48B8-                   	mov rax, sob_void
 30105 00016D3D [0000000000000000] 
 30106                                  
 30107 00016D45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30108 00016D4A E8E1070000              	call malloc
 30109 00016D4F 50                      	push rax
 30110 00016D50 BF18000000              	mov rdi, 8 * 3	; new rib
 30111 00016D55 E8D6070000              	call malloc
 30112 00016D5A 50                      	push rax
 30113 00016D5B BF10000000              	mov rdi, 8 * 2	; extended env
 30114 00016D60 E8CB070000              	call malloc
 30115 00016D65 488B7D10                	mov rdi, ENV
 30116 00016D69 BE00000000              	mov rsi, 0
 30117 00016D6E BA01000000              	mov rdx, 1
 30118                                  .L_lambda_simple_env_loop_07b0:	; ext_env[i + 1] <-- env[i]
 30119 00016D73 4883FE01                	cmp rsi, 1
 30120 00016D77 7410                    	je .L_lambda_simple_env_end_07b0
 30121 00016D79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30122 00016D7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30123 00016D81 48FFC6                  	inc rsi
 30124 00016D84 48FFC2                  	inc rdx
 30125 00016D87 EBEA                    	jmp .L_lambda_simple_env_loop_07b0
 30126                                  .L_lambda_simple_env_end_07b0:
 30127 00016D89 5B                      	pop rbx
 30128 00016D8A BE00000000              	mov rsi, 0
 30129                                  .L_lambda_simple_params_loop_07b0:	; copy params
 30130 00016D8F 4883FE03                	cmp rsi, 3
 30131 00016D93 740E                    	je .L_lambda_simple_params_end_07b0
 30132 00016D95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30133 00016D9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30134 00016D9E 48FFC6                  	inc rsi
 30135 00016DA1 EBEC                    	jmp .L_lambda_simple_params_loop_07b0
 30136                                  .L_lambda_simple_params_end_07b0:
 30137 00016DA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30138 00016DA6 4889C3                  	mov rbx, rax
 30139 00016DA9 58                      	pop rax
 30140 00016DAA C60004                  	mov byte [rax], T_closure
 30141 00016DAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30142 00016DB1 48C74009[BE6D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07b0
 30143 00016DB9 E939010000              	jmp .L_lambda_simple_end_07b0
 30144                                  .L_lambda_simple_code_07b0:	; lambda-simple body
 30145 00016DBE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30146 00016DC4 740B                    	je .L_lambda_simple_arity_check_ok_08a3
 30147 00016DC6 FF742410                	push qword [rsp + 8 * 2]
 30148 00016DCA 6A02                    	push 2
 30149 00016DCC E918070000              	jmp L_error_incorrect_arity_simple
 30150                                  .L_lambda_simple_arity_check_ok_08a3:
 30151 00016DD1 C8000000                	enter 0, 0
 30152                                  	; preparing a non-tail-call
 30153 00016DD5 488B4520                	mov rax, PARAM(0)	; param n
 30154 00016DD9 50                      	push rax
 30155 00016DDA 6A01                    	push 1	; arg count
 30156 00016DDC 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 30157 00016DE4 803805                  	cmp byte [rax], T_undefined
 30158 00016DE7 0F8416060000            	je L_error_fvar_undefined
 30159 00016DED 803804                  	cmp byte [rax], T_closure
 30160 00016DF0 0F8591060000            	jne L_error_non_closure
 30161 00016DF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30162 00016DF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30163 00016DFC 483D[02000000]          	cmp rax, sob_boolean_false
 30164 00016E02 7409                    	je .L_if_else_0558
 30165 00016E04 488B4528                	mov rax, PARAM(1)	; param r
 30166 00016E08 E9E6000000              	jmp .L_if_end_05e6
 30167                                  .L_if_else_0558:
 30168                                  	; preparing a tail-call
 30169 00016E0D 48B8-                   	mov rax, L_constants + 3574
 30169 00016E0F [F60D000000000000] 
 30170 00016E17 50                      	push rax
 30171 00016E18 48B8-                   	mov rax, L_constants + 3552
 30171 00016E1A [E00D000000000000] 
 30172 00016E22 50                      	push rax
 30173                                  	; preparing a non-tail-call
 30174 00016E23 488B4528                	mov rax, PARAM(1)	; param r
 30175 00016E27 50                      	push rax
 30176 00016E28 488B4520                	mov rax, PARAM(0)	; param n
 30177 00016E2C 50                      	push rax
 30178 00016E2D 6A02                    	push 2	; arg count
 30179 00016E2F 488B0425[5A0E0000]      	mov rax, qword [free_var_0]	; free var *
 30180 00016E37 803805                  	cmp byte [rax], T_undefined
 30181 00016E3A 0F84C3050000            	je L_error_fvar_undefined
 30182 00016E40 803804                  	cmp byte [rax], T_closure
 30183 00016E43 0F853E060000            	jne L_error_non_closure
 30184 00016E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30185 00016E4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 30186 00016E4F 50                      	push rax
 30187                                  	; preparing a non-tail-call
 30188 00016E50 48B8-                   	mov rax, L_constants + 2270
 30188 00016E52 [DE08000000000000] 
 30189 00016E5A 50                      	push rax
 30190 00016E5B 488B4520                	mov rax, PARAM(0)	; param n
 30191 00016E5F 50                      	push rax
 30192 00016E60 6A02                    	push 2	; arg count
 30193 00016E62 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 30194 00016E6A 803805                  	cmp byte [rax], T_undefined
 30195 00016E6D 0F8490050000            	je L_error_fvar_undefined
 30196 00016E73 803804                  	cmp byte [rax], T_closure
 30197 00016E76 0F850B060000            	jne L_error_non_closure
 30198 00016E7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 30199 00016E7F FF5009                  	call SOB_CLOSURE_CODE(rax)
 30200 00016E82 50                      	push rax
 30201 00016E83 6A04                    	push 4	; arg count
 30202 00016E85 488B4510                	mov rax, ENV
 30203 00016E89 488B00                  	mov rax, qword [rax + 8 * 0]
 30204 00016E8C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var fact-2
 30205 00016E90 488B00                  	mov rax, qword [rax]
 30206 00016E93 803804                  	cmp byte [rax], T_closure
 30207 00016E96 0F85EB050000            	jne L_error_non_closure
 30208 00016E9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 30209 00016E9F FF7508                  	push qword [rbp + 8 *1]
 30210 00016EA2 4989C0                  	mov r8, rax
 30211 00016EA5 488B5D18                	mov rbx, COUNT
 30212 00016EA9 4883C303                	add rbx,3
 30213 00016EAD 48C1E303                	shl rbx,3
 30214 00016EB1 4801EB                  	add rbx, rbp
 30215 00016EB4 488B6D00                	mov rbp, [rbp]
 30216 00016EB8 B900000000              	mov rcx,0
 30217 00016EBD BA07000000              	mov rdx, 7
 30218 00016EC2 4889D0                  	mov rax, rdx
 30219 00016EC5 48FFC8                  	dec rax
 30220 00016EC8 48C1E003                	shl rax,3
 30221 00016ECC 4801E0                  	add rax, rsp
 30222                                  	.L_tc_recycle_frame_loop_09ba:
 30223 00016ECF 4839D1                  	cmp rcx, rdx
 30224 00016ED2 7414                    	je .L_tc_recycle_frame_done_09ba
 30225 00016ED4 4C8B08                  	mov r9, qword [rax]
 30226 00016ED7 4C890B                  	mov qword [rbx],r9
 30227 00016EDA 4883E808                	sub rax,8
 30228 00016EDE 4883EB08                	sub rbx,8
 30229 00016EE2 4883C101                	add rcx,1
 30230 00016EE6 EBE7                    	jmp .L_tc_recycle_frame_loop_09ba
 30231                                  	.L_tc_recycle_frame_done_09ba:
 30232 00016EE8 4883C308                	add rbx,8
 30233 00016EEC 4889DC                  	mov rsp,rbx
 30234 00016EEF 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 30235                                  .L_if_end_05e6:
 30236 00016EF3 C9                      	leave
 30237 00016EF4 C22000                  	ret AND_KILL_FRAME(2)
 30238                                  .L_lambda_simple_end_07b0:	; new closure is in rax
 30239 00016EF7 50                      	push rax
 30240 00016EF8 488B4520                	mov rax, PARAM(0)	; param fact-1
 30241 00016EFC 8F00                    	pop qword [rax]
 30242 00016EFE 48B8-                   	mov rax, sob_void
 30242 00016F00 [0000000000000000] 
 30243                                  
 30244 00016F08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30245 00016F0D E81E060000              	call malloc
 30246 00016F12 50                      	push rax
 30247 00016F13 BF18000000              	mov rdi, 8 * 3	; new rib
 30248 00016F18 E813060000              	call malloc
 30249 00016F1D 50                      	push rax
 30250 00016F1E BF10000000              	mov rdi, 8 * 2	; extended env
 30251 00016F23 E808060000              	call malloc
 30252 00016F28 488B7D10                	mov rdi, ENV
 30253 00016F2C BE00000000              	mov rsi, 0
 30254 00016F31 BA01000000              	mov rdx, 1
 30255                                  .L_lambda_simple_env_loop_07b1:	; ext_env[i + 1] <-- env[i]
 30256 00016F36 4883FE01                	cmp rsi, 1
 30257 00016F3A 7410                    	je .L_lambda_simple_env_end_07b1
 30258 00016F3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30259 00016F40 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30260 00016F44 48FFC6                  	inc rsi
 30261 00016F47 48FFC2                  	inc rdx
 30262 00016F4A EBEA                    	jmp .L_lambda_simple_env_loop_07b1
 30263                                  .L_lambda_simple_env_end_07b1:
 30264 00016F4C 5B                      	pop rbx
 30265 00016F4D BE00000000              	mov rsi, 0
 30266                                  .L_lambda_simple_params_loop_07b1:	; copy params
 30267 00016F52 4883FE03                	cmp rsi, 3
 30268 00016F56 740E                    	je .L_lambda_simple_params_end_07b1
 30269 00016F58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30270 00016F5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30271 00016F61 48FFC6                  	inc rsi
 30272 00016F64 EBEC                    	jmp .L_lambda_simple_params_loop_07b1
 30273                                  .L_lambda_simple_params_end_07b1:
 30274 00016F66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30275 00016F69 4889C3                  	mov rbx, rax
 30276 00016F6C 58                      	pop rax
 30277 00016F6D C60004                  	mov byte [rax], T_closure
 30278 00016F70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30279 00016F74 48C74009[816F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07b1
 30280 00016F7C E94F010000              	jmp .L_lambda_simple_end_07b1
 30281                                  .L_lambda_simple_code_07b1:	; lambda-simple body
 30282 00016F81 48837C241004            	cmp qword [rsp + 8 * 2], 4
 30283 00016F87 740B                    	je .L_lambda_simple_arity_check_ok_08a4
 30284 00016F89 FF742410                	push qword [rsp + 8 * 2]
 30285 00016F8D 6A04                    	push 4
 30286 00016F8F E955050000              	jmp L_error_incorrect_arity_simple
 30287                                  .L_lambda_simple_arity_check_ok_08a4:
 30288 00016F94 C8000000                	enter 0, 0
 30289                                  	; preparing a non-tail-call
 30290 00016F98 488B4520                	mov rax, PARAM(0)	; param n
 30291 00016F9C 50                      	push rax
 30292 00016F9D 6A01                    	push 1	; arg count
 30293 00016F9F 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 30294 00016FA7 803805                  	cmp byte [rax], T_undefined
 30295 00016FAA 0F8453040000            	je L_error_fvar_undefined
 30296 00016FB0 803804                  	cmp byte [rax], T_closure
 30297 00016FB3 0F85CE040000            	jne L_error_non_closure
 30298 00016FB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30299 00016FBC FF5009                  	call SOB_CLOSURE_CODE(rax)
 30300 00016FBF 483D[02000000]          	cmp rax, sob_boolean_false
 30301 00016FC5 7409                    	je .L_if_else_0559
 30302 00016FC7 488B4528                	mov rax, PARAM(1)	; param r
 30303 00016FCB E9FC000000              	jmp .L_if_end_05e7
 30304                                  .L_if_else_0559:
 30305                                  	; preparing a tail-call
 30306 00016FD0 48B8-                   	mov rax, L_constants + 3665
 30306 00016FD2 [510E000000000000] 
 30307 00016FDA 50                      	push rax
 30308 00016FDB 48B8-                   	mov rax, L_constants + 3642
 30308 00016FDD [3A0E000000000000] 
 30309 00016FE5 50                      	push rax
 30310 00016FE6 48B8-                   	mov rax, L_constants + 3620
 30310 00016FE8 [240E000000000000] 
 30311 00016FF0 50                      	push rax
 30312 00016FF1 48B8-                   	mov rax, L_constants + 3596
 30312 00016FF3 [0C0E000000000000] 
 30313 00016FFB 50                      	push rax
 30314                                  	; preparing a non-tail-call
 30315 00016FFC 488B4528                	mov rax, PARAM(1)	; param r
 30316 00017000 50                      	push rax
 30317 00017001 488B4520                	mov rax, PARAM(0)	; param n
 30318 00017005 50                      	push rax
 30319 00017006 6A02                    	push 2	; arg count
 30320 00017008 488B0425[5A0E0000]      	mov rax, qword [free_var_0]	; free var *
 30321 00017010 803805                  	cmp byte [rax], T_undefined
 30322 00017013 0F84EA030000            	je L_error_fvar_undefined
 30323 00017019 803804                  	cmp byte [rax], T_closure
 30324 0001701C 0F8565040000            	jne L_error_non_closure
 30325 00017022 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30326 00017025 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30327 00017028 50                      	push rax
 30328                                  	; preparing a non-tail-call
 30329 00017029 48B8-                   	mov rax, L_constants + 2270
 30329 0001702B [DE08000000000000] 
 30330 00017033 50                      	push rax
 30331 00017034 488B4520                	mov rax, PARAM(0)	; param n
 30332 00017038 50                      	push rax
 30333 00017039 6A02                    	push 2	; arg count
 30334 0001703B 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 30335 00017043 803805                  	cmp byte [rax], T_undefined
 30336 00017046 0F84B7030000            	je L_error_fvar_undefined
 30337 0001704C 803804                  	cmp byte [rax], T_closure
 30338 0001704F 0F8532040000            	jne L_error_non_closure
 30339 00017055 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30340 00017058 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30341 0001705B 50                      	push rax
 30342 0001705C 6A06                    	push 6	; arg count
 30343 0001705E 488B4510                	mov rax, ENV
 30344 00017062 488B00                  	mov rax, qword [rax + 8 * 0]
 30345 00017065 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var fact-3
 30346 00017069 488B00                  	mov rax, qword [rax]
 30347 0001706C 803804                  	cmp byte [rax], T_closure
 30348 0001706F 0F8512040000            	jne L_error_non_closure
 30349 00017075 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30350 00017078 FF7508                  	push qword [rbp + 8 *1]
 30351 0001707B 4989C0                  	mov r8, rax
 30352 0001707E 488B5D18                	mov rbx, COUNT
 30353 00017082 4883C303                	add rbx,3
 30354 00017086 48C1E303                	shl rbx,3
 30355 0001708A 4801EB                  	add rbx, rbp
 30356 0001708D 488B6D00                	mov rbp, [rbp]
 30357 00017091 B900000000              	mov rcx,0
 30358 00017096 BA09000000              	mov rdx, 9
 30359 0001709B 4889D0                  	mov rax, rdx
 30360 0001709E 48FFC8                  	dec rax
 30361 000170A1 48C1E003                	shl rax,3
 30362 000170A5 4801E0                  	add rax, rsp
 30363                                  	.L_tc_recycle_frame_loop_09bb:
 30364 000170A8 4839D1                  	cmp rcx, rdx
 30365 000170AB 7414                    	je .L_tc_recycle_frame_done_09bb
 30366 000170AD 4C8B08                  	mov r9, qword [rax]
 30367 000170B0 4C890B                  	mov qword [rbx],r9
 30368 000170B3 4883E808                	sub rax,8
 30369 000170B7 4883EB08                	sub rbx,8
 30370 000170BB 4883C101                	add rcx,1
 30371 000170BF EBE7                    	jmp .L_tc_recycle_frame_loop_09bb
 30372                                  	.L_tc_recycle_frame_done_09bb:
 30373 000170C1 4883C308                	add rbx,8
 30374 000170C5 4889DC                  	mov rsp,rbx
 30375 000170C8 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 30376                                  .L_if_end_05e7:
 30377 000170CC C9                      	leave
 30378 000170CD C23000                  	ret AND_KILL_FRAME(4)
 30379                                  .L_lambda_simple_end_07b1:	; new closure is in rax
 30380 000170D0 50                      	push rax
 30381 000170D1 488B4528                	mov rax, PARAM(1)	; param fact-2
 30382 000170D5 8F00                    	pop qword [rax]
 30383 000170D7 48B8-                   	mov rax, sob_void
 30383 000170D9 [0000000000000000] 
 30384                                  
 30385 000170E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30386 000170E6 E845040000              	call malloc
 30387 000170EB 50                      	push rax
 30388 000170EC BF18000000              	mov rdi, 8 * 3	; new rib
 30389 000170F1 E83A040000              	call malloc
 30390 000170F6 50                      	push rax
 30391 000170F7 BF10000000              	mov rdi, 8 * 2	; extended env
 30392 000170FC E82F040000              	call malloc
 30393 00017101 488B7D10                	mov rdi, ENV
 30394 00017105 BE00000000              	mov rsi, 0
 30395 0001710A BA01000000              	mov rdx, 1
 30396                                  .L_lambda_simple_env_loop_07b2:	; ext_env[i + 1] <-- env[i]
 30397 0001710F 4883FE01                	cmp rsi, 1
 30398 00017113 7410                    	je .L_lambda_simple_env_end_07b2
 30399 00017115 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30400 00017119 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30401 0001711D 48FFC6                  	inc rsi
 30402 00017120 48FFC2                  	inc rdx
 30403 00017123 EBEA                    	jmp .L_lambda_simple_env_loop_07b2
 30404                                  .L_lambda_simple_env_end_07b2:
 30405 00017125 5B                      	pop rbx
 30406 00017126 BE00000000              	mov rsi, 0
 30407                                  .L_lambda_simple_params_loop_07b2:	; copy params
 30408 0001712B 4883FE03                	cmp rsi, 3
 30409 0001712F 740E                    	je .L_lambda_simple_params_end_07b2
 30410 00017131 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30411 00017136 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30412 0001713A 48FFC6                  	inc rsi
 30413 0001713D EBEC                    	jmp .L_lambda_simple_params_loop_07b2
 30414                                  .L_lambda_simple_params_end_07b2:
 30415 0001713F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30416 00017142 4889C3                  	mov rbx, rax
 30417 00017145 58                      	pop rax
 30418 00017146 C60004                  	mov byte [rax], T_closure
 30419 00017149 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30420 0001714D 48C74009[5A710100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07b2
 30421 00017155 E922010000              	jmp .L_lambda_simple_end_07b2
 30422                                  .L_lambda_simple_code_07b2:	; lambda-simple body
 30423 0001715A 48837C241006            	cmp qword [rsp + 8 * 2], 6
 30424 00017160 740B                    	je .L_lambda_simple_arity_check_ok_08a5
 30425 00017162 FF742410                	push qword [rsp + 8 * 2]
 30426 00017166 6A06                    	push 6
 30427 00017168 E97C030000              	jmp L_error_incorrect_arity_simple
 30428                                  .L_lambda_simple_arity_check_ok_08a5:
 30429 0001716D C8000000                	enter 0, 0
 30430                                  	; preparing a non-tail-call
 30431 00017171 488B4520                	mov rax, PARAM(0)	; param n
 30432 00017175 50                      	push rax
 30433 00017176 6A01                    	push 1	; arg count
 30434 00017178 488B0425[72180000]      	mov rax, qword [free_var_152]	; free var zero?
 30435 00017180 803805                  	cmp byte [rax], T_undefined
 30436 00017183 0F847A020000            	je L_error_fvar_undefined
 30437 00017189 803804                  	cmp byte [rax], T_closure
 30438 0001718C 0F85F5020000            	jne L_error_non_closure
 30439 00017192 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30440 00017195 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30441 00017198 483D[02000000]          	cmp rax, sob_boolean_false
 30442 0001719E 7409                    	je .L_if_else_055a
 30443 000171A0 488B4528                	mov rax, PARAM(1)	; param r
 30444 000171A4 E9CF000000              	jmp .L_if_end_05e8
 30445                                  .L_if_else_055a:
 30446                                  	; preparing a tail-call
 30447                                  	; preparing a non-tail-call
 30448 000171A9 488B4528                	mov rax, PARAM(1)	; param r
 30449 000171AD 50                      	push rax
 30450 000171AE 488B4520                	mov rax, PARAM(0)	; param n
 30451 000171B2 50                      	push rax
 30452 000171B3 6A02                    	push 2	; arg count
 30453 000171B5 488B0425[5A0E0000]      	mov rax, qword [free_var_0]	; free var *
 30454 000171BD 803805                  	cmp byte [rax], T_undefined
 30455 000171C0 0F843D020000            	je L_error_fvar_undefined
 30456 000171C6 803804                  	cmp byte [rax], T_closure
 30457 000171C9 0F85B8020000            	jne L_error_non_closure
 30458 000171CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 30459 000171D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30460 000171D5 50                      	push rax
 30461                                  	; preparing a non-tail-call
 30462 000171D6 48B8-                   	mov rax, L_constants + 2270
 30462 000171D8 [DE08000000000000] 
 30463 000171E0 50                      	push rax
 30464 000171E1 488B4520                	mov rax, PARAM(0)	; param n
 30465 000171E5 50                      	push rax
 30466 000171E6 6A02                    	push 2	; arg count
 30467 000171E8 488B0425[7C0E0000]      	mov rax, qword [free_var_2]	; free var -
 30468 000171F0 803805                  	cmp byte [rax], T_undefined
 30469 000171F3 0F840A020000            	je L_error_fvar_undefined
 30470 000171F9 803804                  	cmp byte [rax], T_closure
 30471 000171FC 0F8585020000            	jne L_error_non_closure
 30472 00017202 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30473 00017205 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30474 00017208 50                      	push rax
 30475 00017209 6A02                    	push 2	; arg count
 30476 0001720B 488B4510                	mov rax, ENV
 30477 0001720F 488B00                  	mov rax, qword [rax + 8 * 0]
 30478 00017212 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var fact-1
 30479 00017215 488B00                  	mov rax, qword [rax]
 30480 00017218 803804                  	cmp byte [rax], T_closure
 30481 0001721B 0F8566020000            	jne L_error_non_closure
 30482 00017221 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30483 00017224 FF7508                  	push qword [rbp + 8 *1]
 30484 00017227 4989C0                  	mov r8, rax
 30485 0001722A 488B5D18                	mov rbx, COUNT
 30486 0001722E 4883C303                	add rbx,3
 30487 00017232 48C1E303                	shl rbx,3
 30488 00017236 4801EB                  	add rbx, rbp
 30489 00017239 488B6D00                	mov rbp, [rbp]
 30490 0001723D B900000000              	mov rcx,0
 30491 00017242 BA05000000              	mov rdx, 5
 30492 00017247 4889D0                  	mov rax, rdx
 30493 0001724A 48FFC8                  	dec rax
 30494 0001724D 48C1E003                	shl rax,3
 30495 00017251 4801E0                  	add rax, rsp
 30496                                  	.L_tc_recycle_frame_loop_09bc:
 30497 00017254 4839D1                  	cmp rcx, rdx
 30498 00017257 7414                    	je .L_tc_recycle_frame_done_09bc
 30499 00017259 4C8B08                  	mov r9, qword [rax]
 30500 0001725C 4C890B                  	mov qword [rbx],r9
 30501 0001725F 4883E808                	sub rax,8
 30502 00017263 4883EB08                	sub rbx,8
 30503 00017267 4883C101                	add rcx,1
 30504 0001726B EBE7                    	jmp .L_tc_recycle_frame_loop_09bc
 30505                                  	.L_tc_recycle_frame_done_09bc:
 30506 0001726D 4883C308                	add rbx,8
 30507 00017271 4889DC                  	mov rsp,rbx
 30508 00017274 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 30509                                  .L_if_end_05e8:
 30510 00017278 C9                      	leave
 30511 00017279 C24000                  	ret AND_KILL_FRAME(6)
 30512                                  .L_lambda_simple_end_07b2:	; new closure is in rax
 30513 0001727C 50                      	push rax
 30514 0001727D 488B4530                	mov rax, PARAM(2)	; param fact-3
 30515 00017281 8F00                    	pop qword [rax]
 30516 00017283 48B8-                   	mov rax, sob_void
 30516 00017285 [0000000000000000] 
 30517                                  
 30518 0001728D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30519 00017292 E899020000              	call malloc
 30520 00017297 50                      	push rax
 30521 00017298 BF18000000              	mov rdi, 8 * 3	; new rib
 30522 0001729D E88E020000              	call malloc
 30523 000172A2 50                      	push rax
 30524 000172A3 BF10000000              	mov rdi, 8 * 2	; extended env
 30525 000172A8 E883020000              	call malloc
 30526 000172AD 488B7D10                	mov rdi, ENV
 30527 000172B1 BE00000000              	mov rsi, 0
 30528 000172B6 BA01000000              	mov rdx, 1
 30529                                  .L_lambda_simple_env_loop_07b3:	; ext_env[i + 1] <-- env[i]
 30530 000172BB 4883FE01                	cmp rsi, 1
 30531 000172BF 7410                    	je .L_lambda_simple_env_end_07b3
 30532 000172C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30533 000172C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30534 000172C9 48FFC6                  	inc rsi
 30535 000172CC 48FFC2                  	inc rdx
 30536 000172CF EBEA                    	jmp .L_lambda_simple_env_loop_07b3
 30537                                  .L_lambda_simple_env_end_07b3:
 30538 000172D1 5B                      	pop rbx
 30539 000172D2 BE00000000              	mov rsi, 0
 30540                                  .L_lambda_simple_params_loop_07b3:	; copy params
 30541 000172D7 4883FE03                	cmp rsi, 3
 30542 000172DB 740E                    	je .L_lambda_simple_params_end_07b3
 30543 000172DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30544 000172E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30545 000172E6 48FFC6                  	inc rsi
 30546 000172E9 EBEC                    	jmp .L_lambda_simple_params_loop_07b3
 30547                                  .L_lambda_simple_params_end_07b3:
 30548 000172EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30549 000172EE 4889C3                  	mov rbx, rax
 30550 000172F1 58                      	pop rax
 30551 000172F2 C60004                  	mov byte [rax], T_closure
 30552 000172F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30553 000172F9 48C74009[06730100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_07b3
 30554 00017301 E99A000000              	jmp .L_lambda_simple_end_07b3
 30555                                  .L_lambda_simple_code_07b3:	; lambda-simple body
 30556 00017306 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30557 0001730C 740B                    	je .L_lambda_simple_arity_check_ok_08a6
 30558 0001730E FF742410                	push qword [rsp + 8 * 2]
 30559 00017312 6A01                    	push 1
 30560 00017314 E9D0010000              	jmp L_error_incorrect_arity_simple
 30561                                  .L_lambda_simple_arity_check_ok_08a6:
 30562 00017319 C8000000                	enter 0, 0
 30563                                  	; preparing a tail-call
 30564 0001731D 48B8-                   	mov rax, L_constants + 2270
 30564 0001731F [DE08000000000000] 
 30565 00017327 50                      	push rax
 30566 00017328 488B4520                	mov rax, PARAM(0)	; param n
 30567 0001732C 50                      	push rax
 30568 0001732D 6A02                    	push 2	; arg count
 30569 0001732F 488B4510                	mov rax, ENV
 30570 00017333 488B00                  	mov rax, qword [rax + 8 * 0]
 30571 00017336 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var fact-1
 30572 00017339 488B00                  	mov rax, qword [rax]
 30573 0001733C 803804                  	cmp byte [rax], T_closure
 30574 0001733F 0F8542010000            	jne L_error_non_closure
 30575 00017345 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30576 00017348 FF7508                  	push qword [rbp + 8 *1]
 30577 0001734B 4989C0                  	mov r8, rax
 30578 0001734E 488B5D18                	mov rbx, COUNT
 30579 00017352 4883C303                	add rbx,3
 30580 00017356 48C1E303                	shl rbx,3
 30581 0001735A 4801EB                  	add rbx, rbp
 30582 0001735D 488B6D00                	mov rbp, [rbp]
 30583 00017361 B900000000              	mov rcx,0
 30584 00017366 BA05000000              	mov rdx, 5
 30585 0001736B 4889D0                  	mov rax, rdx
 30586 0001736E 48FFC8                  	dec rax
 30587 00017371 48C1E003                	shl rax,3
 30588 00017375 4801E0                  	add rax, rsp
 30589                                  	.L_tc_recycle_frame_loop_09bd:
 30590 00017378 4839D1                  	cmp rcx, rdx
 30591 0001737B 7414                    	je .L_tc_recycle_frame_done_09bd
 30592 0001737D 4C8B08                  	mov r9, qword [rax]
 30593 00017380 4C890B                  	mov qword [rbx],r9
 30594 00017383 4883E808                	sub rax,8
 30595 00017387 4883EB08                	sub rbx,8
 30596 0001738B 4883C101                	add rcx,1
 30597 0001738F EBE7                    	jmp .L_tc_recycle_frame_loop_09bd
 30598                                  	.L_tc_recycle_frame_done_09bd:
 30599 00017391 4883C308                	add rbx,8
 30600 00017395 4889DC                  	mov rsp,rbx
 30601 00017398 41FF6009                	jmp SOB_CLOSURE_CODE(r8)
 30602 0001739C C9                      	leave
 30603 0001739D C21800                  	ret AND_KILL_FRAME(1)
 30604                                  .L_lambda_simple_end_07b3:	; new closure is in rax
 30605 000173A0 C9                      	leave
 30606 000173A1 C22800                  	ret AND_KILL_FRAME(3)
 30607                                  .L_lambda_simple_end_07af:	; new closure is in rax
 30608 000173A4 803804                  	cmp byte [rax], T_closure
 30609 000173A7 0F85DA000000            	jne L_error_non_closure
 30610 000173AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 30611 000173B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 30612 000173B3 48890425[EE130000]      	mov qword [free_var_84], rax
 30613 000173BB 48B8-                   	mov rax, sob_void
 30613 000173BD [0000000000000000] 
 30614                                  Lend:
 30615 000173C5 4889C7                  	mov rdi, rax
 30616 000173C8 E8B8030000              	call print_sexpr_if_not_void
 30617                                  
 30618 000173CD 48BF-                           mov rdi, fmt_memory_usage
 30618 000173CF [1B19000000000000] 
 30619 000173D7 488B3425[A1190000]              mov rsi, qword [top_of_memory]
 30620 000173DF 4881EE[00000000]                sub rsi, memory
 30621 000173E6 B800000000                      mov rax, 0
 30622                                          ENTER
    44 000173EB C8000000            <1>  enter 0, 0
    45 000173EF 4883E4F0            <1>  and rsp, ~15
 30623 000173F3 E8(00000000)                    call printf
 30624                                          LEAVE
    49 000173F8 C9                  <1>  leave
 30625 000173F9 B800000000                      mov rax, 0
 30626 000173FE E8(00000000)                    call exit
 30627                                  
 30628                                  L_error_fvar_undefined:
 30629 00017403 50                              push rax
 30630 00017404 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 30631 0001740C 48BE-                           mov rsi, fmt_undefined_free_var_1
 30631 0001740E [8318000000000000] 
 30632 00017416 B800000000                      mov rax, 0
 30633                                          ENTER
    44 0001741B C8000000            <1>  enter 0, 0
    45 0001741F 4883E4F0            <1>  and rsp, ~15
 30634 00017423 E8(00000000)                    call fprintf
 30635                                          LEAVE
    49 00017428 C9                  <1>  leave
 30636 00017429 58                              pop rax
 30637 0001742A 488B4001                        mov rax, qword [rax + 1] ; string
 30638 0001742E 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 30639 00017432 BE01000000                      mov rsi, 1               ; sizeof(char)
 30640 00017437 488B5001                        mov rdx, qword [rax + 1] ; string-length
 30641 0001743B 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 30642 00017443 B800000000                      mov rax, 0
 30643                                          ENTER
    44 00017448 C8000000            <1>  enter 0, 0
    45 0001744C 4883E4F0            <1>  and rsp, ~15
 30644 00017450 E8(00000000)                    call fwrite
 30645                                          LEAVE
    49 00017455 C9                  <1>  leave
 30646 00017456 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 30647 0001745E 48BE-                           mov rsi, fmt_undefined_free_var_2
 30647 00017460 [9A18000000000000] 
 30648 00017468 B800000000                      mov rax, 0
 30649                                          ENTER
    44 0001746D C8000000            <1>  enter 0, 0
    45 00017471 4883E4F0            <1>  and rsp, ~15
 30650 00017475 E8(00000000)                    call fprintf
 30651                                          LEAVE
    49 0001747A C9                  <1>  leave
 30652 0001747B 48C7C0F6FFFFFF                  mov rax, -10
 30653 00017482 E8(00000000)                    call exit
 30654                                  
 30655                                  L_error_non_closure:
 30656 00017487 488B3C25[00000000]              mov rdi, qword [stderr]
 30657 0001748F 48BE-                           mov rsi, fmt_non_closure
 30657 00017491 [5119000000000000] 
 30658 00017499 B800000000                      mov rax, 0
 30659                                          ENTER
    44 0001749E C8000000            <1>  enter 0, 0
    45 000174A2 4883E4F0            <1>  and rsp, ~15
 30660 000174A6 E8(00000000)                    call fprintf
 30661                                          LEAVE
    49 000174AB C9                  <1>  leave
 30662 000174AC 48C7C0FEFFFFFF                  mov rax, -2
 30663 000174B3 E8(00000000)                    call exit
 30664                                  
 30665                                  L_error_improper_list:
 30666 000174B8 488B3C25[00000000]      	mov rdi, qword [stderr]
 30667 000174C0 48BE-                   	mov rsi, fmt_error_improper_list
 30667 000174C2 [7919000000000000] 
 30668 000174CA B800000000              	mov rax, 0
 30669                                          ENTER
    44 000174CF C8000000            <1>  enter 0, 0
    45 000174D3 4883E4F0            <1>  and rsp, ~15
 30670 000174D7 E8(00000000)            	call fprintf
 30671                                          LEAVE
    49 000174DC C9                  <1>  leave
 30672 000174DD 48C7C0F9FFFFFF          	mov rax, -7
 30673 000174E4 E8(00000000)            	call exit
 30674                                  
 30675                                  L_error_incorrect_arity_simple:
 30676 000174E9 488B3C25[00000000]              mov rdi, qword [stderr]
 30677 000174F1 48BE-                           mov rsi, fmt_incorrect_arity_simple
 30677 000174F3 [BC18000000000000] 
 30678 000174FB EB12                            jmp L_error_incorrect_arity_common
 30679                                  L_error_incorrect_arity_opt:
 30680 000174FD 488B3C25[00000000]              mov rdi, qword [stderr]
 30681 00017505 48BE-                           mov rsi, fmt_incorrect_arity_opt
 30681 00017507 [E718000000000000] 
 30682                                  L_error_incorrect_arity_common:
 30683 0001750F 5A                              pop rdx
 30684 00017510 59                              pop rcx
 30685 00017511 B800000000                      mov rax, 0
 30686                                          ENTER
    44 00017516 C8000000            <1>  enter 0, 0
    45 0001751A 4883E4F0            <1>  and rsp, ~15
 30687 0001751E E8(00000000)                    call fprintf
 30688                                          LEAVE
    49 00017523 C9                  <1>  leave
 30689 00017524 48C7C0FAFFFFFF                  mov rax, -6
 30690 0001752B E8(00000000)                    call exit
 30691                                  
 30692                                  section .data
 30693                                  fmt_undefined_free_var_1:
 30694 00001883 212121205468652066-             db `!!! The free variable \0`
 30694 0000188C 726565207661726961-
 30694 00001895 626C652000         
 30695                                  fmt_undefined_free_var_2:
 30696 0000189A 207761732075736564-             db ` was used before it was defined.\n\0`
 30696 000018A3 206265666F72652069-
 30696 000018AC 742077617320646566-
 30696 000018B5 696E65642E0A00     
 30697                                  fmt_incorrect_arity_simple:
 30698 000018BC 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 30698 000018C5 74656420256C642061-
 30698 000018CE 7267756D656E74732C-
 30698 000018D7 206275742067697665-
 30698 000018E0 6E20256C640A00     
 30699                                  fmt_incorrect_arity_opt:
 30700 000018E7 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 30700 000018F0 746564206174206C65-
 30700 000018F9 61737420256C642061-
 30700 00001902 7267756D656E74732C-
 30700 0000190B 206275742067697665-
 30700 00001914 6E20256C640A00     
 30701                                  fmt_memory_usage:
 30702 0000191B 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 30702 00001924 20256C642062797465-
 30702 0000192D 73206F662064796E61-
 30702 00001936 6D6963616C6C792D61-
 30702 0000193F 6C6C6F636174656420-
 30702 00001948 6D656D6F72790A0A00 
 30703                                  fmt_non_closure:
 30704 00001951 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 30704 0000195A 7074696E6720746F20-
 30704 00001963 6170706C792061206E-
 30704 0000196C 6F6E2D636C6F737572-
 30704 00001975 65210A00           
 30705                                  fmt_error_improper_list:
 30706 00001979 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 30706 00001982 7267756D656E742069-
 30706 0000198B 73206E6F7420612070-
 30706 00001994 726F706572206C6973-
 30706 0000199D 74210A00           
 30707                                  
 30708                                  section .bss
 30709                                  memory:
 30710 00000000 <res 40000000h>         	resb gbytes(1)
 30711                                  
 30712                                  section .data
 30713                                  top_of_memory:
 30714 000019A1 [0000000000000000]              dq memory
 30715                                  
 30716                                  section .text
 30717                                  malloc:
 30718 00017530 488B0425[A1190000]              mov rax, qword [top_of_memory]
 30719 00017538 48013C25[A1190000]              add qword [top_of_memory], rdi
 30720 00017540 C3                              ret
 30721                                  
 30722                                  L_code_ptr_return:
 30723 00017541 48837C241002            	cmp qword [rsp + 8*2], 2
 30724 00017547 0F85F21C0000            	jne L_error_arg_count_2
 30725 0001754D 488B4C2418              	mov rcx, qword [rsp + 8*3]
 30726                                  	assert_integer(rcx)
    53 00017552 803911              <1>  cmp byte [%1], %2
    54 00017555 0F85831D0000        <1>  jne L_error_incorrect_type
 30727 0001755B 488B4901                	mov rcx, qword [rcx + 1]
 30728 0001755F 4883F900                	cmp rcx, 0
 30729 00017563 0F8C0A1C0000            	jl L_error_integer_range
 30730 00017569 488B442420              	mov rax, qword [rsp + 8*4]
 30731                                  .L0:
 30732 0001756E 4883F900                        cmp rcx, 0
 30733 00017572 7409                            je .L1
 30734 00017574 488B6D00                	mov rbp, qword [rbp]
 30735 00017578 48FFC9                  	dec rcx
 30736 0001757B 7FF1                    	jg .L0
 30737                                  .L1:
 30738 0001757D 4889EC                  	mov rsp, rbp
 30739 00017580 5D                      	pop rbp
 30740 00017581 5B                              pop rbx
 30741 00017582 488B4C2408                      mov rcx, qword [rsp + 8*1]
 30742 00017587 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 30743 0001758C FFE3                    	jmp rbx
 30744                                  
 30745                                  L_code_ptr_make_list:
 30746 0001758E C8000000                	enter 0, 0
 30747 00017592 48837D1801                      cmp COUNT, 1
 30748 00017597 740C                            je .L0
 30749 00017599 48837D1802                      cmp COUNT, 2
 30750 0001759E 7411                            je .L1
 30751 000175A0 E9CF1C0000                      jmp L_error_arg_count_12
 30752                                  .L0:
 30753 000175A5 49B9-                           mov r9, sob_void
 30753 000175A7 [0000000000000000] 
 30754 000175AF EB04                            jmp .L2
 30755                                  .L1:
 30756 000175B1 4C8B4D28                        mov r9, PARAM(1)
 30757                                  .L2:
 30758 000175B5 488B4D20                        mov rcx, PARAM(0)
 30759                                          assert_integer(rcx)
    53 000175B9 803911              <1>  cmp byte [%1], %2
    54 000175BC 0F851C1D0000        <1>  jne L_error_incorrect_type
 30760 000175C2 488B4901                        mov rcx, qword [rcx + 1]
 30761 000175C6 4883F900                        cmp rcx, 0
 30762 000175CA 0F8CD41B0000                    jl L_error_arg_negative
 30763 000175D0 49B8-                           mov r8, sob_nil
 30763 000175D2 [0100000000000000] 
 30764                                  .L3:
 30765 000175DA 4883F900                        cmp rcx, 0
 30766 000175DE 7E1D                            jle .L4
 30767 000175E0 BF11000000                      mov rdi, 1 + 8 + 8
 30768 000175E5 E846FFFFFF                      call malloc
 30769 000175EA C60021                          mov byte [rax], T_pair
 30770 000175ED 4C894801                        mov qword [rax + 1], r9
 30771 000175F1 4C894009                        mov qword [rax + 1 + 8], r8
 30772 000175F5 4989C0                          mov r8, rax
 30773 000175F8 48FFC9                          dec rcx
 30774 000175FB EBDD                            jmp .L3
 30775                                  .L4:
 30776 000175FD 4C89C0                          mov rax, r8
 30777 00017600 48837D1802                      cmp COUNT, 2
 30778 00017605 7404                            je .L5
 30779 00017607 C9                              leave
 30780 00017608 C21800                          ret AND_KILL_FRAME(1)
 30781                                  .L5:
 30782 0001760B C9                      	leave
 30783 0001760C C22000                  	ret AND_KILL_FRAME(2)
 30784                                  
 30785                                  L_code_ptr_is_primitive:
 30786 0001760F C8000000                	enter 0, 0
 30787 00017613 48837D1801              	cmp COUNT, 1
 30788 00017618 0F85EC1B0000            	jne L_error_arg_count_1
 30789 0001761E 488B4520                	mov rax, PARAM(0)
 30790                                  	assert_closure(rax)
    53 00017622 803804              <1>  cmp byte [%1], %2
    54 00017625 0F85B31C0000        <1>  jne L_error_incorrect_type
 30791 0001762B 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 30792 00017630 750C                    	jne .L_false
 30793 00017632 48B8-                   	mov rax, sob_boolean_true
 30793 00017634 [0300000000000000] 
 30794 0001763C EB0A                    	jmp .L_end
 30795                                  .L_false:
 30796 0001763E 48B8-                   	mov rax, sob_boolean_false
 30796 00017640 [0200000000000000] 
 30797                                  .L_end:
 30798 00017648 C9                      	leave
 30799 00017649 C21800                  	ret AND_KILL_FRAME(1)
 30800                                  
 30801                                  L_code_ptr_length:
 30802 0001764C C8000000                	enter 0, 0
 30803 00017650 48837D1801              	cmp COUNT, 1
 30804 00017655 0F85AF1B0000            	jne L_error_arg_count_1
 30805 0001765B 488B5D20                	mov rbx, PARAM(0)
 30806 0001765F BF00000000              	mov rdi, 0
 30807                                  .L:
 30808 00017664 803B01                  	cmp byte [rbx], T_nil
 30809 00017667 7412                    	je .L_end
 30810                                  	assert_pair(rbx)
    53 00017669 803B21              <1>  cmp byte [%1], %2
    54 0001766C 0F856C1C0000        <1>  jne L_error_incorrect_type
 30811 00017672 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 30812 00017676 48FFC7                  	inc rdi
 30813 00017679 EBE9                    	jmp .L
 30814                                  .L_end:
 30815 0001767B E8D91A0000              	call make_integer
 30816 00017680 C9                      	leave
 30817 00017681 C21800                  	ret AND_KILL_FRAME(1)
 30818                                  
 30819                                  L_code_ptr_break:
 30820 00017684 48837C241000                    cmp qword [rsp + 8 * 2], 0
 30821 0001768A 0F85451B0000                    jne L_error_arg_count_0
 30822 00017690 CC                              int3
 30823 00017691 48B8-                           mov rax, sob_void
 30823 00017693 [0000000000000000] 
 30824 0001769B C21000                          ret AND_KILL_FRAME(0)        
 30825                                  
 30826                                  L_code_ptr_frame:
 30827 0001769E C8000000                        enter 0, 0
 30828 000176A2 48837D1800                      cmp COUNT, 0
 30829 000176A7 0F85281B0000                    jne L_error_arg_count_0
 30830                                  
 30831 000176AD 48BF-                           mov rdi, fmt_frame
 30831 000176AF [A919000000000000] 
 30832 000176B7 488B7500                        mov rsi, qword [rbp]    ; old rbp
 30833 000176BB 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 30834 000176BF 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 30835 000176C3 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 30836 000176C7 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 30837 000176CB 6A00                            push 0
 30838 000176CD 4151                            push r9
 30839 000176CF 4150                            push r8                   ; we'll use it when printing the params
 30840 000176D1 B800000000                      mov rax, 0
 30841                                          
 30842                                          ENTER
    44 000176D6 C8000000            <1>  enter 0, 0
    45 000176DA 4883E4F0            <1>  and rsp, ~15
 30843 000176DE E8(00000000)                    call printf
 30844                                          LEAVE
    49 000176E3 C9                  <1>  leave
 30845                                  
 30846                                  .L:
 30847 000176E4 488B0C24                        mov rcx, qword [rsp]
 30848 000176E8 4883F900                        cmp rcx, 0
 30849 000176EC 7467                            je .L_out
 30850 000176EE 48BF-                           mov rdi, fmt_frame_param_prefix
 30850 000176F0 [E219000000000000] 
 30851 000176F8 488B742410                      mov rsi, qword [rsp + 8*2]
 30852 000176FD B800000000                      mov rax, 0
 30853                                          
 30854                                          ENTER
    44 00017702 C8000000            <1>  enter 0, 0
    45 00017706 4883E4F0            <1>  and rsp, ~15
 30855 0001770A E8(00000000)                    call printf
 30856                                          LEAVE
    49 0001770F C9                  <1>  leave
 30857                                  
 30858 00017710 488B0C24                        mov rcx, qword [rsp]
 30859 00017714 48FFC9                          dec rcx
 30860 00017717 48890C24                        mov qword [rsp], rcx    ; dec arg count
 30861 0001771B 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 30862 00017720 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 30863 00017725 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 30864 00017729 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 30865 0001772E 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 30866 00017731 E87B000000                      call print_sexpr
 30867 00017736 48BF-                           mov rdi, fmt_newline
 30867 00017738 [0E1A000000000000] 
 30868 00017740 B800000000                      mov rax, 0
 30869                                          ENTER
    44 00017745 C8000000            <1>  enter 0, 0
    45 00017749 4883E4F0            <1>  and rsp, ~15
 30870 0001774D E8(00000000)                    call printf
 30871                                          LEAVE
    49 00017752 C9                  <1>  leave
 30872 00017753 EB8F                            jmp .L
 30873                                  .L_out:
 30874 00017755 48BF-                           mov rdi, fmt_frame_continue
 30874 00017757 [F319000000000000] 
 30875 0001775F B800000000                      mov rax, 0
 30876                                          ENTER
    44 00017764 C8000000            <1>  enter 0, 0
    45 00017768 4883E4F0            <1>  and rsp, ~15
 30877 0001776C E8(00000000)                    call printf
 30878 00017771 E8(00000000)                    call getchar
 30879                                          LEAVE
    49 00017776 C9                  <1>  leave
 30880                                          
 30881 00017777 48B8-                           mov rax, sob_void
 30881 00017779 [0000000000000000] 
 30882 00017781 C9                              leave
 30883 00017782 C21000                          ret AND_KILL_FRAME(0)
 30884                                          
 30885                                  print_sexpr_if_not_void:
 30886 00017785 4881FF[00000000]        	cmp rdi, sob_void
 30887 0001778C 7422                    	je .done
 30888 0001778E E81E000000              	call print_sexpr
 30889 00017793 48BF-                   	mov rdi, fmt_newline
 30889 00017795 [0E1A000000000000] 
 30890 0001779D B800000000              	mov rax, 0
 30891                                  	ENTER
    44 000177A2 C8000000            <1>  enter 0, 0
    45 000177A6 4883E4F0            <1>  and rsp, ~15
 30892 000177AA E8(00000000)            	call printf
 30893                                  	LEAVE
    49 000177AF C9                  <1>  leave
 30894                                  .done:
 30895 000177B0 C3                      	ret
 30896                                  
 30897                                  section .data
 30898                                  fmt_frame:
 30899 000019A9 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 30899 000019B2 207265742061646472-
 30899 000019BB 203D2025703B206C65-
 30899 000019C4 7820656E76203D2025-
 30899 000019CD 703B20706172616D20-
 30899 000019D6 636F756E74203D2025-
 30899 000019DF 640A00             
 30900                                  fmt_frame_param_prefix:
 30901 000019E2 3D3D5B706172616D20-             db `==[param %d]==> \0`
 30901 000019EB 25645D3D3D3E2000   
 30902                                  fmt_frame_continue:
 30903 000019F3 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 30903 000019FC 723E20746F20636F6E-
 30903 00001A05 74696E75652E2E2E00 
 30904                                  fmt_newline:
 30905 00001A0E 0A00                    	db `\n\0`
 30906                                  fmt_void:
 30907 00001A10 233C766F69643E00        	db `#<void>\0`
 30908                                  fmt_nil:
 30909 00001A18 282900                  	db `()\0`
 30910                                  fmt_boolean_false:
 30911 00001A1B 236600                  	db `#f\0`
 30912                                  fmt_boolean_true:
 30913 00001A1E 237400                  	db `#t\0`
 30914                                  fmt_char_backslash:
 30915 00001A21 235C5C00                	db `#\\\\\0`
 30916                                  fmt_char_dquote:
 30917 00001A25 235C2200                	db `#\\"\0`
 30918                                  fmt_char_simple:
 30919 00001A29 235C256300              	db `#\\%c\0`
 30920                                  fmt_char_null:
 30921 00001A2E 235C6E756C00            	db `#\\nul\0`
 30922                                  fmt_char_bell:
 30923 00001A34 235C62656C6C00          	db `#\\bell\0`
 30924                                  fmt_char_backspace:
 30925 00001A3B 235C6261636B737061-     	db `#\\backspace\0`
 30925 00001A44 636500             
 30926                                  fmt_char_tab:
 30927 00001A47 235C74616200            	db `#\\tab\0`
 30928                                  fmt_char_newline:
 30929 00001A4D 235C6E65776C696E65-     	db `#\\newline\0`
 30929 00001A56 00                 
 30930                                  fmt_char_formfeed:
 30931 00001A57 235C7061676500          	db `#\\page\0`
 30932                                  fmt_char_return:
 30933 00001A5E 235C72657475726E00      	db `#\\return\0`
 30934                                  fmt_char_escape:
 30935 00001A67 235C65736300            	db `#\\esc\0`
 30936                                  fmt_char_space:
 30937 00001A6D 235C737061636500        	db `#\\space\0`
 30938                                  fmt_char_hex:
 30939 00001A75 235C782530325800        	db `#\\x%02X\0`
 30940                                  fmt_gensym:
 30941 00001A7D 47256C6400                      db `G%ld\0`
 30942                                  fmt_closure:
 30943 00001A82 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 30943 00001A8B 206174203078253038-
 30943 00001A94 5820656E763D307825-
 30943 00001A9D 30385820636F64653D-
 30943 00001AA6 3078253038583E00   
 30944                                  fmt_lparen:
 30945 00001AAE 2800                    	db `(\0`
 30946                                  fmt_dotted_pair:
 30947 00001AB0 202E2000                	db ` . \0`
 30948                                  fmt_rparen:
 30949 00001AB4 2900                    	db `)\0`
 30950                                  fmt_space:
 30951 00001AB6 2000                    	db ` \0`
 30952                                  fmt_empty_vector:
 30953 00001AB8 23282900                	db `#()\0`
 30954                                  fmt_vector:
 30955 00001ABC 232800                  	db `#(\0`
 30956                                  fmt_real:
 30957 00001ABF 256600                  	db `%f\0`
 30958                                  fmt_fraction:
 30959 00001AC2 256C642F256C6400        	db `%ld/%ld\0`
 30960                                  fmt_zero:
 30961 00001ACA 3000                    	db `0\0`
 30962                                  fmt_int:
 30963 00001ACC 256C6400                	db `%ld\0`
 30964                                  fmt_unknown_scheme_object_error:
 30965 00001AD0 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 30965 00001AD9 6F723A20556E6B6E6F-
 30965 00001AE2 776E20536368656D65-
 30965 00001AEB 2D6F626A6563742028-
 30965 00001AF4 525454492030782530-
 30965 00001AFD 32582920           
 30966 00001B01 617420616464726573-     	db `at address 0x%08X\n\n\0`
 30966 00001B0A 73203078253038580A-
 30966 00001B13 0A00               
 30967                                  fmt_dquote:
 30968 00001B15 2200                    	db `\"\0`
 30969                                  fmt_string_char:
 30970 00001B17 256300                          db `%c\0`
 30971                                  fmt_string_char_7:
 30972 00001B1A 5C6100                          db `\\a\0`
 30973                                  fmt_string_char_8:
 30974 00001B1D 5C6200                          db `\\b\0`
 30975                                  fmt_string_char_9:
 30976 00001B20 5C7400                          db `\\t\0`
 30977                                  fmt_string_char_10:
 30978 00001B23 5C6E00                          db `\\n\0`
 30979                                  fmt_string_char_11:
 30980 00001B26 5C7600                          db `\\v\0`
 30981                                  fmt_string_char_12:
 30982 00001B29 5C6600                          db `\\f\0`
 30983                                  fmt_string_char_13:
 30984 00001B2C 5C7200                          db `\\r\0`
 30985                                  fmt_string_char_34:
 30986 00001B2F 5C2200                          db `\\"\0`
 30987                                  fmt_string_char_92:
 30988 00001B32 5C5C00                          db `\\\\\0`
 30989                                  fmt_string_char_hex:
 30990 00001B35 5C7825583B00                    db `\\x%X;\0`
 30991                                  
 30992                                  section .text
 30993                                  
 30994                                  print_sexpr:
 30995 000177B1 C8000000                	enter 0, 0
 30996 000177B5 8A07                    	mov al, byte [rdi]
 30997 000177B7 3C00                    	cmp al, T_void
 30998 000177B9 7465                    	je .Lvoid
 30999 000177BB 3C01                    	cmp al, T_nil
 31000 000177BD 7470                    	je .Lnil
 31001 000177BF 3C09                    	cmp al, T_boolean_false
 31002 000177C1 747B                    	je .Lboolean_false
 31003 000177C3 3C0A                    	cmp al, T_boolean_true
 31004 000177C5 0F8482000000            	je .Lboolean_true
 31005 000177CB 3C02                    	cmp al, T_char
 31006 000177CD 0F8489000000            	je .Lchar
 31007 000177D3 3C41                    	cmp al, T_interned_symbol
 31008 000177D5 0F84CB010000            	je .Linterned_symbol
 31009 000177DB 3C42                            cmp al, T_uninterned_symbol
 31010 000177DD 0F84EF010000                    je .Luninterned_symbol
 31011 000177E3 3C21                    	cmp al, T_pair
 31012 000177E5 0F84FA010000            	je .Lpair
 31013 000177EB 3C22                    	cmp al, T_vector
 31014 000177ED 0F84C3020000            	je .Lvector
 31015 000177F3 3C04                    	cmp al, T_closure
 31016 000177F5 0F8491010000            	je .Lclosure
 31017 000177FB 3C13                    	cmp al, T_real
 31018 000177FD 0F8454030000            	je .Lreal
 31019 00017803 3C12                    	cmp al, T_fraction
 31020 00017805 0F847A030000            	je .Lfraction
 31021 0001780B 3C11                    	cmp al, T_integer
 31022 0001780D 0F84B3030000            	je .Linteger
 31023 00017813 3C03                    	cmp al, T_string
 31024 00017815 0F84BE030000            	je .Lstring
 31025                                  
 31026 0001781B E9F6040000              	jmp .Lunknown_sexpr_type
 31027                                  
 31028                                  .Lvoid:
 31029 00017820 48BF-                   	mov rdi, fmt_void
 31029 00017822 [101A000000000000] 
 31030 0001782A E91A050000              	jmp .Lemit
 31031                                  
 31032                                  .Lnil:
 31033 0001782F 48BF-                   	mov rdi, fmt_nil
 31033 00017831 [181A000000000000] 
 31034 00017839 E90B050000              	jmp .Lemit
 31035                                  
 31036                                  .Lboolean_false:
 31037 0001783E 48BF-                   	mov rdi, fmt_boolean_false
 31037 00017840 [1B1A000000000000] 
 31038 00017848 E9FC040000              	jmp .Lemit
 31039                                  
 31040                                  .Lboolean_true:
 31041 0001784D 48BF-                   	mov rdi, fmt_boolean_true
 31041 0001784F [1E1A000000000000] 
 31042 00017857 E9ED040000              	jmp .Lemit
 31043                                  
 31044                                  .Lchar:
 31045 0001785C 8A4701                  	mov al, byte [rdi + 1]
 31046 0001785F 3C20                    	cmp al, ' '
 31047 00017861 7E28                    	jle .Lchar_whitespace
 31048 00017863 3C5C                    	cmp al, 92 		; backslash
 31049 00017865 0F847C000000            	je .Lchar_backslash
 31050 0001786B 3C22                    	cmp al, '"'
 31051 0001786D 0F8483000000            	je .Lchar_dquote
 31052 00017873 4825FF000000            	and rax, 255
 31053 00017879 48BF-                   	mov rdi, fmt_char_simple
 31053 0001787B [291A000000000000] 
 31054 00017883 4889C6                  	mov rsi, rax
 31055 00017886 E9BE040000              	jmp .Lemit
 31056                                  
 31057                                  .Lchar_whitespace:
 31058 0001788B 3C00                    	cmp al, 0
 31059 0001788D 7476                    	je .Lchar_null
 31060 0001788F 3C07                    	cmp al, 7
 31061 00017891 0F847D000000            	je .Lchar_bell
 31062 00017897 3C08                    	cmp al, 8
 31063 00017899 0F8484000000            	je .Lchar_backspace
 31064 0001789F 3C09                    	cmp al, 9
 31065 000178A1 0F848B000000            	je .Lchar_tab
 31066 000178A7 3C0A                    	cmp al, 10
 31067 000178A9 0F8492000000            	je .Lchar_newline
 31068 000178AF 3C0C                    	cmp al, 12
 31069 000178B1 0F8499000000            	je .Lchar_formfeed
 31070 000178B7 3C0D                    	cmp al, 13
 31071 000178B9 0F84A0000000            	je .Lchar_return
 31072 000178BF 3C1B                    	cmp al, 27
 31073 000178C1 0F84A7000000            	je .Lchar_escape
 31074 000178C7 4825FF000000            	and rax, 255
 31075 000178CD 3C20                    	cmp al, ' '
 31076 000178CF 0F84A8000000            	je .Lchar_space
 31077 000178D5 48BF-                   	mov rdi, fmt_char_hex
 31077 000178D7 [751A000000000000] 
 31078 000178DF 4889C6                  	mov rsi, rax
 31079 000178E2 E962040000              	jmp .Lemit	
 31080                                  
 31081                                  .Lchar_backslash:
 31082 000178E7 48BF-                   	mov rdi, fmt_char_backslash
 31082 000178E9 [211A000000000000] 
 31083 000178F1 E953040000              	jmp .Lemit
 31084                                  
 31085                                  .Lchar_dquote:
 31086 000178F6 48BF-                   	mov rdi, fmt_char_dquote
 31086 000178F8 [251A000000000000] 
 31087 00017900 E944040000              	jmp .Lemit
 31088                                  
 31089                                  .Lchar_null:
 31090 00017905 48BF-                   	mov rdi, fmt_char_null
 31090 00017907 [2E1A000000000000] 
 31091 0001790F E935040000              	jmp .Lemit
 31092                                  
 31093                                  .Lchar_bell:
 31094 00017914 48BF-                   	mov rdi, fmt_char_bell
 31094 00017916 [341A000000000000] 
 31095 0001791E E926040000              	jmp .Lemit
 31096                                  
 31097                                  .Lchar_backspace:
 31098 00017923 48BF-                   	mov rdi, fmt_char_backspace
 31098 00017925 [3B1A000000000000] 
 31099 0001792D E917040000              	jmp .Lemit
 31100                                  
 31101                                  .Lchar_tab:
 31102 00017932 48BF-                   	mov rdi, fmt_char_tab
 31102 00017934 [471A000000000000] 
 31103 0001793C E908040000              	jmp .Lemit
 31104                                  
 31105                                  .Lchar_newline:
 31106 00017941 48BF-                   	mov rdi, fmt_char_newline
 31106 00017943 [4D1A000000000000] 
 31107 0001794B E9F9030000              	jmp .Lemit
 31108                                  
 31109                                  .Lchar_formfeed:
 31110 00017950 48BF-                   	mov rdi, fmt_char_formfeed
 31110 00017952 [571A000000000000] 
 31111 0001795A E9EA030000              	jmp .Lemit
 31112                                  
 31113                                  .Lchar_return:
 31114 0001795F 48BF-                   	mov rdi, fmt_char_return
 31114 00017961 [5E1A000000000000] 
 31115 00017969 E9DB030000              	jmp .Lemit
 31116                                  
 31117                                  .Lchar_escape:
 31118 0001796E 48BF-                   	mov rdi, fmt_char_escape
 31118 00017970 [671A000000000000] 
 31119 00017978 E9CC030000              	jmp .Lemit
 31120                                  
 31121                                  .Lchar_space:
 31122 0001797D 48BF-                   	mov rdi, fmt_char_space
 31122 0001797F [6D1A000000000000] 
 31123 00017987 E9BD030000              	jmp .Lemit
 31124                                  
 31125                                  .Lclosure:
 31126 0001798C 4889FE                  	mov rsi, qword rdi
 31127 0001798F 48BF-                   	mov rdi, fmt_closure
 31127 00017991 [821A000000000000] 
 31128 00017999 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 31129 0001799D 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 31130 000179A1 E9A3030000              	jmp .Lemit
 31131                                  
 31132                                  .Linterned_symbol:
 31133 000179A6 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 31134 000179AA BE01000000              	mov rsi, 1		 ; size = 1 byte
 31135 000179AF 488B5701                	mov rdx, qword [rdi + 1] ; length
 31136 000179B3 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 31137 000179B7 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 31138                                  	ENTER
    44 000179BF C8000000            <1>  enter 0, 0
    45 000179C3 4883E4F0            <1>  and rsp, ~15
 31139 000179C7 E8(00000000)            	call fwrite
 31140                                  	LEAVE
    49 000179CC C9                  <1>  leave
 31141 000179CD E98C030000              	jmp .Lend
 31142                                  
 31143                                  .Luninterned_symbol:
 31144 000179D2 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 31145 000179D6 48BF-                           mov rdi, fmt_gensym
 31145 000179D8 [7D1A000000000000] 
 31146 000179E0 E964030000                      jmp .Lemit
 31147                                  	
 31148                                  .Lpair:
 31149 000179E5 57                      	push rdi
 31150 000179E6 48BF-                   	mov rdi, fmt_lparen
 31150 000179E8 [AE1A000000000000] 
 31151 000179F0 B800000000              	mov rax, 0
 31152                                          ENTER
    44 000179F5 C8000000            <1>  enter 0, 0
    45 000179F9 4883E4F0            <1>  and rsp, ~15
 31153 000179FD E8(00000000)            	call printf
 31154                                          LEAVE
    49 00017A02 C9                  <1>  leave
 31155 00017A03 488B3C24                	mov rdi, qword [rsp] 	; pair
 31156 00017A07 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 31157 00017A0B E8A1FDFFFF              	call print_sexpr
 31158 00017A10 5F                      	pop rdi 		; pair
 31159 00017A11 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 31160                                  .Lcdr:
 31161 00017A15 8A07                    	mov al, byte [rdi]
 31162 00017A17 3C01                    	cmp al, T_nil
 31163 00017A19 7447                    	je .Lcdr_nil
 31164 00017A1B 3C21                    	cmp al, T_pair
 31165 00017A1D 7462                    	je .Lcdr_pair
 31166 00017A1F 57                      	push rdi
 31167 00017A20 48BF-                   	mov rdi, fmt_dotted_pair
 31167 00017A22 [B01A000000000000] 
 31168 00017A2A B800000000              	mov rax, 0
 31169                                          ENTER
    44 00017A2F C8000000            <1>  enter 0, 0
    45 00017A33 4883E4F0            <1>  and rsp, ~15
 31170 00017A37 E8(00000000)            	call printf
 31171                                          LEAVE
    49 00017A3C C9                  <1>  leave
 31172 00017A3D 5F                      	pop rdi
 31173 00017A3E E86EFDFFFF              	call print_sexpr
 31174 00017A43 48BF-                   	mov rdi, fmt_rparen
 31174 00017A45 [B41A000000000000] 
 31175 00017A4D B800000000              	mov rax, 0
 31176                                          ENTER
    44 00017A52 C8000000            <1>  enter 0, 0
    45 00017A56 4883E4F0            <1>  and rsp, ~15
 31177 00017A5A E8(00000000)            	call printf
 31178                                          LEAVE
    49 00017A5F C9                  <1>  leave
 31179 00017A60 C9                      	leave
 31180 00017A61 C3                      	ret
 31181                                  
 31182                                  .Lcdr_nil:
 31183 00017A62 48BF-                   	mov rdi, fmt_rparen
 31183 00017A64 [B41A000000000000] 
 31184 00017A6C B800000000              	mov rax, 0
 31185                                          ENTER
    44 00017A71 C8000000            <1>  enter 0, 0
    45 00017A75 4883E4F0            <1>  and rsp, ~15
 31186 00017A79 E8(00000000)            	call printf
 31187                                          LEAVE
    49 00017A7E C9                  <1>  leave
 31188 00017A7F C9                      	leave
 31189 00017A80 C3                      	ret
 31190                                  
 31191                                  .Lcdr_pair:
 31192 00017A81 57                      	push rdi
 31193 00017A82 48BF-                   	mov rdi, fmt_space
 31193 00017A84 [B61A000000000000] 
 31194 00017A8C B800000000              	mov rax, 0
 31195                                          ENTER
    44 00017A91 C8000000            <1>  enter 0, 0
    45 00017A95 4883E4F0            <1>  and rsp, ~15
 31196 00017A99 E8(00000000)            	call printf
 31197                                          LEAVE
    49 00017A9E C9                  <1>  leave
 31198 00017A9F 488B3C24                	mov rdi, qword [rsp]
 31199 00017AA3 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 31200 00017AA7 E805FDFFFF              	call print_sexpr
 31201 00017AAC 5F                      	pop rdi
 31202 00017AAD 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 31203 00017AB1 E95FFFFFFF              	jmp .Lcdr
 31204                                  
 31205                                  .Lvector:
 31206 00017AB6 488B4701                	mov rax, qword [rdi + 1] ; length
 31207 00017ABA 4883F800                	cmp rax, 0
 31208 00017ABE 0F8484000000            	je .Lvector_empty
 31209 00017AC4 57                      	push rdi
 31210 00017AC5 48BF-                   	mov rdi, fmt_vector
 31210 00017AC7 [BC1A000000000000] 
 31211 00017ACF B800000000              	mov rax, 0
 31212                                          ENTER
    44 00017AD4 C8000000            <1>  enter 0, 0
    45 00017AD8 4883E4F0            <1>  and rsp, ~15
 31213 00017ADC E8(00000000)            	call printf
 31214                                          LEAVE
    49 00017AE1 C9                  <1>  leave
 31215 00017AE2 488B3C24                	mov rdi, qword [rsp]
 31216 00017AE6 FF7701                  	push qword [rdi + 1]
 31217 00017AE9 6A01                    	push 1
 31218 00017AEB 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 31219 00017AEF E8BDFCFFFF              	call print_sexpr
 31220                                  .Lvector_loop:
 31221                                  	; [rsp] index
 31222                                  	; [rsp + 8*1] limit
 31223                                  	; [rsp + 8*2] vector
 31224 00017AF4 488B0424                	mov rax, qword [rsp]
 31225 00017AF8 483B442408              	cmp rax, qword [rsp + 8*1]
 31226 00017AFD 7436                    	je .Lvector_end
 31227 00017AFF 48BF-                   	mov rdi, fmt_space
 31227 00017B01 [B61A000000000000] 
 31228 00017B09 B800000000              	mov rax, 0
 31229                                          ENTER
    44 00017B0E C8000000            <1>  enter 0, 0
    45 00017B12 4883E4F0            <1>  and rsp, ~15
 31230 00017B16 E8(00000000)            	call printf
 31231                                          LEAVE
    49 00017B1B C9                  <1>  leave
 31232 00017B1C 488B0424                	mov rax, qword [rsp]
 31233 00017B20 488B5C2410              	mov rbx, qword [rsp + 8*2]
 31234 00017B25 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 31235 00017B2A E882FCFFFF              	call print_sexpr
 31236 00017B2F 48FF0424                	inc qword [rsp]
 31237 00017B33 EBBF                    	jmp .Lvector_loop
 31238                                  
 31239                                  .Lvector_end:
 31240 00017B35 4883C418                	add rsp, 8*3
 31241 00017B39 48BF-                   	mov rdi, fmt_rparen
 31241 00017B3B [B41A000000000000] 
 31242 00017B43 E901020000              	jmp .Lemit	
 31243                                  
 31244                                  .Lvector_empty:
 31245 00017B48 48BF-                   	mov rdi, fmt_empty_vector
 31245 00017B4A [B81A000000000000] 
 31246 00017B52 E9F2010000              	jmp .Lemit
 31247                                  
 31248                                  .Lreal:
 31249 00017B57 FF7701                  	push qword [rdi + 1]
 31250 00017B5A F20F100424              	movsd xmm0, qword [rsp]
 31251 00017B5F 4883C408                	add rsp, 8*1
 31252 00017B63 48BF-                   	mov rdi, fmt_real
 31252 00017B65 [BF1A000000000000] 
 31253 00017B6D B801000000              	mov rax, 1
 31254                                  	ENTER
    44 00017B72 C8000000            <1>  enter 0, 0
    45 00017B76 4883E4F0            <1>  and rsp, ~15
 31255 00017B7A E8(00000000)            	call printf
 31256                                  	LEAVE
    49 00017B7F C9                  <1>  leave
 31257 00017B80 E9D9010000              	jmp .Lend
 31258                                  
 31259                                  .Lfraction:
 31260 00017B85 488B7701                	mov rsi, qword [rdi + 1]
 31261 00017B89 488B5709                	mov rdx, qword [rdi + 1 + 8]
 31262 00017B8D 4883FE00                	cmp rsi, 0
 31263 00017B91 7415                    	je .Lrat_zero
 31264 00017B93 4883FA01                	cmp rdx, 1
 31265 00017B97 741E                    	je .Lrat_int
 31266 00017B99 48BF-                   	mov rdi, fmt_fraction
 31266 00017B9B [C21A000000000000] 
 31267 00017BA3 E9A1010000              	jmp .Lemit
 31268                                  
 31269                                  .Lrat_zero:
 31270 00017BA8 48BF-                   	mov rdi, fmt_zero
 31270 00017BAA [CA1A000000000000] 
 31271 00017BB2 E992010000              	jmp .Lemit
 31272                                  
 31273                                  .Lrat_int:
 31274 00017BB7 48BF-                   	mov rdi, fmt_int
 31274 00017BB9 [CC1A000000000000] 
 31275 00017BC1 E983010000              	jmp .Lemit
 31276                                  
 31277                                  .Linteger:
 31278 00017BC6 488B7701                	mov rsi, qword [rdi + 1]
 31279 00017BCA 48BF-                   	mov rdi, fmt_int
 31279 00017BCC [CC1A000000000000] 
 31280 00017BD4 E970010000              	jmp .Lemit
 31281                                  
 31282                                  .Lstring:
 31283 00017BD9 488D4709                	lea rax, [rdi + 1 + 8]
 31284 00017BDD 50                      	push rax
 31285 00017BDE FF7701                  	push qword [rdi + 1]
 31286 00017BE1 48BF-                   	mov rdi, fmt_dquote
 31286 00017BE3 [151B000000000000] 
 31287 00017BEB B800000000              	mov rax, 0
 31288                                  	ENTER
    44 00017BF0 C8000000            <1>  enter 0, 0
    45 00017BF4 4883E4F0            <1>  and rsp, ~15
 31289 00017BF8 E8(00000000)            	call printf
 31290                                  	LEAVE
    49 00017BFD C9                  <1>  leave
 31291                                  .Lstring_loop:
 31292                                  	; qword [rsp]: limit
 31293                                  	; qword [rsp + 8*1]: char *
 31294 00017BFE 48833C2400              	cmp qword [rsp], 0
 31295 00017C03 0F84FD000000            	je .Lstring_end
 31296 00017C09 488B442408              	mov rax, qword [rsp + 8*1]
 31297 00017C0E 8A00                    	mov al, byte [rax]
 31298 00017C10 4825FF000000            	and rax, 255
 31299 00017C16 3C07                    	cmp al, 7
 31300 00017C18 7468                            je .Lstring_char_7
 31301 00017C1A 3C08                            cmp al, 8
 31302 00017C1C 7470                            je .Lstring_char_8
 31303 00017C1E 3C09                            cmp al, 9
 31304 00017C20 7478                            je .Lstring_char_9
 31305 00017C22 3C0A                            cmp al, 10
 31306 00017C24 0F847C000000                    je .Lstring_char_10
 31307 00017C2A 3C0B                            cmp al, 11
 31308 00017C2C 0F8480000000                    je .Lstring_char_11
 31309 00017C32 3C0C                            cmp al, 12
 31310 00017C34 0F8484000000                    je .Lstring_char_12
 31311 00017C3A 3C0D                            cmp al, 13
 31312 00017C3C 0F8488000000                    je .Lstring_char_13
 31313 00017C42 3C22                            cmp al, 34
 31314 00017C44 0F848C000000                    je .Lstring_char_34
 31315 00017C4A 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 31317 00017C4C 3C20                            cmp al, ' '
 31318 00017C4E 0F8CA0000000                    jl .Lstring_char_hex
 31319 00017C54 48BF-                           mov rdi, fmt_string_char
 31319 00017C56 [171B000000000000] 
 31320 00017C5E 4889C6                          mov rsi, rax
 31321                                  .Lstring_char_emit:
 31322 00017C61 B800000000                      mov rax, 0
 31323                                          ENTER
    44 00017C66 C8000000            <1>  enter 0, 0
    45 00017C6A 4883E4F0            <1>  and rsp, ~15
 31324 00017C6E E8(00000000)                    call printf
 31325                                          LEAVE
    49 00017C73 C9                  <1>  leave
 31326 00017C74 48FF0C24                        dec qword [rsp]
 31327 00017C78 48FF442408                      inc qword [rsp + 8*1]
 31328 00017C7D E97CFFFFFF                      jmp .Lstring_loop
 31329                                  
 31330                                  .Lstring_char_7:
 31331 00017C82 48BF-                           mov rdi, fmt_string_char_7
 31331 00017C84 [1A1B000000000000] 
 31332 00017C8C EBD3                            jmp .Lstring_char_emit
 31333                                  
 31334                                  .Lstring_char_8:
 31335 00017C8E 48BF-                           mov rdi, fmt_string_char_8
 31335 00017C90 [1D1B000000000000] 
 31336 00017C98 EBC7                            jmp .Lstring_char_emit
 31337                                          
 31338                                  .Lstring_char_9:
 31339 00017C9A 48BF-                           mov rdi, fmt_string_char_9
 31339 00017C9C [201B000000000000] 
 31340 00017CA4 EBBB                            jmp .Lstring_char_emit
 31341                                  
 31342                                  .Lstring_char_10:
 31343 00017CA6 48BF-                           mov rdi, fmt_string_char_10
 31343 00017CA8 [231B000000000000] 
 31344 00017CB0 EBAF                            jmp .Lstring_char_emit
 31345                                  
 31346                                  .Lstring_char_11:
 31347 00017CB2 48BF-                           mov rdi, fmt_string_char_11
 31347 00017CB4 [261B000000000000] 
 31348 00017CBC EBA3                            jmp .Lstring_char_emit
 31349                                  
 31350                                  .Lstring_char_12:
 31351 00017CBE 48BF-                           mov rdi, fmt_string_char_12
 31351 00017CC0 [291B000000000000] 
 31352 00017CC8 EB97                            jmp .Lstring_char_emit
 31353                                  
 31354                                  .Lstring_char_13:
 31355 00017CCA 48BF-                           mov rdi, fmt_string_char_13
 31355 00017CCC [2C1B000000000000] 
 31356 00017CD4 EB8B                            jmp .Lstring_char_emit
 31357                                  
 31358                                  .Lstring_char_34:
 31359 00017CD6 48BF-                           mov rdi, fmt_string_char_34
 31359 00017CD8 [2F1B000000000000] 
 31360 00017CE0 E97CFFFFFF                      jmp .Lstring_char_emit
 31361                                  
 31362                                  .Lstring_char_92:
 31363 00017CE5 48BF-                           mov rdi, fmt_string_char_92
 31363 00017CE7 [321B000000000000] 
 31364 00017CEF E96DFFFFFF                      jmp .Lstring_char_emit
 31365                                  
 31366                                  .Lstring_char_hex:
 31367 00017CF4 48BF-                           mov rdi, fmt_string_char_hex
 31367 00017CF6 [351B000000000000] 
 31368 00017CFE 4889C6                          mov rsi, rax
 31369 00017D01 E95BFFFFFF                      jmp .Lstring_char_emit        
 31370                                  
 31371                                  .Lstring_end:
 31372 00017D06 4883C410                	add rsp, 8 * 2
 31373 00017D0A 48BF-                   	mov rdi, fmt_dquote
 31373 00017D0C [151B000000000000] 
 31374 00017D14 EB33                    	jmp .Lemit
 31375                                  
 31376                                  .Lunknown_sexpr_type:
 31377 00017D16 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 31377 00017D18 [D01A000000000000] 
 31378 00017D20 4825FF000000            	and rax, 255
 31379 00017D26 4889C2                  	mov rdx, rax
 31380 00017D29 4889F9                  	mov rcx, rdi
 31381 00017D2C 488B3C25[00000000]      	mov rdi, qword [stderr]
 31382 00017D34 B800000000              	mov rax, 0
 31383                                          ENTER
    44 00017D39 C8000000            <1>  enter 0, 0
    45 00017D3D 4883E4F0            <1>  and rsp, ~15
 31384 00017D41 E8(00000000)            	call fprintf
 31385                                          LEAVE
    49 00017D46 C9                  <1>  leave
 31386 00017D47 C9                              leave
 31387 00017D48 C3                              ret
 31388                                  
 31389                                  .Lemit:
 31390 00017D49 B800000000              	mov rax, 0
 31391                                          ENTER
    44 00017D4E C8000000            <1>  enter 0, 0
    45 00017D52 4883E4F0            <1>  and rsp, ~15
 31392 00017D56 E8(00000000)            	call printf
 31393                                          LEAVE
    49 00017D5B C9                  <1>  leave
 31394 00017D5C EB00                    	jmp .Lend
 31395                                  
 31396                                  .Lend:
 31397                                  	LEAVE
    49 00017D5E C9                  <1>  leave
 31398 00017D5F C3                      	ret
 31399                                  
 31400                                  ;;; rdi: address of free variable
 31401                                  ;;; rsi: address of code-pointer
 31402                                  bind_primitive:
 31403 00017D60 C8000000                        enter 0, 0
 31404 00017D64 57                              push rdi
 31405 00017D65 BF11000000                      mov rdi, (1 + 8 + 8)
 31406 00017D6A E8C1F7FFFF                      call malloc
 31407 00017D6F 5F                              pop rdi
 31408 00017D70 C60004                          mov byte [rax], T_closure
 31409 00017D73 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 31410 00017D7B 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 31411 00017D7F 488907                          mov qword [rdi], rax
 31412 00017D82 48B8-                           mov rax, sob_void
 31412 00017D84 [0000000000000000] 
 31413 00017D8C C9                              leave
 31414 00017D8D C3                              ret
 31415                                  
 31416                                  L_code_ptr_ash:
 31417 00017D8E C8000000                        enter 0, 0
 31418 00017D92 48837D1802                      cmp COUNT, 2
 31419 00017D97 0F85A2140000                    jne L_error_arg_count_2
 31420 00017D9D 488B7D20                        mov rdi, PARAM(0)
 31421                                          assert_integer(rdi)
    53 00017DA1 803F11              <1>  cmp byte [%1], %2
    54 00017DA4 0F8534150000        <1>  jne L_error_incorrect_type
 31422 00017DAA 488B4D28                        mov rcx, PARAM(1)
 31423                                          assert_integer(rcx)
    53 00017DAE 803911              <1>  cmp byte [%1], %2
    54 00017DB1 0F8527150000        <1>  jne L_error_incorrect_type
 31424 00017DB7 488B7F01                        mov rdi, qword [rdi + 1]
 31425 00017DBB 488B4901                        mov rcx, qword [rcx + 1]
 31426 00017DBF 4883F900                        cmp rcx, 0
 31427 00017DC3 7C0F                            jl .L_negative
 31428                                  .L_loop_positive:
 31429 00017DC5 4883F900                        cmp rcx, 0
 31430 00017DC9 741B                            je .L_exit
 31431 00017DCB 48D3E7                          sal rdi, cl
 31432 00017DCE 48C1E908                        shr rcx, 8
 31433 00017DD2 EBF1                            jmp .L_loop_positive
 31434                                  .L_negative:
 31435 00017DD4 48F7D9                          neg rcx
 31436                                  .L_loop_negative:
 31437 00017DD7 4883F900                        cmp rcx, 0
 31438 00017DDB 7409                            je .L_exit
 31439 00017DDD 48D3FF                          sar rdi, cl
 31440 00017DE0 48C1E908                        shr rcx, 8
 31441 00017DE4 EBF1                            jmp .L_loop_negative
 31442                                  .L_exit:
 31443 00017DE6 E86E130000                      call make_integer
 31444 00017DEB C9                              leave
 31445 00017DEC C22000                          ret AND_KILL_FRAME(2)
 31446                                  
 31447                                  L_code_ptr_logand:
 31448 00017DEF C8000000                        enter 0, 0
 31449 00017DF3 48837D1802                      cmp COUNT, 2
 31450 00017DF8 0F8541140000                    jne L_error_arg_count_2
 31451 00017DFE 4C8B4520                        mov r8, PARAM(0)
 31452                                          assert_integer(r8)
    53 00017E02 41803811            <1>  cmp byte [%1], %2
    54 00017E06 0F85D2140000        <1>  jne L_error_incorrect_type
 31453 00017E0C 4C8B4D28                        mov r9, PARAM(1)
 31454                                          assert_integer(r9)
    53 00017E10 41803911            <1>  cmp byte [%1], %2
    54 00017E14 0F85C4140000        <1>  jne L_error_incorrect_type
 31455 00017E1A 498B7801                        mov rdi, qword [r8 + 1]
 31456 00017E1E 49237901                        and rdi, qword [r9 + 1]
 31457 00017E22 E832130000                      call make_integer
 31458 00017E27 C9                              leave
 31459 00017E28 C22000                          ret AND_KILL_FRAME(2)
 31460                                  
 31461                                  L_code_ptr_logor:
 31462 00017E2B C8000000                        enter 0, 0
 31463 00017E2F 48837D1802                      cmp COUNT, 2
 31464 00017E34 0F8505140000                    jne L_error_arg_count_2
 31465 00017E3A 4C8B4520                        mov r8, PARAM(0)
 31466                                          assert_integer(r8)
    53 00017E3E 41803811            <1>  cmp byte [%1], %2
    54 00017E42 0F8596140000        <1>  jne L_error_incorrect_type
 31467 00017E48 4C8B4D28                        mov r9, PARAM(1)
 31468                                          assert_integer(r9)
    53 00017E4C 41803911            <1>  cmp byte [%1], %2
    54 00017E50 0F8588140000        <1>  jne L_error_incorrect_type
 31469 00017E56 498B7801                        mov rdi, qword [r8 + 1]
 31470 00017E5A 490B7901                        or rdi, qword [r9 + 1]
 31471 00017E5E E8F6120000                      call make_integer
 31472 00017E63 C9                              leave
 31473 00017E64 C22000                          ret AND_KILL_FRAME(2)
 31474                                  
 31475                                  L_code_ptr_logxor:
 31476 00017E67 C8000000                        enter 0, 0
 31477 00017E6B 48837D1802                      cmp COUNT, 2
 31478 00017E70 0F85C9130000                    jne L_error_arg_count_2
 31479 00017E76 4C8B4520                        mov r8, PARAM(0)
 31480                                          assert_integer(r8)
    53 00017E7A 41803811            <1>  cmp byte [%1], %2
    54 00017E7E 0F855A140000        <1>  jne L_error_incorrect_type
 31481 00017E84 4C8B4D28                        mov r9, PARAM(1)
 31482                                          assert_integer(r9)
    53 00017E88 41803911            <1>  cmp byte [%1], %2
    54 00017E8C 0F854C140000        <1>  jne L_error_incorrect_type
 31483 00017E92 498B7801                        mov rdi, qword [r8 + 1]
 31484 00017E96 49337901                        xor rdi, qword [r9 + 1]
 31485 00017E9A E8BA120000                      call make_integer
 31486                                          LEAVE
    49 00017E9F C9                  <1>  leave
 31487 00017EA0 C22000                          ret AND_KILL_FRAME(2)
 31488                                  
 31489                                  L_code_ptr_lognot:
 31490 00017EA3 C8000000                        enter 0, 0
 31491 00017EA7 48837D1801                      cmp COUNT, 1
 31492 00017EAC 0F8558130000                    jne L_error_arg_count_1
 31493 00017EB2 4C8B4520                        mov r8, PARAM(0)
 31494                                          assert_integer(r8)
    53 00017EB6 41803811            <1>  cmp byte [%1], %2
    54 00017EBA 0F851E140000        <1>  jne L_error_incorrect_type
 31495 00017EC0 498B7801                        mov rdi, qword [r8 + 1]
 31496 00017EC4 48F7D7                          not rdi
 31497 00017EC7 E88D120000                      call make_integer
 31498 00017ECC C9                              leave
 31499 00017ECD C21800                          ret AND_KILL_FRAME(1)
 31500                                  
 31501                                  
 31502                                  L_code_ptr_bin_apply:
 31503 00017ED0 C8000000                        enter 0, 0
 31504 00017ED4 48837D1802                      cmp COUNT, 2
 31505 00017ED9 0F8560130000                    jne L_error_arg_count_2
 31506 00017EDF 488B4528                        mov rax, PARAM(1) ; list
 31507 00017EE3 BB00000000                      mov rbx,0 ;list length count
 31508                                  .L_length_loop: ;this loop is to iterate through the list and count it's  (stop when encountering nil)
 31509 00017EE8 803801                          cmp byte [rax], T_nil ;TODO: check if correct
 31510 00017EEB 7413                            je .L_length_loop_exit
 31511                                          assert_pair(rax)
    53 00017EED 803821              <1>  cmp byte [%1], %2
    54 00017EF0 0F85E8130000        <1>  jne L_error_incorrect_type
 31512 00017EF6 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 31513 00017EFA 4883C301                        add rbx,1
 31514 00017EFE EBE8                            jmp .L_length_loop
 31515                                  .L_length_loop_exit: ;1381
 31516 00017F00 488B4528                        mov rax, PARAM(1) ; list
 31517                                          ;rbx contains list's length
 31518 00017F04 488B4D20                        mov rcx, PARAM(0) ; PROC
 31519                                          assert_closure(rcx)
    53 00017F08 803904              <1>  cmp byte [%1], %2
    54 00017F0B 0F85CD130000        <1>  jne L_error_incorrect_type
 31520 00017F11 BA00000000                      mov rdx, 0 ;i in (int i =0;i<list.length;i++)
 31521 00017F16 4C8B4508                        mov r8, RET_ADDR
 31522 00017F1A 488B6D00                        mov rbp, OLD_RBP
 31523 00017F1E 4889EC                          mov rsp, rbp
 31524                                  .L_loop: ;loop to push list's to stack. not done with push because we need to invert it's order on stack.
 31525 00017F21 4839DA                          cmp rdx, rbx ; rdx=index, rbx=count
 31526 00017F24 7422                            je .L_loop_exit
 31527 00017F26 4989D9                          mov r9, rbx
 31528 00017F29 4929D1                          sub r9, rdx
 31529 00017F2C 4983C101                        add r9, 1
 31530 00017F30 4D6BC9F8                        imul r9, -8
 31531 00017F34 4901E9                          add r9, rbp
 31532                                          ;mov [rbp-8*(rbx - rdx + 1)], SOB_PAIR_CAR(rax)
 31533 00017F37 488B7801                        mov rdi, SOB_PAIR_CAR(rax)
 31534 00017F3B 498939                          mov [r9], rdi
 31535                                          ;;above line should push parameters in backward order (for list (1 2 3) should push 1 2 3 to stack)
 31536 00017F3E 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 31537 00017F42 4883C201                        add rdx, 1
 31538 00017F46 EBD9                            jmp .L_loop
 31539                                  .L_loop_exit:
 31540 00017F48 4989D9                          mov r9, rbx
 31541 00017F4B 4983C101                        add r9,1
 31542 00017F4F 4D6BC9F8                        imul r9, -8
 31543 00017F53 4901E9                          add r9,rbp
 31544                                         ; mov rsp, rbp- 8 * (rbx + 1) ;fix stack pointer to include added parameters in loop.
 31545 00017F56 4C89CC                          mov rsp, r9
 31546 00017F59 53                              push rbx
 31547 00017F5A FF7101                          push SOB_CLOSURE_ENV(rcx)
 31548 00017F5D 4150                            push r8
 31549 00017F5F FF6109                          jmp SOB_CLOSURE_CODE(rcx)
 31550                                  
 31551                                  
 31552                                  L_code_ptr_is_null:
 31553 00017F62 C8000000                        enter 0, 0
 31554 00017F66 48837D1801                      cmp COUNT, 1
 31555 00017F6B 0F8599120000                    jne L_error_arg_count_1
 31556 00017F71 488B4520                        mov rax, PARAM(0)
 31557 00017F75 803801                          cmp byte [rax], T_nil
 31558 00017F78 750C                            jne .L_false
 31559 00017F7A 48B8-                           mov rax, sob_boolean_true
 31559 00017F7C [0300000000000000] 
 31560 00017F84 EB0A                            jmp .L_end
 31561                                  .L_false:
 31562 00017F86 48B8-                           mov rax, sob_boolean_false
 31562 00017F88 [0200000000000000] 
 31563                                  .L_end:
 31564 00017F90 C9                              leave
 31565 00017F91 C21800                          ret AND_KILL_FRAME(1)
 31566                                  
 31567                                  L_code_ptr_is_pair:
 31568 00017F94 C8000000                        enter 0, 0
 31569 00017F98 48837D1801                      cmp COUNT, 1
 31570 00017F9D 0F8567120000                    jne L_error_arg_count_1
 31571 00017FA3 488B4520                        mov rax, PARAM(0)
 31572 00017FA7 803821                          cmp byte [rax], T_pair
 31573 00017FAA 750C                            jne .L_false
 31574 00017FAC 48B8-                           mov rax, sob_boolean_true
 31574 00017FAE [0300000000000000] 
 31575 00017FB6 EB0A                            jmp .L_end
 31576                                  .L_false:
 31577 00017FB8 48B8-                           mov rax, sob_boolean_false
 31577 00017FBA [0200000000000000] 
 31578                                  .L_end:
 31579 00017FC2 C9                              leave
 31580 00017FC3 C21800                          ret AND_KILL_FRAME(1)
 31581                                          
 31582                                  L_code_ptr_is_void:
 31583 00017FC6 C8000000                        enter 0, 0
 31584 00017FCA 48837D1801                      cmp COUNT, 1
 31585 00017FCF 0F8535120000                    jne L_error_arg_count_1
 31586 00017FD5 488B4520                        mov rax, PARAM(0)
 31587 00017FD9 803800                          cmp byte [rax], T_void
 31588 00017FDC 750C                            jne .L_false
 31589 00017FDE 48B8-                           mov rax, sob_boolean_true
 31589 00017FE0 [0300000000000000] 
 31590 00017FE8 EB0A                            jmp .L_end
 31591                                  .L_false:
 31592 00017FEA 48B8-                           mov rax, sob_boolean_false
 31592 00017FEC [0200000000000000] 
 31593                                  .L_end:
 31594 00017FF4 C9                              leave
 31595 00017FF5 C21800                          ret AND_KILL_FRAME(1)
 31596                                  
 31597                                  L_code_ptr_is_char:
 31598 00017FF8 C8000000                        enter 0, 0
 31599 00017FFC 48837D1801                      cmp COUNT, 1
 31600 00018001 0F8503120000                    jne L_error_arg_count_1
 31601 00018007 488B4520                        mov rax, PARAM(0)
 31602 0001800B 803802                          cmp byte [rax], T_char
 31603 0001800E 750C                            jne .L_false
 31604 00018010 48B8-                           mov rax, sob_boolean_true
 31604 00018012 [0300000000000000] 
 31605 0001801A EB0A                            jmp .L_end
 31606                                  .L_false:
 31607 0001801C 48B8-                           mov rax, sob_boolean_false
 31607 0001801E [0200000000000000] 
 31608                                  .L_end:
 31609 00018026 C9                              leave
 31610 00018027 C21800                          ret AND_KILL_FRAME(1)
 31611                                  
 31612                                  L_code_ptr_is_string:
 31613 0001802A C8000000                        enter 0, 0
 31614 0001802E 48837D1801                      cmp COUNT, 1
 31615 00018033 0F85D1110000                    jne L_error_arg_count_1
 31616 00018039 488B4520                        mov rax, PARAM(0)
 31617 0001803D 803803                          cmp byte [rax], T_string
 31618 00018040 750C                            jne .L_false
 31619 00018042 48B8-                           mov rax, sob_boolean_true
 31619 00018044 [0300000000000000] 
 31620 0001804C EB0A                            jmp .L_end
 31621                                  .L_false:
 31622 0001804E 48B8-                           mov rax, sob_boolean_false
 31622 00018050 [0200000000000000] 
 31623                                  .L_end:
 31624 00018058 C9                              leave
 31625 00018059 C21800                          ret AND_KILL_FRAME(1)
 31626                                  
 31627                                  L_code_ptr_is_symbol:
 31628 0001805C C8000000                        enter 0, 0
 31629 00018060 48837D1801                      cmp COUNT, 1
 31630 00018065 0F859F110000                    jne L_error_arg_count_1
 31631 0001806B 4C8B4520                        mov r8, PARAM(0)
 31632 0001806F 41802040                        and byte [r8], T_symbol
 31633 00018073 740C                            jz .L_false
 31634 00018075 48B8-                           mov rax, sob_boolean_true
 31634 00018077 [0300000000000000] 
 31635 0001807F EB0A                            jmp .L_exit
 31636                                  .L_false:
 31637 00018081 48B8-                           mov rax, sob_boolean_false
 31637 00018083 [0200000000000000] 
 31638                                  .L_exit:
 31639 0001808B C9                              leave
 31640 0001808C C21800                          ret AND_KILL_FRAME(1)
 31641                                  
 31642                                  L_code_ptr_is_uninterned_symbol:
 31643 0001808F C8000000                        enter 0, 0
 31644 00018093 48837D1801                      cmp COUNT, 1
 31645 00018098 0F856C110000                    jne L_error_arg_count_1
 31646 0001809E 4C8B4520                        mov r8, PARAM(0)
 31647 000180A2 41803842                        cmp byte [r8], T_uninterned_symbol
 31648 000180A6 750C                            jne .L_false
 31649 000180A8 48B8-                           mov rax, sob_boolean_true
 31649 000180AA [0300000000000000] 
 31650 000180B2 EB0A                            jmp .L_exit
 31651                                  .L_false:
 31652 000180B4 48B8-                           mov rax, sob_boolean_false
 31652 000180B6 [0200000000000000] 
 31653                                  .L_exit:
 31654 000180BE C9                              leave
 31655 000180BF C21800                          ret AND_KILL_FRAME(1)
 31656                                  
 31657                                  L_code_ptr_is_interned_symbol:
 31658 000180C2 C8000000                        enter 0, 0
 31659 000180C6 48837D1801                      cmp COUNT, 1
 31660 000180CB 0F8539110000                    jne L_error_arg_count_1
 31661 000180D1 488B4520                        mov rax, PARAM(0)
 31662 000180D5 803841                          cmp byte [rax], T_interned_symbol
 31663 000180D8 750C                            jne .L_false
 31664 000180DA 48B8-                           mov rax, sob_boolean_true
 31664 000180DC [0300000000000000] 
 31665 000180E4 EB0A                            jmp .L_end
 31666                                  .L_false:
 31667 000180E6 48B8-                           mov rax, sob_boolean_false
 31667 000180E8 [0200000000000000] 
 31668                                  .L_end:
 31669 000180F0 C9                              leave
 31670 000180F1 C21800                          ret AND_KILL_FRAME(1)
 31671                                  
 31672                                  L_code_ptr_gensym:
 31673 000180F4 C8000000                        enter 0, 0
 31674 000180F8 48837D1800                      cmp COUNT, 0
 31675 000180FD 0F85D2100000                    jne L_error_arg_count_0
 31676 00018103 48FF0425[3B1B0000]              inc qword [gensym_count]
 31677 0001810B BF09000000                      mov rdi, (1 + 8)
 31678 00018110 E81BF4FFFF                      call malloc
 31679 00018115 C60042                          mov byte [rax], T_uninterned_symbol
 31680 00018118 488B0C25[3B1B0000]              mov rcx, qword [gensym_count]
 31681 00018120 48894801                        mov qword [rax + 1], rcx
 31682 00018124 C9                              leave
 31683 00018125 C21000                          ret AND_KILL_FRAME(0)
 31684                                  
 31685                                  L_code_ptr_is_vector:
 31686 00018128 C8000000                        enter 0, 0
 31687 0001812C 48837D1801                      cmp COUNT, 1
 31688 00018131 0F85D3100000                    jne L_error_arg_count_1
 31689 00018137 488B4520                        mov rax, PARAM(0)
 31690 0001813B 803822                          cmp byte [rax], T_vector
 31691 0001813E 750C                            jne .L_false
 31692 00018140 48B8-                           mov rax, sob_boolean_true
 31692 00018142 [0300000000000000] 
 31693 0001814A EB0A                            jmp .L_end
 31694                                  .L_false:
 31695 0001814C 48B8-                           mov rax, sob_boolean_false
 31695 0001814E [0200000000000000] 
 31696                                  .L_end:
 31697 00018156 C9                              leave
 31698 00018157 C21800                          ret AND_KILL_FRAME(1)
 31699                                  
 31700                                  L_code_ptr_is_closure:
 31701 0001815A C8000000                        enter 0, 0
 31702 0001815E 48837D1801                      cmp COUNT, 1
 31703 00018163 0F85A1100000                    jne L_error_arg_count_1
 31704 00018169 488B4520                        mov rax, PARAM(0)
 31705 0001816D 803804                          cmp byte [rax], T_closure
 31706 00018170 750C                            jne .L_false
 31707 00018172 48B8-                           mov rax, sob_boolean_true
 31707 00018174 [0300000000000000] 
 31708 0001817C EB0A                            jmp .L_end
 31709                                  .L_false:
 31710 0001817E 48B8-                           mov rax, sob_boolean_false
 31710 00018180 [0200000000000000] 
 31711                                  .L_end:
 31712 00018188 C9                              leave
 31713 00018189 C21800                          ret AND_KILL_FRAME(1)
 31714                                  
 31715                                  L_code_ptr_is_real:
 31716 0001818C C8000000                        enter 0, 0
 31717 00018190 48837D1801                      cmp COUNT, 1
 31718 00018195 0F856F100000                    jne L_error_arg_count_1
 31719 0001819B 488B4520                        mov rax, PARAM(0)
 31720 0001819F 803813                          cmp byte [rax], T_real
 31721 000181A2 750C                            jne .L_false
 31722 000181A4 48B8-                           mov rax, sob_boolean_true
 31722 000181A6 [0300000000000000] 
 31723 000181AE EB0A                            jmp .L_end
 31724                                  .L_false:
 31725 000181B0 48B8-                           mov rax, sob_boolean_false
 31725 000181B2 [0200000000000000] 
 31726                                  .L_end:
 31727 000181BA C9                              leave
 31728 000181BB C21800                          ret AND_KILL_FRAME(1)
 31729                                  
 31730                                  L_code_ptr_is_fraction:
 31731 000181BE C8000000                        enter 0, 0
 31732 000181C2 48837D1801                      cmp COUNT, 1
 31733 000181C7 0F853D100000                    jne L_error_arg_count_1
 31734 000181CD 488B4520                        mov rax, PARAM(0)
 31735 000181D1 803812                          cmp byte [rax], T_fraction
 31736 000181D4 750C                            jne .L_false
 31737 000181D6 48B8-                           mov rax, sob_boolean_true
 31737 000181D8 [0300000000000000] 
 31738 000181E0 EB0A                            jmp .L_end
 31739                                  .L_false:
 31740 000181E2 48B8-                           mov rax, sob_boolean_false
 31740 000181E4 [0200000000000000] 
 31741                                  .L_end:
 31742 000181EC C9                              leave
 31743 000181ED C21800                          ret AND_KILL_FRAME(1)
 31744                                  
 31745                                  L_code_ptr_is_boolean:
 31746 000181F0 C8000000                        enter 0, 0
 31747 000181F4 48837D1801                      cmp COUNT, 1
 31748 000181F9 0F850B100000                    jne L_error_arg_count_1
 31749 000181FF 488B4520                        mov rax, PARAM(0)
 31750 00018203 8A18                            mov bl, byte [rax]
 31751 00018205 80E308                          and bl, T_boolean
 31752 00018208 740C                            je .L_false
 31753 0001820A 48B8-                           mov rax, sob_boolean_true
 31753 0001820C [0300000000000000] 
 31754 00018214 EB0A                            jmp .L_end
 31755                                  .L_false:
 31756 00018216 48B8-                           mov rax, sob_boolean_false
 31756 00018218 [0200000000000000] 
 31757                                  .L_end:
 31758 00018220 C9                              leave
 31759 00018221 C21800                          ret AND_KILL_FRAME(1)
 31760                                          
 31761                                  L_code_ptr_is_boolean_false:
 31762 00018224 C8000000                        enter 0, 0
 31763 00018228 48837D1801                      cmp COUNT, 1
 31764 0001822D 0F85D70F0000                    jne L_error_arg_count_1
 31765 00018233 488B4520                        mov rax, PARAM(0)
 31766 00018237 8A18                            mov bl, byte [rax]
 31767 00018239 80FB09                          cmp bl, T_boolean_false
 31768 0001823C 750C                            jne .L_false
 31769 0001823E 48B8-                           mov rax, sob_boolean_true
 31769 00018240 [0300000000000000] 
 31770 00018248 EB0A                            jmp .L_end
 31771                                  .L_false:
 31772 0001824A 48B8-                           mov rax, sob_boolean_false
 31772 0001824C [0200000000000000] 
 31773                                  .L_end:
 31774 00018254 C9                              leave
 31775 00018255 C21800                          ret AND_KILL_FRAME(1)
 31776                                  
 31777                                  L_code_ptr_is_boolean_true:
 31778 00018258 C8000000                        enter 0, 0
 31779 0001825C 48837D1801                      cmp COUNT, 1
 31780 00018261 0F85A30F0000                    jne L_error_arg_count_1
 31781 00018267 488B4520                        mov rax, PARAM(0)
 31782 0001826B 8A18                            mov bl, byte [rax]
 31783 0001826D 80FB0A                          cmp bl, T_boolean_true
 31784 00018270 750C                            jne .L_false
 31785 00018272 48B8-                           mov rax, sob_boolean_true
 31785 00018274 [0300000000000000] 
 31786 0001827C EB0A                            jmp .L_end
 31787                                  .L_false:
 31788 0001827E 48B8-                           mov rax, sob_boolean_false
 31788 00018280 [0200000000000000] 
 31789                                  .L_end:
 31790 00018288 C9                              leave
 31791 00018289 C21800                          ret AND_KILL_FRAME(1)
 31792                                  
 31793                                  L_code_ptr_is_number:
 31794 0001828C C8000000                        enter 0, 0
 31795 00018290 48837D1801                      cmp COUNT, 1
 31796 00018295 0F856F0F0000                    jne L_error_arg_count_1
 31797 0001829B 488B4520                        mov rax, PARAM(0)
 31798 0001829F 8A18                            mov bl, byte [rax]
 31799 000182A1 80E310                          and bl, T_number
 31800 000182A4 740C                            jz .L_false
 31801 000182A6 48B8-                           mov rax, sob_boolean_true
 31801 000182A8 [0300000000000000] 
 31802 000182B0 EB0A                            jmp .L_end
 31803                                  .L_false:
 31804 000182B2 48B8-                           mov rax, sob_boolean_false
 31804 000182B4 [0200000000000000] 
 31805                                  .L_end:
 31806 000182BC C9                              leave
 31807 000182BD C21800                          ret AND_KILL_FRAME(1)
 31808                                          
 31809                                  L_code_ptr_is_collection:
 31810 000182C0 C8000000                        enter 0, 0
 31811 000182C4 48837D1801                      cmp COUNT, 1
 31812 000182C9 0F853B0F0000                    jne L_error_arg_count_1
 31813 000182CF 488B4520                        mov rax, PARAM(0)
 31814 000182D3 8A18                            mov bl, byte [rax]
 31815 000182D5 80E320                          and bl, T_collection
 31816 000182D8 740C                            je .L_false
 31817 000182DA 48B8-                           mov rax, sob_boolean_true
 31817 000182DC [0300000000000000] 
 31818 000182E4 EB0A                            jmp .L_end
 31819                                  .L_false:
 31820 000182E6 48B8-                           mov rax, sob_boolean_false
 31820 000182E8 [0200000000000000] 
 31821                                  .L_end:
 31822 000182F0 C9                              leave
 31823 000182F1 C21800                          ret AND_KILL_FRAME(1)
 31824                                  
 31825                                  L_code_ptr_cons:
 31826 000182F4 C8000000                        enter 0, 0
 31827 000182F8 48837D1802                      cmp COUNT, 2
 31828 000182FD 0F853C0F0000                    jne L_error_arg_count_2
 31829 00018303 BF11000000                      mov rdi, (1 + 8 + 8)
 31830 00018308 E823F2FFFF                      call malloc
 31831 0001830D C60021                          mov byte [rax], T_pair
 31832 00018310 488B5D20                        mov rbx, PARAM(0)
 31833 00018314 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31834 00018318 488B5D28                        mov rbx, PARAM(1)
 31835 0001831C 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31836 00018320 C9                              leave
 31837 00018321 C22000                          ret AND_KILL_FRAME(2)
 31838                                  
 31839                                  L_code_ptr_display_sexpr:
 31840 00018324 C8000000                        enter 0, 0
 31841 00018328 48837D1801                      cmp COUNT, 1
 31842 0001832D 0F85D70E0000                    jne L_error_arg_count_1
 31843 00018333 488B7D20                        mov rdi, PARAM(0)
 31844 00018337 E875F4FFFF                      call print_sexpr
 31845 0001833C 48B8-                           mov rax, sob_void
 31845 0001833E [0000000000000000] 
 31846 00018346 C9                              leave
 31847 00018347 C21800                          ret AND_KILL_FRAME(1)
 31848                                  
 31849                                  L_code_ptr_write_char:
 31850 0001834A C8000000                        enter 0, 0
 31851 0001834E 48837D1801                      cmp COUNT, 1
 31852 00018353 0F85B10E0000                    jne L_error_arg_count_1
 31853 00018359 488B4520                        mov rax, PARAM(0)
 31854                                          assert_char(rax)
    53 0001835D 803802              <1>  cmp byte [%1], %2
    54 00018360 0F85780F0000        <1>  jne L_error_incorrect_type
 31855 00018366 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 31856 00018369 4825FF000000                    and rax, 255
 31857 0001836F 48BF-                           mov rdi, fmt_char
 31857 00018371 [431B000000000000] 
 31858 00018379 4889C6                          mov rsi, rax
 31859 0001837C B800000000                      mov rax, 0
 31860                                          ENTER
    44 00018381 C8000000            <1>  enter 0, 0
    45 00018385 4883E4F0            <1>  and rsp, ~15
 31861 00018389 E8(00000000)                    call printf
 31862                                          LEAVE
    49 0001838E C9                  <1>  leave
 31863 0001838F 48B8-                           mov rax, sob_void
 31863 00018391 [0000000000000000] 
 31864 00018399 C9                              leave
 31865 0001839A C21800                          ret AND_KILL_FRAME(1)
 31866                                  
 31867                                  L_code_ptr_car:
 31868 0001839D C8000000                        enter 0, 0
 31869 000183A1 48837D1801                      cmp COUNT, 1
 31870 000183A6 0F855E0E0000                    jne L_error_arg_count_1
 31871 000183AC 488B4520                        mov rax, PARAM(0)
 31872                                          assert_pair(rax)
    53 000183B0 803821              <1>  cmp byte [%1], %2
    54 000183B3 0F85250F0000        <1>  jne L_error_incorrect_type
 31873 000183B9 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 31874 000183BD C9                              leave
 31875 000183BE C21800                          ret AND_KILL_FRAME(1)
 31876                                          
 31877                                  L_code_ptr_cdr:
 31878 000183C1 C8000000                        enter 0, 0
 31879 000183C5 48837D1801                      cmp COUNT, 1
 31880 000183CA 0F853A0E0000                    jne L_error_arg_count_1
 31881 000183D0 488B4520                        mov rax, PARAM(0)
 31882                                          assert_pair(rax)
    53 000183D4 803821              <1>  cmp byte [%1], %2
    54 000183D7 0F85010F0000        <1>  jne L_error_incorrect_type
 31883 000183DD 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 31884 000183E1 C9                              leave
 31885 000183E2 C21800                          ret AND_KILL_FRAME(1)
 31886                                          
 31887                                  L_code_ptr_string_length:
 31888 000183E5 C8000000                        enter 0, 0
 31889 000183E9 48837D1801                      cmp COUNT, 1
 31890 000183EE 0F85160E0000                    jne L_error_arg_count_1
 31891 000183F4 488B4520                        mov rax, PARAM(0)
 31892                                          assert_string(rax)
    53 000183F8 803803              <1>  cmp byte [%1], %2
    54 000183FB 0F85DD0E0000        <1>  jne L_error_incorrect_type
 31893 00018401 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 31894 00018405 E84F0D0000                      call make_integer
 31895 0001840A C9                              leave
 31896 0001840B C21800                          ret AND_KILL_FRAME(1)
 31897                                  
 31898                                  L_code_ptr_vector_length:
 31899 0001840E C8000000                        enter 0, 0
 31900 00018412 48837D1801                      cmp COUNT, 1
 31901 00018417 0F85ED0D0000                    jne L_error_arg_count_1
 31902 0001841D 488B4520                        mov rax, PARAM(0)
 31903                                          assert_vector(rax)
    53 00018421 803822              <1>  cmp byte [%1], %2
    54 00018424 0F85B40E0000        <1>  jne L_error_incorrect_type
 31904 0001842A 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 31905 0001842E E8260D0000                      call make_integer
 31906 00018433 C9                              leave
 31907 00018434 C21800                          ret AND_KILL_FRAME(1)
 31908                                  
 31909                                  L_code_ptr_real_to_integer:
 31910 00018437 C8000000                        enter 0, 0
 31911 0001843B 48837D1801                      cmp COUNT, 1
 31912 00018440 0F85C40D0000                    jne L_error_arg_count_1
 31913 00018446 488B5D20                        mov rbx, PARAM(0)
 31914                                          assert_real(rbx)
    53 0001844A 803B13              <1>  cmp byte [%1], %2
    54 0001844D 0F858B0E0000        <1>  jne L_error_incorrect_type
 31915 00018453 F20F104301                      movsd xmm0, qword [rbx + 1]
 31916 00018458 F2480F2CF8                      cvttsd2si rdi, xmm0
 31917 0001845D E8F70C0000                      call make_integer
 31918 00018462 C9                              leave
 31919 00018463 C21800                          ret AND_KILL_FRAME(1)
 31920                                  
 31921                                  L_code_ptr_exit:
 31922 00018466 C8000000                        enter 0, 0
 31923 0001846A 48837D1800                      cmp COUNT, 0
 31924 0001846F 0F85600D0000                    jne L_error_arg_count_0
 31925 00018475 B800000000                      mov rax, 0
 31926 0001847A E8(00000000)                    call exit
 31927                                  
 31928                                  L_code_ptr_integer_to_real:
 31929 0001847F C8000000                        enter 0, 0
 31930 00018483 48837D1801                      cmp COUNT, 1
 31931 00018488 0F857C0D0000                    jne L_error_arg_count_1
 31932 0001848E 488B4520                        mov rax, PARAM(0)
 31933                                          assert_integer(rax)
    53 00018492 803811              <1>  cmp byte [%1], %2
    54 00018495 0F85430E0000        <1>  jne L_error_incorrect_type
 31934 0001849B FF7001                          push qword [rax + 1]
 31935 0001849E F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31936 000184A4 E8980C0000                      call make_real
 31937 000184A9 C9                              leave
 31938 000184AA C21800                          ret AND_KILL_FRAME(1)
 31939                                  
 31940                                  L_code_ptr_fraction_to_real:
 31941 000184AD C8000000                        enter 0, 0
 31942 000184B1 48837D1801                      cmp COUNT, 1
 31943 000184B6 0F854E0D0000                    jne L_error_arg_count_1
 31944 000184BC 488B4520                        mov rax, PARAM(0)
 31945                                          assert_fraction(rax)
    53 000184C0 803812              <1>  cmp byte [%1], %2
    54 000184C3 0F85150E0000        <1>  jne L_error_incorrect_type
 31946 000184C9 FF7001                          push qword [rax + 1]
 31947 000184CC F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31948 000184D2 FF7009                          push qword [rax + 1 + 8]
 31949 000184D5 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 31950 000184DB F20F5EC1                        divsd xmm0, xmm1
 31951 000184DF E85D0C0000                      call make_real
 31952 000184E4 C9                              leave
 31953 000184E5 C21800                          ret AND_KILL_FRAME(1)
 31954                                  
 31955                                  L_code_ptr_char_to_integer:
 31956 000184E8 C8000000                        enter 0, 0
 31957 000184EC 48837D1801                      cmp COUNT, 1
 31958 000184F1 0F85130D0000                    jne L_error_arg_count_1
 31959 000184F7 488B4520                        mov rax, PARAM(0)
 31960                                          assert_char(rax)
    53 000184FB 803802              <1>  cmp byte [%1], %2
    54 000184FE 0F85DA0D0000        <1>  jne L_error_incorrect_type
 31961 00018504 8A4001                          mov al, byte [rax + 1]
 31962 00018507 4825FF000000                    and rax, 255
 31963 0001850D 4889C7                          mov rdi, rax
 31964 00018510 E8440C0000                      call make_integer
 31965 00018515 C9                              leave
 31966 00018516 C21800                          ret AND_KILL_FRAME(1)
 31967                                  
 31968                                  L_code_ptr_integer_to_fraction:
 31969 00018519 C8000000                        enter 0, 0
 31970 0001851D 48837D1801                      cmp COUNT, 1
 31971 00018522 0F85E20C0000                    jne L_error_arg_count_1
 31972 00018528 4C8B4520                        mov r8, PARAM(0)
 31973                                          assert_integer(r8)
    53 0001852C 41803811            <1>  cmp byte [%1], %2
    54 00018530 0F85A80D0000        <1>  jne L_error_incorrect_type
 31974 00018536 BF11000000                      mov rdi, (1 + 8 + 8)
 31975 0001853B E8F0EFFFFF                      call malloc
 31976 00018540 498B5801                        mov rbx, qword [r8 + 1]
 31977 00018544 C60012                          mov byte [rax], T_fraction
 31978 00018547 48895801                        mov qword [rax + 1], rbx
 31979 0001854B 48C7400901000000                mov qword [rax + 1 + 8], 1
 31980 00018553 C9                              leave
 31981 00018554 C21800                          ret AND_KILL_FRAME(1)
 31982                                  
 31983                                  L_code_ptr_integer_to_char:
 31984 00018557 C8000000                        enter 0, 0
 31985 0001855B 48837D1801                      cmp COUNT, 1
 31986 00018560 0F85A40C0000                    jne L_error_arg_count_1
 31987 00018566 488B4520                        mov rax, PARAM(0)
 31988                                          assert_integer(rax)
    53 0001856A 803811              <1>  cmp byte [%1], %2
    54 0001856D 0F856B0D0000        <1>  jne L_error_incorrect_type
 31989 00018573 488B5801                        mov rbx, qword [rax + 1]
 31990 00018577 4883FB00                        cmp rbx, 0
 31991 0001857B 0F8EF20B0000                    jle L_error_integer_range
 31992 00018581 4881FB00010000                  cmp rbx, 256
 31993 00018588 0F8DE50B0000                    jge L_error_integer_range
 31994 0001858E BF02000000                      mov rdi, (1 + 1)
 31995 00018593 E898EFFFFF                      call malloc
 31996 00018598 C60002                          mov byte [rax], T_char
 31997 0001859B 885801                          mov byte [rax + 1], bl
 31998 0001859E C9                              leave
 31999 0001859F C21800                          ret AND_KILL_FRAME(1)
 32000                                  
 32001                                  L_code_ptr_trng:
 32002 000185A2 C8000000                        enter 0, 0
 32003 000185A6 48837D1800                      cmp COUNT, 0
 32004 000185AB 0F85240C0000                    jne L_error_arg_count_0
 32005 000185B1 480FC7F7                        rdrand rdi
 32006 000185B5 48D1EF                          shr rdi, 1
 32007 000185B8 E89C0B0000                      call make_integer
 32008 000185BD C9                              leave
 32009 000185BE C21000                          ret AND_KILL_FRAME(0)
 32010                                  
 32011                                  L_code_ptr_is_zero:
 32012 000185C1 C8000000                        enter 0, 0
 32013 000185C5 48837D1801                      cmp COUNT, 1
 32014 000185CA 0F853A0C0000                    jne L_error_arg_count_1
 32015 000185D0 488B4520                        mov rax, PARAM(0)
 32016 000185D4 803811                          cmp byte [rax], T_integer
 32017 000185D7 740F                            je .L_integer
 32018 000185D9 803812                          cmp byte [rax], T_fraction
 32019 000185DC 7413                            je .L_fraction
 32020 000185DE 803813                          cmp byte [rax], T_real
 32021 000185E1 7417                            je .L_real
 32022 000185E3 E9F60C0000                      jmp L_error_incorrect_type
 32023                                  .L_integer:
 32024 000185E8 4883780100                      cmp qword [rax + 1], 0
 32025 000185ED 7429                            je .L_zero
 32026 000185EF EB1B                            jmp .L_not_zero
 32027                                  .L_fraction:
 32028 000185F1 4883780100                      cmp qword [rax + 1], 0
 32029 000185F6 7420                            je .L_zero
 32030 000185F8 EB12                            jmp .L_not_zero
 32031                                  .L_real:
 32032 000185FA 660FEFC0                        pxor xmm0, xmm0
 32033 000185FE FF7001                          push qword [rax + 1]
 32034 00018601 F20F100C24                      movsd xmm1, qword [rsp]
 32035 00018606 660F2EC1                        ucomisd xmm0, xmm1
 32036 0001860A 740C                            je .L_zero
 32037                                  .L_not_zero:
 32038 0001860C 48B8-                           mov rax, sob_boolean_false
 32038 0001860E [0200000000000000] 
 32039 00018616 EB0A                            jmp .L_end
 32040                                  .L_zero:
 32041 00018618 48B8-                           mov rax, sob_boolean_true
 32041 0001861A [0300000000000000] 
 32042                                  .L_end:
 32043 00018622 C9                              leave
 32044 00018623 C21800                          ret AND_KILL_FRAME(1)
 32045                                  
 32046                                  L_code_ptr_is_integer:
 32047 00018626 C8000000                        enter 0, 0
 32048 0001862A 48837D1801                      cmp COUNT, 1
 32049 0001862F 0F85D50B0000                    jne L_error_arg_count_1
 32050 00018635 488B4520                        mov rax, PARAM(0)
 32051 00018639 803811                          cmp byte [rax], T_integer
 32052 0001863C 750C                            jne .L_false
 32053 0001863E 48B8-                           mov rax, sob_boolean_true
 32053 00018640 [0300000000000000] 
 32054 00018648 EB0A                            jmp .L_exit
 32055                                  .L_false:
 32056 0001864A 48B8-                           mov rax, sob_boolean_false
 32056 0001864C [0200000000000000] 
 32057                                  .L_exit:
 32058 00018654 C9                              leave
 32059 00018655 C21800                          ret AND_KILL_FRAME(1)
 32060                                  
 32061                                  L_code_ptr_raw_bin_add_rr:
 32062 00018658 C8000000                        enter 0, 0
 32063 0001865C 48837D1802                      cmp COUNT, 2
 32064 00018661 0F85D80B0000                    jne L_error_arg_count_2
 32065 00018667 488B5D20                        mov rbx, PARAM(0)
 32066                                          assert_real(rbx)
    53 0001866B 803B13              <1>  cmp byte [%1], %2
    54 0001866E 0F856A0C0000        <1>  jne L_error_incorrect_type
 32067 00018674 488B4D28                        mov rcx, PARAM(1)
 32068                                          assert_real(rcx)
    53 00018678 803913              <1>  cmp byte [%1], %2
    54 0001867B 0F855D0C0000        <1>  jne L_error_incorrect_type
 32069 00018681 F20F104301                      movsd xmm0, qword [rbx + 1]
 32070 00018686 F20F104901                      movsd xmm1, qword [rcx + 1]
 32071 0001868B F20F58C1                        addsd xmm0, xmm1
 32072 0001868F E8AD0A0000                      call make_real
 32073 00018694 C9                              leave
 32074 00018695 C22000                          ret AND_KILL_FRAME(2)
 32075                                  
 32076                                  L_code_ptr_raw_bin_sub_rr:
 32077 00018698 C8000000                        enter 0, 0
 32078 0001869C 48837D1802                      cmp COUNT, 2
 32079 000186A1 0F85980B0000                    jne L_error_arg_count_2
 32080 000186A7 488B5D20                        mov rbx, PARAM(0)
 32081                                          assert_real(rbx)
    53 000186AB 803B13              <1>  cmp byte [%1], %2
    54 000186AE 0F852A0C0000        <1>  jne L_error_incorrect_type
 32082 000186B4 488B4D28                        mov rcx, PARAM(1)
 32083                                          assert_real(rcx)
    53 000186B8 803913              <1>  cmp byte [%1], %2
    54 000186BB 0F851D0C0000        <1>  jne L_error_incorrect_type
 32084 000186C1 F20F104301                      movsd xmm0, qword [rbx + 1]
 32085 000186C6 F20F104901                      movsd xmm1, qword [rcx + 1]
 32086 000186CB F20F5CC1                        subsd xmm0, xmm1
 32087 000186CF E86D0A0000                      call make_real
 32088 000186D4 C9                              leave
 32089 000186D5 C22000                          ret AND_KILL_FRAME(2)
 32090                                  
 32091                                  L_code_ptr_raw_bin_mul_rr:
 32092 000186D8 C8000000                        enter 0, 0
 32093 000186DC 48837D1802                      cmp COUNT, 2
 32094 000186E1 0F85580B0000                    jne L_error_arg_count_2
 32095 000186E7 488B5D20                        mov rbx, PARAM(0)
 32096                                          assert_real(rbx)
    53 000186EB 803B13              <1>  cmp byte [%1], %2
    54 000186EE 0F85EA0B0000        <1>  jne L_error_incorrect_type
 32097 000186F4 488B4D28                        mov rcx, PARAM(1)
 32098                                          assert_real(rcx)
    53 000186F8 803913              <1>  cmp byte [%1], %2
    54 000186FB 0F85DD0B0000        <1>  jne L_error_incorrect_type
 32099 00018701 F20F104301                      movsd xmm0, qword [rbx + 1]
 32100 00018706 F20F104901                      movsd xmm1, qword [rcx + 1]
 32101 0001870B F20F59C1                        mulsd xmm0, xmm1
 32102 0001870F E82D0A0000                      call make_real
 32103 00018714 C9                              leave
 32104 00018715 C22000                          ret AND_KILL_FRAME(2)
 32105                                  
 32106                                  L_code_ptr_raw_bin_div_rr:
 32107 00018718 C8000000                        enter 0, 0
 32108 0001871C 48837D1802                      cmp COUNT, 2
 32109 00018721 0F85180B0000                    jne L_error_arg_count_2
 32110 00018727 488B5D20                        mov rbx, PARAM(0)
 32111                                          assert_real(rbx)
    53 0001872B 803B13              <1>  cmp byte [%1], %2
    54 0001872E 0F85AA0B0000        <1>  jne L_error_incorrect_type
 32112 00018734 488B4D28                        mov rcx, PARAM(1)
 32113                                          assert_real(rcx)
    53 00018738 803913              <1>  cmp byte [%1], %2
    54 0001873B 0F859D0B0000        <1>  jne L_error_incorrect_type
 32114 00018741 F20F104301                      movsd xmm0, qword [rbx + 1]
 32115 00018746 F20F104901                      movsd xmm1, qword [rcx + 1]
 32116 0001874B 660FEFD2                        pxor xmm2, xmm2
 32117 0001874F 660F2ECA                        ucomisd xmm1, xmm2
 32118 00018753 0F84B60B0000                    je L_error_division_by_zero
 32119 00018759 F20F5EC1                        divsd xmm0, xmm1
 32120 0001875D E8DF090000                      call make_real
 32121 00018762 C9                              leave
 32122 00018763 C22000                          ret AND_KILL_FRAME(2)
 32123                                  
 32124                                  L_code_ptr_raw_bin_add_zz:
 32125 00018766 C8000000                	enter 0, 0
 32126 0001876A 48837D1802              	cmp COUNT, 2
 32127 0001876F 0F85CA0A0000            	jne L_error_arg_count_2
 32128 00018775 4C8B4520                	mov r8, PARAM(0)
 32129                                  	assert_integer(r8)
    53 00018779 41803811            <1>  cmp byte [%1], %2
    54 0001877D 0F855B0B0000        <1>  jne L_error_incorrect_type
 32130 00018783 4C8B4D28                	mov r9, PARAM(1)
 32131                                  	assert_integer(r9)
    53 00018787 41803911            <1>  cmp byte [%1], %2
    54 0001878B 0F854D0B0000        <1>  jne L_error_incorrect_type
 32132 00018791 498B7801                	mov rdi, qword [r8 + 1]
 32133 00018795 49037901                	add rdi, qword [r9 + 1]
 32134 00018799 E8BB090000              	call make_integer
 32135 0001879E C9                      	leave
 32136 0001879F C22000                  	ret AND_KILL_FRAME(2)
 32137                                  
 32138                                  L_code_ptr_raw_bin_add_qq:
 32139 000187A2 C8000000                        enter 0, 0
 32140 000187A6 48837D1802                      cmp COUNT, 2
 32141 000187AB 0F858E0A0000                    jne L_error_arg_count_2
 32142 000187B1 4C8B4520                        mov r8, PARAM(0)
 32143                                          assert_fraction(r8)
    53 000187B5 41803812            <1>  cmp byte [%1], %2
    54 000187B9 0F851F0B0000        <1>  jne L_error_incorrect_type
 32144 000187BF 4C8B4D28                        mov r9, PARAM(1)
 32145                                          assert_fraction(r9)
    53 000187C3 41803912            <1>  cmp byte [%1], %2
    54 000187C7 0F85110B0000        <1>  jne L_error_incorrect_type
 32146 000187CD 498B4001                        mov rax, qword [r8 + 1] ; num1
 32147 000187D1 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 32148 000187D5 4899                            cqo
 32149 000187D7 48F7EB                          imul rbx
 32150 000187DA 4889C6                          mov rsi, rax
 32151 000187DD 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32152 000187E1 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 32153 000187E5 4899                            cqo
 32154 000187E7 48F7EB                          imul rbx
 32155 000187EA 4801C6                          add rsi, rax
 32156 000187ED 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32157 000187F1 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 32158 000187F5 4899                            cqo
 32159 000187F7 48F7EB                          imul rbx
 32160 000187FA 4889C7                          mov rdi, rax
 32161 000187FD E8DE010000                      call normalize_fraction
 32162 00018802 C9                              leave
 32163 00018803 C22000                          ret AND_KILL_FRAME(2)
 32164                                  
 32165                                  L_code_ptr_raw_bin_sub_zz:
 32166 00018806 C8000000                	enter 0, 0
 32167 0001880A 48837D1802              	cmp COUNT, 2
 32168 0001880F 0F852A0A0000            	jne L_error_arg_count_2
 32169 00018815 4C8B4520                	mov r8, PARAM(0)
 32170                                  	assert_integer(r8)
    53 00018819 41803811            <1>  cmp byte [%1], %2
    54 0001881D 0F85BB0A0000        <1>  jne L_error_incorrect_type
 32171 00018823 4C8B4D28                	mov r9, PARAM(1)
 32172                                  	assert_integer(r9)
    53 00018827 41803911            <1>  cmp byte [%1], %2
    54 0001882B 0F85AD0A0000        <1>  jne L_error_incorrect_type
 32173 00018831 498B7801                	mov rdi, qword [r8 + 1]
 32174 00018835 492B7901                	sub rdi, qword [r9 + 1]
 32175 00018839 E81B090000              	call make_integer
 32176 0001883E C9                      	leave
 32177 0001883F C22000                  	ret AND_KILL_FRAME(2)
 32178                                  
 32179                                  L_code_ptr_raw_bin_sub_qq:
 32180 00018842 C8000000                        enter 0, 0
 32181 00018846 48837D1802                      cmp COUNT, 2
 32182 0001884B 0F85EE090000                    jne L_error_arg_count_2
 32183 00018851 4C8B4520                        mov r8, PARAM(0)
 32184                                          assert_fraction(r8)
    53 00018855 41803812            <1>  cmp byte [%1], %2
    54 00018859 0F857F0A0000        <1>  jne L_error_incorrect_type
 32185 0001885F 4C8B4D28                        mov r9, PARAM(1)
 32186                                          assert_fraction(r9)
    53 00018863 41803912            <1>  cmp byte [%1], %2
    54 00018867 0F85710A0000        <1>  jne L_error_incorrect_type
 32187 0001886D 498B4001                        mov rax, qword [r8 + 1] ; num1
 32188 00018871 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 32189 00018875 4899                            cqo
 32190 00018877 48F7EB                          imul rbx
 32191 0001887A 4889C6                          mov rsi, rax
 32192 0001887D 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32193 00018881 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 32194 00018885 4899                            cqo
 32195 00018887 48F7EB                          imul rbx
 32196 0001888A 4829C6                          sub rsi, rax
 32197 0001888D 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32198 00018891 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 32199 00018895 4899                            cqo
 32200 00018897 48F7EB                          imul rbx
 32201 0001889A 4889C7                          mov rdi, rax
 32202 0001889D E83E010000                      call normalize_fraction
 32203 000188A2 C9                              leave
 32204 000188A3 C22000                          ret AND_KILL_FRAME(2)
 32205                                  
 32206                                  L_code_ptr_raw_bin_mul_zz:
 32207 000188A6 C8000000                	enter 0, 0
 32208 000188AA 48837D1802              	cmp COUNT, 2
 32209 000188AF 0F858A090000            	jne L_error_arg_count_2
 32210 000188B5 4C8B4520                	mov r8, PARAM(0)
 32211                                  	assert_integer(r8)
    53 000188B9 41803811            <1>  cmp byte [%1], %2
    54 000188BD 0F851B0A0000        <1>  jne L_error_incorrect_type
 32212 000188C3 4C8B4D28                	mov r9, PARAM(1)
 32213                                  	assert_integer(r9)
    53 000188C7 41803911            <1>  cmp byte [%1], %2
    54 000188CB 0F850D0A0000        <1>  jne L_error_incorrect_type
 32214 000188D1 4899                    	cqo
 32215 000188D3 498B4001                	mov rax, qword [r8 + 1]
 32216 000188D7 49F76101                	mul qword [r9 + 1]
 32217 000188DB 4889C7                  	mov rdi, rax
 32218 000188DE E876080000              	call make_integer
 32219 000188E3 C9                      	leave
 32220 000188E4 C22000                  	ret AND_KILL_FRAME(2)
 32221                                  
 32222                                  L_code_ptr_raw_bin_mul_qq:
 32223 000188E7 C8000000                        enter 0, 0
 32224 000188EB 48837D1802                      cmp COUNT, 2
 32225 000188F0 0F8549090000                    jne L_error_arg_count_2
 32226 000188F6 4C8B4520                        mov r8, PARAM(0)
 32227                                          assert_fraction(r8)
    53 000188FA 41803812            <1>  cmp byte [%1], %2
    54 000188FE 0F85DA090000        <1>  jne L_error_incorrect_type
 32228 00018904 4C8B4D28                        mov r9, PARAM(1)
 32229                                          assert_fraction(r9)
    53 00018908 41803912            <1>  cmp byte [%1], %2
    54 0001890C 0F85CC090000        <1>  jne L_error_incorrect_type
 32230 00018912 498B4001                        mov rax, qword [r8 + 1] ; num1
 32231 00018916 498B5901                        mov rbx, qword [r9 + 1] ; num2
 32232 0001891A 4899                            cqo
 32233 0001891C 48F7EB                          imul rbx
 32234 0001891F 4889C6                          mov rsi, rax
 32235 00018922 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32236 00018926 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 32237 0001892A 4899                            cqo
 32238 0001892C 48F7EB                          imul rbx
 32239 0001892F 4889C7                          mov rdi, rax
 32240 00018932 E8A9000000                      call normalize_fraction
 32241 00018937 C9                              leave
 32242 00018938 C22000                          ret AND_KILL_FRAME(2)
 32243                                          
 32244                                  L_code_ptr_raw_bin_div_zz:
 32245 0001893B C8000000                	enter 0, 0
 32246 0001893F 48837D1802              	cmp COUNT, 2
 32247 00018944 0F85F5080000            	jne L_error_arg_count_2
 32248 0001894A 4C8B4520                	mov r8, PARAM(0)
 32249                                  	assert_integer(r8)
    53 0001894E 41803811            <1>  cmp byte [%1], %2
    54 00018952 0F8586090000        <1>  jne L_error_incorrect_type
 32250 00018958 4C8B4D28                	mov r9, PARAM(1)
 32251                                  	assert_integer(r9)
    53 0001895C 41803911            <1>  cmp byte [%1], %2
    54 00018960 0F8578090000        <1>  jne L_error_incorrect_type
 32252 00018966 498B7901                	mov rdi, qword [r9 + 1]
 32253 0001896A 4883FF00                	cmp rdi, 0
 32254 0001896E 0F849B090000            	je L_error_division_by_zero
 32255 00018974 498B7001                	mov rsi, qword [r8 + 1]
 32256 00018978 E863000000              	call normalize_fraction
 32257 0001897D C9                      	leave
 32258 0001897E C22000                  	ret AND_KILL_FRAME(2)
 32259                                  
 32260                                  L_code_ptr_raw_bin_div_qq:
 32261 00018981 C8000000                        enter 0, 0
 32262 00018985 48837D1802                      cmp COUNT, 2
 32263 0001898A 0F85AF080000                    jne L_error_arg_count_2
 32264 00018990 4C8B4520                        mov r8, PARAM(0)
 32265                                          assert_fraction(r8)
    53 00018994 41803812            <1>  cmp byte [%1], %2
    54 00018998 0F8540090000        <1>  jne L_error_incorrect_type
 32266 0001899E 4C8B4D28                        mov r9, PARAM(1)
 32267                                          assert_fraction(r9)
    53 000189A2 41803912            <1>  cmp byte [%1], %2
    54 000189A6 0F8532090000        <1>  jne L_error_incorrect_type
 32268 000189AC 4983790100                      cmp qword [r9 + 1], 0
 32269 000189B1 0F8458090000                    je L_error_division_by_zero
 32270 000189B7 498B4001                        mov rax, qword [r8 + 1] ; num1
 32271 000189BB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 32272 000189BF 4899                            cqo
 32273 000189C1 48F7EB                          imul rbx
 32274 000189C4 4889C6                          mov rsi, rax
 32275 000189C7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 32276 000189CB 498B5901                        mov rbx, qword [r9 + 1] ; num2
 32277 000189CF 4899                            cqo
 32278 000189D1 48F7EB                          imul rbx
 32279 000189D4 4889C7                          mov rdi, rax
 32280 000189D7 E804000000                      call normalize_fraction
 32281 000189DC C9                              leave
 32282 000189DD C22000                          ret AND_KILL_FRAME(2)
 32283                                          
 32284                                  normalize_fraction:
 32285 000189E0 56                              push rsi
 32286 000189E1 57                              push rdi
 32287 000189E2 E859000000                      call gcd
 32288 000189E7 4889C3                          mov rbx, rax
 32289 000189EA 58                              pop rax
 32290 000189EB 4899                            cqo
 32291 000189ED 48F7FB                          idiv rbx
 32292 000189F0 4989C0                          mov r8, rax
 32293 000189F3 58                              pop rax
 32294 000189F4 4899                            cqo
 32295 000189F6 48F7FB                          idiv rbx
 32296 000189F9 4989C1                          mov r9, rax
 32297 000189FC 4983F900                        cmp r9, 0
 32298 00018A00 741C                            je .L_zero
 32299 00018A02 4983F801                        cmp r8, 1
 32300 00018A06 7421                            je .L_int
 32301 00018A08 BF11000000                      mov rdi, (1 + 8 + 8)
 32302 00018A0D E81EEBFFFF                      call malloc
 32303 00018A12 C60012                          mov byte [rax], T_fraction
 32304 00018A15 4C894801                        mov qword [rax + 1], r9
 32305 00018A19 4C894009                        mov qword [rax + 1 + 8], r8
 32306 00018A1D C3                              ret
 32307                                  .L_zero:
 32308 00018A1E BF00000000                      mov rdi, 0
 32309 00018A23 E831070000                      call make_integer
 32310 00018A28 C3                              ret
 32311                                  .L_int:
 32312 00018A29 4C89CF                          mov rdi, r9
 32313 00018A2C E828070000                      call make_integer
 32314 00018A31 C3                              ret
 32315                                  
 32316                                  iabs:
 32317 00018A32 4889F8                          mov rax, rdi
 32318 00018A35 4883F800                        cmp rax, 0
 32319 00018A39 7C01                            jl .Lneg
 32320 00018A3B C3                              ret
 32321                                  .Lneg:
 32322 00018A3C 48F7D8                          neg rax
 32323 00018A3F C3                              ret
 32324                                  
 32325                                  gcd:
 32326 00018A40 E8EDFFFFFF                      call iabs
 32327 00018A45 4889C3                          mov rbx, rax
 32328 00018A48 4889F7                          mov rdi, rsi
 32329 00018A4B E8E2FFFFFF                      call iabs
 32330 00018A50 4883F800                        cmp rax, 0
 32331 00018A54 7502                            jne .L0
 32332 00018A56 4893                            xchg rax, rbx
 32333                                  .L0:
 32334 00018A58 4883FB00                        cmp rbx, 0
 32335 00018A5C 740C                            je .L1
 32336 00018A5E 4899                            cqo
 32337 00018A60 48F7F3                          div rbx
 32338 00018A63 4889D0                          mov rax, rdx
 32339 00018A66 4893                            xchg rax, rbx
 32340 00018A68 EBEE                            jmp .L0
 32341                                  .L1:
 32342 00018A6A C3                              ret
 32343                                  
 32344                                  L_code_ptr_error:
 32345 00018A6B C8000000                        enter 0, 0
 32346 00018A6F 48837D1802                      cmp COUNT, 2
 32347 00018A74 0F85C5070000                    jne L_error_arg_count_2
 32348 00018A7A 488B7520                        mov rsi, PARAM(0)
 32349                                          assert_interned_symbol(rsi)
    53 00018A7E 803E41              <1>  cmp byte [%1], %2
    54 00018A81 0F8557080000        <1>  jne L_error_incorrect_type
 32350 00018A87 488B7528                        mov rsi, PARAM(1)
 32351                                          assert_string(rsi)
    53 00018A8B 803E03              <1>  cmp byte [%1], %2
    54 00018A8E 0F854A080000        <1>  jne L_error_incorrect_type
 32352 00018A94 48BF-                           mov rdi, fmt_scheme_error_part_1
 32352 00018A96 [A11C000000000000] 
 32353 00018A9E B800000000                      mov rax, 0
 32354                                          ENTER
    44 00018AA3 C8000000            <1>  enter 0, 0
    45 00018AA7 4883E4F0            <1>  and rsp, ~15
 32355 00018AAB E8(00000000)                    call printf
 32356                                          LEAVE
    49 00018AB0 C9                  <1>  leave
 32357 00018AB1 488B7D20                        mov rdi, PARAM(0)
 32358 00018AB5 E8F7ECFFFF                      call print_sexpr
 32359 00018ABA 48BF-                           mov rdi, fmt_scheme_error_part_2
 32359 00018ABC [B51C000000000000] 
 32360 00018AC4 B800000000                      mov rax, 0
 32361                                          ENTER
    44 00018AC9 C8000000            <1>  enter 0, 0
    45 00018ACD 4883E4F0            <1>  and rsp, ~15
 32362 00018AD1 E8(00000000)                    call printf
 32363                                          LEAVE
    49 00018AD6 C9                  <1>  leave
 32364 00018AD7 488B4528                        mov rax, PARAM(1)       ; sob_string
 32365 00018ADB BE01000000                      mov rsi, 1              ; size = 1 byte
 32366 00018AE0 488B5001                        mov rdx, qword [rax + 1] ; length
 32367 00018AE4 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 32368 00018AE8 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 32369                                  	ENTER
    44 00018AF0 C8000000            <1>  enter 0, 0
    45 00018AF4 4883E4F0            <1>  and rsp, ~15
 32370 00018AF8 E8(00000000)                    call fwrite
 32371                                  	LEAVE
    49 00018AFD C9                  <1>  leave
 32372 00018AFE 48BF-                           mov rdi, fmt_scheme_error_part_3
 32372 00018B00 [F71C000000000000] 
 32373 00018B08 B800000000                      mov rax, 0
 32374                                          ENTER
    44 00018B0D C8000000            <1>  enter 0, 0
    45 00018B11 4883E4F0            <1>  and rsp, ~15
 32375 00018B15 E8(00000000)                    call printf
 32376                                          LEAVE
    49 00018B1A C9                  <1>  leave
 32377 00018B1B 48C7C0F7FFFFFF                  mov rax, -9
 32378 00018B22 E8(00000000)                    call exit
 32379                                  
 32380                                  L_code_ptr_raw_less_than_rr:
 32381 00018B27 C8000000                        enter 0, 0
 32382 00018B2B 48837D1802                      cmp COUNT, 2
 32383 00018B30 0F8509070000                    jne L_error_arg_count_2
 32384 00018B36 488B7520                        mov rsi, PARAM(0)
 32385                                          assert_real(rsi)
    53 00018B3A 803E13              <1>  cmp byte [%1], %2
    54 00018B3D 0F859B070000        <1>  jne L_error_incorrect_type
 32386 00018B43 488B7D28                        mov rdi, PARAM(1)
 32387                                          assert_real(rdi)
    53 00018B47 803F13              <1>  cmp byte [%1], %2
    54 00018B4A 0F858E070000        <1>  jne L_error_incorrect_type
 32388 00018B50 F20F104601                      movsd xmm0, qword [rsi + 1]
 32389 00018B55 F20F104F01                      movsd xmm1, qword [rdi + 1]
 32390 00018B5A 660F2FC1                        comisd xmm0, xmm1
 32391 00018B5E 730C                            jae .L_false
 32392 00018B60 48B8-                           mov rax, sob_boolean_true
 32392 00018B62 [0300000000000000] 
 32393 00018B6A EB0A                            jmp .L_exit
 32394                                  .L_false:
 32395 00018B6C 48B8-                           mov rax, sob_boolean_false
 32395 00018B6E [0200000000000000] 
 32396                                  .L_exit:
 32397 00018B76 C9                              leave
 32398 00018B77 C22000                          ret AND_KILL_FRAME(2)
 32399                                          
 32400                                  L_code_ptr_raw_less_than_zz:
 32401 00018B7A C8000000                	enter 0, 0
 32402 00018B7E 48837D1802              	cmp COUNT, 2
 32403 00018B83 0F85B6060000            	jne L_error_arg_count_2
 32404 00018B89 4C8B4520                	mov r8, PARAM(0)
 32405                                  	assert_integer(r8)
    53 00018B8D 41803811            <1>  cmp byte [%1], %2
    54 00018B91 0F8547070000        <1>  jne L_error_incorrect_type
 32406 00018B97 4C8B4D28                	mov r9, PARAM(1)
 32407                                  	assert_integer(r9)
    53 00018B9B 41803911            <1>  cmp byte [%1], %2
    54 00018B9F 0F8539070000        <1>  jne L_error_incorrect_type
 32408 00018BA5 498B7801                	mov rdi, qword [r8 + 1]
 32409 00018BA9 493B7901                	cmp rdi, qword [r9 + 1]
 32410 00018BAD 7D0C                    	jge .L_false
 32411 00018BAF 48B8-                   	mov rax, sob_boolean_true
 32411 00018BB1 [0300000000000000] 
 32412 00018BB9 EB0A                    	jmp .L_exit
 32413                                  .L_false:
 32414 00018BBB 48B8-                   	mov rax, sob_boolean_false
 32414 00018BBD [0200000000000000] 
 32415                                  .L_exit:
 32416 00018BC5 C9                      	leave
 32417 00018BC6 C22000                  	ret AND_KILL_FRAME(2)
 32418                                  
 32419                                  L_code_ptr_raw_less_than_qq:
 32420 00018BC9 C8000000                        enter 0, 0
 32421 00018BCD 48837D1802                      cmp COUNT, 2
 32422 00018BD2 0F8567060000                    jne L_error_arg_count_2
 32423 00018BD8 488B7520                        mov rsi, PARAM(0)
 32424                                          assert_fraction(rsi)
    53 00018BDC 803E12              <1>  cmp byte [%1], %2
    54 00018BDF 0F85F9060000        <1>  jne L_error_incorrect_type
 32425 00018BE5 488B7D28                        mov rdi, PARAM(1)
 32426                                          assert_fraction(rdi)
    53 00018BE9 803F12              <1>  cmp byte [%1], %2
    54 00018BEC 0F85EC060000        <1>  jne L_error_incorrect_type
 32427 00018BF2 488B4601                        mov rax, qword [rsi + 1] ; num1
 32428 00018BF6 4899                            cqo
 32429 00018BF8 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 32430 00018BFC 4889C1                          mov rcx, rax
 32431 00018BFF 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 32432 00018C03 4899                            cqo
 32433 00018C05 48F76F01                        imul qword [rdi + 1]          ; num2
 32434 00018C09 4829C1                          sub rcx, rax
 32435 00018C0C 7D0C                            jge .L_false
 32436 00018C0E 48B8-                           mov rax, sob_boolean_true
 32436 00018C10 [0300000000000000] 
 32437 00018C18 EB0A                            jmp .L_exit
 32438                                  .L_false:
 32439 00018C1A 48B8-                           mov rax, sob_boolean_false
 32439 00018C1C [0200000000000000] 
 32440                                  .L_exit:
 32441 00018C24 C9                              leave
 32442 00018C25 C22000                          ret AND_KILL_FRAME(2)
 32443                                  
 32444                                  L_code_ptr_raw_equal_rr:
 32445 00018C28 C8000000                        enter 0, 0
 32446 00018C2C 48837D1802                      cmp COUNT, 2
 32447 00018C31 0F8508060000                    jne L_error_arg_count_2
 32448 00018C37 488B7520                        mov rsi, PARAM(0)
 32449                                          assert_real(rsi)
    53 00018C3B 803E13              <1>  cmp byte [%1], %2
    54 00018C3E 0F859A060000        <1>  jne L_error_incorrect_type
 32450 00018C44 488B7D28                        mov rdi, PARAM(1)
 32451                                          assert_real(rdi)
    53 00018C48 803F13              <1>  cmp byte [%1], %2
    54 00018C4B 0F858D060000        <1>  jne L_error_incorrect_type
 32452 00018C51 F20F104601                      movsd xmm0, qword [rsi + 1]
 32453 00018C56 F20F104F01                      movsd xmm1, qword [rdi + 1]
 32454 00018C5B 660F2FC1                        comisd xmm0, xmm1
 32455 00018C5F 750C                            jne .L_false
 32456 00018C61 48B8-                           mov rax, sob_boolean_true
 32456 00018C63 [0300000000000000] 
 32457 00018C6B EB0A                            jmp .L_exit
 32458                                  .L_false:
 32459 00018C6D 48B8-                           mov rax, sob_boolean_false
 32459 00018C6F [0200000000000000] 
 32460                                  .L_exit:
 32461 00018C77 C9                              leave
 32462 00018C78 C22000                          ret AND_KILL_FRAME(2)
 32463                                          
 32464                                  L_code_ptr_raw_equal_zz:
 32465 00018C7B C8000000                	enter 0, 0
 32466 00018C7F 48837D1802              	cmp COUNT, 2
 32467 00018C84 0F85B5050000            	jne L_error_arg_count_2
 32468 00018C8A 4C8B4520                	mov r8, PARAM(0)
 32469                                  	assert_integer(r8)
    53 00018C8E 41803811            <1>  cmp byte [%1], %2
    54 00018C92 0F8546060000        <1>  jne L_error_incorrect_type
 32470 00018C98 4C8B4D28                	mov r9, PARAM(1)
 32471                                  	assert_integer(r9)
    53 00018C9C 41803911            <1>  cmp byte [%1], %2
    54 00018CA0 0F8538060000        <1>  jne L_error_incorrect_type
 32472 00018CA6 498B7801                	mov rdi, qword [r8 + 1]
 32473 00018CAA 493B7901                	cmp rdi, qword [r9 + 1]
 32474 00018CAE 750C                    	jne .L_false
 32475 00018CB0 48B8-                   	mov rax, sob_boolean_true
 32475 00018CB2 [0300000000000000] 
 32476 00018CBA EB0A                    	jmp .L_exit
 32477                                  .L_false:
 32478 00018CBC 48B8-                   	mov rax, sob_boolean_false
 32478 00018CBE [0200000000000000] 
 32479                                  .L_exit:
 32480 00018CC6 C9                      	leave
 32481 00018CC7 C22000                  	ret AND_KILL_FRAME(2)
 32482                                  
 32483                                  L_code_ptr_raw_equal_qq:
 32484 00018CCA C8000000                        enter 0, 0
 32485 00018CCE 48837D1802                      cmp COUNT, 2
 32486 00018CD3 0F8566050000                    jne L_error_arg_count_2
 32487 00018CD9 488B7520                        mov rsi, PARAM(0)
 32488                                          assert_fraction(rsi)
    53 00018CDD 803E12              <1>  cmp byte [%1], %2
    54 00018CE0 0F85F8050000        <1>  jne L_error_incorrect_type
 32489 00018CE6 488B7D28                        mov rdi, PARAM(1)
 32490                                          assert_fraction(rdi)
    53 00018CEA 803F12              <1>  cmp byte [%1], %2
    54 00018CED 0F85EB050000        <1>  jne L_error_incorrect_type
 32491 00018CF3 488B4601                        mov rax, qword [rsi + 1] ; num1
 32492 00018CF7 4899                            cqo
 32493 00018CF9 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 32494 00018CFD 4889C1                          mov rcx, rax
 32495 00018D00 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 32496 00018D04 4899                            cqo
 32497 00018D06 48F76F01                        imul qword [rdi + 1]          ; num2
 32498 00018D0A 4829C1                          sub rcx, rax
 32499 00018D0D 750C                            jne .L_false
 32500 00018D0F 48B8-                           mov rax, sob_boolean_true
 32500 00018D11 [0300000000000000] 
 32501 00018D19 EB0A                            jmp .L_exit
 32502                                  .L_false:
 32503 00018D1B 48B8-                           mov rax, sob_boolean_false
 32503 00018D1D [0200000000000000] 
 32504                                  .L_exit:
 32505 00018D25 C9                              leave
 32506 00018D26 C22000                          ret AND_KILL_FRAME(2)
 32507                                  
 32508                                  L_code_ptr_quotient:
 32509 00018D29 C8000000                        enter 0, 0
 32510 00018D2D 48837D1802                      cmp COUNT, 2
 32511 00018D32 0F8507050000                    jne L_error_arg_count_2
 32512 00018D38 488B7520                        mov rsi, PARAM(0)
 32513                                          assert_integer(rsi)
    53 00018D3C 803E11              <1>  cmp byte [%1], %2
    54 00018D3F 0F8599050000        <1>  jne L_error_incorrect_type
 32514 00018D45 488B7D28                        mov rdi, PARAM(1)
 32515                                          assert_integer(rdi)
    53 00018D49 803F11              <1>  cmp byte [%1], %2
    54 00018D4C 0F858C050000        <1>  jne L_error_incorrect_type
 32516 00018D52 488B4601                        mov rax, qword [rsi + 1]
 32517 00018D56 488B5F01                        mov rbx, qword [rdi + 1]
 32518 00018D5A 4883FB00                        cmp rbx, 0
 32519 00018D5E 0F84AB050000                    je L_error_division_by_zero
 32520 00018D64 4899                            cqo
 32521 00018D66 48F7FB                          idiv rbx
 32522 00018D69 4889C7                          mov rdi, rax
 32523 00018D6C E8E8030000                      call make_integer
 32524 00018D71 C9                              leave
 32525 00018D72 C22000                          ret AND_KILL_FRAME(2)
 32526                                          
 32527                                  L_code_ptr_remainder:
 32528 00018D75 C8000000                        enter 0, 0
 32529 00018D79 48837D1802                      cmp COUNT, 2
 32530 00018D7E 0F85BB040000                    jne L_error_arg_count_2
 32531 00018D84 488B7520                        mov rsi, PARAM(0)
 32532                                          assert_integer(rsi)
    53 00018D88 803E11              <1>  cmp byte [%1], %2
    54 00018D8B 0F854D050000        <1>  jne L_error_incorrect_type
 32533 00018D91 488B7D28                        mov rdi, PARAM(1)
 32534                                          assert_integer(rdi)
    53 00018D95 803F11              <1>  cmp byte [%1], %2
    54 00018D98 0F8540050000        <1>  jne L_error_incorrect_type
 32535 00018D9E 488B4601                        mov rax, qword [rsi + 1]
 32536 00018DA2 488B5F01                        mov rbx, qword [rdi + 1]
 32537 00018DA6 4883FB00                        cmp rbx, 0
 32538 00018DAA 0F845F050000                    je L_error_division_by_zero
 32539 00018DB0 4899                            cqo
 32540 00018DB2 48F7FB                          idiv rbx
 32541 00018DB5 4889D7                          mov rdi, rdx
 32542 00018DB8 E89C030000                      call make_integer
 32543 00018DBD C9                              leave
 32544 00018DBE C22000                          ret AND_KILL_FRAME(2)
 32545                                  
 32546                                  L_code_ptr_set_car:
 32547 00018DC1 C8000000                        enter 0, 0
 32548 00018DC5 48837D1802                      cmp COUNT, 2
 32549 00018DCA 0F856F040000                    jne L_error_arg_count_2
 32550 00018DD0 488B4520                        mov rax, PARAM(0)
 32551                                          assert_pair(rax)
    53 00018DD4 803821              <1>  cmp byte [%1], %2
    54 00018DD7 0F8501050000        <1>  jne L_error_incorrect_type
 32552 00018DDD 488B5D28                        mov rbx, PARAM(1)
 32553 00018DE1 48895801                        mov SOB_PAIR_CAR(rax), rbx
 32554 00018DE5 48B8-                           mov rax, sob_void
 32554 00018DE7 [0000000000000000] 
 32555 00018DEF C9                              leave
 32556 00018DF0 C22000                          ret AND_KILL_FRAME(2)
 32557                                  
 32558                                  L_code_ptr_set_cdr:
 32559 00018DF3 C8000000                        enter 0, 0
 32560 00018DF7 48837D1802                      cmp COUNT, 2
 32561 00018DFC 0F853D040000                    jne L_error_arg_count_2
 32562 00018E02 488B4520                        mov rax, PARAM(0)
 32563                                          assert_pair(rax)
    53 00018E06 803821              <1>  cmp byte [%1], %2
    54 00018E09 0F85CF040000        <1>  jne L_error_incorrect_type
 32564 00018E0F 488B5D28                        mov rbx, PARAM(1)
 32565 00018E13 48895809                        mov SOB_PAIR_CDR(rax), rbx
 32566 00018E17 48B8-                           mov rax, sob_void
 32566 00018E19 [0000000000000000] 
 32567 00018E21 C9                              leave
 32568 00018E22 C22000                          ret AND_KILL_FRAME(2)
 32569                                  
 32570                                  L_code_ptr_string_ref:
 32571 00018E25 C8000000                        enter 0, 0
 32572 00018E29 48837D1802                      cmp COUNT, 2
 32573 00018E2E 0F850B040000                    jne L_error_arg_count_2
 32574 00018E34 488B7D20                        mov rdi, PARAM(0)
 32575                                          assert_string(rdi)
    53 00018E38 803F03              <1>  cmp byte [%1], %2
    54 00018E3B 0F859D040000        <1>  jne L_error_incorrect_type
 32576 00018E41 488B7528                        mov rsi, PARAM(1)
 32577                                          assert_integer(rsi)
    53 00018E45 803E11              <1>  cmp byte [%1], %2
    54 00018E48 0F8590040000        <1>  jne L_error_incorrect_type
 32578 00018E4E 488B5701                        mov rdx, qword [rdi + 1]
 32579 00018E52 488B4E01                        mov rcx, qword [rsi + 1]
 32580 00018E56 4839D1                          cmp rcx, rdx
 32581 00018E59 0F8D14030000                    jge L_error_integer_range
 32582 00018E5F 4883F900                        cmp rcx, 0
 32583 00018E63 0F8C0A030000                    jl L_error_integer_range
 32584 00018E69 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 32585 00018E6D BF02000000                      mov rdi, 2
 32586 00018E72 E8B9E6FFFF                      call malloc
 32587 00018E77 C60002                          mov byte [rax], T_char
 32588 00018E7A 885801                          mov byte [rax + 1], bl
 32589 00018E7D C9                              leave
 32590 00018E7E C22000                          ret AND_KILL_FRAME(2)
 32591                                  
 32592                                  L_code_ptr_vector_ref:
 32593 00018E81 C8000000                        enter 0, 0
 32594 00018E85 48837D1802                      cmp COUNT, 2
 32595 00018E8A 0F85AF030000                    jne L_error_arg_count_2
 32596 00018E90 488B7D20                        mov rdi, PARAM(0)
 32597                                          assert_vector(rdi)
    53 00018E94 803F22              <1>  cmp byte [%1], %2
    54 00018E97 0F8541040000        <1>  jne L_error_incorrect_type
 32598 00018E9D 488B7528                        mov rsi, PARAM(1)
 32599                                          assert_integer(rsi)
    53 00018EA1 803E11              <1>  cmp byte [%1], %2
    54 00018EA4 0F8534040000        <1>  jne L_error_incorrect_type
 32600 00018EAA 488B5701                        mov rdx, qword [rdi + 1]
 32601 00018EAE 488B4E01                        mov rcx, qword [rsi + 1]
 32602 00018EB2 4839D1                          cmp rcx, rdx
 32603 00018EB5 0F8DB8020000                    jge L_error_integer_range
 32604 00018EBB 4883F900                        cmp rcx, 0
 32605 00018EBF 0F8CAE020000                    jl L_error_integer_range
 32606 00018EC5 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 32607 00018ECA C9                              leave
 32608 00018ECB C22000                          ret AND_KILL_FRAME(2)
 32609                                  
 32610                                  L_code_ptr_vector_set:
 32611 00018ECE C8000000                        enter 0, 0
 32612 00018ED2 48837D1803                      cmp COUNT, 3
 32613 00018ED7 0F85CC030000                    jne L_error_arg_count_3
 32614 00018EDD 488B7D20                        mov rdi, PARAM(0)
 32615                                          assert_vector(rdi)
    53 00018EE1 803F22              <1>  cmp byte [%1], %2
    54 00018EE4 0F85F4030000        <1>  jne L_error_incorrect_type
 32616 00018EEA 488B7528                        mov rsi, PARAM(1)
 32617                                          assert_integer(rsi)
    53 00018EEE 803E11              <1>  cmp byte [%1], %2
    54 00018EF1 0F85E7030000        <1>  jne L_error_incorrect_type
 32618 00018EF7 488B5701                        mov rdx, qword [rdi + 1]
 32619 00018EFB 488B4E01                        mov rcx, qword [rsi + 1]
 32620 00018EFF 4839D1                          cmp rcx, rdx
 32621 00018F02 0F8D6B020000                    jge L_error_integer_range
 32622 00018F08 4883F900                        cmp rcx, 0
 32623 00018F0C 0F8C61020000                    jl L_error_integer_range
 32624 00018F12 488B4530                        mov rax, PARAM(2)
 32625 00018F16 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 32626 00018F1B 48B8-                           mov rax, sob_void
 32626 00018F1D [0000000000000000] 
 32627 00018F25 C9                              leave
 32628 00018F26 C22800                          ret AND_KILL_FRAME(3)
 32629                                  
 32630                                  L_code_ptr_string_set:
 32631 00018F29 C8000000                        enter 0, 0
 32632 00018F2D 48837D1803                      cmp COUNT, 3
 32633 00018F32 0F8571030000                    jne L_error_arg_count_3
 32634 00018F38 488B7D20                        mov rdi, PARAM(0)
 32635                                          assert_string(rdi)
    53 00018F3C 803F03              <1>  cmp byte [%1], %2
    54 00018F3F 0F8599030000        <1>  jne L_error_incorrect_type
 32636 00018F45 488B7528                        mov rsi, PARAM(1)
 32637                                          assert_integer(rsi)
    53 00018F49 803E11              <1>  cmp byte [%1], %2
    54 00018F4C 0F858C030000        <1>  jne L_error_incorrect_type
 32638 00018F52 488B5701                        mov rdx, qword [rdi + 1]
 32639 00018F56 488B4E01                        mov rcx, qword [rsi + 1]
 32640 00018F5A 4839D1                          cmp rcx, rdx
 32641 00018F5D 0F8D10020000                    jge L_error_integer_range
 32642 00018F63 4883F900                        cmp rcx, 0
 32643 00018F67 0F8C06020000                    jl L_error_integer_range
 32644 00018F6D 488B4530                        mov rax, PARAM(2)
 32645                                          assert_char(rax)
    53 00018F71 803802              <1>  cmp byte [%1], %2
    54 00018F74 0F8564030000        <1>  jne L_error_incorrect_type
 32646 00018F7A 8A4001                          mov al, byte [rax + 1]
 32647 00018F7D 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 32648 00018F81 48B8-                           mov rax, sob_void
 32648 00018F83 [0000000000000000] 
 32649 00018F8B C9                              leave
 32650 00018F8C C22800                          ret AND_KILL_FRAME(3)
 32651                                  
 32652                                  L_code_ptr_make_vector:
 32653 00018F8F C8000000                        enter 0, 0
 32654 00018F93 48837D1802                      cmp COUNT, 2
 32655 00018F98 0F85A1020000                    jne L_error_arg_count_2
 32656 00018F9E 488B4D20                        mov rcx, PARAM(0)
 32657                                          assert_integer(rcx)
    53 00018FA2 803911              <1>  cmp byte [%1], %2
    54 00018FA5 0F8533030000        <1>  jne L_error_incorrect_type
 32658 00018FAB 488B4901                        mov rcx, qword [rcx + 1]
 32659 00018FAF 4883F900                        cmp rcx, 0
 32660 00018FB3 0F8CBA010000                    jl L_error_integer_range
 32661 00018FB9 488B5528                        mov rdx, PARAM(1)
 32662 00018FBD 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 32663 00018FC5 E866E5FFFF                      call malloc
 32664 00018FCA C60022                          mov byte [rax], T_vector
 32665 00018FCD 48894801                        mov qword [rax + 1], rcx
 32666 00018FD1 41B800000000                    mov r8, 0
 32667                                  .L0:
 32668 00018FD7 4939C8                          cmp r8, rcx
 32669 00018FDA 740A                            je .L1
 32670 00018FDC 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 32671 00018FE1 49FFC0                          inc r8
 32672 00018FE4 EBF1                            jmp .L0
 32673                                  .L1:
 32674 00018FE6 C9                              leave
 32675 00018FE7 C22000                          ret AND_KILL_FRAME(2)
 32676                                          
 32677                                  L_code_ptr_make_string:
 32678 00018FEA C8000000                        enter 0, 0
 32679 00018FEE 48837D1802                      cmp COUNT, 2
 32680 00018FF3 0F8546020000                    jne L_error_arg_count_2
 32681 00018FF9 488B4D20                        mov rcx, PARAM(0)
 32682                                          assert_integer(rcx)
    53 00018FFD 803911              <1>  cmp byte [%1], %2
    54 00019000 0F85D8020000        <1>  jne L_error_incorrect_type
 32683 00019006 488B4901                        mov rcx, qword [rcx + 1]
 32684 0001900A 4883F900                        cmp rcx, 0
 32685 0001900E 0F8C5F010000                    jl L_error_integer_range
 32686 00019014 488B5528                        mov rdx, PARAM(1)
 32687                                          assert_char(rdx)
    53 00019018 803A02              <1>  cmp byte [%1], %2
    54 0001901B 0F85BD020000        <1>  jne L_error_incorrect_type
 32688 00019021 8A5201                          mov dl, byte [rdx + 1]
 32689 00019024 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 32690 00019028 E803E5FFFF                      call malloc
 32691 0001902D C60003                          mov byte [rax], T_string
 32692 00019030 48894801                        mov qword [rax + 1], rcx
 32693 00019034 41B800000000                    mov r8, 0
 32694                                  .L0:
 32695 0001903A 4939C8                          cmp r8, rcx
 32696 0001903D 740A                            je .L1
 32697 0001903F 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 32698 00019044 49FFC0                          inc r8
 32699 00019047 EBF1                            jmp .L0
 32700                                  .L1:
 32701 00019049 C9                              leave
 32702 0001904A C22000                          ret AND_KILL_FRAME(2)
 32703                                  
 32704                                  L_code_ptr_numerator:
 32705 0001904D C8000000                        enter 0, 0
 32706 00019051 48837D1801                      cmp COUNT, 1
 32707 00019056 0F85AE010000                    jne L_error_arg_count_1
 32708 0001905C 488B4520                        mov rax, PARAM(0)
 32709                                          assert_fraction(rax)
    53 00019060 803812              <1>  cmp byte [%1], %2
    54 00019063 0F8575020000        <1>  jne L_error_incorrect_type
 32710 00019069 488B7801                        mov rdi, qword [rax + 1]
 32711 0001906D E8E7000000                      call make_integer
 32712 00019072 C9                              leave
 32713 00019073 C21800                          ret AND_KILL_FRAME(1)
 32714                                          
 32715                                  L_code_ptr_denominator:
 32716 00019076 C8000000                        enter 0, 0
 32717 0001907A 48837D1801                      cmp COUNT, 1
 32718 0001907F 0F8585010000                    jne L_error_arg_count_1
 32719 00019085 488B4520                        mov rax, PARAM(0)
 32720                                          assert_fraction(rax)
    53 00019089 803812              <1>  cmp byte [%1], %2
    54 0001908C 0F854C020000        <1>  jne L_error_incorrect_type
 32721 00019092 488B7809                        mov rdi, qword [rax + 1 + 8]
 32722 00019096 E8BE000000                      call make_integer
 32723 0001909B C9                              leave
 32724 0001909C C21800                          ret AND_KILL_FRAME(1)
 32725                                  
 32726                                  L_code_ptr_is_eq:
 32727 0001909F C8000000                	enter 0, 0
 32728 000190A3 48837D1802              	cmp COUNT, 2
 32729 000190A8 0F8591010000            	jne L_error_arg_count_2
 32730 000190AE 488B7D20                	mov rdi, PARAM(0)
 32731 000190B2 488B7528                	mov rsi, PARAM(1)
 32732 000190B6 4839F7                  	cmp rdi, rsi
 32733 000190B9 746C                    	je .L_eq_true
 32734 000190BB 8A17                    	mov dl, byte [rdi]
 32735 000190BD 3A16                    	cmp dl, byte [rsi]
 32736 000190BF 7572                    	jne .L_eq_false
 32737 000190C1 80FA02                  	cmp dl, T_char
 32738 000190C4 7459                    	je .L_char
 32739 000190C6 80FA41                  	cmp dl, T_interned_symbol
 32740 000190C9 7440                    	je .L_interned_symbol
 32741 000190CB 80FA42                          cmp dl, T_uninterned_symbol
 32742 000190CE 7443                            je .L_uninterned_symbol
 32743 000190D0 80FA13                  	cmp dl, T_real
 32744 000190D3 742E                    	je .L_real
 32745 000190D5 80FA12                  	cmp dl, T_fraction
 32746 000190D8 7413                    	je .L_fraction
 32747 000190DA 80FA11                          cmp dl, T_integer
 32748 000190DD 7402                            je .L_integer
 32749 000190DF EB52                    	jmp .L_eq_false
 32750                                  .L_integer:
 32751 000190E1 488B4601                        mov rax, qword [rsi + 1]
 32752 000190E5 483B4701                        cmp rax, qword [rdi + 1]
 32753 000190E9 7548                            jne .L_eq_false
 32754 000190EB EB3A                            jmp .L_eq_true
 32755                                  .L_fraction:
 32756 000190ED 488B4601                	mov rax, qword [rsi + 1]
 32757 000190F1 483B4701                	cmp rax, qword [rdi + 1]
 32758 000190F5 753C                    	jne .L_eq_false
 32759 000190F7 488B4609                	mov rax, qword [rsi + 1 + 8]
 32760 000190FB 483B4709                	cmp rax, qword [rdi + 1 + 8]
 32761 000190FF 7532                    	jne .L_eq_false
 32762 00019101 EB24                    	jmp .L_eq_true
 32763                                  .L_real:
 32764 00019103 488B4601                	mov rax, qword [rsi + 1]
 32765 00019107 483B4701                	cmp rax, qword [rdi + 1]
 32766                                  .L_interned_symbol:
 32767                                  	; never reached, because interned_symbols are static!
 32768                                  	; but I'm keeping it in case, I'll ever change
 32769                                  	; the implementation
 32770 0001910B 488B4601                	mov rax, qword [rsi + 1]
 32771 0001910F 483B4701                	cmp rax, qword [rdi + 1]
 32772                                  .L_uninterned_symbol:
 32773 00019113 4C8B4701                        mov r8, qword [rdi + 1]
 32774 00019117 4C3B4601                        cmp r8, qword [rsi + 1]
 32775 0001911B 7516                            jne .L_eq_false
 32776 0001911D EB08                            jmp .L_eq_true
 32777                                  .L_char:
 32778 0001911F 8A5E01                  	mov bl, byte [rsi + 1]
 32779 00019122 3A5F01                  	cmp bl, byte [rdi + 1]
 32780 00019125 750C                    	jne .L_eq_false
 32781                                  .L_eq_true:
 32782 00019127 48B8-                   	mov rax, sob_boolean_true
 32782 00019129 [0300000000000000] 
 32783 00019131 EB0A                    	jmp .L_eq_exit
 32784                                  .L_eq_false:
 32785 00019133 48B8-                   	mov rax, sob_boolean_false
 32785 00019135 [0200000000000000] 
 32786                                  .L_eq_exit:
 32787 0001913D C9                      	leave
 32788 0001913E C22000                  	ret AND_KILL_FRAME(2)
 32789                                  
 32790                                  make_real:
 32791 00019141 C8000000                        enter 0, 0
 32792 00019145 BF09000000                      mov rdi, (1 + 8)
 32793 0001914A E8E1E3FFFF                      call malloc
 32794 0001914F C60013                          mov byte [rax], T_real
 32795 00019152 F20F114001                      movsd qword [rax + 1], xmm0
 32796 00019157 C9                              leave 
 32797 00019158 C3                              ret
 32798                                          
 32799                                  make_integer:
 32800 00019159 C8000000                        enter 0, 0
 32801 0001915D 4889FE                          mov rsi, rdi
 32802 00019160 BF09000000                      mov rdi, (1 + 8)
 32803 00019165 E8C6E3FFFF                      call malloc
 32804 0001916A C60011                          mov byte [rax], T_integer
 32805 0001916D 48897001                        mov qword [rax + 1], rsi
 32806 00019171 C9                              leave
 32807 00019172 C3                              ret
 32808                                          
 32809                                  L_error_integer_range:
 32810 00019173 488B3C25[00000000]              mov rdi, qword [stderr]
 32811 0001917B 48BE-                           mov rsi, fmt_integer_range
 32811 0001917D [6E1C000000000000] 
 32812 00019185 B800000000                      mov rax, 0
 32813                                          ENTER
    44 0001918A C8000000            <1>  enter 0, 0
    45 0001918E 4883E4F0            <1>  and rsp, ~15
 32814 00019192 E8(00000000)                    call fprintf
 32815                                          LEAVE
    49 00019197 C9                  <1>  leave
 32816 00019198 48C7C0FBFFFFFF                  mov rax, -5
 32817 0001919F E8(00000000)                    call exit
 32818                                  
 32819                                  L_error_arg_negative:
 32820 000191A4 488B3C25[00000000]              mov rdi, qword [stderr]
 32821 000191AC 48BE-                           mov rsi, fmt_arg_negative
 32821 000191AE [461B000000000000] 
 32822 000191B6 B800000000                      mov rax, 0
 32823                                          ENTER
    44 000191BB C8000000            <1>  enter 0, 0
    45 000191BF 4883E4F0            <1>  and rsp, ~15
 32824 000191C3 E8(00000000)                    call fprintf
 32825                                          LEAVE
    49 000191C8 C9                  <1>  leave
 32826 000191C9 48C7C0FDFFFFFF                  mov rax, -3
 32827 000191D0 E8(00000000)                    call exit
 32828                                  
 32829                                  L_error_arg_count_0:
 32830 000191D5 488B3C25[00000000]              mov rdi, qword [stderr]
 32831 000191DD 48BE-                           mov rsi, fmt_arg_count_0
 32831 000191DF [6C1B000000000000] 
 32832 000191E7 488B5518                        mov rdx, COUNT
 32833 000191EB B800000000                      mov rax, 0
 32834                                          ENTER
    44 000191F0 C8000000            <1>  enter 0, 0
    45 000191F4 4883E4F0            <1>  and rsp, ~15
 32835 000191F8 E8(00000000)                    call fprintf
 32836                                          LEAVE
    49 000191FD C9                  <1>  leave
 32837 000191FE 48C7C0FDFFFFFF                  mov rax, -3
 32838 00019205 E8(00000000)                    call exit
 32839                                  
 32840                                  L_error_arg_count_1:
 32841 0001920A 488B3C25[00000000]              mov rdi, qword [stderr]
 32842 00019212 48BE-                           mov rsi, fmt_arg_count_1
 32842 00019214 [941B000000000000] 
 32843 0001921C 488B5518                        mov rdx, COUNT
 32844 00019220 B800000000                      mov rax, 0
 32845                                          ENTER
    44 00019225 C8000000            <1>  enter 0, 0
    45 00019229 4883E4F0            <1>  and rsp, ~15
 32846 0001922D E8(00000000)                    call fprintf
 32847                                          LEAVE
    49 00019232 C9                  <1>  leave
 32848 00019233 48C7C0FDFFFFFF                  mov rax, -3
 32849 0001923A E8(00000000)                    call exit
 32850                                  
 32851                                  L_error_arg_count_2:
 32852 0001923F 488B3C25[00000000]              mov rdi, qword [stderr]
 32853 00019247 48BE-                           mov rsi, fmt_arg_count_2
 32853 00019249 [FA1B000000000000] 
 32854 00019251 488B5518                        mov rdx, COUNT
 32855 00019255 B800000000                      mov rax, 0
 32856                                          ENTER
    44 0001925A C8000000            <1>  enter 0, 0
    45 0001925E 4883E4F0            <1>  and rsp, ~15
 32857 00019262 E8(00000000)                    call fprintf
 32858                                          LEAVE
    49 00019267 C9                  <1>  leave
 32859 00019268 48C7C0FDFFFFFF                  mov rax, -3
 32860 0001926F E8(00000000)                    call exit
 32861                                  
 32862                                  L_error_arg_count_12:
 32863 00019274 488B3C25[00000000]              mov rdi, qword [stderr]
 32864 0001927C 48BE-                           mov rsi, fmt_arg_count_12
 32864 0001927E [BA1B000000000000] 
 32865 00019286 488B5518                        mov rdx, COUNT
 32866 0001928A B800000000                      mov rax, 0
 32867                                          ENTER
    44 0001928F C8000000            <1>  enter 0, 0
    45 00019293 4883E4F0            <1>  and rsp, ~15
 32868 00019297 E8(00000000)                    call fprintf
 32869                                          LEAVE
    49 0001929C C9                  <1>  leave
 32870 0001929D 48C7C0FDFFFFFF                  mov rax, -3
 32871 000192A4 E8(00000000)                    call exit
 32872                                  
 32873                                  L_error_arg_count_3:
 32874 000192A9 488B3C25[00000000]              mov rdi, qword [stderr]
 32875 000192B1 48BE-                           mov rsi, fmt_arg_count_3
 32875 000192B3 [211C000000000000] 
 32876 000192BB 488B5518                        mov rdx, COUNT
 32877 000192BF B800000000                      mov rax, 0
 32878                                          ENTER
    44 000192C4 C8000000            <1>  enter 0, 0
    45 000192C8 4883E4F0            <1>  and rsp, ~15
 32879 000192CC E8(00000000)                    call fprintf
 32880                                          LEAVE
    49 000192D1 C9                  <1>  leave
 32881 000192D2 48C7C0FDFFFFFF                  mov rax, -3
 32882 000192D9 E8(00000000)                    call exit
 32883                                          
 32884                                  L_error_incorrect_type:
 32885 000192DE 488B3C25[00000000]              mov rdi, qword [stderr]
 32886 000192E6 48BE-                           mov rsi, fmt_type
 32886 000192E8 [4A1C000000000000] 
 32887 000192F0 B800000000                      mov rax, 0
 32888                                          ENTER
    44 000192F5 C8000000            <1>  enter 0, 0
    45 000192F9 4883E4F0            <1>  and rsp, ~15
 32889 000192FD E8(00000000)                    call fprintf
 32890                                          LEAVE
    49 00019302 C9                  <1>  leave
 32891 00019303 48C7C0FCFFFFFF                  mov rax, -4
 32892 0001930A E8(00000000)                    call exit
 32893                                  
 32894                                  L_error_division_by_zero:
 32895 0001930F 488B3C25[00000000]              mov rdi, qword [stderr]
 32896 00019317 48BE-                           mov rsi, fmt_division_by_zero
 32896 00019319 [8B1C000000000000] 
 32897 00019321 B800000000                      mov rax, 0
 32898                                          ENTER
    44 00019326 C8000000            <1>  enter 0, 0
    45 0001932A 4883E4F0            <1>  and rsp, ~15
 32899 0001932E E8(00000000)                    call fprintf
 32900                                          LEAVE
    49 00019333 C9                  <1>  leave
 32901 00019334 48C7C0F8FFFFFF                  mov rax, -8
 32902 0001933B E8(00000000)                    call exit
 32903                                  
 32904                                  section .data
 32905                                  gensym_count:
 32906 00001B3B 0000000000000000                dq 0
 32907                                  fmt_char:
 32908 00001B43 256300                          db `%c\0`
 32909                                  fmt_arg_negative:
 32910 00001B46 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 32910 00001B4F 7267756D656E742063-
 32910 00001B58 616E6E6F7420626520-
 32910 00001B61 6E656761746976652E-
 32910 00001B6A 0A00               
 32911                                  fmt_arg_count_0:
 32912 00001B6C 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 32912 00001B75 74696E67207A65726F-
 32912 00001B7E 20617267756D656E74-
 32912 00001B87 732E20466F756E6420-
 32912 00001B90 25640A00           
 32913                                  fmt_arg_count_1:
 32914 00001B94 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 32914 00001B9D 74696E67206F6E6520-
 32914 00001BA6 617267756D656E742E-
 32914 00001BAF 20466F756E64202564-
 32914 00001BB8 0A00               
 32915                                  fmt_arg_count_12:
 32916 00001BBA 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 32916 00001BC3 74696E67206F6E6520-
 32916 00001BCC 726571756972656420-
 32916 00001BD5 616E64206F6E65206F-
 32916 00001BDE 7074696F6E616C2061-
 32916 00001BE7 7267756D656E742E20-
 32916 00001BF0 466F756E642025640A-
 32916 00001BF9 00                 
 32917                                  fmt_arg_count_2:
 32918 00001BFA 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 32918 00001C03 74696E672074776F20-
 32918 00001C0C 617267756D656E7473-
 32918 00001C15 2E20466F756E642025-
 32918 00001C1E 640A00             
 32919                                  fmt_arg_count_3:
 32920 00001C21 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 32920 00001C2A 74696E672074687265-
 32920 00001C33 6520617267756D656E-
 32920 00001C3C 74732E20466F756E64-
 32920 00001C45 2025640A00         
 32921                                  fmt_type:
 32922 00001C4A 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 32922 00001C53 696F6E207061737365-
 32922 00001C5C 6420696E636F727265-
 32922 00001C65 637420747970650A00 
 32923                                  fmt_integer_range:
 32924 00001C6E 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 32924 00001C77 7265637420696E7465-
 32924 00001C80 6765722072616E6765-
 32924 00001C89 0A00               
 32925                                  fmt_division_by_zero:
 32926 00001C8B 212121204469766973-             db `!!! Division by zero\n\0`
 32926 00001C94 696F6E206279207A65-
 32926 00001C9D 726F0A00           
 32927                                  fmt_scheme_error_part_1:
 32928 00001CA1 0A2121212054686520-             db `\n!!! The procedure \0`
 32928 00001CAA 70726F636564757265-
 32928 00001CB3 2000               
 32929                                  fmt_scheme_error_part_2:
 32930 00001CB5 2061736B656420746F-             db ` asked to terminate the program\n`
 32930 00001CBE 207465726D696E6174-
 32930 00001CC7 65207468652070726F-
 32930 00001CD0 6772616D0A         
 32931 00001CD5 202020207769746820-             db `    with the following message:\n\n\0`
 32931 00001CDE 74686520666F6C6C6F-
 32931 00001CE7 77696E67206D657373-
 32931 00001CF0 6167653A0A0A00     
 32932                                  fmt_scheme_error_part_3:
 32933 00001CF7 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 32933 00001D00 210A0A00           
